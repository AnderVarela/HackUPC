{"ast":null,"code":"const ErrorStackParser = require('error-stack-parser');\nconst theme = require('../theme.js');\nconst utils = require('../utils.js');\n\n/**\n * @typedef {Object} RuntimeErrorStackProps\n * @property {Error} error\n */\n\n/**\n * A formatter that turns runtime error stacks into highlighted HTML stacks.\n * @param {Document} document\n * @param {HTMLElement} root\n * @param {RuntimeErrorStackProps} props\n * @returns {void}\n */\nfunction RuntimeErrorStack(document, root, props) {\n  const stackTitle = document.createElement('h4');\n  stackTitle.innerText = 'Call Stack';\n  stackTitle.style.color = '#' + theme.white;\n  stackTitle.style.fontSize = '1.0625rem';\n  stackTitle.style.fontWeight = '500';\n  stackTitle.style.lineHeight = '1.3';\n  stackTitle.style.margin = '0 0 0.5rem';\n  const stackContainer = document.createElement('div');\n  stackContainer.style.fontSize = '0.8125rem';\n  stackContainer.style.lineHeight = '1.3';\n  stackContainer.style.whiteSpace = 'pre-wrap';\n  let errorStacks;\n  try {\n    errorStacks = ErrorStackParser.parse(props.error);\n  } catch (e) {\n    errorStacks = [];\n    stackContainer.innerHTML = 'No stack trace is available for this error!';\n  }\n  for (let i = 0; i < Math.min(errorStacks.length, 10); i += 1) {\n    const currentStack = errorStacks[i];\n    const functionName = document.createElement('code');\n    functionName.innerHTML = '&emsp;' + currentStack.functionName || '(anonymous function)';\n    functionName.style.color = '#' + theme.yellow;\n    functionName.style.fontFamily = ['\"Operator Mono SSm\"', '\"Operator Mono\"', '\"Fira Code Retina\"', '\"Fira Code\"', '\"FiraCode-Retina\"', '\"Andale Mono\"', '\"Lucida Console\"', 'Menlo', 'Consolas', 'Monaco', 'monospace'].join(', ');\n    const fileName = document.createElement('div');\n    fileName.innerHTML = '&emsp;&emsp;' + utils.formatFilename(currentStack.fileName) + ':' + currentStack.lineNumber + ':' + currentStack.columnNumber;\n    fileName.style.color = '#' + theme.white;\n    fileName.style.fontSize = '0.6875rem';\n    fileName.style.marginBottom = '0.25rem';\n    stackContainer.appendChild(functionName);\n    stackContainer.appendChild(fileName);\n  }\n  root.appendChild(stackTitle);\n  root.appendChild(stackContainer);\n}\nmodule.exports = RuntimeErrorStack;","map":{"version":3,"names":["ErrorStackParser","require","theme","utils","RuntimeErrorStack","document","root","props","stackTitle","createElement","innerText","style","color","white","fontSize","fontWeight","lineHeight","margin","stackContainer","whiteSpace","errorStacks","parse","error","e","innerHTML","i","Math","min","length","currentStack","functionName","yellow","fontFamily","join","fileName","formatFilename","lineNumber","columnNumber","marginBottom","appendChild","module","exports"],"sources":["C:/Users/chest/OneDrive/Documentos/GitHub/HackUPC/frontend/node_modules/@pmmmwh/react-refresh-webpack-plugin/overlay/components/RuntimeErrorStack.js"],"sourcesContent":["const ErrorStackParser = require('error-stack-parser');\nconst theme = require('../theme.js');\nconst utils = require('../utils.js');\n\n/**\n * @typedef {Object} RuntimeErrorStackProps\n * @property {Error} error\n */\n\n/**\n * A formatter that turns runtime error stacks into highlighted HTML stacks.\n * @param {Document} document\n * @param {HTMLElement} root\n * @param {RuntimeErrorStackProps} props\n * @returns {void}\n */\nfunction RuntimeErrorStack(document, root, props) {\n  const stackTitle = document.createElement('h4');\n  stackTitle.innerText = 'Call Stack';\n  stackTitle.style.color = '#' + theme.white;\n  stackTitle.style.fontSize = '1.0625rem';\n  stackTitle.style.fontWeight = '500';\n  stackTitle.style.lineHeight = '1.3';\n  stackTitle.style.margin = '0 0 0.5rem';\n\n  const stackContainer = document.createElement('div');\n  stackContainer.style.fontSize = '0.8125rem';\n  stackContainer.style.lineHeight = '1.3';\n  stackContainer.style.whiteSpace = 'pre-wrap';\n\n  let errorStacks;\n  try {\n    errorStacks = ErrorStackParser.parse(props.error);\n  } catch (e) {\n    errorStacks = [];\n    stackContainer.innerHTML = 'No stack trace is available for this error!';\n  }\n\n  for (let i = 0; i < Math.min(errorStacks.length, 10); i += 1) {\n    const currentStack = errorStacks[i];\n\n    const functionName = document.createElement('code');\n    functionName.innerHTML = '&emsp;' + currentStack.functionName || '(anonymous function)';\n    functionName.style.color = '#' + theme.yellow;\n    functionName.style.fontFamily = [\n      '\"Operator Mono SSm\"',\n      '\"Operator Mono\"',\n      '\"Fira Code Retina\"',\n      '\"Fira Code\"',\n      '\"FiraCode-Retina\"',\n      '\"Andale Mono\"',\n      '\"Lucida Console\"',\n      'Menlo',\n      'Consolas',\n      'Monaco',\n      'monospace',\n    ].join(', ');\n\n    const fileName = document.createElement('div');\n    fileName.innerHTML =\n      '&emsp;&emsp;' +\n      utils.formatFilename(currentStack.fileName) +\n      ':' +\n      currentStack.lineNumber +\n      ':' +\n      currentStack.columnNumber;\n    fileName.style.color = '#' + theme.white;\n    fileName.style.fontSize = '0.6875rem';\n    fileName.style.marginBottom = '0.25rem';\n\n    stackContainer.appendChild(functionName);\n    stackContainer.appendChild(fileName);\n  }\n\n  root.appendChild(stackTitle);\n  root.appendChild(stackContainer);\n}\n\nmodule.exports = RuntimeErrorStack;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}