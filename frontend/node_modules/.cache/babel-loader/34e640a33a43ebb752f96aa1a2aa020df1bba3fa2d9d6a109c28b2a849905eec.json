{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.containsAllTypesByName = void 0;\nconst tsutils_1 = require(\"tsutils\");\nconst ts = __importStar(require(\"typescript\"));\nconst typeFlagUtils_1 = require(\"./typeFlagUtils\");\n/**\n * @param type Type being checked by name.\n * @param allowAny Whether to consider `any` and `unknown` to match.\n * @param allowedNames Symbol names checking on the type.\n * @param matchAnyInstead Whether to instead just check if any parts match, rather than all parts.\n * @returns Whether the type is, extends, or contains the allowed names (or all matches the allowed names, if mustMatchAll is true).\n */\nfunction containsAllTypesByName(type, allowAny, allowedNames, matchAnyInstead = false) {\n  if ((0, typeFlagUtils_1.isTypeFlagSet)(type, ts.TypeFlags.Any | ts.TypeFlags.Unknown)) {\n    return !allowAny;\n  }\n  if ((0, tsutils_1.isTypeReference)(type)) {\n    type = type.target;\n  }\n  const symbol = type.getSymbol();\n  if (symbol && allowedNames.has(symbol.name)) {\n    return true;\n  }\n  const predicate = t => containsAllTypesByName(t, allowAny, allowedNames, matchAnyInstead);\n  if ((0, tsutils_1.isUnionOrIntersectionType)(type)) {\n    return matchAnyInstead ? type.types.some(predicate) : type.types.every(predicate);\n  }\n  const bases = type.getBaseTypes();\n  return bases !== undefined && (matchAnyInstead ? bases.some(predicate) : bases.length > 0 && bases.every(predicate));\n}\nexports.containsAllTypesByName = containsAllTypesByName;","map":{"version":3,"names":["tsutils_1","require","ts","__importStar","typeFlagUtils_1","containsAllTypesByName","type","allowAny","allowedNames","matchAnyInstead","isTypeFlagSet","TypeFlags","Any","Unknown","isTypeReference","target","symbol","getSymbol","has","name","predicate","t","isUnionOrIntersectionType","types","some","every","bases","getBaseTypes","undefined","length","exports"],"sources":["../src/containsAllTypesByName.ts"],"sourcesContent":[null],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,MAAAA,SAAA,GAAAC,OAAA;AACA,MAAAC,EAAA,GAAAC,YAAA,CAAAF,OAAA;AAEA,MAAAG,eAAA,GAAAH,OAAA;AAEA;;;;;;;AAOA,SAAgBI,sBAAsBA,CACpCC,IAAa,EACbC,QAAiB,EACjBC,YAAyB,EACzBC,eAAe,GAAG,KAAK;EAEvB,IAAI,IAAAL,eAAA,CAAAM,aAAa,EAACJ,IAAI,EAAEJ,EAAE,CAACS,SAAS,CAACC,GAAG,GAAGV,EAAE,CAACS,SAAS,CAACE,OAAO,CAAC,EAAE;IAChE,OAAO,CAACN,QAAQ;;EAGlB,IAAI,IAAAP,SAAA,CAAAc,eAAe,EAACR,IAAI,CAAC,EAAE;IACzBA,IAAI,GAAGA,IAAI,CAACS,MAAM;;EAGpB,MAAMC,MAAM,GAAGV,IAAI,CAACW,SAAS,EAAE;EAC/B,IAAID,MAAM,IAAIR,YAAY,CAACU,GAAG,CAACF,MAAM,CAACG,IAAI,CAAC,EAAE;IAC3C,OAAO,IAAI;;EAGb,MAAMC,SAAS,GAAIC,CAAU,IAC3BhB,sBAAsB,CAACgB,CAAC,EAAEd,QAAQ,EAAEC,YAAY,EAAEC,eAAe,CAAC;EAEpE,IAAI,IAAAT,SAAA,CAAAsB,yBAAyB,EAAChB,IAAI,CAAC,EAAE;IACnC,OAAOG,eAAe,GAClBH,IAAI,CAACiB,KAAK,CAACC,IAAI,CAACJ,SAAS,CAAC,GAC1Bd,IAAI,CAACiB,KAAK,CAACE,KAAK,CAACL,SAAS,CAAC;;EAGjC,MAAMM,KAAK,GAAGpB,IAAI,CAACqB,YAAY,EAAE;EAEjC,OACED,KAAK,KAAKE,SAAS,KAClBnB,eAAe,GACZiB,KAAK,CAACF,IAAI,CAACJ,SAAS,CAAC,GACrBM,KAAK,CAACG,MAAM,GAAG,CAAC,IAAIH,KAAK,CAACD,KAAK,CAACL,SAAS,CAAC,CAAC;AAEnD;AApCAU,OAAA,CAAAzB,sBAAA,GAAAA,sBAAA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}