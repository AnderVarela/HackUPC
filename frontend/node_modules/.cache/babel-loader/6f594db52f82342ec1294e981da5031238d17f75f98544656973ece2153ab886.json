{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getLabelContent = getLabelContent;\nexports.getLabels = getLabels;\nexports.getRealLabels = getRealLabels;\nvar _helpers = require(\"./helpers\");\nconst labelledNodeNames = ['button', 'meter', 'output', 'progress', 'select', 'textarea', 'input'];\nfunction getTextContent(node) {\n  if (labelledNodeNames.includes(node.nodeName.toLowerCase())) {\n    return '';\n  }\n  if (node.nodeType === _helpers.TEXT_NODE) return node.textContent;\n  return Array.from(node.childNodes).map(childNode => getTextContent(childNode)).join('');\n}\nfunction getLabelContent(element) {\n  let textContent;\n  if (element.tagName.toLowerCase() === 'label') {\n    textContent = getTextContent(element);\n  } else {\n    textContent = element.value || element.textContent;\n  }\n  return textContent;\n}\n\n// Based on https://github.com/eps1lon/dom-accessibility-api/pull/352\nfunction getRealLabels(element) {\n  // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition -- types are not aware of older browsers that don't implement `labels`\n  if (element.labels !== undefined) {\n    return element.labels ?? [];\n  }\n  if (!isLabelable(element)) return [];\n  const labels = element.ownerDocument.querySelectorAll('label');\n  return Array.from(labels).filter(label => label.control === element);\n}\nfunction isLabelable(element) {\n  return /BUTTON|METER|OUTPUT|PROGRESS|SELECT|TEXTAREA/.test(element.tagName) || element.tagName === 'INPUT' && element.getAttribute('type') !== 'hidden';\n}\nfunction getLabels(container, element, {\n  selector = '*'\n} = {}) {\n  const ariaLabelledBy = element.getAttribute('aria-labelledby');\n  const labelsId = ariaLabelledBy ? ariaLabelledBy.split(' ') : [];\n  return labelsId.length ? labelsId.map(labelId => {\n    const labellingElement = container.querySelector(`[id=\"${labelId}\"]`);\n    return labellingElement ? {\n      content: getLabelContent(labellingElement),\n      formControl: null\n    } : {\n      content: '',\n      formControl: null\n    };\n  }) : Array.from(getRealLabels(element)).map(label => {\n    const textToMatch = getLabelContent(label);\n    const formControlSelector = 'button, input, meter, output, progress, select, textarea';\n    const labelledFormControl = Array.from(label.querySelectorAll(formControlSelector)).filter(formControlElement => formControlElement.matches(selector))[0];\n    return {\n      content: textToMatch,\n      formControl: labelledFormControl\n    };\n  });\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","getLabelContent","getLabels","getRealLabels","_helpers","require","labelledNodeNames","getTextContent","node","includes","nodeName","toLowerCase","nodeType","TEXT_NODE","textContent","Array","from","childNodes","map","childNode","join","element","tagName","labels","undefined","isLabelable","ownerDocument","querySelectorAll","filter","label","control","test","getAttribute","container","selector","ariaLabelledBy","labelsId","split","length","labelId","labellingElement","querySelector","content","formControl","textToMatch","formControlSelector","labelledFormControl","formControlElement","matches"],"sources":["C:/Users/chest/OneDrive/Documentos/GitHub/HackUPC/frontend/node_modules/@testing-library/dom/dist/label-helpers.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getLabelContent = getLabelContent;\nexports.getLabels = getLabels;\nexports.getRealLabels = getRealLabels;\nvar _helpers = require(\"./helpers\");\nconst labelledNodeNames = ['button', 'meter', 'output', 'progress', 'select', 'textarea', 'input'];\nfunction getTextContent(node) {\n  if (labelledNodeNames.includes(node.nodeName.toLowerCase())) {\n    return '';\n  }\n  if (node.nodeType === _helpers.TEXT_NODE) return node.textContent;\n  return Array.from(node.childNodes).map(childNode => getTextContent(childNode)).join('');\n}\nfunction getLabelContent(element) {\n  let textContent;\n  if (element.tagName.toLowerCase() === 'label') {\n    textContent = getTextContent(element);\n  } else {\n    textContent = element.value || element.textContent;\n  }\n  return textContent;\n}\n\n// Based on https://github.com/eps1lon/dom-accessibility-api/pull/352\nfunction getRealLabels(element) {\n  // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition -- types are not aware of older browsers that don't implement `labels`\n  if (element.labels !== undefined) {\n    return element.labels ?? [];\n  }\n  if (!isLabelable(element)) return [];\n  const labels = element.ownerDocument.querySelectorAll('label');\n  return Array.from(labels).filter(label => label.control === element);\n}\nfunction isLabelable(element) {\n  return /BUTTON|METER|OUTPUT|PROGRESS|SELECT|TEXTAREA/.test(element.tagName) || element.tagName === 'INPUT' && element.getAttribute('type') !== 'hidden';\n}\nfunction getLabels(container, element, {\n  selector = '*'\n} = {}) {\n  const ariaLabelledBy = element.getAttribute('aria-labelledby');\n  const labelsId = ariaLabelledBy ? ariaLabelledBy.split(' ') : [];\n  return labelsId.length ? labelsId.map(labelId => {\n    const labellingElement = container.querySelector(`[id=\"${labelId}\"]`);\n    return labellingElement ? {\n      content: getLabelContent(labellingElement),\n      formControl: null\n    } : {\n      content: '',\n      formControl: null\n    };\n  }) : Array.from(getRealLabels(element)).map(label => {\n    const textToMatch = getLabelContent(label);\n    const formControlSelector = 'button, input, meter, output, progress, select, textarea';\n    const labelledFormControl = Array.from(label.querySelectorAll(formControlSelector)).filter(formControlElement => formControlElement.matches(selector))[0];\n    return {\n      content: textToMatch,\n      formControl: labelledFormControl\n    };\n  });\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}