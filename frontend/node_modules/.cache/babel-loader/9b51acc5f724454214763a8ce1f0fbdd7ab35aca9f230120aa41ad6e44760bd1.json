{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getFunctionHeadLoc = void 0;\nconst utils_1 = require(\"@typescript-eslint/utils\");\n/**\n * Creates a report location for the given function.\n * The location only encompasses the \"start\" of the function, and not the body\n *\n * eg.\n *\n * ```\n * function foo(args) {}\n * ^^^^^^^^^^^^^^^^^^\n *\n * get y(args) {}\n * ^^^^^^^^^^^\n *\n * const x = (args) => {}\n *           ^^^^^^^^^\n * ```\n */\nfunction getFunctionHeadLoc(node, sourceCode) {\n  function getLocStart() {\n    if (node.parent && node.parent.type === utils_1.AST_NODE_TYPES.MethodDefinition) {\n      // return the start location for class method\n      if (node.parent.decorators && node.parent.decorators.length > 0) {\n        // exclude decorators\n        return sourceCode.getTokenAfter(node.parent.decorators[node.parent.decorators.length - 1]).loc.start;\n      }\n      return node.parent.loc.start;\n    }\n    if (node.parent && node.parent.type === utils_1.AST_NODE_TYPES.Property && node.parent.method) {\n      // return the start location for object method shorthand\n      return node.parent.loc.start;\n    }\n    // return the start location for a regular function\n    return node.loc.start;\n  }\n  function getLocEnd() {\n    if (node.type === utils_1.AST_NODE_TYPES.ArrowFunctionExpression) {\n      // find the end location for arrow function expression\n      return sourceCode.getTokenBefore(node.body, token => token.type === utils_1.AST_TOKEN_TYPES.Punctuator && token.value === '=>').loc.end;\n    }\n    // return the end location for a regular function\n    return sourceCode.getTokenBefore(node.body).loc.end;\n  }\n  return {\n    start: getLocStart(),\n    end: getLocEnd()\n  };\n}\nexports.getFunctionHeadLoc = getFunctionHeadLoc;","map":{"version":3,"names":["utils_1","require","getFunctionHeadLoc","node","sourceCode","getLocStart","parent","type","AST_NODE_TYPES","MethodDefinition","decorators","length","getTokenAfter","loc","start","Property","method","getLocEnd","ArrowFunctionExpression","getTokenBefore","body","token","AST_TOKEN_TYPES","Punctuator","value","end","exports"],"sources":["../../src/util/getFunctionHeadLoc.ts"],"sourcesContent":[null],"mappings":";;;;;;AACA,MAAAA,OAAA,GAAAC,OAAA;AAOA;;;;;;;;;;;;;;;;;AAiBA,SAAgBC,kBAAkBA,CAChCC,IAAkB,EAClBC,UAA+B;EAE/B,SAASC,WAAWA,CAAA;IAClB,IAAIF,IAAI,CAACG,MAAM,IAAIH,IAAI,CAACG,MAAM,CAACC,IAAI,KAAKP,OAAA,CAAAQ,cAAc,CAACC,gBAAgB,EAAE;MACvE;MAEA,IAAIN,IAAI,CAACG,MAAM,CAACI,UAAU,IAAIP,IAAI,CAACG,MAAM,CAACI,UAAU,CAACC,MAAM,GAAG,CAAC,EAAE;QAC/D;QACA,OAAOP,UAAU,CAACQ,aAAa,CAC7BT,IAAI,CAACG,MAAM,CAACI,UAAU,CAACP,IAAI,CAACG,MAAM,CAACI,UAAU,CAACC,MAAM,GAAG,CAAC,CAAC,CACzD,CAACE,GAAG,CAACC,KAAK;;MAGd,OAAOX,IAAI,CAACG,MAAM,CAACO,GAAG,CAACC,KAAK;;IAG9B,IACEX,IAAI,CAACG,MAAM,IACXH,IAAI,CAACG,MAAM,CAACC,IAAI,KAAKP,OAAA,CAAAQ,cAAc,CAACO,QAAQ,IAC5CZ,IAAI,CAACG,MAAM,CAACU,MAAM,EAClB;MACA;MACA,OAAOb,IAAI,CAACG,MAAM,CAACO,GAAG,CAACC,KAAK;;IAG9B;IACA,OAAOX,IAAI,CAACU,GAAG,CAACC,KAAK;EACvB;EAEA,SAASG,SAASA,CAAA;IAChB,IAAId,IAAI,CAACI,IAAI,KAAKP,OAAA,CAAAQ,cAAc,CAACU,uBAAuB,EAAE;MACxD;MACA,OAAOd,UAAU,CAACe,cAAc,CAC9BhB,IAAI,CAACiB,IAAI,EACTC,KAAK,IACHA,KAAK,CAACd,IAAI,KAAKP,OAAA,CAAAsB,eAAe,CAACC,UAAU,IAAIF,KAAK,CAACG,KAAK,KAAK,IAAI,CACnE,CAACX,GAAG,CAACY,GAAG;;IAGZ;IACA,OAAOrB,UAAU,CAACe,cAAc,CAAChB,IAAI,CAACiB,IAAI,CAAE,CAACP,GAAG,CAACY,GAAG;EACtD;EAEA,OAAO;IACLX,KAAK,EAAET,WAAW,EAAE;IACpBoB,GAAG,EAAER,SAAS;GACf;AACH;AAjDAS,OAAA,CAAAxB,kBAAA,GAAAA,kBAAA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}