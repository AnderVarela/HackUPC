{"ast":null,"code":"'use strict';\n\nvar debugMessage = require('./debug-message'),\n  toRegExp = require('./to-reg-exp'),\n  throwErrors = require('./throw-errors'),\n  decodeSourcesWith = require('./decode-sources-with'),\n  locateRootWith = require('./locate-root-with'),\n  encodeSourcesWith = require('./encode-sources-with'),\n  testCodec = require('./test-codec');\nvar CODECS = require('../../codec');\n\n/**\n * Process the given source-map per the given options.\n * @param {{resourcePath:string, context:string, output:{path:string}}} context A loader or compilation\n * @param {{debug:boolean, fail:boolean, format:string|boolean, root:string, codecs:object}} opt Options hash\n * @param {object|string} sourceMapOrSource An incoming source-map or single source path\n * @returns {undefined|object|string} An amended source-map or source path else undefined\n */\nfunction process(context, opt, sourceMapOrSource) {\n  // default options\n  var options = Object.assign({\n    sep: '/',\n    debug: false,\n    fail: false,\n    format: false,\n    root: false,\n    codecs: CODECS\n  }, opt);\n\n  // validate codecs\n  var codecs = options.codecs.filter(testCodec);\n\n  // determine what is present\n  var inputMap = !!sourceMapOrSource && typeof sourceMapOrSource === 'object' && sourceMapOrSource,\n    inputPath = typeof sourceMapOrSource === 'string' && sourceMapOrSource,\n    inputSources = inputMap && inputMap.sources || inputPath && [inputPath];\n\n  // what we need to produce\n  var absoluteSources, outputSources, outputRoot, outputMap;\n  if (inputSources) {\n    // decode each source with the first valid codec\n    absoluteSources = inputSources.map(decodeSourcesWith.call(context, codecs, options.fail));\n\n    // check for decode errors\n    throwErrors(context.resourcePath, absoluteSources);\n\n    // output map is a copy unless absent or we are removing\n    outputMap = !inputMap || options.format === 'remove' ? undefined : Object.assign({}, inputMap);\n\n    // some change in format\n    if (options.format) {\n      // find the specified codec in the codecs list\n      var codec = codecs.filter(testNamedCodec).pop();\n      if (!codec) {\n        throw new Error('Specified format \"' + options.format + '\" does not match any available codec.');\n      }\n\n      // use the encoder where specified in 'format'\n      outputSources = absoluteSources.map(encodeSourcesWith.call(context, codec)).map(insertAbstractSources).map(convertPathSep);\n      outputRoot = !!options.root && locateRootWith.call(context, codec)() || undefined;\n\n      // check for encode errors\n      throwErrors(context.resourcePath, outputSources.concat(outputRoot));\n\n      // commit the change\n      if (outputMap) {\n        outputMap.sources = outputSources;\n        outputMap.sourceRoot = outputRoot;\n      }\n    }\n  }\n\n  // debugging information\n  var isDebug = toRegExp(options.debug).test(context.resourcePath);\n  if (isDebug) {\n    console.log(debugMessage(context, {\n      input: inputSources,\n      absolute: absoluteSources,\n      output: outputSources,\n      root: outputRoot\n    }));\n  }\n\n  // complete\n  return inputMap ? outputMap : outputSources ? outputSources[0] : undefined;\n  function testNamedCodec(value) {\n    return value.name === options.format;\n  }\n  function insertAbstractSources(value, i) {\n    return value || inputSources[i];\n  }\n  function convertPathSep(value) {\n    return value instanceof Error ? value : value.replace(/[\\\\\\/]/g, options.sep);\n  }\n}\nmodule.exports = process;","map":{"version":3,"names":["debugMessage","require","toRegExp","throwErrors","decodeSourcesWith","locateRootWith","encodeSourcesWith","testCodec","CODECS","process","context","opt","sourceMapOrSource","options","Object","assign","sep","debug","fail","format","root","codecs","filter","inputMap","inputPath","inputSources","sources","absoluteSources","outputSources","outputRoot","outputMap","map","call","resourcePath","undefined","codec","testNamedCodec","pop","Error","insertAbstractSources","convertPathSep","concat","sourceRoot","isDebug","test","console","log","input","absolute","output","value","name","i","replace","module","exports"],"sources":["C:/Users/chest/OneDrive/Documentos/GitHub/HackUPC/frontend/node_modules/adjust-sourcemap-loader/lib/process/index.js"],"sourcesContent":["'use strict';\n\nvar debugMessage      = require('./debug-message'),\n    toRegExp          = require('./to-reg-exp'),\n    throwErrors       = require('./throw-errors'),\n    decodeSourcesWith = require('./decode-sources-with'),\n    locateRootWith    = require('./locate-root-with'),\n    encodeSourcesWith = require('./encode-sources-with'),\n    testCodec         = require('./test-codec');\n\nvar CODECS = require('../../codec');\n\n/**\n * Process the given source-map per the given options.\n * @param {{resourcePath:string, context:string, output:{path:string}}} context A loader or compilation\n * @param {{debug:boolean, fail:boolean, format:string|boolean, root:string, codecs:object}} opt Options hash\n * @param {object|string} sourceMapOrSource An incoming source-map or single source path\n * @returns {undefined|object|string} An amended source-map or source path else undefined\n */\nfunction process(context, opt, sourceMapOrSource) {\n\n  // default options\n  var options = Object.assign({\n    sep   : '/',\n    debug : false,\n    fail  : false,\n    format: false,\n    root  : false,\n    codecs: CODECS\n  }, opt);\n\n  // validate codecs\n  var codecs = options.codecs\n    .filter(testCodec);\n\n  // determine what is present\n  var inputMap     = !!sourceMapOrSource && (typeof sourceMapOrSource === 'object') && sourceMapOrSource,\n      inputPath    = (typeof sourceMapOrSource === 'string') && sourceMapOrSource,\n      inputSources = inputMap && inputMap.sources || inputPath && [inputPath];\n\n  // what we need to produce\n  var absoluteSources,\n      outputSources,\n      outputRoot,\n      outputMap;\n\n  if (inputSources) {\n\n    // decode each source with the first valid codec\n    absoluteSources = inputSources\n      .map(decodeSourcesWith.call(context, codecs, options.fail));\n\n    // check for decode errors\n    throwErrors(context.resourcePath, absoluteSources);\n\n    // output map is a copy unless absent or we are removing\n    outputMap = (!inputMap || (options.format === 'remove')) ? undefined : Object.assign({}, inputMap);\n\n    // some change in format\n    if (options.format) {\n\n      // find the specified codec in the codecs list\n      var codec = codecs\n        .filter(testNamedCodec)\n        .pop();\n\n      if (!codec) {\n        throw new Error('Specified format \"' + options.format + '\" does not match any available codec.');\n      }\n\n      // use the encoder where specified in 'format'\n      outputSources = absoluteSources\n        .map(encodeSourcesWith.call(context, codec))\n        .map(insertAbstractSources)\n        .map(convertPathSep);\n\n      outputRoot = !!options.root && locateRootWith.call(context, codec)() || undefined;\n\n      // check for encode errors\n      throwErrors(context.resourcePath, outputSources.concat(outputRoot));\n\n      // commit the change\n      if (outputMap) {\n        outputMap.sources = outputSources;\n        outputMap.sourceRoot = outputRoot;\n      }\n    }\n  }\n\n  // debugging information\n  var isDebug = toRegExp(options.debug).test(context.resourcePath);\n  if (isDebug) {\n    console.log(debugMessage(context, {\n      input   : inputSources,\n      absolute: absoluteSources,\n      output  : outputSources,\n      root    : outputRoot\n    }));\n  }\n\n  // complete\n  return inputMap ? outputMap : outputSources ? outputSources[0] : undefined;\n\n  function testNamedCodec(value) {\n    return (value.name === options.format);\n  }\n\n  function insertAbstractSources(value, i) {\n    return value || inputSources[i];\n  }\n\n  function convertPathSep(value) {\n    return (value instanceof Error) ? value : value.replace(/[\\\\\\/]/g, options.sep);\n  }\n}\n\nmodule.exports = process;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}