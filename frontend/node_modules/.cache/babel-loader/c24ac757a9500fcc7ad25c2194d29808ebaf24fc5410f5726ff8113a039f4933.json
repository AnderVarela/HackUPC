{"ast":null,"code":"// This is an example of using tokens to add a custom behaviour.\n//\n// This adds a option order check so that --some-unstable-option\n// may only be used after --enable-experimental-options\n//\n// Note: this is not a common behaviour, the order of different options\n// does not usually matter.\n\nimport { parseArgs } from '../index.js';\nfunction findTokenIndex(tokens, target) {\n  return tokens.findIndex(token => token.kind === 'option' && token.name === target);\n}\nconst experimentalName = 'enable-experimental-options';\nconst unstableName = 'some-unstable-option';\nconst options = {\n  [experimentalName]: {\n    type: 'boolean'\n  },\n  [unstableName]: {\n    type: 'boolean'\n  }\n};\nconst {\n  values,\n  tokens\n} = parseArgs({\n  options,\n  tokens: true\n});\nconst experimentalIndex = findTokenIndex(tokens, experimentalName);\nconst unstableIndex = findTokenIndex(tokens, unstableName);\nif (unstableIndex !== -1 && (experimentalIndex === -1 || unstableIndex < experimentalIndex)) {\n  throw new Error(`'--${experimentalName}' must be specified before '--${unstableName}'`);\n}\nconsole.log(values);\n\n/* eslint-disable max-len */\n// Try the following:\n//    node ordered-options.mjs\n//    node ordered-options.mjs --some-unstable-option\n//    node ordered-options.mjs --some-unstable-option --enable-experimental-options\n//    node ordered-options.mjs --enable-experimental-options --some-unstable-option","map":{"version":3,"names":["parseArgs","findTokenIndex","tokens","target","findIndex","token","kind","name","experimentalName","unstableName","options","type","values","experimentalIndex","unstableIndex","Error","console","log"],"sources":["C:/Users/chest/OneDrive/Documentos/GitHub/HackUPC/frontend/node_modules/@pkgjs/parseargs/examples/ordered-options.mjs"],"sourcesContent":["// This is an example of using tokens to add a custom behaviour.\n//\n// This adds a option order check so that --some-unstable-option\n// may only be used after --enable-experimental-options\n//\n// Note: this is not a common behaviour, the order of different options\n// does not usually matter.\n\nimport { parseArgs } from '../index.js';\n\nfunction findTokenIndex(tokens, target) {\n  return tokens.findIndex((token) => token.kind === 'option' &&\n    token.name === target\n  );\n}\n\nconst experimentalName = 'enable-experimental-options';\nconst unstableName = 'some-unstable-option';\n\nconst options = {\n  [experimentalName]: { type: 'boolean' },\n  [unstableName]: { type: 'boolean' },\n};\n\nconst { values, tokens } = parseArgs({ options, tokens: true });\n\nconst experimentalIndex = findTokenIndex(tokens, experimentalName);\nconst unstableIndex = findTokenIndex(tokens, unstableName);\nif (unstableIndex !== -1 &&\n  ((experimentalIndex === -1) || (unstableIndex < experimentalIndex))) {\n  throw new Error(`'--${experimentalName}' must be specified before '--${unstableName}'`);\n}\n\nconsole.log(values);\n\n/* eslint-disable max-len */\n// Try the following:\n//    node ordered-options.mjs\n//    node ordered-options.mjs --some-unstable-option\n//    node ordered-options.mjs --some-unstable-option --enable-experimental-options\n//    node ordered-options.mjs --enable-experimental-options --some-unstable-option\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,SAAS,QAAQ,aAAa;AAEvC,SAASC,cAAcA,CAACC,MAAM,EAAEC,MAAM,EAAE;EACtC,OAAOD,MAAM,CAACE,SAAS,CAAEC,KAAK,IAAKA,KAAK,CAACC,IAAI,KAAK,QAAQ,IACxDD,KAAK,CAACE,IAAI,KAAKJ,MACjB,CAAC;AACH;AAEA,MAAMK,gBAAgB,GAAG,6BAA6B;AACtD,MAAMC,YAAY,GAAG,sBAAsB;AAE3C,MAAMC,OAAO,GAAG;EACd,CAACF,gBAAgB,GAAG;IAAEG,IAAI,EAAE;EAAU,CAAC;EACvC,CAACF,YAAY,GAAG;IAAEE,IAAI,EAAE;EAAU;AACpC,CAAC;AAED,MAAM;EAAEC,MAAM;EAAEV;AAAO,CAAC,GAAGF,SAAS,CAAC;EAAEU,OAAO;EAAER,MAAM,EAAE;AAAK,CAAC,CAAC;AAE/D,MAAMW,iBAAiB,GAAGZ,cAAc,CAACC,MAAM,EAAEM,gBAAgB,CAAC;AAClE,MAAMM,aAAa,GAAGb,cAAc,CAACC,MAAM,EAAEO,YAAY,CAAC;AAC1D,IAAIK,aAAa,KAAK,CAAC,CAAC,KACpBD,iBAAiB,KAAK,CAAC,CAAC,IAAMC,aAAa,GAAGD,iBAAkB,CAAC,EAAE;EACrE,MAAM,IAAIE,KAAK,CAAE,MAAKP,gBAAiB,iCAAgCC,YAAa,GAAE,CAAC;AACzF;AAEAO,OAAO,CAACC,GAAG,CAACL,MAAM,CAAC;;AAEnB;AACA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}