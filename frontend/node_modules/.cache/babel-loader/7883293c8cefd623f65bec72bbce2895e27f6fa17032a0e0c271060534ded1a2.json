{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst tsutils = __importStar(require(\"tsutils\"));\nconst util = __importStar(require(\"../util\"));\nexports.default = util.createRule({\n  name: 'await-thenable',\n  meta: {\n    docs: {\n      description: 'Disallow awaiting a value that is not a Thenable',\n      recommended: 'error',\n      requiresTypeChecking: true\n    },\n    messages: {\n      await: 'Unexpected `await` of a non-Promise (non-\"Thenable\") value.'\n    },\n    schema: [],\n    type: 'problem'\n  },\n  defaultOptions: [],\n  create(context) {\n    const parserServices = util.getParserServices(context);\n    const checker = parserServices.program.getTypeChecker();\n    return {\n      AwaitExpression(node) {\n        const originalNode = parserServices.esTreeNodeToTSNodeMap.get(node);\n        const type = checker.getTypeAtLocation(originalNode.expression);\n        if (!util.isTypeAnyType(type) && !util.isTypeUnknownType(type) && !tsutils.isThenableType(checker, originalNode.expression, type)) {\n          context.report({\n            messageId: 'await',\n            node\n          });\n        }\n      }\n    };\n  }\n});","map":{"version":3,"names":["tsutils","__importStar","require","util","exports","default","createRule","name","meta","docs","description","recommended","requiresTypeChecking","messages","await","schema","type","defaultOptions","create","context","parserServices","getParserServices","checker","program","getTypeChecker","AwaitExpression","node","originalNode","esTreeNodeToTSNodeMap","get","getTypeAtLocation","expression","isTypeAnyType","isTypeUnknownType","isThenableType","report","messageId"],"sources":["../../src/rules/await-thenable.ts"],"sourcesContent":[null],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,MAAAA,OAAA,GAAAC,YAAA,CAAAC,OAAA;AAEA,MAAAC,IAAA,GAAAF,YAAA,CAAAC,OAAA;AAEAE,OAAA,CAAAC,OAAA,GAAeF,IAAI,CAACG,UAAU,CAAC;EAC7BC,IAAI,EAAE,gBAAgB;EACtBC,IAAI,EAAE;IACJC,IAAI,EAAE;MACJC,WAAW,EAAE,kDAAkD;MAC/DC,WAAW,EAAE,OAAO;MACpBC,oBAAoB,EAAE;KACvB;IACDC,QAAQ,EAAE;MACRC,KAAK,EAAE;KACR;IACDC,MAAM,EAAE,EAAE;IACVC,IAAI,EAAE;GACP;EACDC,cAAc,EAAE,EAAE;EAElBC,MAAMA,CAACC,OAAO;IACZ,MAAMC,cAAc,GAAGjB,IAAI,CAACkB,iBAAiB,CAACF,OAAO,CAAC;IACtD,MAAMG,OAAO,GAAGF,cAAc,CAACG,OAAO,CAACC,cAAc,EAAE;IAEvD,OAAO;MACLC,eAAeA,CAACC,IAAI;QAClB,MAAMC,YAAY,GAAGP,cAAc,CAACQ,qBAAqB,CAACC,GAAG,CAACH,IAAI,CAAC;QACnE,MAAMV,IAAI,GAAGM,OAAO,CAACQ,iBAAiB,CAACH,YAAY,CAACI,UAAU,CAAC;QAE/D,IACE,CAAC5B,IAAI,CAAC6B,aAAa,CAAChB,IAAI,CAAC,IACzB,CAACb,IAAI,CAAC8B,iBAAiB,CAACjB,IAAI,CAAC,IAC7B,CAAChB,OAAO,CAACkC,cAAc,CAACZ,OAAO,EAAEK,YAAY,CAACI,UAAU,EAAEf,IAAI,CAAC,EAC/D;UACAG,OAAO,CAACgB,MAAM,CAAC;YACbC,SAAS,EAAE,OAAO;YAClBV;WACD,CAAC;;MAEN;KACD;EACH;CACD,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}