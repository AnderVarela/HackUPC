{"ast":null,"code":"var Spaces = require('../../options/format').Spaces;\nvar Marker = require('../../tokenizer/marker');\nvar formatPosition = require('../../utils/format-position');\nvar CASE_ATTRIBUTE_PATTERN = /[\\s\"'][iI]\\s*\\]/;\nvar CASE_RESTORE_PATTERN = /([\\d\\w])([iI])\\]/g;\nvar DOUBLE_QUOTE_CASE_PATTERN = /=\"([a-zA-Z][a-zA-Z\\d\\-_]+)\"([iI])/g;\nvar DOUBLE_QUOTE_PATTERN = /=\"([a-zA-Z][a-zA-Z\\d\\-_]+)\"(\\s|\\])/g;\nvar HTML_COMMENT_PATTERN = /^(?:(?:<!--|-->)\\s*)+/;\nvar SINGLE_QUOTE_CASE_PATTERN = /='([a-zA-Z][a-zA-Z\\d\\-_]+)'([iI])/g;\nvar SINGLE_QUOTE_PATTERN = /='([a-zA-Z][a-zA-Z\\d\\-_]+)'(\\s|\\])/g;\nvar RELATION_PATTERN = /[>+~]/;\nvar WHITESPACE_PATTERN = /\\s/;\nvar ASTERISK_PLUS_HTML_HACK = '*+html ';\nvar ASTERISK_FIRST_CHILD_PLUS_HTML_HACK = '*:first-child+html ';\nvar LESS_THAN = '<';\nvar PSEUDO_CLASSES_WITH_SELECTORS = [':current', ':future', ':has', ':host', ':host-context', ':is', ':not', ':past', ':where'];\nfunction hasInvalidCharacters(value) {\n  var isEscaped;\n  var isInvalid = false;\n  var character;\n  var isQuote = false;\n  var i, l;\n  for (i = 0, l = value.length; i < l; i++) {\n    character = value[i];\n    if (isEscaped) {\n      // continue as always\n    } else if (character == Marker.SINGLE_QUOTE || character == Marker.DOUBLE_QUOTE) {\n      isQuote = !isQuote;\n    } else if (!isQuote && (character == Marker.CLOSE_CURLY_BRACKET || character == Marker.EXCLAMATION || character == LESS_THAN || character == Marker.SEMICOLON)) {\n      isInvalid = true;\n      break;\n    } else if (!isQuote && i === 0 && RELATION_PATTERN.test(character)) {\n      isInvalid = true;\n      break;\n    }\n    isEscaped = character == Marker.BACK_SLASH;\n  }\n  return isInvalid;\n}\nfunction removeWhitespace(value, format) {\n  var stripped = [];\n  var character;\n  var isNewLineNix;\n  var isNewLineWin;\n  var isEscaped;\n  var wasEscaped;\n  var isQuoted;\n  var isSingleQuoted;\n  var isDoubleQuoted;\n  var isAttribute;\n  var isRelation;\n  var isWhitespace;\n  var isSpaceAwarePseudoClass;\n  var roundBracketLevel = 0;\n  var wasComma = false;\n  var wasRelation = false;\n  var wasWhitespace = false;\n  var withCaseAttribute = CASE_ATTRIBUTE_PATTERN.test(value);\n  var spaceAroundRelation = format && format.spaces[Spaces.AroundSelectorRelation];\n  var i, l;\n  for (i = 0, l = value.length; i < l; i++) {\n    character = value[i];\n    isNewLineNix = character == Marker.NEW_LINE_NIX;\n    isNewLineWin = character == Marker.NEW_LINE_NIX && value[i - 1] == Marker.CARRIAGE_RETURN;\n    isQuoted = isSingleQuoted || isDoubleQuoted;\n    isRelation = !isAttribute && !isEscaped && roundBracketLevel === 0 && RELATION_PATTERN.test(character);\n    isWhitespace = WHITESPACE_PATTERN.test(character);\n    isSpaceAwarePseudoClass = roundBracketLevel == 1 && character == Marker.CLOSE_ROUND_BRACKET ? false : isSpaceAwarePseudoClass || roundBracketLevel === 0 && character == Marker.COLON && isPseudoClassWithSelectors(value, i);\n    if (wasEscaped && isQuoted && isNewLineWin) {\n      // swallow escaped new windows lines in comments\n      stripped.pop();\n      stripped.pop();\n    } else if (isEscaped && isQuoted && isNewLineNix) {\n      // swallow escaped new *nix lines in comments\n      stripped.pop();\n    } else if (isEscaped) {\n      stripped.push(character);\n    } else if (character == Marker.OPEN_SQUARE_BRACKET && !isQuoted) {\n      stripped.push(character);\n      isAttribute = true;\n    } else if (character == Marker.CLOSE_SQUARE_BRACKET && !isQuoted) {\n      stripped.push(character);\n      isAttribute = false;\n    } else if (character == Marker.OPEN_ROUND_BRACKET && !isQuoted) {\n      stripped.push(character);\n      roundBracketLevel++;\n    } else if (character == Marker.CLOSE_ROUND_BRACKET && !isQuoted) {\n      stripped.push(character);\n      roundBracketLevel--;\n    } else if (character == Marker.SINGLE_QUOTE && !isQuoted) {\n      stripped.push(character);\n      isSingleQuoted = true;\n    } else if (character == Marker.DOUBLE_QUOTE && !isQuoted) {\n      stripped.push(character);\n      isDoubleQuoted = true;\n    } else if (character == Marker.SINGLE_QUOTE && isQuoted) {\n      stripped.push(character);\n      isSingleQuoted = false;\n    } else if (character == Marker.DOUBLE_QUOTE && isQuoted) {\n      stripped.push(character);\n      isDoubleQuoted = false;\n    } else if (isWhitespace && wasRelation && !spaceAroundRelation) {\n      continue;\n    } else if (!isWhitespace && wasRelation && spaceAroundRelation) {\n      stripped.push(Marker.SPACE);\n      stripped.push(character);\n    } else if (isWhitespace && !wasWhitespace && wasComma && roundBracketLevel > 0 && isSpaceAwarePseudoClass) {\n      // skip space\n    } else if (isWhitespace && !wasWhitespace && roundBracketLevel > 0 && isSpaceAwarePseudoClass) {\n      stripped.push(character);\n    } else if (isWhitespace && (isAttribute || roundBracketLevel > 0) && !isQuoted) {\n      // skip space\n    } else if (isWhitespace && wasWhitespace && !isQuoted) {\n      // skip extra space\n    } else if ((isNewLineWin || isNewLineNix) && (isAttribute || roundBracketLevel > 0) && isQuoted) {\n      // skip newline\n    } else if (isRelation && wasWhitespace && !spaceAroundRelation) {\n      stripped.pop();\n      stripped.push(character);\n    } else if (isRelation && !wasWhitespace && spaceAroundRelation) {\n      stripped.push(Marker.SPACE);\n      stripped.push(character);\n    } else if (isWhitespace) {\n      stripped.push(Marker.SPACE);\n    } else {\n      stripped.push(character);\n    }\n    wasEscaped = isEscaped;\n    isEscaped = character == Marker.BACK_SLASH;\n    wasRelation = isRelation;\n    wasWhitespace = isWhitespace;\n    wasComma = character == Marker.COMMA;\n  }\n  return withCaseAttribute ? stripped.join('').replace(CASE_RESTORE_PATTERN, '$1 $2]') : stripped.join('');\n}\nfunction isPseudoClassWithSelectors(value, colonPosition) {\n  var pseudoClass = value.substring(colonPosition, value.indexOf(Marker.OPEN_ROUND_BRACKET, colonPosition));\n  return PSEUDO_CLASSES_WITH_SELECTORS.indexOf(pseudoClass) > -1;\n}\nfunction removeQuotes(value) {\n  if (value.indexOf('\\'') == -1 && value.indexOf('\"') == -1) {\n    return value;\n  }\n  return value.replace(SINGLE_QUOTE_CASE_PATTERN, '=$1 $2').replace(SINGLE_QUOTE_PATTERN, '=$1$2').replace(DOUBLE_QUOTE_CASE_PATTERN, '=$1 $2').replace(DOUBLE_QUOTE_PATTERN, '=$1$2');\n}\nfunction replacePseudoClasses(value) {\n  return value.replace('nth-child(1)', 'first-child').replace('nth-of-type(1)', 'first-of-type').replace('nth-of-type(even)', 'nth-of-type(2n)').replace('nth-child(even)', 'nth-child(2n)').replace('nth-of-type(2n+1)', 'nth-of-type(odd)').replace('nth-child(2n+1)', 'nth-child(odd)').replace('nth-last-child(1)', 'last-child').replace('nth-last-of-type(1)', 'last-of-type').replace('nth-last-of-type(even)', 'nth-last-of-type(2n)').replace('nth-last-child(even)', 'nth-last-child(2n)').replace('nth-last-of-type(2n+1)', 'nth-last-of-type(odd)').replace('nth-last-child(2n+1)', 'nth-last-child(odd)');\n}\nfunction tidyRules(rules, removeUnsupported, adjacentSpace, format, warnings) {\n  var list = [];\n  var repeated = [];\n  function removeHTMLComment(rule, match) {\n    warnings.push('HTML comment \\'' + match + '\\' at ' + formatPosition(rule[2][0]) + '. Removing.');\n    return '';\n  }\n  for (var i = 0, l = rules.length; i < l; i++) {\n    var rule = rules[i];\n    var reduced = rule[1];\n    reduced = reduced.replace(HTML_COMMENT_PATTERN, removeHTMLComment.bind(null, rule));\n    if (hasInvalidCharacters(reduced)) {\n      warnings.push('Invalid selector \\'' + rule[1] + '\\' at ' + formatPosition(rule[2][0]) + '. Ignoring.');\n      continue;\n    }\n    reduced = removeWhitespace(reduced, format);\n    reduced = removeQuotes(reduced);\n    if (adjacentSpace && reduced.indexOf('nav') > 0) {\n      reduced = reduced.replace(/\\+nav(\\S|$)/, '+ nav$1');\n    }\n    if (removeUnsupported && reduced.indexOf(ASTERISK_PLUS_HTML_HACK) > -1) {\n      continue;\n    }\n    if (removeUnsupported && reduced.indexOf(ASTERISK_FIRST_CHILD_PLUS_HTML_HACK) > -1) {\n      continue;\n    }\n    if (reduced.indexOf('*') > -1) {\n      reduced = reduced.replace(/\\*([:#.[])/g, '$1').replace(/^(:first-child)?\\+html/, '*$1+html');\n    }\n    if (repeated.indexOf(reduced) > -1) {\n      continue;\n    }\n    reduced = replacePseudoClasses(reduced);\n    rule[1] = reduced;\n    repeated.push(reduced);\n    list.push(rule);\n  }\n  if (list.length == 1 && list[0][1].length === 0) {\n    warnings.push('Empty selector \\'' + list[0][1] + '\\' at ' + formatPosition(list[0][2][0]) + '. Ignoring.');\n    list = [];\n  }\n  return list;\n}\nmodule.exports = tidyRules;","map":{"version":3,"names":["Spaces","require","Marker","formatPosition","CASE_ATTRIBUTE_PATTERN","CASE_RESTORE_PATTERN","DOUBLE_QUOTE_CASE_PATTERN","DOUBLE_QUOTE_PATTERN","HTML_COMMENT_PATTERN","SINGLE_QUOTE_CASE_PATTERN","SINGLE_QUOTE_PATTERN","RELATION_PATTERN","WHITESPACE_PATTERN","ASTERISK_PLUS_HTML_HACK","ASTERISK_FIRST_CHILD_PLUS_HTML_HACK","LESS_THAN","PSEUDO_CLASSES_WITH_SELECTORS","hasInvalidCharacters","value","isEscaped","isInvalid","character","isQuote","i","l","length","SINGLE_QUOTE","DOUBLE_QUOTE","CLOSE_CURLY_BRACKET","EXCLAMATION","SEMICOLON","test","BACK_SLASH","removeWhitespace","format","stripped","isNewLineNix","isNewLineWin","wasEscaped","isQuoted","isSingleQuoted","isDoubleQuoted","isAttribute","isRelation","isWhitespace","isSpaceAwarePseudoClass","roundBracketLevel","wasComma","wasRelation","wasWhitespace","withCaseAttribute","spaceAroundRelation","spaces","AroundSelectorRelation","NEW_LINE_NIX","CARRIAGE_RETURN","CLOSE_ROUND_BRACKET","COLON","isPseudoClassWithSelectors","pop","push","OPEN_SQUARE_BRACKET","CLOSE_SQUARE_BRACKET","OPEN_ROUND_BRACKET","SPACE","COMMA","join","replace","colonPosition","pseudoClass","substring","indexOf","removeQuotes","replacePseudoClasses","tidyRules","rules","removeUnsupported","adjacentSpace","warnings","list","repeated","removeHTMLComment","rule","match","reduced","bind","module","exports"],"sources":["C:/Users/chest/OneDrive/Documentos/GitHub/HackUPC/frontend/node_modules/clean-css/lib/optimizer/level-1/tidy-rules.js"],"sourcesContent":["var Spaces = require('../../options/format').Spaces;\nvar Marker = require('../../tokenizer/marker');\nvar formatPosition = require('../../utils/format-position');\n\nvar CASE_ATTRIBUTE_PATTERN = /[\\s\"'][iI]\\s*\\]/;\nvar CASE_RESTORE_PATTERN = /([\\d\\w])([iI])\\]/g;\nvar DOUBLE_QUOTE_CASE_PATTERN = /=\"([a-zA-Z][a-zA-Z\\d\\-_]+)\"([iI])/g;\nvar DOUBLE_QUOTE_PATTERN = /=\"([a-zA-Z][a-zA-Z\\d\\-_]+)\"(\\s|\\])/g;\nvar HTML_COMMENT_PATTERN = /^(?:(?:<!--|-->)\\s*)+/;\nvar SINGLE_QUOTE_CASE_PATTERN = /='([a-zA-Z][a-zA-Z\\d\\-_]+)'([iI])/g;\nvar SINGLE_QUOTE_PATTERN = /='([a-zA-Z][a-zA-Z\\d\\-_]+)'(\\s|\\])/g;\nvar RELATION_PATTERN = /[>+~]/;\nvar WHITESPACE_PATTERN = /\\s/;\n\nvar ASTERISK_PLUS_HTML_HACK = '*+html ';\nvar ASTERISK_FIRST_CHILD_PLUS_HTML_HACK = '*:first-child+html ';\nvar LESS_THAN = '<';\n\nvar PSEUDO_CLASSES_WITH_SELECTORS = [\n  ':current',\n  ':future',\n  ':has',\n  ':host',\n  ':host-context',\n  ':is',\n  ':not',\n  ':past',\n  ':where'\n];\n\nfunction hasInvalidCharacters(value) {\n  var isEscaped;\n  var isInvalid = false;\n  var character;\n  var isQuote = false;\n  var i, l;\n\n  for (i = 0, l = value.length; i < l; i++) {\n    character = value[i];\n\n    if (isEscaped) {\n      // continue as always\n    } else if (character == Marker.SINGLE_QUOTE || character == Marker.DOUBLE_QUOTE) {\n      isQuote = !isQuote;\n    } else if (!isQuote\n      && (character == Marker.CLOSE_CURLY_BRACKET\n        || character == Marker.EXCLAMATION\n        || character == LESS_THAN\n        || character == Marker.SEMICOLON)\n    ) {\n      isInvalid = true;\n      break;\n    } else if (!isQuote && i === 0 && RELATION_PATTERN.test(character)) {\n      isInvalid = true;\n      break;\n    }\n\n    isEscaped = character == Marker.BACK_SLASH;\n  }\n\n  return isInvalid;\n}\n\nfunction removeWhitespace(value, format) {\n  var stripped = [];\n  var character;\n  var isNewLineNix;\n  var isNewLineWin;\n  var isEscaped;\n  var wasEscaped;\n  var isQuoted;\n  var isSingleQuoted;\n  var isDoubleQuoted;\n  var isAttribute;\n  var isRelation;\n  var isWhitespace;\n  var isSpaceAwarePseudoClass;\n  var roundBracketLevel = 0;\n  var wasComma = false;\n  var wasRelation = false;\n  var wasWhitespace = false;\n  var withCaseAttribute = CASE_ATTRIBUTE_PATTERN.test(value);\n  var spaceAroundRelation = format && format.spaces[Spaces.AroundSelectorRelation];\n  var i, l;\n\n  for (i = 0, l = value.length; i < l; i++) {\n    character = value[i];\n\n    isNewLineNix = character == Marker.NEW_LINE_NIX;\n    isNewLineWin = character == Marker.NEW_LINE_NIX && value[i - 1] == Marker.CARRIAGE_RETURN;\n    isQuoted = isSingleQuoted || isDoubleQuoted;\n    isRelation = !isAttribute && !isEscaped && roundBracketLevel === 0 && RELATION_PATTERN.test(character);\n    isWhitespace = WHITESPACE_PATTERN.test(character);\n    isSpaceAwarePseudoClass = roundBracketLevel == 1 && character == Marker.CLOSE_ROUND_BRACKET\n      ? false\n      : isSpaceAwarePseudoClass\n        || (roundBracketLevel === 0 && character == Marker.COLON && isPseudoClassWithSelectors(value, i));\n\n    if (wasEscaped && isQuoted && isNewLineWin) {\n      // swallow escaped new windows lines in comments\n      stripped.pop();\n      stripped.pop();\n    } else if (isEscaped && isQuoted && isNewLineNix) {\n      // swallow escaped new *nix lines in comments\n      stripped.pop();\n    } else if (isEscaped) {\n      stripped.push(character);\n    } else if (character == Marker.OPEN_SQUARE_BRACKET && !isQuoted) {\n      stripped.push(character);\n      isAttribute = true;\n    } else if (character == Marker.CLOSE_SQUARE_BRACKET && !isQuoted) {\n      stripped.push(character);\n      isAttribute = false;\n    } else if (character == Marker.OPEN_ROUND_BRACKET && !isQuoted) {\n      stripped.push(character);\n      roundBracketLevel++;\n    } else if (character == Marker.CLOSE_ROUND_BRACKET && !isQuoted) {\n      stripped.push(character);\n      roundBracketLevel--;\n    } else if (character == Marker.SINGLE_QUOTE && !isQuoted) {\n      stripped.push(character);\n      isSingleQuoted = true;\n    } else if (character == Marker.DOUBLE_QUOTE && !isQuoted) {\n      stripped.push(character);\n      isDoubleQuoted = true;\n    } else if (character == Marker.SINGLE_QUOTE && isQuoted) {\n      stripped.push(character);\n      isSingleQuoted = false;\n    } else if (character == Marker.DOUBLE_QUOTE && isQuoted) {\n      stripped.push(character);\n      isDoubleQuoted = false;\n    } else if (isWhitespace && wasRelation && !spaceAroundRelation) {\n      continue;\n    } else if (!isWhitespace && wasRelation && spaceAroundRelation) {\n      stripped.push(Marker.SPACE);\n      stripped.push(character);\n    } else if (isWhitespace && !wasWhitespace && wasComma && roundBracketLevel > 0 && isSpaceAwarePseudoClass) {\n      // skip space\n    } else if (isWhitespace && !wasWhitespace && roundBracketLevel > 0 && isSpaceAwarePseudoClass) {\n      stripped.push(character);\n    } else if (isWhitespace && (isAttribute || roundBracketLevel > 0) && !isQuoted) {\n      // skip space\n    } else if (isWhitespace && wasWhitespace && !isQuoted) {\n      // skip extra space\n    } else if ((isNewLineWin || isNewLineNix) && (isAttribute || roundBracketLevel > 0) && isQuoted) {\n      // skip newline\n    } else if (isRelation && wasWhitespace && !spaceAroundRelation) {\n      stripped.pop();\n      stripped.push(character);\n    } else if (isRelation && !wasWhitespace && spaceAroundRelation) {\n      stripped.push(Marker.SPACE);\n      stripped.push(character);\n    } else if (isWhitespace) {\n      stripped.push(Marker.SPACE);\n    } else {\n      stripped.push(character);\n    }\n\n    wasEscaped = isEscaped;\n    isEscaped = character == Marker.BACK_SLASH;\n    wasRelation = isRelation;\n    wasWhitespace = isWhitespace;\n    wasComma = character == Marker.COMMA;\n  }\n\n  return withCaseAttribute\n    ? stripped.join('').replace(CASE_RESTORE_PATTERN, '$1 $2]')\n    : stripped.join('');\n}\n\nfunction isPseudoClassWithSelectors(value, colonPosition) {\n  var pseudoClass = value.substring(colonPosition, value.indexOf(Marker.OPEN_ROUND_BRACKET, colonPosition));\n\n  return PSEUDO_CLASSES_WITH_SELECTORS.indexOf(pseudoClass) > -1;\n}\n\nfunction removeQuotes(value) {\n  if (value.indexOf('\\'') == -1 && value.indexOf('\"') == -1) {\n    return value;\n  }\n\n  return value\n    .replace(SINGLE_QUOTE_CASE_PATTERN, '=$1 $2')\n    .replace(SINGLE_QUOTE_PATTERN, '=$1$2')\n    .replace(DOUBLE_QUOTE_CASE_PATTERN, '=$1 $2')\n    .replace(DOUBLE_QUOTE_PATTERN, '=$1$2');\n}\n\nfunction replacePseudoClasses(value) {\n  return value\n    .replace('nth-child(1)', 'first-child')\n    .replace('nth-of-type(1)', 'first-of-type')\n    .replace('nth-of-type(even)', 'nth-of-type(2n)')\n    .replace('nth-child(even)', 'nth-child(2n)')\n    .replace('nth-of-type(2n+1)', 'nth-of-type(odd)')\n    .replace('nth-child(2n+1)', 'nth-child(odd)')\n    .replace('nth-last-child(1)', 'last-child')\n    .replace('nth-last-of-type(1)', 'last-of-type')\n    .replace('nth-last-of-type(even)', 'nth-last-of-type(2n)')\n    .replace('nth-last-child(even)', 'nth-last-child(2n)')\n    .replace('nth-last-of-type(2n+1)', 'nth-last-of-type(odd)')\n    .replace('nth-last-child(2n+1)', 'nth-last-child(odd)');\n}\n\nfunction tidyRules(rules, removeUnsupported, adjacentSpace, format, warnings) {\n  var list = [];\n  var repeated = [];\n\n  function removeHTMLComment(rule, match) {\n    warnings.push('HTML comment \\'' + match + '\\' at ' + formatPosition(rule[2][0]) + '. Removing.');\n    return '';\n  }\n\n  for (var i = 0, l = rules.length; i < l; i++) {\n    var rule = rules[i];\n    var reduced = rule[1];\n\n    reduced = reduced.replace(HTML_COMMENT_PATTERN, removeHTMLComment.bind(null, rule));\n\n    if (hasInvalidCharacters(reduced)) {\n      warnings.push('Invalid selector \\'' + rule[1] + '\\' at ' + formatPosition(rule[2][0]) + '. Ignoring.');\n      continue;\n    }\n\n    reduced = removeWhitespace(reduced, format);\n    reduced = removeQuotes(reduced);\n\n    if (adjacentSpace && reduced.indexOf('nav') > 0) {\n      reduced = reduced.replace(/\\+nav(\\S|$)/, '+ nav$1');\n    }\n\n    if (removeUnsupported && reduced.indexOf(ASTERISK_PLUS_HTML_HACK) > -1) {\n      continue;\n    }\n\n    if (removeUnsupported && reduced.indexOf(ASTERISK_FIRST_CHILD_PLUS_HTML_HACK) > -1) {\n      continue;\n    }\n\n    if (reduced.indexOf('*') > -1) {\n      reduced = reduced\n        .replace(/\\*([:#.[])/g, '$1')\n        .replace(/^(:first-child)?\\+html/, '*$1+html');\n    }\n\n    if (repeated.indexOf(reduced) > -1) {\n      continue;\n    }\n\n    reduced = replacePseudoClasses(reduced);\n\n    rule[1] = reduced;\n    repeated.push(reduced);\n    list.push(rule);\n  }\n\n  if (list.length == 1 && list[0][1].length === 0) {\n    warnings.push('Empty selector \\'' + list[0][1] + '\\' at ' + formatPosition(list[0][2][0]) + '. Ignoring.');\n    list = [];\n  }\n\n  return list;\n}\n\nmodule.exports = tidyRules;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}