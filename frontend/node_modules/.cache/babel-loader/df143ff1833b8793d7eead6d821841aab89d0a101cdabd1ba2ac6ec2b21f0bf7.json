{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.formatPlural = void 0;\nvar utils_1 = require(\"./utils\");\nvar error_1 = require(\"./error\");\nvar intl_messageformat_1 = require(\"intl-messageformat\");\nvar PLURAL_FORMAT_OPTIONS = ['type'];\nfunction formatPlural(_a, getPluralRules, value, options) {\n  var locale = _a.locale,\n    onError = _a.onError;\n  if (options === void 0) {\n    options = {};\n  }\n  if (!Intl.PluralRules) {\n    onError(new intl_messageformat_1.FormatError(\"Intl.PluralRules is not available in this environment.\\nTry polyfilling it using \\\"@formatjs/intl-pluralrules\\\"\\n\", intl_messageformat_1.ErrorCode.MISSING_INTL_API));\n  }\n  var filteredOptions = (0, utils_1.filterProps)(options, PLURAL_FORMAT_OPTIONS);\n  try {\n    return getPluralRules(locale, filteredOptions).select(value);\n  } catch (e) {\n    onError(new error_1.IntlFormatError('Error formatting plural.', locale, e));\n  }\n  return 'other';\n}\nexports.formatPlural = formatPlural;","map":{"version":3,"names":["Object","defineProperty","exports","value","formatPlural","utils_1","require","error_1","intl_messageformat_1","PLURAL_FORMAT_OPTIONS","_a","getPluralRules","options","locale","onError","Intl","PluralRules","FormatError","ErrorCode","MISSING_INTL_API","filteredOptions","filterProps","select","e","IntlFormatError"],"sources":["C:/Users/chest/OneDrive/Documentos/GitHub/HackUPC/frontend/node_modules/@formatjs/intl/src/plural.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.formatPlural = void 0;\nvar utils_1 = require(\"./utils\");\nvar error_1 = require(\"./error\");\nvar intl_messageformat_1 = require(\"intl-messageformat\");\nvar PLURAL_FORMAT_OPTIONS = ['type'];\nfunction formatPlural(_a, getPluralRules, value, options) {\n    var locale = _a.locale, onError = _a.onError;\n    if (options === void 0) { options = {}; }\n    if (!Intl.PluralRules) {\n        onError(new intl_messageformat_1.FormatError(\"Intl.PluralRules is not available in this environment.\\nTry polyfilling it using \\\"@formatjs/intl-pluralrules\\\"\\n\", intl_messageformat_1.ErrorCode.MISSING_INTL_API));\n    }\n    var filteredOptions = (0, utils_1.filterProps)(options, PLURAL_FORMAT_OPTIONS);\n    try {\n        return getPluralRules(locale, filteredOptions).select(value);\n    }\n    catch (e) {\n        onError(new error_1.IntlFormatError('Error formatting plural.', locale, e));\n    }\n    return 'other';\n}\nexports.formatPlural = formatPlural;\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,YAAY,GAAG,KAAK,CAAC;AAC7B,IAAIC,OAAO,GAAGC,OAAO,CAAC,SAAS,CAAC;AAChC,IAAIC,OAAO,GAAGD,OAAO,CAAC,SAAS,CAAC;AAChC,IAAIE,oBAAoB,GAAGF,OAAO,CAAC,oBAAoB,CAAC;AACxD,IAAIG,qBAAqB,GAAG,CAAC,MAAM,CAAC;AACpC,SAASL,YAAYA,CAACM,EAAE,EAAEC,cAAc,EAAER,KAAK,EAAES,OAAO,EAAE;EACtD,IAAIC,MAAM,GAAGH,EAAE,CAACG,MAAM;IAAEC,OAAO,GAAGJ,EAAE,CAACI,OAAO;EAC5C,IAAIF,OAAO,KAAK,KAAK,CAAC,EAAE;IAAEA,OAAO,GAAG,CAAC,CAAC;EAAE;EACxC,IAAI,CAACG,IAAI,CAACC,WAAW,EAAE;IACnBF,OAAO,CAAC,IAAIN,oBAAoB,CAACS,WAAW,CAAC,mHAAmH,EAAET,oBAAoB,CAACU,SAAS,CAACC,gBAAgB,CAAC,CAAC;EACvN;EACA,IAAIC,eAAe,GAAG,CAAC,CAAC,EAAEf,OAAO,CAACgB,WAAW,EAAET,OAAO,EAAEH,qBAAqB,CAAC;EAC9E,IAAI;IACA,OAAOE,cAAc,CAACE,MAAM,EAAEO,eAAe,CAAC,CAACE,MAAM,CAACnB,KAAK,CAAC;EAChE,CAAC,CACD,OAAOoB,CAAC,EAAE;IACNT,OAAO,CAAC,IAAIP,OAAO,CAACiB,eAAe,CAAC,0BAA0B,EAAEX,MAAM,EAAEU,CAAC,CAAC,CAAC;EAC/E;EACA,OAAO,OAAO;AAClB;AACArB,OAAO,CAACE,YAAY,GAAGA,YAAY","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}