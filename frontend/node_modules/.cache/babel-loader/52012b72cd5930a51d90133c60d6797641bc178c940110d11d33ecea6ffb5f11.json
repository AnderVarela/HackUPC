{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.default = void 0;\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/* eslint-disable local/ban-types-eventually */\nclass ReporterDispatcher {\n  constructor() {\n    _defineProperty(this, '_reporters', void 0);\n    this._reporters = [];\n  }\n  register(reporter) {\n    this._reporters.push(reporter);\n  }\n  unregister(ReporterClass) {\n    this._reporters = this._reporters.filter(reporter => !(reporter instanceof ReporterClass));\n  }\n  async onTestFileResult(test, testResult, results) {\n    for (const reporter of this._reporters) {\n      if (reporter.onTestFileResult) {\n        await reporter.onTestFileResult(test, testResult, results);\n      } else if (reporter.onTestResult) {\n        await reporter.onTestResult(test, testResult, results);\n      }\n    } // Release memory if unused later.\n\n    testResult.coverage = undefined;\n    testResult.console = undefined;\n  }\n  async onTestFileStart(test) {\n    for (const reporter of this._reporters) {\n      if (reporter.onTestFileStart) {\n        await reporter.onTestFileStart(test);\n      } else if (reporter.onTestStart) {\n        await reporter.onTestStart(test);\n      }\n    }\n  }\n  async onRunStart(results, options) {\n    for (const reporter of this._reporters) {\n      reporter.onRunStart && (await reporter.onRunStart(results, options));\n    }\n  }\n  async onTestCaseResult(test, testCaseResult) {\n    for (const reporter of this._reporters) {\n      if (reporter.onTestCaseResult) {\n        await reporter.onTestCaseResult(test, testCaseResult);\n      }\n    }\n  }\n  async onRunComplete(contexts, results) {\n    for (const reporter of this._reporters) {\n      if (reporter.onRunComplete) {\n        await reporter.onRunComplete(contexts, results);\n      }\n    }\n  } // Return a list of last errors for every reporter\n\n  getErrors() {\n    return this._reporters.reduce((list, reporter) => {\n      const error = reporter.getLastError && reporter.getLastError();\n      return error ? list.concat(error) : list;\n    }, []);\n  }\n  hasErrors() {\n    return this.getErrors().length !== 0;\n  }\n}\nexports.default = ReporterDispatcher;","map":{"version":3,"names":["Object","defineProperty","exports","value","default","_defineProperty","obj","key","enumerable","configurable","writable","ReporterDispatcher","constructor","_reporters","register","reporter","push","unregister","ReporterClass","filter","onTestFileResult","test","testResult","results","onTestResult","coverage","undefined","console","onTestFileStart","onTestStart","onRunStart","options","onTestCaseResult","testCaseResult","onRunComplete","contexts","getErrors","reduce","list","error","getLastError","concat","hasErrors","length"],"sources":["C:/Users/chest/OneDrive/Documentos/GitHub/HackUPC/frontend/node_modules/@jest/core/build/ReporterDispatcher.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.default = void 0;\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/* eslint-disable local/ban-types-eventually */\nclass ReporterDispatcher {\n  constructor() {\n    _defineProperty(this, '_reporters', void 0);\n\n    this._reporters = [];\n  }\n\n  register(reporter) {\n    this._reporters.push(reporter);\n  }\n\n  unregister(ReporterClass) {\n    this._reporters = this._reporters.filter(\n      reporter => !(reporter instanceof ReporterClass)\n    );\n  }\n\n  async onTestFileResult(test, testResult, results) {\n    for (const reporter of this._reporters) {\n      if (reporter.onTestFileResult) {\n        await reporter.onTestFileResult(test, testResult, results);\n      } else if (reporter.onTestResult) {\n        await reporter.onTestResult(test, testResult, results);\n      }\n    } // Release memory if unused later.\n\n    testResult.coverage = undefined;\n    testResult.console = undefined;\n  }\n\n  async onTestFileStart(test) {\n    for (const reporter of this._reporters) {\n      if (reporter.onTestFileStart) {\n        await reporter.onTestFileStart(test);\n      } else if (reporter.onTestStart) {\n        await reporter.onTestStart(test);\n      }\n    }\n  }\n\n  async onRunStart(results, options) {\n    for (const reporter of this._reporters) {\n      reporter.onRunStart && (await reporter.onRunStart(results, options));\n    }\n  }\n\n  async onTestCaseResult(test, testCaseResult) {\n    for (const reporter of this._reporters) {\n      if (reporter.onTestCaseResult) {\n        await reporter.onTestCaseResult(test, testCaseResult);\n      }\n    }\n  }\n\n  async onRunComplete(contexts, results) {\n    for (const reporter of this._reporters) {\n      if (reporter.onRunComplete) {\n        await reporter.onRunComplete(contexts, results);\n      }\n    }\n  } // Return a list of last errors for every reporter\n\n  getErrors() {\n    return this._reporters.reduce((list, reporter) => {\n      const error = reporter.getLastError && reporter.getLastError();\n      return error ? list.concat(error) : list;\n    }, []);\n  }\n\n  hasErrors() {\n    return this.getErrors().length !== 0;\n  }\n}\n\nexports.default = ReporterDispatcher;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}