{"ast":null,"code":"/* eslint-disable no-console, prefer-template */\n\"use strict\";\n\n/**\n * Returns a function that will invoke the supplied function and print a\n * deprecation warning to the console each time it is called.\n *\n * @param  {Function} func\n * @param  {string} msg\n * @returns {Function}\n */\nexports.wrap = function (func, msg) {\n  var wrapped = function () {\n    exports.printWarning(msg);\n    return func.apply(this, arguments);\n  };\n  if (func.prototype) {\n    wrapped.prototype = func.prototype;\n  }\n  return wrapped;\n};\n\n/**\n * Returns a string which can be supplied to `wrap()` to notify the user that a\n * particular part of the sinon API has been deprecated.\n *\n * @param  {string} packageName\n * @param  {string} funcName\n * @returns {string}\n */\nexports.defaultMsg = function (packageName, funcName) {\n  return packageName + \".\" + funcName + \" is deprecated and will be removed from the public API in a future version of \" + packageName + \".\";\n};\n\n/**\n * Prints a warning on the console, when it exists\n *\n * @param  {string} msg\n * @returns {undefined}\n */\nexports.printWarning = function (msg) {\n  /* istanbul ignore next */\n  if (typeof process === \"object\" && process.emitWarning) {\n    // Emit Warnings in Node\n    process.emitWarning(msg);\n  } else if (console.info) {\n    console.info(msg);\n  } else {\n    console.log(msg);\n  }\n};","map":{"version":3,"names":["exports","wrap","func","msg","wrapped","printWarning","apply","arguments","prototype","defaultMsg","packageName","funcName","process","emitWarning","console","info","log"],"sources":["C:/Users/chest/OneDrive/Documentos/GitHub/HackUPC/frontend/node_modules/@sinonjs/commons/lib/deprecated.js"],"sourcesContent":["/* eslint-disable no-console, prefer-template */\n\"use strict\";\n\n/**\n * Returns a function that will invoke the supplied function and print a\n * deprecation warning to the console each time it is called.\n *\n * @param  {Function} func\n * @param  {string} msg\n * @returns {Function}\n */\nexports.wrap = function (func, msg) {\n    var wrapped = function () {\n        exports.printWarning(msg);\n        return func.apply(this, arguments);\n    };\n    if (func.prototype) {\n        wrapped.prototype = func.prototype;\n    }\n    return wrapped;\n};\n\n/**\n * Returns a string which can be supplied to `wrap()` to notify the user that a\n * particular part of the sinon API has been deprecated.\n *\n * @param  {string} packageName\n * @param  {string} funcName\n * @returns {string}\n */\nexports.defaultMsg = function (packageName, funcName) {\n    return (\n        packageName +\n        \".\" +\n        funcName +\n        \" is deprecated and will be removed from the public API in a future version of \" +\n        packageName +\n        \".\"\n    );\n};\n\n/**\n * Prints a warning on the console, when it exists\n *\n * @param  {string} msg\n * @returns {undefined}\n */\nexports.printWarning = function (msg) {\n    /* istanbul ignore next */\n    if (typeof process === \"object\" && process.emitWarning) {\n        // Emit Warnings in Node\n        process.emitWarning(msg);\n    } else if (console.info) {\n        console.info(msg);\n    } else {\n        console.log(msg);\n    }\n};\n"],"mappings":"AAAA;AACA,YAAY;;AAEZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAA,OAAO,CAACC,IAAI,GAAG,UAAUC,IAAI,EAAEC,GAAG,EAAE;EAChC,IAAIC,OAAO,GAAG,SAAAA,CAAA,EAAY;IACtBJ,OAAO,CAACK,YAAY,CAACF,GAAG,CAAC;IACzB,OAAOD,IAAI,CAACI,KAAK,CAAC,IAAI,EAAEC,SAAS,CAAC;EACtC,CAAC;EACD,IAAIL,IAAI,CAACM,SAAS,EAAE;IAChBJ,OAAO,CAACI,SAAS,GAAGN,IAAI,CAACM,SAAS;EACtC;EACA,OAAOJ,OAAO;AAClB,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAJ,OAAO,CAACS,UAAU,GAAG,UAAUC,WAAW,EAAEC,QAAQ,EAAE;EAClD,OACID,WAAW,GACX,GAAG,GACHC,QAAQ,GACR,gFAAgF,GAChFD,WAAW,GACX,GAAG;AAEX,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACAV,OAAO,CAACK,YAAY,GAAG,UAAUF,GAAG,EAAE;EAClC;EACA,IAAI,OAAOS,OAAO,KAAK,QAAQ,IAAIA,OAAO,CAACC,WAAW,EAAE;IACpD;IACAD,OAAO,CAACC,WAAW,CAACV,GAAG,CAAC;EAC5B,CAAC,MAAM,IAAIW,OAAO,CAACC,IAAI,EAAE;IACrBD,OAAO,CAACC,IAAI,CAACZ,GAAG,CAAC;EACrB,CAAC,MAAM;IACHW,OAAO,CAACE,GAAG,CAACb,GAAG,CAAC;EACpB;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}