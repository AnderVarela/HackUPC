{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.default = void 0;\nfunction _jestWatcher() {\n  const data = require('jest-watcher');\n  _jestWatcher = function () {\n    return data;\n  };\n  return data;\n}\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\n\n// TODO: Make underscored props `private`\nclass TestNamePatternPrompt extends _jestWatcher().PatternPrompt {\n  constructor(pipe, prompt) {\n    super(pipe, prompt);\n    _defineProperty(this, '_cachedTestResults', void 0);\n    this._entityName = 'tests';\n    this._cachedTestResults = [];\n  }\n  _onChange(pattern, options) {\n    super._onChange(pattern, options);\n    this._printPrompt(pattern);\n  }\n  _printPrompt(pattern) {\n    const pipe = this._pipe;\n    (0, _jestWatcher().printPatternCaret)(pattern, pipe);\n    (0, _jestWatcher().printRestoredPatternCaret)(pattern, this._currentUsageRows, pipe);\n  }\n  _getMatchedTests(pattern) {\n    let regex;\n    try {\n      regex = new RegExp(pattern, 'i');\n    } catch {\n      return [];\n    }\n    const matchedTests = [];\n    this._cachedTestResults.forEach(({\n      testResults\n    }) => testResults.forEach(({\n      title\n    }) => {\n      if (regex.test(title)) {\n        matchedTests.push(title);\n      }\n    }));\n    return matchedTests;\n  }\n  updateCachedTestResults(testResults = []) {\n    this._cachedTestResults = testResults;\n  }\n}\nexports.default = TestNamePatternPrompt;","map":{"version":3,"names":["Object","defineProperty","exports","value","default","_jestWatcher","data","require","_defineProperty","obj","key","enumerable","configurable","writable","TestNamePatternPrompt","PatternPrompt","constructor","pipe","prompt","_entityName","_cachedTestResults","_onChange","pattern","options","_printPrompt","_pipe","printPatternCaret","printRestoredPatternCaret","_currentUsageRows","_getMatchedTests","regex","RegExp","matchedTests","forEach","testResults","title","test","push","updateCachedTestResults"],"sources":["C:/Users/chest/OneDrive/Documentos/GitHub/HackUPC/frontend/node_modules/@jest/core/build/TestNamePatternPrompt.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.default = void 0;\n\nfunction _jestWatcher() {\n  const data = require('jest-watcher');\n\n  _jestWatcher = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\n\n// TODO: Make underscored props `private`\nclass TestNamePatternPrompt extends _jestWatcher().PatternPrompt {\n  constructor(pipe, prompt) {\n    super(pipe, prompt);\n\n    _defineProperty(this, '_cachedTestResults', void 0);\n\n    this._entityName = 'tests';\n    this._cachedTestResults = [];\n  }\n\n  _onChange(pattern, options) {\n    super._onChange(pattern, options);\n\n    this._printPrompt(pattern);\n  }\n\n  _printPrompt(pattern) {\n    const pipe = this._pipe;\n    (0, _jestWatcher().printPatternCaret)(pattern, pipe);\n    (0, _jestWatcher().printRestoredPatternCaret)(\n      pattern,\n      this._currentUsageRows,\n      pipe\n    );\n  }\n\n  _getMatchedTests(pattern) {\n    let regex;\n\n    try {\n      regex = new RegExp(pattern, 'i');\n    } catch {\n      return [];\n    }\n\n    const matchedTests = [];\n\n    this._cachedTestResults.forEach(({testResults}) =>\n      testResults.forEach(({title}) => {\n        if (regex.test(title)) {\n          matchedTests.push(title);\n        }\n      })\n    );\n\n    return matchedTests;\n  }\n\n  updateCachedTestResults(testResults = []) {\n    this._cachedTestResults = testResults;\n  }\n}\n\nexports.default = TestNamePatternPrompt;\n"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAC3CC,KAAK,EAAE;AACT,CAAC,CAAC;AACFD,OAAO,CAACE,OAAO,GAAG,KAAK,CAAC;AAExB,SAASC,YAAYA,CAAA,EAAG;EACtB,MAAMC,IAAI,GAAGC,OAAO,CAAC,cAAc,CAAC;EAEpCF,YAAY,GAAG,SAAAA,CAAA,EAAY;IACzB,OAAOC,IAAI;EACb,CAAC;EAED,OAAOA,IAAI;AACb;AAEA,SAASE,eAAeA,CAACC,GAAG,EAAEC,GAAG,EAAEP,KAAK,EAAE;EACxC,IAAIO,GAAG,IAAID,GAAG,EAAE;IACdT,MAAM,CAACC,cAAc,CAACQ,GAAG,EAAEC,GAAG,EAAE;MAC9BP,KAAK,EAAEA,KAAK;MACZQ,UAAU,EAAE,IAAI;MAChBC,YAAY,EAAE,IAAI;MAClBC,QAAQ,EAAE;IACZ,CAAC,CAAC;EACJ,CAAC,MAAM;IACLJ,GAAG,CAACC,GAAG,CAAC,GAAGP,KAAK;EAClB;EACA,OAAOM,GAAG;AACZ;;AAEA;AACA,MAAMK,qBAAqB,SAAST,YAAY,CAAC,CAAC,CAACU,aAAa,CAAC;EAC/DC,WAAWA,CAACC,IAAI,EAAEC,MAAM,EAAE;IACxB,KAAK,CAACD,IAAI,EAAEC,MAAM,CAAC;IAEnBV,eAAe,CAAC,IAAI,EAAE,oBAAoB,EAAE,KAAK,CAAC,CAAC;IAEnD,IAAI,CAACW,WAAW,GAAG,OAAO;IAC1B,IAAI,CAACC,kBAAkB,GAAG,EAAE;EAC9B;EAEAC,SAASA,CAACC,OAAO,EAAEC,OAAO,EAAE;IAC1B,KAAK,CAACF,SAAS,CAACC,OAAO,EAAEC,OAAO,CAAC;IAEjC,IAAI,CAACC,YAAY,CAACF,OAAO,CAAC;EAC5B;EAEAE,YAAYA,CAACF,OAAO,EAAE;IACpB,MAAML,IAAI,GAAG,IAAI,CAACQ,KAAK;IACvB,CAAC,CAAC,EAAEpB,YAAY,CAAC,CAAC,CAACqB,iBAAiB,EAAEJ,OAAO,EAAEL,IAAI,CAAC;IACpD,CAAC,CAAC,EAAEZ,YAAY,CAAC,CAAC,CAACsB,yBAAyB,EAC1CL,OAAO,EACP,IAAI,CAACM,iBAAiB,EACtBX,IACF,CAAC;EACH;EAEAY,gBAAgBA,CAACP,OAAO,EAAE;IACxB,IAAIQ,KAAK;IAET,IAAI;MACFA,KAAK,GAAG,IAAIC,MAAM,CAACT,OAAO,EAAE,GAAG,CAAC;IAClC,CAAC,CAAC,MAAM;MACN,OAAO,EAAE;IACX;IAEA,MAAMU,YAAY,GAAG,EAAE;IAEvB,IAAI,CAACZ,kBAAkB,CAACa,OAAO,CAAC,CAAC;MAACC;IAAW,CAAC,KAC5CA,WAAW,CAACD,OAAO,CAAC,CAAC;MAACE;IAAK,CAAC,KAAK;MAC/B,IAAIL,KAAK,CAACM,IAAI,CAACD,KAAK,CAAC,EAAE;QACrBH,YAAY,CAACK,IAAI,CAACF,KAAK,CAAC;MAC1B;IACF,CAAC,CACH,CAAC;IAED,OAAOH,YAAY;EACrB;EAEAM,uBAAuBA,CAACJ,WAAW,GAAG,EAAE,EAAE;IACxC,IAAI,CAACd,kBAAkB,GAAGc,WAAW;EACvC;AACF;AAEAhC,OAAO,CAACE,OAAO,GAAGU,qBAAqB","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}