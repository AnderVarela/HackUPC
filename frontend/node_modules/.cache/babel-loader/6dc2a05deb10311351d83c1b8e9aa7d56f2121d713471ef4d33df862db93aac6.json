{"ast":null,"code":"import { __assign } from \"tslib\";\nimport * as React from 'react';\nimport { invariant } from '@formatjs/ecma402-abstract';\nimport { DEFAULT_INTL_CONFIG as CORE_DEFAULT_INTL_CONFIG } from '@formatjs/intl';\nexport function invariantIntlContext(intl) {\n  invariant(intl, '[React Intl] Could not find required `intl` object. ' + '<IntlProvider> needs to exist in the component ancestry.');\n}\nexport var DEFAULT_INTL_CONFIG = __assign(__assign({}, CORE_DEFAULT_INTL_CONFIG), {\n  textComponent: React.Fragment\n});\n/**\n * Takes a `formatXMLElementFn`, and composes it in function, which passes\n * argument `parts` through, assigning unique key to each part, to prevent\n * \"Each child in a list should have a unique \"key\"\" React error.\n * @param formatXMLElementFn\n */\nexport function assignUniqueKeysToParts(formatXMLElementFn) {\n  return function (parts) {\n    // eslint-disable-next-line prefer-rest-params\n    return formatXMLElementFn(React.Children.toArray(parts));\n  };\n}\nexport function shallowEqual(objA, objB) {\n  if (objA === objB) {\n    return true;\n  }\n  if (!objA || !objB) {\n    return false;\n  }\n  var aKeys = Object.keys(objA);\n  var bKeys = Object.keys(objB);\n  var len = aKeys.length;\n  if (bKeys.length !== len) {\n    return false;\n  }\n  for (var i = 0; i < len; i++) {\n    var key = aKeys[i];\n    if (objA[key] !== objB[key] || !Object.prototype.hasOwnProperty.call(objB, key)) {\n      return false;\n    }\n  }\n  return true;\n}","map":{"version":3,"names":["__assign","React","invariant","DEFAULT_INTL_CONFIG","CORE_DEFAULT_INTL_CONFIG","invariantIntlContext","intl","textComponent","Fragment","assignUniqueKeysToParts","formatXMLElementFn","parts","Children","toArray","shallowEqual","objA","objB","aKeys","Object","keys","bKeys","len","length","i","key","prototype","hasOwnProperty","call"],"sources":["C:/Users/chest/OneDrive/Documentos/GitHub/HackUPC/frontend/node_modules/react-intl/lib/src/utils.js"],"sourcesContent":["import { __assign } from \"tslib\";\nimport * as React from 'react';\nimport { invariant } from '@formatjs/ecma402-abstract';\nimport { DEFAULT_INTL_CONFIG as CORE_DEFAULT_INTL_CONFIG } from '@formatjs/intl';\nexport function invariantIntlContext(intl) {\n    invariant(intl, '[React Intl] Could not find required `intl` object. ' +\n        '<IntlProvider> needs to exist in the component ancestry.');\n}\nexport var DEFAULT_INTL_CONFIG = __assign(__assign({}, CORE_DEFAULT_INTL_CONFIG), { textComponent: React.Fragment });\n/**\n * Takes a `formatXMLElementFn`, and composes it in function, which passes\n * argument `parts` through, assigning unique key to each part, to prevent\n * \"Each child in a list should have a unique \"key\"\" React error.\n * @param formatXMLElementFn\n */\nexport function assignUniqueKeysToParts(formatXMLElementFn) {\n    return function (parts) {\n        // eslint-disable-next-line prefer-rest-params\n        return formatXMLElementFn(React.Children.toArray(parts));\n    };\n}\nexport function shallowEqual(objA, objB) {\n    if (objA === objB) {\n        return true;\n    }\n    if (!objA || !objB) {\n        return false;\n    }\n    var aKeys = Object.keys(objA);\n    var bKeys = Object.keys(objB);\n    var len = aKeys.length;\n    if (bKeys.length !== len) {\n        return false;\n    }\n    for (var i = 0; i < len; i++) {\n        var key = aKeys[i];\n        if (objA[key] !== objB[key] ||\n            !Object.prototype.hasOwnProperty.call(objB, key)) {\n            return false;\n        }\n    }\n    return true;\n}\n"],"mappings":"AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAO,KAAKC,KAAK,MAAM,OAAO;AAC9B,SAASC,SAAS,QAAQ,4BAA4B;AACtD,SAASC,mBAAmB,IAAIC,wBAAwB,QAAQ,gBAAgB;AAChF,OAAO,SAASC,oBAAoBA,CAACC,IAAI,EAAE;EACvCJ,SAAS,CAACI,IAAI,EAAE,sDAAsD,GAClE,0DAA0D,CAAC;AACnE;AACA,OAAO,IAAIH,mBAAmB,GAAGH,QAAQ,CAACA,QAAQ,CAAC,CAAC,CAAC,EAAEI,wBAAwB,CAAC,EAAE;EAAEG,aAAa,EAAEN,KAAK,CAACO;AAAS,CAAC,CAAC;AACpH;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,uBAAuBA,CAACC,kBAAkB,EAAE;EACxD,OAAO,UAAUC,KAAK,EAAE;IACpB;IACA,OAAOD,kBAAkB,CAACT,KAAK,CAACW,QAAQ,CAACC,OAAO,CAACF,KAAK,CAAC,CAAC;EAC5D,CAAC;AACL;AACA,OAAO,SAASG,YAAYA,CAACC,IAAI,EAAEC,IAAI,EAAE;EACrC,IAAID,IAAI,KAAKC,IAAI,EAAE;IACf,OAAO,IAAI;EACf;EACA,IAAI,CAACD,IAAI,IAAI,CAACC,IAAI,EAAE;IAChB,OAAO,KAAK;EAChB;EACA,IAAIC,KAAK,GAAGC,MAAM,CAACC,IAAI,CAACJ,IAAI,CAAC;EAC7B,IAAIK,KAAK,GAAGF,MAAM,CAACC,IAAI,CAACH,IAAI,CAAC;EAC7B,IAAIK,GAAG,GAAGJ,KAAK,CAACK,MAAM;EACtB,IAAIF,KAAK,CAACE,MAAM,KAAKD,GAAG,EAAE;IACtB,OAAO,KAAK;EAChB;EACA,KAAK,IAAIE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,GAAG,EAAEE,CAAC,EAAE,EAAE;IAC1B,IAAIC,GAAG,GAAGP,KAAK,CAACM,CAAC,CAAC;IAClB,IAAIR,IAAI,CAACS,GAAG,CAAC,KAAKR,IAAI,CAACQ,GAAG,CAAC,IACvB,CAACN,MAAM,CAACO,SAAS,CAACC,cAAc,CAACC,IAAI,CAACX,IAAI,EAAEQ,GAAG,CAAC,EAAE;MAClD,OAAO,KAAK;IAChB;EACJ;EACA,OAAO,IAAI;AACf","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}