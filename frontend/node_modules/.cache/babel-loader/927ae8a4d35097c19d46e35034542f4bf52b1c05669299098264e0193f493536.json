{"ast":null,"code":"/**\n * @callback EventCallback\n * @param {string | Error | null} context\n * @returns {void}\n */\n/**\n * @callback EventHandler\n * @param {Event} event\n * @returns {void}\n */\n\n/**\n * A function that creates an event handler for the `error` event.\n * @param {EventCallback} callback A function called to handle the error context.\n * @returns {EventHandler} A handler for the `error` event.\n */\nfunction createErrorHandler(callback) {\n  return function errorHandler(event) {\n    if (!event || !event.error) {\n      return callback(null);\n    }\n    if (event.error instanceof Error) {\n      return callback(event.error);\n    }\n    // A non-error was thrown, we don't have a trace. :(\n    // Look in your browser's devtools for more information\n    return callback(new Error(event.error));\n  };\n}\n\n/**\n * A function that creates an event handler for the `unhandledrejection` event.\n * @param {EventCallback} callback A function called to handle the error context.\n * @returns {EventHandler} A handler for the `unhandledrejection` event.\n */\nfunction createRejectionHandler(callback) {\n  return function rejectionHandler(event) {\n    if (!event || !event.reason) {\n      return callback(new Error('Unknown'));\n    }\n    if (event.reason instanceof Error) {\n      return callback(event.reason);\n    }\n    // A non-error was rejected, we don't have a trace :(\n    // Look in your browser's devtools for more information\n    return callback(new Error(event.reason));\n  };\n}\n\n/**\n * Creates a handler that registers an EventListener on window for a valid type\n * and calls a callback when the event fires.\n * @param {string} eventType A valid DOM event type.\n * @param {function(EventCallback): EventHandler} createHandler A function that creates an event handler.\n * @returns {register} A function that registers the EventListener given a callback.\n */\nfunction createWindowEventHandler(eventType, createHandler) {\n  /**\n   * @type {EventHandler | null} A cached event handler function.\n   */\n  let eventHandler = null;\n\n  /**\n   * Unregisters an EventListener if it has been registered.\n   * @returns {void}\n   */\n  function unregister() {\n    if (eventHandler === null) {\n      return;\n    }\n    window.removeEventListener(eventType, eventHandler);\n    eventHandler = null;\n  }\n\n  /**\n   * Registers an EventListener if it hasn't been registered.\n   * @param {EventCallback} callback A function called after the event handler to handle its context.\n   * @returns {unregister | void} A function to unregister the registered EventListener if registration is performed.\n   */\n  function register(callback) {\n    if (eventHandler !== null) {\n      return;\n    }\n    eventHandler = createHandler(callback);\n    window.addEventListener(eventType, eventHandler);\n    return unregister;\n  }\n  return register;\n}\nconst handleError = createWindowEventHandler('error', createErrorHandler);\nconst handleUnhandledRejection = createWindowEventHandler('unhandledrejection', createRejectionHandler);\nmodule.exports = {\n  handleError: handleError,\n  handleUnhandledRejection: handleUnhandledRejection\n};","map":{"version":3,"names":["createErrorHandler","callback","errorHandler","event","error","Error","createRejectionHandler","rejectionHandler","reason","createWindowEventHandler","eventType","createHandler","eventHandler","unregister","window","removeEventListener","register","addEventListener","handleError","handleUnhandledRejection","module","exports"],"sources":["C:/Users/chest/OneDrive/Documentos/GitHub/HackUPC/frontend/node_modules/@pmmmwh/react-refresh-webpack-plugin/client/utils/errorEventHandlers.js"],"sourcesContent":["/**\n * @callback EventCallback\n * @param {string | Error | null} context\n * @returns {void}\n */\n/**\n * @callback EventHandler\n * @param {Event} event\n * @returns {void}\n */\n\n/**\n * A function that creates an event handler for the `error` event.\n * @param {EventCallback} callback A function called to handle the error context.\n * @returns {EventHandler} A handler for the `error` event.\n */\nfunction createErrorHandler(callback) {\n  return function errorHandler(event) {\n    if (!event || !event.error) {\n      return callback(null);\n    }\n    if (event.error instanceof Error) {\n      return callback(event.error);\n    }\n    // A non-error was thrown, we don't have a trace. :(\n    // Look in your browser's devtools for more information\n    return callback(new Error(event.error));\n  };\n}\n\n/**\n * A function that creates an event handler for the `unhandledrejection` event.\n * @param {EventCallback} callback A function called to handle the error context.\n * @returns {EventHandler} A handler for the `unhandledrejection` event.\n */\nfunction createRejectionHandler(callback) {\n  return function rejectionHandler(event) {\n    if (!event || !event.reason) {\n      return callback(new Error('Unknown'));\n    }\n    if (event.reason instanceof Error) {\n      return callback(event.reason);\n    }\n    // A non-error was rejected, we don't have a trace :(\n    // Look in your browser's devtools for more information\n    return callback(new Error(event.reason));\n  };\n}\n\n/**\n * Creates a handler that registers an EventListener on window for a valid type\n * and calls a callback when the event fires.\n * @param {string} eventType A valid DOM event type.\n * @param {function(EventCallback): EventHandler} createHandler A function that creates an event handler.\n * @returns {register} A function that registers the EventListener given a callback.\n */\nfunction createWindowEventHandler(eventType, createHandler) {\n  /**\n   * @type {EventHandler | null} A cached event handler function.\n   */\n  let eventHandler = null;\n\n  /**\n   * Unregisters an EventListener if it has been registered.\n   * @returns {void}\n   */\n  function unregister() {\n    if (eventHandler === null) {\n      return;\n    }\n    window.removeEventListener(eventType, eventHandler);\n    eventHandler = null;\n  }\n\n  /**\n   * Registers an EventListener if it hasn't been registered.\n   * @param {EventCallback} callback A function called after the event handler to handle its context.\n   * @returns {unregister | void} A function to unregister the registered EventListener if registration is performed.\n   */\n  function register(callback) {\n    if (eventHandler !== null) {\n      return;\n    }\n    eventHandler = createHandler(callback);\n    window.addEventListener(eventType, eventHandler);\n\n    return unregister;\n  }\n\n  return register;\n}\n\nconst handleError = createWindowEventHandler('error', createErrorHandler);\nconst handleUnhandledRejection = createWindowEventHandler(\n  'unhandledrejection',\n  createRejectionHandler\n);\n\nmodule.exports = {\n  handleError: handleError,\n  handleUnhandledRejection: handleUnhandledRejection,\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAASA,kBAAkBA,CAACC,QAAQ,EAAE;EACpC,OAAO,SAASC,YAAYA,CAACC,KAAK,EAAE;IAClC,IAAI,CAACA,KAAK,IAAI,CAACA,KAAK,CAACC,KAAK,EAAE;MAC1B,OAAOH,QAAQ,CAAC,IAAI,CAAC;IACvB;IACA,IAAIE,KAAK,CAACC,KAAK,YAAYC,KAAK,EAAE;MAChC,OAAOJ,QAAQ,CAACE,KAAK,CAACC,KAAK,CAAC;IAC9B;IACA;IACA;IACA,OAAOH,QAAQ,CAAC,IAAII,KAAK,CAACF,KAAK,CAACC,KAAK,CAAC,CAAC;EACzC,CAAC;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA,SAASE,sBAAsBA,CAACL,QAAQ,EAAE;EACxC,OAAO,SAASM,gBAAgBA,CAACJ,KAAK,EAAE;IACtC,IAAI,CAACA,KAAK,IAAI,CAACA,KAAK,CAACK,MAAM,EAAE;MAC3B,OAAOP,QAAQ,CAAC,IAAII,KAAK,CAAC,SAAS,CAAC,CAAC;IACvC;IACA,IAAIF,KAAK,CAACK,MAAM,YAAYH,KAAK,EAAE;MACjC,OAAOJ,QAAQ,CAACE,KAAK,CAACK,MAAM,CAAC;IAC/B;IACA;IACA;IACA,OAAOP,QAAQ,CAAC,IAAII,KAAK,CAACF,KAAK,CAACK,MAAM,CAAC,CAAC;EAC1C,CAAC;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,wBAAwBA,CAACC,SAAS,EAAEC,aAAa,EAAE;EAC1D;AACF;AACA;EACE,IAAIC,YAAY,GAAG,IAAI;;EAEvB;AACF;AACA;AACA;EACE,SAASC,UAAUA,CAAA,EAAG;IACpB,IAAID,YAAY,KAAK,IAAI,EAAE;MACzB;IACF;IACAE,MAAM,CAACC,mBAAmB,CAACL,SAAS,EAAEE,YAAY,CAAC;IACnDA,YAAY,GAAG,IAAI;EACrB;;EAEA;AACF;AACA;AACA;AACA;EACE,SAASI,QAAQA,CAACf,QAAQ,EAAE;IAC1B,IAAIW,YAAY,KAAK,IAAI,EAAE;MACzB;IACF;IACAA,YAAY,GAAGD,aAAa,CAACV,QAAQ,CAAC;IACtCa,MAAM,CAACG,gBAAgB,CAACP,SAAS,EAAEE,YAAY,CAAC;IAEhD,OAAOC,UAAU;EACnB;EAEA,OAAOG,QAAQ;AACjB;AAEA,MAAME,WAAW,GAAGT,wBAAwB,CAAC,OAAO,EAAET,kBAAkB,CAAC;AACzE,MAAMmB,wBAAwB,GAAGV,wBAAwB,CACvD,oBAAoB,EACpBH,sBACF,CAAC;AAEDc,MAAM,CAACC,OAAO,GAAG;EACfH,WAAW,EAAEA,WAAW;EACxBC,wBAAwB,EAAEA;AAC5B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}