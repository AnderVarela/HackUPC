{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst utils_1 = require(\"@typescript-eslint/utils\");\nconst util = __importStar(require(\"../util\"));\nexports.default = util.createRule({\n  name: 'space-before-function-paren',\n  meta: {\n    type: 'layout',\n    docs: {\n      description: 'Enforce consistent spacing before function parenthesis',\n      recommended: false,\n      extendsBaseRule: true\n    },\n    fixable: 'whitespace',\n    schema: [{\n      oneOf: [{\n        enum: ['always', 'never']\n      }, {\n        type: 'object',\n        properties: {\n          anonymous: {\n            enum: ['always', 'never', 'ignore']\n          },\n          named: {\n            enum: ['always', 'never', 'ignore']\n          },\n          asyncArrow: {\n            enum: ['always', 'never', 'ignore']\n          }\n        },\n        additionalProperties: false\n      }]\n    }],\n    messages: {\n      unexpected: 'Unexpected space before function parentheses.',\n      missing: 'Missing space before function parentheses.'\n    }\n  },\n  defaultOptions: ['always'],\n  create(context, [firstOption]) {\n    const sourceCode = context.getSourceCode();\n    const baseConfig = typeof firstOption === 'string' ? firstOption : 'always';\n    const overrideConfig = typeof firstOption === 'object' ? firstOption : {};\n    /**\n     * Determines whether a function has a name.\n     * @param {ASTNode} node The function node.\n     * @returns {boolean} Whether the function has a name.\n     */\n    function isNamedFunction(node) {\n      if (node.id != null) {\n        return true;\n      }\n      const parent = node.parent;\n      return parent.type === utils_1.AST_NODE_TYPES.MethodDefinition || parent.type === utils_1.AST_NODE_TYPES.TSAbstractMethodDefinition || parent.type === utils_1.AST_NODE_TYPES.Property && (parent.kind === 'get' || parent.kind === 'set' || parent.method);\n    }\n    /**\n     * Gets the config for a given function\n     * @param {ASTNode} node The function node\n     * @returns {string} \"always\", \"never\", or \"ignore\"\n     */\n    function getConfigForFunction(node) {\n      var _a, _b, _c;\n      if (node.type === utils_1.AST_NODE_TYPES.ArrowFunctionExpression) {\n        // Always ignore non-async functions and arrow functions without parens, e.g. async foo => bar\n        if (node.async && util.isOpeningParenToken(sourceCode.getFirstToken(node, {\n          skip: 1\n        }))) {\n          return (_a = overrideConfig.asyncArrow) !== null && _a !== void 0 ? _a : baseConfig;\n        }\n      } else if (isNamedFunction(node)) {\n        return (_b = overrideConfig.named) !== null && _b !== void 0 ? _b : baseConfig;\n        // `generator-star-spacing` should warn anonymous generators. E.g. `function* () {}`\n      } else if (!node.generator) {\n        return (_c = overrideConfig.anonymous) !== null && _c !== void 0 ? _c : baseConfig;\n      }\n      return 'ignore';\n    }\n    /**\n     * Checks the parens of a function node\n     * @param {ASTNode} node A function node\n     * @returns {void}\n     */\n    function checkFunction(node) {\n      const functionConfig = getConfigForFunction(node);\n      if (functionConfig === 'ignore') {\n        return;\n      }\n      let leftToken;\n      let rightToken;\n      if (node.typeParameters) {\n        leftToken = sourceCode.getLastToken(node.typeParameters);\n        rightToken = sourceCode.getTokenAfter(leftToken);\n      } else {\n        rightToken = sourceCode.getFirstToken(node, util.isOpeningParenToken);\n        leftToken = sourceCode.getTokenBefore(rightToken);\n      }\n      // eslint-disable-next-line deprecation/deprecation -- TODO - switch once our min ESLint version is 6.7.0\n      const hasSpacing = sourceCode.isSpaceBetweenTokens(leftToken, rightToken);\n      if (hasSpacing && functionConfig === 'never') {\n        context.report({\n          node,\n          loc: {\n            start: leftToken.loc.end,\n            end: rightToken.loc.start\n          },\n          messageId: 'unexpected',\n          fix: fixer => fixer.removeRange([leftToken.range[1], rightToken.range[0]])\n        });\n      } else if (!hasSpacing && functionConfig === 'always' && (!node.typeParameters || node.id)) {\n        context.report({\n          node,\n          loc: rightToken.loc,\n          messageId: 'missing',\n          fix: fixer => fixer.insertTextAfter(leftToken, ' ')\n        });\n      }\n    }\n    return {\n      ArrowFunctionExpression: checkFunction,\n      FunctionDeclaration: checkFunction,\n      FunctionExpression: checkFunction,\n      TSEmptyBodyFunctionExpression: checkFunction,\n      TSDeclareFunction: checkFunction\n    };\n  }\n});","map":{"version":3,"names":["utils_1","require","util","__importStar","exports","default","createRule","name","meta","type","docs","description","recommended","extendsBaseRule","fixable","schema","oneOf","enum","properties","anonymous","named","asyncArrow","additionalProperties","messages","unexpected","missing","defaultOptions","create","context","firstOption","sourceCode","getSourceCode","baseConfig","overrideConfig","isNamedFunction","node","id","parent","AST_NODE_TYPES","MethodDefinition","TSAbstractMethodDefinition","Property","kind","method","getConfigForFunction","ArrowFunctionExpression","async","isOpeningParenToken","getFirstToken","skip","_a","_b","generator","_c","checkFunction","functionConfig","leftToken","rightToken","typeParameters","getLastToken","getTokenAfter","getTokenBefore","hasSpacing","isSpaceBetweenTokens","report","loc","start","end","messageId","fix","fixer","removeRange","range","insertTextAfter","FunctionDeclaration","FunctionExpression","TSEmptyBodyFunctionExpression","TSDeclareFunction"],"sources":["../../src/rules/space-before-function-paren.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}