{"ast":null,"code":"\"use strict\";\n\n// Always use the latest available version of Unicode!\n// https://tc39.github.io/ecma262/#sec-conformance\nconst version = \"15.1.0\";\nconst start = require(\"@unicode/unicode-\" + version + \"/Binary_Property/ID_Start/code-points.js\").filter(function (ch) {\n  return ch > 0x7f;\n});\nlet last = -1;\nconst cont = require(\"@unicode/unicode-\" + version + \"/Binary_Property/ID_Continue/code-points.js\").filter(function (ch) {\n  return ch > 0x7f && search(start, ch, last + 1) === -1;\n});\nfunction search(arr, ch, starting) {\n  for (let i = starting; arr[i] <= ch && i < arr.length; last = i++) {\n    if (arr[i] === ch) return i;\n  }\n  return -1;\n}\nfunction pad(str, width) {\n  while (str.length < width) str = \"0\" + str;\n  return str;\n}\nfunction esc(code) {\n  const hex = code.toString(16);\n  if (hex.length <= 2) return \"\\\\x\" + pad(hex, 2);else return \"\\\\u\" + pad(hex, 4);\n}\nfunction generate(chars) {\n  const astral = [];\n  let re = \"\";\n  for (let i = 0, at = 0x10000; i < chars.length; i++) {\n    const from = chars[i];\n    let to = from;\n    while (i < chars.length - 1 && chars[i + 1] === to + 1) {\n      i++;\n      to++;\n    }\n    if (to <= 0xffff) {\n      if (from === to) re += esc(from);else if (from + 1 === to) re += esc(from) + esc(to);else re += esc(from) + \"-\" + esc(to);\n    } else {\n      astral.push(from - at, to - from);\n      at = to;\n    }\n  }\n  return {\n    nonASCII: re,\n    astral: astral\n  };\n}\nconst startData = generate(start);\nconst contData = generate(cont);\nconsole.log(\"/* prettier-ignore */\");\nconsole.log('let nonASCIIidentifierStartChars = \"' + startData.nonASCII + '\";');\nconsole.log(\"/* prettier-ignore */\");\nconsole.log('let nonASCIIidentifierChars = \"' + contData.nonASCII + '\";');\nconsole.log(\"/* prettier-ignore */\");\nconsole.log(\"const astralIdentifierStartCodes = \" + JSON.stringify(startData.astral) + \";\");\nconsole.log(\"/* prettier-ignore */\");\nconsole.log(\"const astralIdentifierCodes = \" + JSON.stringify(contData.astral) + \";\");","map":{"version":3,"names":["version","start","require","filter","ch","last","cont","search","arr","starting","i","length","pad","str","width","esc","code","hex","toString","generate","chars","astral","re","at","from","to","push","nonASCII","startData","contData","console","log","JSON","stringify"],"sources":["C:/Users/chest/OneDrive/Documentos/GitHub/HackUPC/frontend/node_modules/@babel/helper-validator-identifier/scripts/generate-identifier-regex.js"],"sourcesContent":["\"use strict\";\n\n// Always use the latest available version of Unicode!\n// https://tc39.github.io/ecma262/#sec-conformance\nconst version = \"15.1.0\";\n\nconst start = require(\n  \"@unicode/unicode-\" + version + \"/Binary_Property/ID_Start/code-points.js\"\n).filter(function (ch) {\n  return ch > 0x7f;\n});\nlet last = -1;\nconst cont = require(\n  \"@unicode/unicode-\" + version + \"/Binary_Property/ID_Continue/code-points.js\"\n).filter(function (ch) {\n  return ch > 0x7f && search(start, ch, last + 1) === -1;\n});\n\nfunction search(arr, ch, starting) {\n  for (let i = starting; arr[i] <= ch && i < arr.length; last = i++) {\n    if (arr[i] === ch) return i;\n  }\n  return -1;\n}\n\nfunction pad(str, width) {\n  while (str.length < width) str = \"0\" + str;\n  return str;\n}\n\nfunction esc(code) {\n  const hex = code.toString(16);\n  if (hex.length <= 2) return \"\\\\x\" + pad(hex, 2);\n  else return \"\\\\u\" + pad(hex, 4);\n}\n\nfunction generate(chars) {\n  const astral = [];\n  let re = \"\";\n  for (let i = 0, at = 0x10000; i < chars.length; i++) {\n    const from = chars[i];\n    let to = from;\n    while (i < chars.length - 1 && chars[i + 1] === to + 1) {\n      i++;\n      to++;\n    }\n    if (to <= 0xffff) {\n      if (from === to) re += esc(from);\n      else if (from + 1 === to) re += esc(from) + esc(to);\n      else re += esc(from) + \"-\" + esc(to);\n    } else {\n      astral.push(from - at, to - from);\n      at = to;\n    }\n  }\n  return { nonASCII: re, astral: astral };\n}\n\nconst startData = generate(start);\nconst contData = generate(cont);\n\nconsole.log(\"/* prettier-ignore */\");\nconsole.log('let nonASCIIidentifierStartChars = \"' + startData.nonASCII + '\";');\nconsole.log(\"/* prettier-ignore */\");\nconsole.log('let nonASCIIidentifierChars = \"' + contData.nonASCII + '\";');\nconsole.log(\"/* prettier-ignore */\");\nconsole.log(\n  \"const astralIdentifierStartCodes = \" + JSON.stringify(startData.astral) + \";\"\n);\nconsole.log(\"/* prettier-ignore */\");\nconsole.log(\n  \"const astralIdentifierCodes = \" + JSON.stringify(contData.astral) + \";\"\n);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}