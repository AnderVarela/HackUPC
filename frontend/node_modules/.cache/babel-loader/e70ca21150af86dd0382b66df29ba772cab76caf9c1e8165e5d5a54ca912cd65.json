{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst util = __importStar(require(\"../util\"));\nconst getESLintCoreRule_1 = require(\"../util/getESLintCoreRule\");\nconst baseRule = (0, getESLintCoreRule_1.getESLintCoreRule)('no-extra-semi');\nexports.default = util.createRule({\n  name: 'no-extra-semi',\n  meta: {\n    type: 'suggestion',\n    docs: {\n      description: 'Disallow unnecessary semicolons',\n      recommended: 'error',\n      extendsBaseRule: true\n    },\n    fixable: 'code',\n    hasSuggestions: baseRule.meta.hasSuggestions,\n    schema: baseRule.meta.schema,\n    messages: baseRule.meta.messages\n  },\n  defaultOptions: [],\n  create(context) {\n    const rules = baseRule.create(context);\n    return Object.assign(Object.assign({}, rules), {\n      'TSAbstractMethodDefinition, TSAbstractPropertyDefinition'(node) {\n        var _a;\n        if (rules.MethodDefinition) {\n          // for ESLint <= v7\n          rules.MethodDefinition(node);\n        } else if (rules['MethodDefinition, PropertyDefinition']) {\n          // for ESLint >= v8 < v8.3.0\n          rules['MethodDefinition, PropertyDefinition'](node);\n        } else {\n          // for ESLint >= v8.3.0\n          (_a = rules['MethodDefinition, PropertyDefinition, StaticBlock']) === null || _a === void 0 ? void 0 : _a.call(rules, node);\n        }\n      }\n    });\n  }\n});","map":{"version":3,"names":["util","__importStar","require","getESLintCoreRule_1","baseRule","getESLintCoreRule","exports","default","createRule","name","meta","type","docs","description","recommended","extendsBaseRule","fixable","hasSuggestions","schema","messages","defaultOptions","create","context","rules","Object","assign","TSAbstractMethodDefinition, TSAbstractPropertyDefinition","node","MethodDefinition","_a","call"],"sources":["../../src/rules/no-extra-semi.ts"],"sourcesContent":[null],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,MAAAA,IAAA,GAAAC,YAAA,CAAAC,OAAA;AACA,MAAAC,mBAAA,GAAAD,OAAA;AAEA,MAAME,QAAQ,GAAG,IAAAD,mBAAA,CAAAE,iBAAiB,EAAC,eAAe,CAAC;AAKnDC,OAAA,CAAAC,OAAA,GAAeP,IAAI,CAACQ,UAAU,CAAsB;EAClDC,IAAI,EAAE,eAAe;EACrBC,IAAI,EAAE;IACJC,IAAI,EAAE,YAAY;IAClBC,IAAI,EAAE;MACJC,WAAW,EAAE,iCAAiC;MAC9CC,WAAW,EAAE,OAAO;MACpBC,eAAe,EAAE;KAClB;IACDC,OAAO,EAAE,MAAM;IACfC,cAAc,EAAEb,QAAQ,CAACM,IAAI,CAACO,cAAc;IAC5CC,MAAM,EAAEd,QAAQ,CAACM,IAAI,CAACQ,MAAM;IAC5BC,QAAQ,EAAEf,QAAQ,CAACM,IAAI,CAACS;GACzB;EACDC,cAAc,EAAE,EAAE;EAClBC,MAAMA,CAACC,OAAO;IACZ,MAAMC,KAAK,GAAGnB,QAAQ,CAACiB,MAAM,CAACC,OAAO,CAAC;IAEtC,OAAAE,MAAA,CAAAC,MAAA,CAAAD,MAAA,CAAAC,MAAA,KACKF,KAAK;MACR,0DAA0DG,CACxDC,IAAW;;QAEX,IAAIJ,KAAK,CAACK,gBAAgB,EAAE;UAC1B;UACAL,KAAK,CAACK,gBAAgB,CAACD,IAAI,CAAC;SAC7B,MAAM,IAAIJ,KAAK,CAAC,sCAAsC,CAAC,EAAE;UACxD;UACAA,KAAK,CAAC,sCAAsC,CAAC,CAACI,IAAI,CAAC;SACpD,MAAM;UACL;UACA,CAAAE,EAAA,GAAAN,KAAK,CAAC,mDAAmD,CAAC,cAAAM,EAAA,uBAAAA,EAAA,CAAAC,IAAA,CAAAP,KAAA,EAAGI,IAAI,CAAC;;MAEtE;IAAC;EAEL;CACD,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}