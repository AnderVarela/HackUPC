{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.default = formatTestResults;\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nconst formatTestResult = (testResult, codeCoverageFormatter, reporter) => {\n  const assertionResults = testResult.testResults.map(formatTestAssertion);\n  if (testResult.testExecError) {\n    const now = Date.now();\n    return {\n      assertionResults,\n      coverage: {},\n      endTime: now,\n      message: testResult.failureMessage ? testResult.failureMessage : testResult.testExecError.message,\n      name: testResult.testFilePath,\n      startTime: now,\n      status: 'failed',\n      summary: ''\n    };\n  } else {\n    const allTestsPassed = testResult.numFailingTests === 0;\n    return {\n      assertionResults,\n      coverage: codeCoverageFormatter ? codeCoverageFormatter(testResult.coverage, reporter) : testResult.coverage,\n      endTime: testResult.perfStats.end,\n      message: testResult.failureMessage || '',\n      name: testResult.testFilePath,\n      startTime: testResult.perfStats.start,\n      status: allTestsPassed ? 'passed' : 'failed',\n      summary: ''\n    };\n  }\n};\nfunction formatTestAssertion(assertion) {\n  const result = {\n    ancestorTitles: assertion.ancestorTitles,\n    failureMessages: null,\n    fullName: assertion.fullName,\n    location: assertion.location,\n    status: assertion.status,\n    title: assertion.title\n  };\n  if (assertion.failureMessages) {\n    result.failureMessages = assertion.failureMessages;\n  }\n  return result;\n}\nfunction formatTestResults(results, codeCoverageFormatter, reporter) {\n  const testResults = results.testResults.map(testResult => formatTestResult(testResult, codeCoverageFormatter, reporter));\n  return {\n    ...results,\n    testResults\n  };\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","default","formatTestResults","formatTestResult","testResult","codeCoverageFormatter","reporter","assertionResults","testResults","map","formatTestAssertion","testExecError","now","Date","coverage","endTime","message","failureMessage","name","testFilePath","startTime","status","summary","allTestsPassed","numFailingTests","perfStats","end","start","assertion","result","ancestorTitles","failureMessages","fullName","location","title","results"],"sources":["C:/Users/chest/OneDrive/Documentos/GitHub/HackUPC/frontend/node_modules/@jest/test-result/build/formatTestResults.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.default = formatTestResults;\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nconst formatTestResult = (testResult, codeCoverageFormatter, reporter) => {\n  const assertionResults = testResult.testResults.map(formatTestAssertion);\n\n  if (testResult.testExecError) {\n    const now = Date.now();\n    return {\n      assertionResults,\n      coverage: {},\n      endTime: now,\n      message: testResult.failureMessage\n        ? testResult.failureMessage\n        : testResult.testExecError.message,\n      name: testResult.testFilePath,\n      startTime: now,\n      status: 'failed',\n      summary: ''\n    };\n  } else {\n    const allTestsPassed = testResult.numFailingTests === 0;\n    return {\n      assertionResults,\n      coverage: codeCoverageFormatter\n        ? codeCoverageFormatter(testResult.coverage, reporter)\n        : testResult.coverage,\n      endTime: testResult.perfStats.end,\n      message: testResult.failureMessage || '',\n      name: testResult.testFilePath,\n      startTime: testResult.perfStats.start,\n      status: allTestsPassed ? 'passed' : 'failed',\n      summary: ''\n    };\n  }\n};\n\nfunction formatTestAssertion(assertion) {\n  const result = {\n    ancestorTitles: assertion.ancestorTitles,\n    failureMessages: null,\n    fullName: assertion.fullName,\n    location: assertion.location,\n    status: assertion.status,\n    title: assertion.title\n  };\n\n  if (assertion.failureMessages) {\n    result.failureMessages = assertion.failureMessages;\n  }\n\n  return result;\n}\n\nfunction formatTestResults(results, codeCoverageFormatter, reporter) {\n  const testResults = results.testResults.map(testResult =>\n    formatTestResult(testResult, codeCoverageFormatter, reporter)\n  );\n  return {...results, testResults};\n}\n"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAC3CC,KAAK,EAAE;AACT,CAAC,CAAC;AACFD,OAAO,CAACE,OAAO,GAAGC,iBAAiB;;AAEnC;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,gBAAgB,GAAGA,CAACC,UAAU,EAAEC,qBAAqB,EAAEC,QAAQ,KAAK;EACxE,MAAMC,gBAAgB,GAAGH,UAAU,CAACI,WAAW,CAACC,GAAG,CAACC,mBAAmB,CAAC;EAExE,IAAIN,UAAU,CAACO,aAAa,EAAE;IAC5B,MAAMC,GAAG,GAAGC,IAAI,CAACD,GAAG,CAAC,CAAC;IACtB,OAAO;MACLL,gBAAgB;MAChBO,QAAQ,EAAE,CAAC,CAAC;MACZC,OAAO,EAAEH,GAAG;MACZI,OAAO,EAAEZ,UAAU,CAACa,cAAc,GAC9Bb,UAAU,CAACa,cAAc,GACzBb,UAAU,CAACO,aAAa,CAACK,OAAO;MACpCE,IAAI,EAAEd,UAAU,CAACe,YAAY;MAC7BC,SAAS,EAAER,GAAG;MACdS,MAAM,EAAE,QAAQ;MAChBC,OAAO,EAAE;IACX,CAAC;EACH,CAAC,MAAM;IACL,MAAMC,cAAc,GAAGnB,UAAU,CAACoB,eAAe,KAAK,CAAC;IACvD,OAAO;MACLjB,gBAAgB;MAChBO,QAAQ,EAAET,qBAAqB,GAC3BA,qBAAqB,CAACD,UAAU,CAACU,QAAQ,EAAER,QAAQ,CAAC,GACpDF,UAAU,CAACU,QAAQ;MACvBC,OAAO,EAAEX,UAAU,CAACqB,SAAS,CAACC,GAAG;MACjCV,OAAO,EAAEZ,UAAU,CAACa,cAAc,IAAI,EAAE;MACxCC,IAAI,EAAEd,UAAU,CAACe,YAAY;MAC7BC,SAAS,EAAEhB,UAAU,CAACqB,SAAS,CAACE,KAAK;MACrCN,MAAM,EAAEE,cAAc,GAAG,QAAQ,GAAG,QAAQ;MAC5CD,OAAO,EAAE;IACX,CAAC;EACH;AACF,CAAC;AAED,SAASZ,mBAAmBA,CAACkB,SAAS,EAAE;EACtC,MAAMC,MAAM,GAAG;IACbC,cAAc,EAAEF,SAAS,CAACE,cAAc;IACxCC,eAAe,EAAE,IAAI;IACrBC,QAAQ,EAAEJ,SAAS,CAACI,QAAQ;IAC5BC,QAAQ,EAAEL,SAAS,CAACK,QAAQ;IAC5BZ,MAAM,EAAEO,SAAS,CAACP,MAAM;IACxBa,KAAK,EAAEN,SAAS,CAACM;EACnB,CAAC;EAED,IAAIN,SAAS,CAACG,eAAe,EAAE;IAC7BF,MAAM,CAACE,eAAe,GAAGH,SAAS,CAACG,eAAe;EACpD;EAEA,OAAOF,MAAM;AACf;AAEA,SAAS3B,iBAAiBA,CAACiC,OAAO,EAAE9B,qBAAqB,EAAEC,QAAQ,EAAE;EACnE,MAAME,WAAW,GAAG2B,OAAO,CAAC3B,WAAW,CAACC,GAAG,CAACL,UAAU,IACpDD,gBAAgB,CAACC,UAAU,EAAEC,qBAAqB,EAAEC,QAAQ,CAC9D,CAAC;EACD,OAAO;IAAC,GAAG6B,OAAO;IAAE3B;EAAW,CAAC;AAClC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}