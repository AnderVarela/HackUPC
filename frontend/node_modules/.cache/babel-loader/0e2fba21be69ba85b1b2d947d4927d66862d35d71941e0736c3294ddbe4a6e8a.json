{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst utils_1 = require(\"@typescript-eslint/utils\");\nconst util_1 = require(\"../util\");\nconst getESLintCoreRule_1 = require(\"../util/getESLintCoreRule\");\nconst baseRule = (0, getESLintCoreRule_1.getESLintCoreRule)('init-declarations');\nexports.default = (0, util_1.createRule)({\n  name: 'init-declarations',\n  meta: {\n    type: 'suggestion',\n    docs: {\n      description: 'Require or disallow initialization in variable declarations',\n      recommended: false,\n      extendsBaseRule: true\n    },\n    hasSuggestions: baseRule.meta.hasSuggestions,\n    schema: baseRule.meta.schema,\n    messages: baseRule.meta.messages\n  },\n  defaultOptions: ['always'],\n  create(context, [mode]) {\n    const rules = baseRule.create(context);\n    return {\n      'VariableDeclaration:exit'(node) {\n        if (mode === 'always') {\n          if (node.declare) {\n            return;\n          }\n          if (isAncestorNamespaceDeclared(node)) {\n            return;\n          }\n        }\n        rules['VariableDeclaration:exit'](node);\n      }\n    };\n    function isAncestorNamespaceDeclared(node) {\n      let ancestor = node.parent;\n      while (ancestor) {\n        if (ancestor.type === utils_1.AST_NODE_TYPES.TSModuleDeclaration && ancestor.declare) {\n          return true;\n        }\n        ancestor = ancestor.parent;\n      }\n      return false;\n    }\n  }\n});","map":{"version":3,"names":["utils_1","require","util_1","getESLintCoreRule_1","baseRule","getESLintCoreRule","exports","default","createRule","name","meta","type","docs","description","recommended","extendsBaseRule","hasSuggestions","schema","messages","defaultOptions","create","context","mode","rules","VariableDeclaration:exit","node","declare","isAncestorNamespaceDeclared","ancestor","parent","AST_NODE_TYPES","TSModuleDeclaration"],"sources":["../../src/rules/init-declarations.ts"],"sourcesContent":[null],"mappings":";;;;;AACA,MAAAA,OAAA,GAAAC,OAAA;AAMA,MAAAC,MAAA,GAAAD,OAAA;AACA,MAAAE,mBAAA,GAAAF,OAAA;AAEA,MAAMG,QAAQ,GAAG,IAAAD,mBAAA,CAAAE,iBAAiB,EAAC,mBAAmB,CAAC;AAKvDC,OAAA,CAAAC,OAAA,GAAe,IAAAL,MAAA,CAAAM,UAAU,EAAsB;EAC7CC,IAAI,EAAE,mBAAmB;EACzBC,IAAI,EAAE;IACJC,IAAI,EAAE,YAAY;IAClBC,IAAI,EAAE;MACJC,WAAW,EACT,6DAA6D;MAC/DC,WAAW,EAAE,KAAK;MAClBC,eAAe,EAAE;KAClB;IACDC,cAAc,EAAEZ,QAAQ,CAACM,IAAI,CAACM,cAAc;IAC5CC,MAAM,EAAEb,QAAQ,CAACM,IAAI,CAACO,MAAM;IAC5BC,QAAQ,EAAEd,QAAQ,CAACM,IAAI,CAACQ;GACzB;EACDC,cAAc,EAAE,CAAC,QAAQ,CAAC;EAC1BC,MAAMA,CAACC,OAAO,EAAE,CAACC,IAAI,CAAC;IACpB,MAAMC,KAAK,GAAGnB,QAAQ,CAACgB,MAAM,CAACC,OAAO,CAAC;IAEtC,OAAO;MACL,0BAA0BG,CAACC,IAAkC;QAC3D,IAAIH,IAAI,KAAK,QAAQ,EAAE;UACrB,IAAIG,IAAI,CAACC,OAAO,EAAE;YAChB;;UAEF,IAAIC,2BAA2B,CAACF,IAAI,CAAC,EAAE;YACrC;;;QAIJF,KAAK,CAAC,0BAA0B,CAAC,CAACE,IAAI,CAAC;MACzC;KACD;IAED,SAASE,2BAA2BA,CAClCF,IAAkC;MAElC,IAAIG,QAAQ,GAAGH,IAAI,CAACI,MAAM;MAE1B,OAAOD,QAAQ,EAAE;QACf,IACEA,QAAQ,CAACjB,IAAI,KAAKX,OAAA,CAAA8B,cAAc,CAACC,mBAAmB,IACpDH,QAAQ,CAACF,OAAO,EAChB;UACA,OAAO,IAAI;;QAGbE,QAAQ,GAAGA,QAAQ,CAACC,MAAM;;MAG5B,OAAO,KAAK;IACd;EACF;CACD,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}