{"ast":null,"code":"import { __extends } from \"tslib\";\nexport var ErrorCode;\n(function (ErrorCode) {\n  // When we have a placeholder but no value to format\n  ErrorCode[\"MISSING_VALUE\"] = \"MISSING_VALUE\";\n  // When value supplied is invalid\n  ErrorCode[\"INVALID_VALUE\"] = \"INVALID_VALUE\";\n  // When we need specific Intl API but it's not available\n  ErrorCode[\"MISSING_INTL_API\"] = \"MISSING_INTL_API\";\n})(ErrorCode || (ErrorCode = {}));\nvar FormatError = /** @class */function (_super) {\n  __extends(FormatError, _super);\n  function FormatError(msg, code, originalMessage) {\n    var _this = _super.call(this, msg) || this;\n    _this.code = code;\n    _this.originalMessage = originalMessage;\n    return _this;\n  }\n  FormatError.prototype.toString = function () {\n    return \"[formatjs Error: \".concat(this.code, \"] \").concat(this.message);\n  };\n  return FormatError;\n}(Error);\nexport { FormatError };\nvar InvalidValueError = /** @class */function (_super) {\n  __extends(InvalidValueError, _super);\n  function InvalidValueError(variableId, value, options, originalMessage) {\n    return _super.call(this, \"Invalid values for \\\"\".concat(variableId, \"\\\": \\\"\").concat(value, \"\\\". Options are \\\"\").concat(Object.keys(options).join('\", \"'), \"\\\"\"), ErrorCode.INVALID_VALUE, originalMessage) || this;\n  }\n  return InvalidValueError;\n}(FormatError);\nexport { InvalidValueError };\nvar InvalidValueTypeError = /** @class */function (_super) {\n  __extends(InvalidValueTypeError, _super);\n  function InvalidValueTypeError(value, type, originalMessage) {\n    return _super.call(this, \"Value for \\\"\".concat(value, \"\\\" must be of type \").concat(type), ErrorCode.INVALID_VALUE, originalMessage) || this;\n  }\n  return InvalidValueTypeError;\n}(FormatError);\nexport { InvalidValueTypeError };\nvar MissingValueError = /** @class */function (_super) {\n  __extends(MissingValueError, _super);\n  function MissingValueError(variableId, originalMessage) {\n    return _super.call(this, \"The intl string context variable \\\"\".concat(variableId, \"\\\" was not provided to the string \\\"\").concat(originalMessage, \"\\\"\"), ErrorCode.MISSING_VALUE, originalMessage) || this;\n  }\n  return MissingValueError;\n}(FormatError);\nexport { MissingValueError };","map":{"version":3,"names":["__extends","ErrorCode","FormatError","_super","msg","code","originalMessage","_this","call","prototype","toString","concat","message","Error","InvalidValueError","variableId","value","options","Object","keys","join","INVALID_VALUE","InvalidValueTypeError","type","MissingValueError","MISSING_VALUE"],"sources":["C:/Users/chest/OneDrive/Documentos/GitHub/HackUPC/frontend/node_modules/intl-messageformat/lib/src/error.js"],"sourcesContent":["import { __extends } from \"tslib\";\nexport var ErrorCode;\n(function (ErrorCode) {\n    // When we have a placeholder but no value to format\n    ErrorCode[\"MISSING_VALUE\"] = \"MISSING_VALUE\";\n    // When value supplied is invalid\n    ErrorCode[\"INVALID_VALUE\"] = \"INVALID_VALUE\";\n    // When we need specific Intl API but it's not available\n    ErrorCode[\"MISSING_INTL_API\"] = \"MISSING_INTL_API\";\n})(ErrorCode || (ErrorCode = {}));\nvar FormatError = /** @class */ (function (_super) {\n    __extends(FormatError, _super);\n    function FormatError(msg, code, originalMessage) {\n        var _this = _super.call(this, msg) || this;\n        _this.code = code;\n        _this.originalMessage = originalMessage;\n        return _this;\n    }\n    FormatError.prototype.toString = function () {\n        return \"[formatjs Error: \".concat(this.code, \"] \").concat(this.message);\n    };\n    return FormatError;\n}(Error));\nexport { FormatError };\nvar InvalidValueError = /** @class */ (function (_super) {\n    __extends(InvalidValueError, _super);\n    function InvalidValueError(variableId, value, options, originalMessage) {\n        return _super.call(this, \"Invalid values for \\\"\".concat(variableId, \"\\\": \\\"\").concat(value, \"\\\". Options are \\\"\").concat(Object.keys(options).join('\", \"'), \"\\\"\"), ErrorCode.INVALID_VALUE, originalMessage) || this;\n    }\n    return InvalidValueError;\n}(FormatError));\nexport { InvalidValueError };\nvar InvalidValueTypeError = /** @class */ (function (_super) {\n    __extends(InvalidValueTypeError, _super);\n    function InvalidValueTypeError(value, type, originalMessage) {\n        return _super.call(this, \"Value for \\\"\".concat(value, \"\\\" must be of type \").concat(type), ErrorCode.INVALID_VALUE, originalMessage) || this;\n    }\n    return InvalidValueTypeError;\n}(FormatError));\nexport { InvalidValueTypeError };\nvar MissingValueError = /** @class */ (function (_super) {\n    __extends(MissingValueError, _super);\n    function MissingValueError(variableId, originalMessage) {\n        return _super.call(this, \"The intl string context variable \\\"\".concat(variableId, \"\\\" was not provided to the string \\\"\").concat(originalMessage, \"\\\"\"), ErrorCode.MISSING_VALUE, originalMessage) || this;\n    }\n    return MissingValueError;\n}(FormatError));\nexport { MissingValueError };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}