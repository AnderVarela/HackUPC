{"ast":null,"code":"'use strict';\n\n// This example is used in the documentation.\n\n// 1. const { parseArgs } = require('node:util'); // from node\n// 2. const { parseArgs } = require('@pkgjs/parseargs'); // from package\nconst {\n  parseArgs\n} = require('..'); // in repo\n\nconst args = ['-f', '--bar', 'b'];\nconst options = {\n  foo: {\n    type: 'boolean',\n    short: 'f'\n  },\n  bar: {\n    type: 'string'\n  }\n};\nconst {\n  values,\n  positionals\n} = parseArgs({\n  args,\n  options\n});\nconsole.log(values, positionals);\n\n// Try the following:\n//    node simple-hard-coded.js","map":{"version":3,"names":["parseArgs","require","args","options","foo","type","short","bar","values","positionals","console","log"],"sources":["C:/Users/chest/OneDrive/Documentos/GitHub/HackUPC/frontend/node_modules/@pkgjs/parseargs/examples/simple-hard-coded.js"],"sourcesContent":["'use strict';\n\n// This example is used in the documentation.\n\n// 1. const { parseArgs } = require('node:util'); // from node\n// 2. const { parseArgs } = require('@pkgjs/parseargs'); // from package\nconst { parseArgs } = require('..'); // in repo\n\nconst args = ['-f', '--bar', 'b'];\nconst options = {\n  foo: {\n    type: 'boolean',\n    short: 'f'\n  },\n  bar: {\n    type: 'string'\n  }\n};\nconst {\n  values,\n  positionals\n} = parseArgs({ args, options });\nconsole.log(values, positionals);\n\n// Try the following:\n//    node simple-hard-coded.js\n"],"mappings":"AAAA,YAAY;;AAEZ;;AAEA;AACA;AACA,MAAM;EAAEA;AAAU,CAAC,GAAGC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC;;AAErC,MAAMC,IAAI,GAAG,CAAC,IAAI,EAAE,OAAO,EAAE,GAAG,CAAC;AACjC,MAAMC,OAAO,GAAG;EACdC,GAAG,EAAE;IACHC,IAAI,EAAE,SAAS;IACfC,KAAK,EAAE;EACT,CAAC;EACDC,GAAG,EAAE;IACHF,IAAI,EAAE;EACR;AACF,CAAC;AACD,MAAM;EACJG,MAAM;EACNC;AACF,CAAC,GAAGT,SAAS,CAAC;EAAEE,IAAI;EAAEC;AAAQ,CAAC,CAAC;AAChCO,OAAO,CAACC,GAAG,CAACH,MAAM,EAAEC,WAAW,CAAC;;AAEhC;AACA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}