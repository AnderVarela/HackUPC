{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Variable = void 0;\nconst VariableBase_1 = require(\"./VariableBase\");\n/**\n * A Variable represents a locally scoped identifier. These include arguments to functions.\n */\nclass Variable extends VariableBase_1.VariableBase {\n  /**\n   * `true` if the variable is valid in a type context, false otherwise\n   * @public\n   */\n  get isTypeVariable() {\n    if (this.defs.length === 0) {\n      // we don't statically know whether this is a type or a value\n      return true;\n    }\n    return this.defs.some(def => def.isTypeDefinition);\n  }\n  /**\n   * `true` if the variable is valid in a value context, false otherwise\n   * @public\n   */\n  get isValueVariable() {\n    if (this.defs.length === 0) {\n      // we don't statically know whether this is a type or a value\n      return true;\n    }\n    return this.defs.some(def => def.isVariableDefinition);\n  }\n}\nexports.Variable = Variable;","map":{"version":3,"names":["VariableBase_1","require","Variable","VariableBase","isTypeVariable","defs","length","some","def","isTypeDefinition","isValueVariable","isVariableDefinition","exports"],"sources":["../../src/variable/Variable.ts"],"sourcesContent":[null],"mappings":";;;;;;AAAA,MAAAA,cAAA,GAAAC,OAAA;AAEA;;;AAGA,MAAMC,QAAS,SAAQF,cAAA,CAAAG,YAAY;EACjC;;;;EAIA,IAAWC,cAAcA,CAAA;IACvB,IAAI,IAAI,CAACC,IAAI,CAACC,MAAM,KAAK,CAAC,EAAE;MAC1B;MACA,OAAO,IAAI;;IAGb,OAAO,IAAI,CAACD,IAAI,CAACE,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,gBAAgB,CAAC;EACpD;EAEA;;;;EAIA,IAAWC,eAAeA,CAAA;IACxB,IAAI,IAAI,CAACL,IAAI,CAACC,MAAM,KAAK,CAAC,EAAE;MAC1B;MACA,OAAO,IAAI;;IAGb,OAAO,IAAI,CAACD,IAAI,CAACE,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACG,oBAAoB,CAAC;EACxD;;AAGOC,OAAA,CAAAV,QAAA,GAAAA,QAAA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}