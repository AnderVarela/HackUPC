{"ast":null,"code":"\"use strict\";\n\n/*--------------------------------------------------------------------------\n\n@sinclair/typebox/value\n\nThe MIT License (MIT)\n\nCopyright (c) 2017-2023 Haydn Paterson (sinclair) <haydn.developer@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n\n---------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ValueDelta = exports.ValueDeltaUnableToDiffUnknownValue = exports.ValueDeltaObjectWithSymbolKeyError = exports.Edit = exports.Delete = exports.Update = exports.Insert = void 0;\nconst typebox_1 = require(\"../typebox\");\nconst is_1 = require(\"./is\");\nconst clone_1 = require(\"./clone\");\nconst pointer_1 = require(\"./pointer\");\nexports.Insert = typebox_1.Type.Object({\n  type: typebox_1.Type.Literal('insert'),\n  path: typebox_1.Type.String(),\n  value: typebox_1.Type.Unknown()\n});\nexports.Update = typebox_1.Type.Object({\n  type: typebox_1.Type.Literal('update'),\n  path: typebox_1.Type.String(),\n  value: typebox_1.Type.Unknown()\n});\nexports.Delete = typebox_1.Type.Object({\n  type: typebox_1.Type.Literal('delete'),\n  path: typebox_1.Type.String()\n});\nexports.Edit = typebox_1.Type.Union([exports.Insert, exports.Update, exports.Delete]);\n// ---------------------------------------------------------------------\n// Errors\n// ---------------------------------------------------------------------\nclass ValueDeltaObjectWithSymbolKeyError extends Error {\n  constructor(key) {\n    super('ValueDelta: Cannot diff objects with symbol keys');\n    this.key = key;\n  }\n}\nexports.ValueDeltaObjectWithSymbolKeyError = ValueDeltaObjectWithSymbolKeyError;\nclass ValueDeltaUnableToDiffUnknownValue extends Error {\n  constructor(value) {\n    super('ValueDelta: Unable to create diff edits for unknown value');\n    this.value = value;\n  }\n}\nexports.ValueDeltaUnableToDiffUnknownValue = ValueDeltaUnableToDiffUnknownValue;\n// ---------------------------------------------------------------------\n// ValueDelta\n// ---------------------------------------------------------------------\nvar ValueDelta;\n(function (ValueDelta) {\n  // ---------------------------------------------------------------------\n  // Edits\n  // ---------------------------------------------------------------------\n  function Update(path, value) {\n    return {\n      type: 'update',\n      path,\n      value\n    };\n  }\n  function Insert(path, value) {\n    return {\n      type: 'insert',\n      path,\n      value\n    };\n  }\n  function Delete(path) {\n    return {\n      type: 'delete',\n      path\n    };\n  }\n  // ---------------------------------------------------------------------\n  // Diff\n  // ---------------------------------------------------------------------\n  function* Object(path, current, next) {\n    if (!is_1.Is.Object(next)) return yield Update(path, next);\n    const currentKeys = [...globalThis.Object.keys(current), ...globalThis.Object.getOwnPropertySymbols(current)];\n    const nextKeys = [...globalThis.Object.keys(next), ...globalThis.Object.getOwnPropertySymbols(next)];\n    for (const key of currentKeys) {\n      if (typeof key === 'symbol') throw new ValueDeltaObjectWithSymbolKeyError(key);\n      if (next[key] === undefined && nextKeys.includes(key)) yield Update(`${path}/${String(key)}`, undefined);\n    }\n    for (const key of nextKeys) {\n      if (current[key] === undefined || next[key] === undefined) continue;\n      if (typeof key === 'symbol') throw new ValueDeltaObjectWithSymbolKeyError(key);\n      yield* Visit(`${path}/${String(key)}`, current[key], next[key]);\n    }\n    for (const key of nextKeys) {\n      if (typeof key === 'symbol') throw new ValueDeltaObjectWithSymbolKeyError(key);\n      if (current[key] === undefined) yield Insert(`${path}/${String(key)}`, next[key]);\n    }\n    for (const key of currentKeys.reverse()) {\n      if (typeof key === 'symbol') throw new ValueDeltaObjectWithSymbolKeyError(key);\n      if (next[key] === undefined && !nextKeys.includes(key)) yield Delete(`${path}/${String(key)}`);\n    }\n  }\n  function* Array(path, current, next) {\n    if (!is_1.Is.Array(next)) return yield Update(path, next);\n    for (let i = 0; i < Math.min(current.length, next.length); i++) {\n      yield* Visit(`${path}/${i}`, current[i], next[i]);\n    }\n    for (let i = 0; i < next.length; i++) {\n      if (i < current.length) continue;\n      yield Insert(`${path}/${i}`, next[i]);\n    }\n    for (let i = current.length - 1; i >= 0; i--) {\n      if (i < next.length) continue;\n      yield Delete(`${path}/${i}`);\n    }\n  }\n  function* TypedArray(path, current, next) {\n    if (!is_1.Is.TypedArray(next) || current.length !== next.length || globalThis.Object.getPrototypeOf(current).constructor.name !== globalThis.Object.getPrototypeOf(next).constructor.name) return yield Update(path, next);\n    for (let i = 0; i < Math.min(current.length, next.length); i++) {\n      yield* Visit(`${path}/${i}`, current[i], next[i]);\n    }\n  }\n  function* Value(path, current, next) {\n    if (current === next) return;\n    yield Update(path, next);\n  }\n  function* Visit(path, current, next) {\n    if (is_1.Is.Object(current)) {\n      return yield* Object(path, current, next);\n    } else if (is_1.Is.Array(current)) {\n      return yield* Array(path, current, next);\n    } else if (is_1.Is.TypedArray(current)) {\n      return yield* TypedArray(path, current, next);\n    } else if (is_1.Is.Value(current)) {\n      return yield* Value(path, current, next);\n    } else {\n      throw new ValueDeltaUnableToDiffUnknownValue(current);\n    }\n  }\n  function Diff(current, next) {\n    return [...Visit('', current, next)];\n  }\n  ValueDelta.Diff = Diff;\n  // ---------------------------------------------------------------------\n  // Patch\n  // ---------------------------------------------------------------------\n  function IsRootUpdate(edits) {\n    return edits.length > 0 && edits[0].path === '' && edits[0].type === 'update';\n  }\n  function IsIdentity(edits) {\n    return edits.length === 0;\n  }\n  function Patch(current, edits) {\n    if (IsRootUpdate(edits)) {\n      return clone_1.ValueClone.Clone(edits[0].value);\n    }\n    if (IsIdentity(edits)) {\n      return clone_1.ValueClone.Clone(current);\n    }\n    const clone = clone_1.ValueClone.Clone(current);\n    for (const edit of edits) {\n      switch (edit.type) {\n        case 'insert':\n          {\n            pointer_1.ValuePointer.Set(clone, edit.path, edit.value);\n            break;\n          }\n        case 'update':\n          {\n            pointer_1.ValuePointer.Set(clone, edit.path, edit.value);\n            break;\n          }\n        case 'delete':\n          {\n            pointer_1.ValuePointer.Delete(clone, edit.path);\n            break;\n          }\n      }\n    }\n    return clone;\n  }\n  ValueDelta.Patch = Patch;\n})(ValueDelta = exports.ValueDelta || (exports.ValueDelta = {}));","map":{"version":3,"names":["Object","defineProperty","exports","value","ValueDelta","ValueDeltaUnableToDiffUnknownValue","ValueDeltaObjectWithSymbolKeyError","Edit","Delete","Update","Insert","typebox_1","require","is_1","clone_1","pointer_1","Type","type","Literal","path","String","Unknown","Union","Error","constructor","key","current","next","Is","currentKeys","globalThis","keys","getOwnPropertySymbols","nextKeys","undefined","includes","Visit","reverse","Array","i","Math","min","length","TypedArray","getPrototypeOf","name","Value","Diff","IsRootUpdate","edits","IsIdentity","Patch","ValueClone","Clone","clone","edit","ValuePointer","Set"],"sources":["C:/Users/chest/OneDrive/Documentos/GitHub/HackUPC/frontend/node_modules/@sinclair/typebox/value/delta.js"],"sourcesContent":["\"use strict\";\n/*--------------------------------------------------------------------------\n\n@sinclair/typebox/value\n\nThe MIT License (MIT)\n\nCopyright (c) 2017-2023 Haydn Paterson (sinclair) <haydn.developer@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n\n---------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ValueDelta = exports.ValueDeltaUnableToDiffUnknownValue = exports.ValueDeltaObjectWithSymbolKeyError = exports.Edit = exports.Delete = exports.Update = exports.Insert = void 0;\nconst typebox_1 = require(\"../typebox\");\nconst is_1 = require(\"./is\");\nconst clone_1 = require(\"./clone\");\nconst pointer_1 = require(\"./pointer\");\nexports.Insert = typebox_1.Type.Object({\n    type: typebox_1.Type.Literal('insert'),\n    path: typebox_1.Type.String(),\n    value: typebox_1.Type.Unknown(),\n});\nexports.Update = typebox_1.Type.Object({\n    type: typebox_1.Type.Literal('update'),\n    path: typebox_1.Type.String(),\n    value: typebox_1.Type.Unknown(),\n});\nexports.Delete = typebox_1.Type.Object({\n    type: typebox_1.Type.Literal('delete'),\n    path: typebox_1.Type.String(),\n});\nexports.Edit = typebox_1.Type.Union([exports.Insert, exports.Update, exports.Delete]);\n// ---------------------------------------------------------------------\n// Errors\n// ---------------------------------------------------------------------\nclass ValueDeltaObjectWithSymbolKeyError extends Error {\n    constructor(key) {\n        super('ValueDelta: Cannot diff objects with symbol keys');\n        this.key = key;\n    }\n}\nexports.ValueDeltaObjectWithSymbolKeyError = ValueDeltaObjectWithSymbolKeyError;\nclass ValueDeltaUnableToDiffUnknownValue extends Error {\n    constructor(value) {\n        super('ValueDelta: Unable to create diff edits for unknown value');\n        this.value = value;\n    }\n}\nexports.ValueDeltaUnableToDiffUnknownValue = ValueDeltaUnableToDiffUnknownValue;\n// ---------------------------------------------------------------------\n// ValueDelta\n// ---------------------------------------------------------------------\nvar ValueDelta;\n(function (ValueDelta) {\n    // ---------------------------------------------------------------------\n    // Edits\n    // ---------------------------------------------------------------------\n    function Update(path, value) {\n        return { type: 'update', path, value };\n    }\n    function Insert(path, value) {\n        return { type: 'insert', path, value };\n    }\n    function Delete(path) {\n        return { type: 'delete', path };\n    }\n    // ---------------------------------------------------------------------\n    // Diff\n    // ---------------------------------------------------------------------\n    function* Object(path, current, next) {\n        if (!is_1.Is.Object(next))\n            return yield Update(path, next);\n        const currentKeys = [...globalThis.Object.keys(current), ...globalThis.Object.getOwnPropertySymbols(current)];\n        const nextKeys = [...globalThis.Object.keys(next), ...globalThis.Object.getOwnPropertySymbols(next)];\n        for (const key of currentKeys) {\n            if (typeof key === 'symbol')\n                throw new ValueDeltaObjectWithSymbolKeyError(key);\n            if (next[key] === undefined && nextKeys.includes(key))\n                yield Update(`${path}/${String(key)}`, undefined);\n        }\n        for (const key of nextKeys) {\n            if (current[key] === undefined || next[key] === undefined)\n                continue;\n            if (typeof key === 'symbol')\n                throw new ValueDeltaObjectWithSymbolKeyError(key);\n            yield* Visit(`${path}/${String(key)}`, current[key], next[key]);\n        }\n        for (const key of nextKeys) {\n            if (typeof key === 'symbol')\n                throw new ValueDeltaObjectWithSymbolKeyError(key);\n            if (current[key] === undefined)\n                yield Insert(`${path}/${String(key)}`, next[key]);\n        }\n        for (const key of currentKeys.reverse()) {\n            if (typeof key === 'symbol')\n                throw new ValueDeltaObjectWithSymbolKeyError(key);\n            if (next[key] === undefined && !nextKeys.includes(key))\n                yield Delete(`${path}/${String(key)}`);\n        }\n    }\n    function* Array(path, current, next) {\n        if (!is_1.Is.Array(next))\n            return yield Update(path, next);\n        for (let i = 0; i < Math.min(current.length, next.length); i++) {\n            yield* Visit(`${path}/${i}`, current[i], next[i]);\n        }\n        for (let i = 0; i < next.length; i++) {\n            if (i < current.length)\n                continue;\n            yield Insert(`${path}/${i}`, next[i]);\n        }\n        for (let i = current.length - 1; i >= 0; i--) {\n            if (i < next.length)\n                continue;\n            yield Delete(`${path}/${i}`);\n        }\n    }\n    function* TypedArray(path, current, next) {\n        if (!is_1.Is.TypedArray(next) || current.length !== next.length || globalThis.Object.getPrototypeOf(current).constructor.name !== globalThis.Object.getPrototypeOf(next).constructor.name)\n            return yield Update(path, next);\n        for (let i = 0; i < Math.min(current.length, next.length); i++) {\n            yield* Visit(`${path}/${i}`, current[i], next[i]);\n        }\n    }\n    function* Value(path, current, next) {\n        if (current === next)\n            return;\n        yield Update(path, next);\n    }\n    function* Visit(path, current, next) {\n        if (is_1.Is.Object(current)) {\n            return yield* Object(path, current, next);\n        }\n        else if (is_1.Is.Array(current)) {\n            return yield* Array(path, current, next);\n        }\n        else if (is_1.Is.TypedArray(current)) {\n            return yield* TypedArray(path, current, next);\n        }\n        else if (is_1.Is.Value(current)) {\n            return yield* Value(path, current, next);\n        }\n        else {\n            throw new ValueDeltaUnableToDiffUnknownValue(current);\n        }\n    }\n    function Diff(current, next) {\n        return [...Visit('', current, next)];\n    }\n    ValueDelta.Diff = Diff;\n    // ---------------------------------------------------------------------\n    // Patch\n    // ---------------------------------------------------------------------\n    function IsRootUpdate(edits) {\n        return edits.length > 0 && edits[0].path === '' && edits[0].type === 'update';\n    }\n    function IsIdentity(edits) {\n        return edits.length === 0;\n    }\n    function Patch(current, edits) {\n        if (IsRootUpdate(edits)) {\n            return clone_1.ValueClone.Clone(edits[0].value);\n        }\n        if (IsIdentity(edits)) {\n            return clone_1.ValueClone.Clone(current);\n        }\n        const clone = clone_1.ValueClone.Clone(current);\n        for (const edit of edits) {\n            switch (edit.type) {\n                case 'insert': {\n                    pointer_1.ValuePointer.Set(clone, edit.path, edit.value);\n                    break;\n                }\n                case 'update': {\n                    pointer_1.ValuePointer.Set(clone, edit.path, edit.value);\n                    break;\n                }\n                case 'delete': {\n                    pointer_1.ValuePointer.Delete(clone, edit.path);\n                    break;\n                }\n            }\n        }\n        return clone;\n    }\n    ValueDelta.Patch = Patch;\n})(ValueDelta = exports.ValueDelta || (exports.ValueDelta = {}));\n"],"mappings":"AAAA,YAAY;;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,UAAU,GAAGF,OAAO,CAACG,kCAAkC,GAAGH,OAAO,CAACI,kCAAkC,GAAGJ,OAAO,CAACK,IAAI,GAAGL,OAAO,CAACM,MAAM,GAAGN,OAAO,CAACO,MAAM,GAAGP,OAAO,CAACQ,MAAM,GAAG,KAAK,CAAC;AACvL,MAAMC,SAAS,GAAGC,OAAO,CAAC,YAAY,CAAC;AACvC,MAAMC,IAAI,GAAGD,OAAO,CAAC,MAAM,CAAC;AAC5B,MAAME,OAAO,GAAGF,OAAO,CAAC,SAAS,CAAC;AAClC,MAAMG,SAAS,GAAGH,OAAO,CAAC,WAAW,CAAC;AACtCV,OAAO,CAACQ,MAAM,GAAGC,SAAS,CAACK,IAAI,CAAChB,MAAM,CAAC;EACnCiB,IAAI,EAAEN,SAAS,CAACK,IAAI,CAACE,OAAO,CAAC,QAAQ,CAAC;EACtCC,IAAI,EAAER,SAAS,CAACK,IAAI,CAACI,MAAM,CAAC,CAAC;EAC7BjB,KAAK,EAAEQ,SAAS,CAACK,IAAI,CAACK,OAAO,CAAC;AAClC,CAAC,CAAC;AACFnB,OAAO,CAACO,MAAM,GAAGE,SAAS,CAACK,IAAI,CAAChB,MAAM,CAAC;EACnCiB,IAAI,EAAEN,SAAS,CAACK,IAAI,CAACE,OAAO,CAAC,QAAQ,CAAC;EACtCC,IAAI,EAAER,SAAS,CAACK,IAAI,CAACI,MAAM,CAAC,CAAC;EAC7BjB,KAAK,EAAEQ,SAAS,CAACK,IAAI,CAACK,OAAO,CAAC;AAClC,CAAC,CAAC;AACFnB,OAAO,CAACM,MAAM,GAAGG,SAAS,CAACK,IAAI,CAAChB,MAAM,CAAC;EACnCiB,IAAI,EAAEN,SAAS,CAACK,IAAI,CAACE,OAAO,CAAC,QAAQ,CAAC;EACtCC,IAAI,EAAER,SAAS,CAACK,IAAI,CAACI,MAAM,CAAC;AAChC,CAAC,CAAC;AACFlB,OAAO,CAACK,IAAI,GAAGI,SAAS,CAACK,IAAI,CAACM,KAAK,CAAC,CAACpB,OAAO,CAACQ,MAAM,EAAER,OAAO,CAACO,MAAM,EAAEP,OAAO,CAACM,MAAM,CAAC,CAAC;AACrF;AACA;AACA;AACA,MAAMF,kCAAkC,SAASiB,KAAK,CAAC;EACnDC,WAAWA,CAACC,GAAG,EAAE;IACb,KAAK,CAAC,kDAAkD,CAAC;IACzD,IAAI,CAACA,GAAG,GAAGA,GAAG;EAClB;AACJ;AACAvB,OAAO,CAACI,kCAAkC,GAAGA,kCAAkC;AAC/E,MAAMD,kCAAkC,SAASkB,KAAK,CAAC;EACnDC,WAAWA,CAACrB,KAAK,EAAE;IACf,KAAK,CAAC,2DAA2D,CAAC;IAClE,IAAI,CAACA,KAAK,GAAGA,KAAK;EACtB;AACJ;AACAD,OAAO,CAACG,kCAAkC,GAAGA,kCAAkC;AAC/E;AACA;AACA;AACA,IAAID,UAAU;AACd,CAAC,UAAUA,UAAU,EAAE;EACnB;EACA;EACA;EACA,SAASK,MAAMA,CAACU,IAAI,EAAEhB,KAAK,EAAE;IACzB,OAAO;MAAEc,IAAI,EAAE,QAAQ;MAAEE,IAAI;MAAEhB;IAAM,CAAC;EAC1C;EACA,SAASO,MAAMA,CAACS,IAAI,EAAEhB,KAAK,EAAE;IACzB,OAAO;MAAEc,IAAI,EAAE,QAAQ;MAAEE,IAAI;MAAEhB;IAAM,CAAC;EAC1C;EACA,SAASK,MAAMA,CAACW,IAAI,EAAE;IAClB,OAAO;MAAEF,IAAI,EAAE,QAAQ;MAAEE;IAAK,CAAC;EACnC;EACA;EACA;EACA;EACA,UAAUnB,MAAMA,CAACmB,IAAI,EAAEO,OAAO,EAAEC,IAAI,EAAE;IAClC,IAAI,CAACd,IAAI,CAACe,EAAE,CAAC5B,MAAM,CAAC2B,IAAI,CAAC,EACrB,OAAO,MAAMlB,MAAM,CAACU,IAAI,EAAEQ,IAAI,CAAC;IACnC,MAAME,WAAW,GAAG,CAAC,GAAGC,UAAU,CAAC9B,MAAM,CAAC+B,IAAI,CAACL,OAAO,CAAC,EAAE,GAAGI,UAAU,CAAC9B,MAAM,CAACgC,qBAAqB,CAACN,OAAO,CAAC,CAAC;IAC7G,MAAMO,QAAQ,GAAG,CAAC,GAAGH,UAAU,CAAC9B,MAAM,CAAC+B,IAAI,CAACJ,IAAI,CAAC,EAAE,GAAGG,UAAU,CAAC9B,MAAM,CAACgC,qBAAqB,CAACL,IAAI,CAAC,CAAC;IACpG,KAAK,MAAMF,GAAG,IAAII,WAAW,EAAE;MAC3B,IAAI,OAAOJ,GAAG,KAAK,QAAQ,EACvB,MAAM,IAAInB,kCAAkC,CAACmB,GAAG,CAAC;MACrD,IAAIE,IAAI,CAACF,GAAG,CAAC,KAAKS,SAAS,IAAID,QAAQ,CAACE,QAAQ,CAACV,GAAG,CAAC,EACjD,MAAMhB,MAAM,CAAE,GAAEU,IAAK,IAAGC,MAAM,CAACK,GAAG,CAAE,EAAC,EAAES,SAAS,CAAC;IACzD;IACA,KAAK,MAAMT,GAAG,IAAIQ,QAAQ,EAAE;MACxB,IAAIP,OAAO,CAACD,GAAG,CAAC,KAAKS,SAAS,IAAIP,IAAI,CAACF,GAAG,CAAC,KAAKS,SAAS,EACrD;MACJ,IAAI,OAAOT,GAAG,KAAK,QAAQ,EACvB,MAAM,IAAInB,kCAAkC,CAACmB,GAAG,CAAC;MACrD,OAAOW,KAAK,CAAE,GAAEjB,IAAK,IAAGC,MAAM,CAACK,GAAG,CAAE,EAAC,EAAEC,OAAO,CAACD,GAAG,CAAC,EAAEE,IAAI,CAACF,GAAG,CAAC,CAAC;IACnE;IACA,KAAK,MAAMA,GAAG,IAAIQ,QAAQ,EAAE;MACxB,IAAI,OAAOR,GAAG,KAAK,QAAQ,EACvB,MAAM,IAAInB,kCAAkC,CAACmB,GAAG,CAAC;MACrD,IAAIC,OAAO,CAACD,GAAG,CAAC,KAAKS,SAAS,EAC1B,MAAMxB,MAAM,CAAE,GAAES,IAAK,IAAGC,MAAM,CAACK,GAAG,CAAE,EAAC,EAAEE,IAAI,CAACF,GAAG,CAAC,CAAC;IACzD;IACA,KAAK,MAAMA,GAAG,IAAII,WAAW,CAACQ,OAAO,CAAC,CAAC,EAAE;MACrC,IAAI,OAAOZ,GAAG,KAAK,QAAQ,EACvB,MAAM,IAAInB,kCAAkC,CAACmB,GAAG,CAAC;MACrD,IAAIE,IAAI,CAACF,GAAG,CAAC,KAAKS,SAAS,IAAI,CAACD,QAAQ,CAACE,QAAQ,CAACV,GAAG,CAAC,EAClD,MAAMjB,MAAM,CAAE,GAAEW,IAAK,IAAGC,MAAM,CAACK,GAAG,CAAE,EAAC,CAAC;IAC9C;EACJ;EACA,UAAUa,KAAKA,CAACnB,IAAI,EAAEO,OAAO,EAAEC,IAAI,EAAE;IACjC,IAAI,CAACd,IAAI,CAACe,EAAE,CAACU,KAAK,CAACX,IAAI,CAAC,EACpB,OAAO,MAAMlB,MAAM,CAACU,IAAI,EAAEQ,IAAI,CAAC;IACnC,KAAK,IAAIY,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGC,IAAI,CAACC,GAAG,CAACf,OAAO,CAACgB,MAAM,EAAEf,IAAI,CAACe,MAAM,CAAC,EAAEH,CAAC,EAAE,EAAE;MAC5D,OAAOH,KAAK,CAAE,GAAEjB,IAAK,IAAGoB,CAAE,EAAC,EAAEb,OAAO,CAACa,CAAC,CAAC,EAAEZ,IAAI,CAACY,CAAC,CAAC,CAAC;IACrD;IACA,KAAK,IAAIA,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGZ,IAAI,CAACe,MAAM,EAAEH,CAAC,EAAE,EAAE;MAClC,IAAIA,CAAC,GAAGb,OAAO,CAACgB,MAAM,EAClB;MACJ,MAAMhC,MAAM,CAAE,GAAES,IAAK,IAAGoB,CAAE,EAAC,EAAEZ,IAAI,CAACY,CAAC,CAAC,CAAC;IACzC;IACA,KAAK,IAAIA,CAAC,GAAGb,OAAO,CAACgB,MAAM,GAAG,CAAC,EAAEH,CAAC,IAAI,CAAC,EAAEA,CAAC,EAAE,EAAE;MAC1C,IAAIA,CAAC,GAAGZ,IAAI,CAACe,MAAM,EACf;MACJ,MAAMlC,MAAM,CAAE,GAAEW,IAAK,IAAGoB,CAAE,EAAC,CAAC;IAChC;EACJ;EACA,UAAUI,UAAUA,CAACxB,IAAI,EAAEO,OAAO,EAAEC,IAAI,EAAE;IACtC,IAAI,CAACd,IAAI,CAACe,EAAE,CAACe,UAAU,CAAChB,IAAI,CAAC,IAAID,OAAO,CAACgB,MAAM,KAAKf,IAAI,CAACe,MAAM,IAAIZ,UAAU,CAAC9B,MAAM,CAAC4C,cAAc,CAAClB,OAAO,CAAC,CAACF,WAAW,CAACqB,IAAI,KAAKf,UAAU,CAAC9B,MAAM,CAAC4C,cAAc,CAACjB,IAAI,CAAC,CAACH,WAAW,CAACqB,IAAI,EACrL,OAAO,MAAMpC,MAAM,CAACU,IAAI,EAAEQ,IAAI,CAAC;IACnC,KAAK,IAAIY,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGC,IAAI,CAACC,GAAG,CAACf,OAAO,CAACgB,MAAM,EAAEf,IAAI,CAACe,MAAM,CAAC,EAAEH,CAAC,EAAE,EAAE;MAC5D,OAAOH,KAAK,CAAE,GAAEjB,IAAK,IAAGoB,CAAE,EAAC,EAAEb,OAAO,CAACa,CAAC,CAAC,EAAEZ,IAAI,CAACY,CAAC,CAAC,CAAC;IACrD;EACJ;EACA,UAAUO,KAAKA,CAAC3B,IAAI,EAAEO,OAAO,EAAEC,IAAI,EAAE;IACjC,IAAID,OAAO,KAAKC,IAAI,EAChB;IACJ,MAAMlB,MAAM,CAACU,IAAI,EAAEQ,IAAI,CAAC;EAC5B;EACA,UAAUS,KAAKA,CAACjB,IAAI,EAAEO,OAAO,EAAEC,IAAI,EAAE;IACjC,IAAId,IAAI,CAACe,EAAE,CAAC5B,MAAM,CAAC0B,OAAO,CAAC,EAAE;MACzB,OAAO,OAAO1B,MAAM,CAACmB,IAAI,EAAEO,OAAO,EAAEC,IAAI,CAAC;IAC7C,CAAC,MACI,IAAId,IAAI,CAACe,EAAE,CAACU,KAAK,CAACZ,OAAO,CAAC,EAAE;MAC7B,OAAO,OAAOY,KAAK,CAACnB,IAAI,EAAEO,OAAO,EAAEC,IAAI,CAAC;IAC5C,CAAC,MACI,IAAId,IAAI,CAACe,EAAE,CAACe,UAAU,CAACjB,OAAO,CAAC,EAAE;MAClC,OAAO,OAAOiB,UAAU,CAACxB,IAAI,EAAEO,OAAO,EAAEC,IAAI,CAAC;IACjD,CAAC,MACI,IAAId,IAAI,CAACe,EAAE,CAACkB,KAAK,CAACpB,OAAO,CAAC,EAAE;MAC7B,OAAO,OAAOoB,KAAK,CAAC3B,IAAI,EAAEO,OAAO,EAAEC,IAAI,CAAC;IAC5C,CAAC,MACI;MACD,MAAM,IAAItB,kCAAkC,CAACqB,OAAO,CAAC;IACzD;EACJ;EACA,SAASqB,IAAIA,CAACrB,OAAO,EAAEC,IAAI,EAAE;IACzB,OAAO,CAAC,GAAGS,KAAK,CAAC,EAAE,EAAEV,OAAO,EAAEC,IAAI,CAAC,CAAC;EACxC;EACAvB,UAAU,CAAC2C,IAAI,GAAGA,IAAI;EACtB;EACA;EACA;EACA,SAASC,YAAYA,CAACC,KAAK,EAAE;IACzB,OAAOA,KAAK,CAACP,MAAM,GAAG,CAAC,IAAIO,KAAK,CAAC,CAAC,CAAC,CAAC9B,IAAI,KAAK,EAAE,IAAI8B,KAAK,CAAC,CAAC,CAAC,CAAChC,IAAI,KAAK,QAAQ;EACjF;EACA,SAASiC,UAAUA,CAACD,KAAK,EAAE;IACvB,OAAOA,KAAK,CAACP,MAAM,KAAK,CAAC;EAC7B;EACA,SAASS,KAAKA,CAACzB,OAAO,EAAEuB,KAAK,EAAE;IAC3B,IAAID,YAAY,CAACC,KAAK,CAAC,EAAE;MACrB,OAAOnC,OAAO,CAACsC,UAAU,CAACC,KAAK,CAACJ,KAAK,CAAC,CAAC,CAAC,CAAC9C,KAAK,CAAC;IACnD;IACA,IAAI+C,UAAU,CAACD,KAAK,CAAC,EAAE;MACnB,OAAOnC,OAAO,CAACsC,UAAU,CAACC,KAAK,CAAC3B,OAAO,CAAC;IAC5C;IACA,MAAM4B,KAAK,GAAGxC,OAAO,CAACsC,UAAU,CAACC,KAAK,CAAC3B,OAAO,CAAC;IAC/C,KAAK,MAAM6B,IAAI,IAAIN,KAAK,EAAE;MACtB,QAAQM,IAAI,CAACtC,IAAI;QACb,KAAK,QAAQ;UAAE;YACXF,SAAS,CAACyC,YAAY,CAACC,GAAG,CAACH,KAAK,EAAEC,IAAI,CAACpC,IAAI,EAAEoC,IAAI,CAACpD,KAAK,CAAC;YACxD;UACJ;QACA,KAAK,QAAQ;UAAE;YACXY,SAAS,CAACyC,YAAY,CAACC,GAAG,CAACH,KAAK,EAAEC,IAAI,CAACpC,IAAI,EAAEoC,IAAI,CAACpD,KAAK,CAAC;YACxD;UACJ;QACA,KAAK,QAAQ;UAAE;YACXY,SAAS,CAACyC,YAAY,CAAChD,MAAM,CAAC8C,KAAK,EAAEC,IAAI,CAACpC,IAAI,CAAC;YAC/C;UACJ;MACJ;IACJ;IACA,OAAOmC,KAAK;EAChB;EACAlD,UAAU,CAAC+C,KAAK,GAAGA,KAAK;AAC5B,CAAC,EAAE/C,UAAU,GAAGF,OAAO,CAACE,UAAU,KAAKF,OAAO,CAACE,UAAU,GAAG,CAAC,CAAC,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}