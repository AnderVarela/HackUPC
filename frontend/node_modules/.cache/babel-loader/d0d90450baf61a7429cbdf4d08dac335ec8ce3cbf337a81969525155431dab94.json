{"ast":null,"code":"var Marker = require('../../tokenizer/marker');\nvar Selector = {\n  ADJACENT_SIBLING: '+',\n  DESCENDANT: '>',\n  DOT: '.',\n  HASH: '#',\n  NON_ADJACENT_SIBLING: '~',\n  PSEUDO: ':'\n};\nvar LETTER_PATTERN = /[a-zA-Z]/;\nvar NOT_PREFIX = ':not(';\nvar SEPARATOR_PATTERN = /[\\s,(>~+]/;\nfunction specificity(selector) {\n  var result = [0, 0, 0];\n  var character;\n  var isEscaped;\n  var isSingleQuoted;\n  var isDoubleQuoted;\n  var roundBracketLevel = 0;\n  var couldIntroduceNewTypeSelector;\n  var withinNotPseudoClass = false;\n  var wasPseudoClass = false;\n  var i, l;\n  for (i = 0, l = selector.length; i < l; i++) {\n    character = selector[i];\n    if (isEscaped) {\n      // noop\n    } else if (character == Marker.SINGLE_QUOTE && !isDoubleQuoted && !isSingleQuoted) {\n      isSingleQuoted = true;\n    } else if (character == Marker.SINGLE_QUOTE && !isDoubleQuoted && isSingleQuoted) {\n      isSingleQuoted = false;\n    } else if (character == Marker.DOUBLE_QUOTE && !isDoubleQuoted && !isSingleQuoted) {\n      isDoubleQuoted = true;\n    } else if (character == Marker.DOUBLE_QUOTE && isDoubleQuoted && !isSingleQuoted) {\n      isDoubleQuoted = false;\n    } else if (isSingleQuoted || isDoubleQuoted) {\n      continue;\n    } else if (roundBracketLevel > 0 && !withinNotPseudoClass) {\n      // noop\n    } else if (character == Marker.OPEN_ROUND_BRACKET) {\n      roundBracketLevel++;\n    } else if (character == Marker.CLOSE_ROUND_BRACKET && roundBracketLevel == 1) {\n      roundBracketLevel--;\n      withinNotPseudoClass = false;\n    } else if (character == Marker.CLOSE_ROUND_BRACKET) {\n      roundBracketLevel--;\n    } else if (character == Selector.HASH) {\n      result[0]++;\n    } else if (character == Selector.DOT || character == Marker.OPEN_SQUARE_BRACKET) {\n      result[1]++;\n    } else if (character == Selector.PSEUDO && !wasPseudoClass && !isNotPseudoClass(selector, i)) {\n      result[1]++;\n      withinNotPseudoClass = false;\n    } else if (character == Selector.PSEUDO) {\n      withinNotPseudoClass = true;\n    } else if ((i === 0 || couldIntroduceNewTypeSelector) && LETTER_PATTERN.test(character)) {\n      result[2]++;\n    }\n    isEscaped = character == Marker.BACK_SLASH;\n    wasPseudoClass = character == Selector.PSEUDO;\n    couldIntroduceNewTypeSelector = !isEscaped && SEPARATOR_PATTERN.test(character);\n  }\n  return result;\n}\nfunction isNotPseudoClass(selector, index) {\n  return selector.indexOf(NOT_PREFIX, index) === index;\n}\nmodule.exports = specificity;","map":{"version":3,"names":["Marker","require","Selector","ADJACENT_SIBLING","DESCENDANT","DOT","HASH","NON_ADJACENT_SIBLING","PSEUDO","LETTER_PATTERN","NOT_PREFIX","SEPARATOR_PATTERN","specificity","selector","result","character","isEscaped","isSingleQuoted","isDoubleQuoted","roundBracketLevel","couldIntroduceNewTypeSelector","withinNotPseudoClass","wasPseudoClass","i","l","length","SINGLE_QUOTE","DOUBLE_QUOTE","OPEN_ROUND_BRACKET","CLOSE_ROUND_BRACKET","OPEN_SQUARE_BRACKET","isNotPseudoClass","test","BACK_SLASH","index","indexOf","module","exports"],"sources":["C:/Users/chest/OneDrive/Documentos/GitHub/HackUPC/frontend/node_modules/clean-css/lib/optimizer/level-2/specificity.js"],"sourcesContent":["var Marker = require('../../tokenizer/marker');\n\nvar Selector = {\n  ADJACENT_SIBLING: '+',\n  DESCENDANT: '>',\n  DOT: '.',\n  HASH: '#',\n  NON_ADJACENT_SIBLING: '~',\n  PSEUDO: ':'\n};\n\nvar LETTER_PATTERN = /[a-zA-Z]/;\nvar NOT_PREFIX = ':not(';\nvar SEPARATOR_PATTERN = /[\\s,(>~+]/;\n\nfunction specificity(selector) {\n  var result = [0, 0, 0];\n  var character;\n  var isEscaped;\n  var isSingleQuoted;\n  var isDoubleQuoted;\n  var roundBracketLevel = 0;\n  var couldIntroduceNewTypeSelector;\n  var withinNotPseudoClass = false;\n  var wasPseudoClass = false;\n  var i, l;\n\n  for (i = 0, l = selector.length; i < l; i++) {\n    character = selector[i];\n\n    if (isEscaped) {\n      // noop\n    } else if (character == Marker.SINGLE_QUOTE && !isDoubleQuoted && !isSingleQuoted) {\n      isSingleQuoted = true;\n    } else if (character == Marker.SINGLE_QUOTE && !isDoubleQuoted && isSingleQuoted) {\n      isSingleQuoted = false;\n    } else if (character == Marker.DOUBLE_QUOTE && !isDoubleQuoted && !isSingleQuoted) {\n      isDoubleQuoted = true;\n    } else if (character == Marker.DOUBLE_QUOTE && isDoubleQuoted && !isSingleQuoted) {\n      isDoubleQuoted = false;\n    } else if (isSingleQuoted || isDoubleQuoted) {\n      continue;\n    } else if (roundBracketLevel > 0 && !withinNotPseudoClass) {\n      // noop\n    } else if (character == Marker.OPEN_ROUND_BRACKET) {\n      roundBracketLevel++;\n    } else if (character == Marker.CLOSE_ROUND_BRACKET && roundBracketLevel == 1) {\n      roundBracketLevel--;\n      withinNotPseudoClass = false;\n    } else if (character == Marker.CLOSE_ROUND_BRACKET) {\n      roundBracketLevel--;\n    } else if (character == Selector.HASH) {\n      result[0]++;\n    } else if (character == Selector.DOT || character == Marker.OPEN_SQUARE_BRACKET) {\n      result[1]++;\n    } else if (character == Selector.PSEUDO && !wasPseudoClass && !isNotPseudoClass(selector, i)) {\n      result[1]++;\n      withinNotPseudoClass = false;\n    } else if (character == Selector.PSEUDO) {\n      withinNotPseudoClass = true;\n    } else if ((i === 0 || couldIntroduceNewTypeSelector) && LETTER_PATTERN.test(character)) {\n      result[2]++;\n    }\n\n    isEscaped = character == Marker.BACK_SLASH;\n    wasPseudoClass = character == Selector.PSEUDO;\n    couldIntroduceNewTypeSelector = !isEscaped && SEPARATOR_PATTERN.test(character);\n  }\n\n  return result;\n}\n\nfunction isNotPseudoClass(selector, index) {\n  return selector.indexOf(NOT_PREFIX, index) === index;\n}\n\nmodule.exports = specificity;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}