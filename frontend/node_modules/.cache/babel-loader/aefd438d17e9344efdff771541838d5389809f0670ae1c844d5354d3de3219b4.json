{"ast":null,"code":"import * as encoder from \"./encoder\";\nexport function encodeNode(n) {\n  switch (n.type) {\n    case \"ModuleImport\":\n      // $FlowIgnore: ModuleImport ensure that the node is well formated\n      return encoder.encodeModuleImport(n);\n    case \"SectionMetadata\":\n      // $FlowIgnore: SectionMetadata ensure that the node is well formated\n      return encoder.encodeSectionMetadata(n);\n    case \"CallInstruction\":\n      // $FlowIgnore: SectionMetadata ensure that the node is well formated\n      return encoder.encodeCallInstruction(n);\n    case \"CallIndirectInstruction\":\n      // $FlowIgnore: SectionMetadata ensure that the node is well formated\n      return encoder.encodeCallIndirectInstruction(n);\n    case \"TypeInstruction\":\n      return encoder.encodeTypeInstruction(n);\n    case \"Instr\":\n      // $FlowIgnore\n      return encoder.encodeInstr(n);\n    case \"ModuleExport\":\n      // $FlowIgnore: SectionMetadata ensure that the node is well formated\n      return encoder.encodeModuleExport(n);\n    case \"Global\":\n      // $FlowIgnore\n      return encoder.encodeGlobal(n);\n    case \"Func\":\n      return encoder.encodeFuncBody(n);\n    case \"IndexInFuncSection\":\n      return encoder.encodeIndexInFuncSection(n);\n    case \"StringLiteral\":\n      return encoder.encodeStringLiteral(n);\n    case \"Elem\":\n      return encoder.encodeElem(n);\n    default:\n      throw new Error(\"Unsupported encoding for node of type: \" + JSON.stringify(n.type));\n  }\n}\nexport var encodeU32 = encoder.encodeU32;","map":{"version":3,"names":["encoder","encodeNode","n","type","encodeModuleImport","encodeSectionMetadata","encodeCallInstruction","encodeCallIndirectInstruction","encodeTypeInstruction","encodeInstr","encodeModuleExport","encodeGlobal","encodeFuncBody","encodeIndexInFuncSection","encodeStringLiteral","encodeElem","Error","JSON","stringify","encodeU32"],"sources":["C:/Users/chest/OneDrive/Documentos/GitHub/HackUPC/frontend/node_modules/@webassemblyjs/wasm-gen/esm/index.js"],"sourcesContent":["import * as encoder from \"./encoder\";\nexport function encodeNode(n) {\n  switch (n.type) {\n    case \"ModuleImport\":\n      // $FlowIgnore: ModuleImport ensure that the node is well formated\n      return encoder.encodeModuleImport(n);\n\n    case \"SectionMetadata\":\n      // $FlowIgnore: SectionMetadata ensure that the node is well formated\n      return encoder.encodeSectionMetadata(n);\n\n    case \"CallInstruction\":\n      // $FlowIgnore: SectionMetadata ensure that the node is well formated\n      return encoder.encodeCallInstruction(n);\n\n    case \"CallIndirectInstruction\":\n      // $FlowIgnore: SectionMetadata ensure that the node is well formated\n      return encoder.encodeCallIndirectInstruction(n);\n\n    case \"TypeInstruction\":\n      return encoder.encodeTypeInstruction(n);\n\n    case \"Instr\":\n      // $FlowIgnore\n      return encoder.encodeInstr(n);\n\n    case \"ModuleExport\":\n      // $FlowIgnore: SectionMetadata ensure that the node is well formated\n      return encoder.encodeModuleExport(n);\n\n    case \"Global\":\n      // $FlowIgnore\n      return encoder.encodeGlobal(n);\n\n    case \"Func\":\n      return encoder.encodeFuncBody(n);\n\n    case \"IndexInFuncSection\":\n      return encoder.encodeIndexInFuncSection(n);\n\n    case \"StringLiteral\":\n      return encoder.encodeStringLiteral(n);\n\n    case \"Elem\":\n      return encoder.encodeElem(n);\n\n    default:\n      throw new Error(\"Unsupported encoding for node of type: \" + JSON.stringify(n.type));\n  }\n}\nexport var encodeU32 = encoder.encodeU32;"],"mappings":"AAAA,OAAO,KAAKA,OAAO,MAAM,WAAW;AACpC,OAAO,SAASC,UAAUA,CAACC,CAAC,EAAE;EAC5B,QAAQA,CAAC,CAACC,IAAI;IACZ,KAAK,cAAc;MACjB;MACA,OAAOH,OAAO,CAACI,kBAAkB,CAACF,CAAC,CAAC;IAEtC,KAAK,iBAAiB;MACpB;MACA,OAAOF,OAAO,CAACK,qBAAqB,CAACH,CAAC,CAAC;IAEzC,KAAK,iBAAiB;MACpB;MACA,OAAOF,OAAO,CAACM,qBAAqB,CAACJ,CAAC,CAAC;IAEzC,KAAK,yBAAyB;MAC5B;MACA,OAAOF,OAAO,CAACO,6BAA6B,CAACL,CAAC,CAAC;IAEjD,KAAK,iBAAiB;MACpB,OAAOF,OAAO,CAACQ,qBAAqB,CAACN,CAAC,CAAC;IAEzC,KAAK,OAAO;MACV;MACA,OAAOF,OAAO,CAACS,WAAW,CAACP,CAAC,CAAC;IAE/B,KAAK,cAAc;MACjB;MACA,OAAOF,OAAO,CAACU,kBAAkB,CAACR,CAAC,CAAC;IAEtC,KAAK,QAAQ;MACX;MACA,OAAOF,OAAO,CAACW,YAAY,CAACT,CAAC,CAAC;IAEhC,KAAK,MAAM;MACT,OAAOF,OAAO,CAACY,cAAc,CAACV,CAAC,CAAC;IAElC,KAAK,oBAAoB;MACvB,OAAOF,OAAO,CAACa,wBAAwB,CAACX,CAAC,CAAC;IAE5C,KAAK,eAAe;MAClB,OAAOF,OAAO,CAACc,mBAAmB,CAACZ,CAAC,CAAC;IAEvC,KAAK,MAAM;MACT,OAAOF,OAAO,CAACe,UAAU,CAACb,CAAC,CAAC;IAE9B;MACE,MAAM,IAAIc,KAAK,CAAC,yCAAyC,GAAGC,IAAI,CAACC,SAAS,CAAChB,CAAC,CAACC,IAAI,CAAC,CAAC;EACvF;AACF;AACA,OAAO,IAAIgB,SAAS,GAAGnB,OAAO,CAACmB,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}