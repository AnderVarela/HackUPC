{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.default = void 0;\nfunction _util() {\n  const data = _interopRequireDefault(require('util'));\n  _util = function () {\n    return data;\n  };\n  return data;\n}\nfunction _jestMessageUtil() {\n  const data = require('jest-message-util');\n  _jestMessageUtil = function () {\n    return data;\n  };\n  return data;\n}\nfunction _jestUtil() {\n  const data = require('jest-util');\n  _jestUtil = function () {\n    return data;\n  };\n  return data;\n}\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nconst MS_IN_A_YEAR = 31536000000;\nclass FakeTimers {\n  constructor({\n    global,\n    moduleMocker,\n    timerConfig,\n    config,\n    maxLoops\n  }) {\n    _defineProperty(this, '_cancelledTicks', void 0);\n    _defineProperty(this, '_config', void 0);\n    _defineProperty(this, '_disposed', void 0);\n    _defineProperty(this, '_fakeTimerAPIs', void 0);\n    _defineProperty(this, '_global', void 0);\n    _defineProperty(this, '_immediates', void 0);\n    _defineProperty(this, '_maxLoops', void 0);\n    _defineProperty(this, '_moduleMocker', void 0);\n    _defineProperty(this, '_now', void 0);\n    _defineProperty(this, '_ticks', void 0);\n    _defineProperty(this, '_timerAPIs', void 0);\n    _defineProperty(this, '_timers', void 0);\n    _defineProperty(this, '_uuidCounter', void 0);\n    _defineProperty(this, '_timerConfig', void 0);\n    this._global = global;\n    this._timerConfig = timerConfig;\n    this._config = config;\n    this._maxLoops = maxLoops || 100000;\n    this._uuidCounter = 1;\n    this._moduleMocker = moduleMocker; // Store original timer APIs for future reference\n\n    this._timerAPIs = {\n      cancelAnimationFrame: global.cancelAnimationFrame,\n      clearImmediate: global.clearImmediate,\n      clearInterval: global.clearInterval,\n      clearTimeout: global.clearTimeout,\n      nextTick: global.process && global.process.nextTick,\n      requestAnimationFrame: global.requestAnimationFrame,\n      setImmediate: global.setImmediate,\n      setInterval: global.setInterval,\n      setTimeout: global.setTimeout\n    };\n    this.reset();\n  }\n  clearAllTimers() {\n    this._immediates = [];\n    this._timers.clear();\n  }\n  dispose() {\n    this._disposed = true;\n    this.clearAllTimers();\n  }\n  reset() {\n    this._cancelledTicks = {};\n    this._now = 0;\n    this._ticks = [];\n    this._immediates = [];\n    this._timers = new Map();\n  }\n  runAllTicks() {\n    this._checkFakeTimers(); // Only run a generous number of ticks and then bail.\n    // This is just to help avoid recursive loops\n\n    let i;\n    for (i = 0; i < this._maxLoops; i++) {\n      const tick = this._ticks.shift();\n      if (tick === undefined) {\n        break;\n      }\n      if (!this._cancelledTicks.hasOwnProperty(tick.uuid)) {\n        // Callback may throw, so update the map prior calling.\n        this._cancelledTicks[tick.uuid] = true;\n        tick.callback();\n      }\n    }\n    if (i === this._maxLoops) {\n      throw new Error('Ran ' + this._maxLoops + ' ticks, and there are still more! ' + \"Assuming we've hit an infinite recursion and bailing out...\");\n    }\n  }\n  runAllImmediates() {\n    this._checkFakeTimers(); // Only run a generous number of immediates and then bail.\n\n    let i;\n    for (i = 0; i < this._maxLoops; i++) {\n      const immediate = this._immediates.shift();\n      if (immediate === undefined) {\n        break;\n      }\n      this._runImmediate(immediate);\n    }\n    if (i === this._maxLoops) {\n      throw new Error('Ran ' + this._maxLoops + ' immediates, and there are still more! Assuming ' + \"we've hit an infinite recursion and bailing out...\");\n    }\n  }\n  _runImmediate(immediate) {\n    try {\n      immediate.callback();\n    } finally {\n      this._fakeClearImmediate(immediate.uuid);\n    }\n  }\n  runAllTimers() {\n    this._checkFakeTimers();\n    this.runAllTicks();\n    this.runAllImmediates(); // Only run a generous number of timers and then bail.\n    // This is just to help avoid recursive loops\n\n    let i;\n    for (i = 0; i < this._maxLoops; i++) {\n      const nextTimerHandle = this._getNextTimerHandle(); // If there are no more timer handles, stop!\n\n      if (nextTimerHandle === null) {\n        break;\n      }\n      this._runTimerHandle(nextTimerHandle); // Some of the immediate calls could be enqueued\n      // during the previous handling of the timers, we should\n      // run them as well.\n\n      if (this._immediates.length) {\n        this.runAllImmediates();\n      }\n      if (this._ticks.length) {\n        this.runAllTicks();\n      }\n    }\n    if (i === this._maxLoops) {\n      throw new Error('Ran ' + this._maxLoops + ' timers, and there are still more! ' + \"Assuming we've hit an infinite recursion and bailing out...\");\n    }\n  }\n  runOnlyPendingTimers() {\n    // We need to hold the current shape of `this._timers` because existing\n    // timers can add new ones to the map and hence would run more than necessary.\n    // See https://github.com/facebook/jest/pull/4608 for details\n    const timerEntries = Array.from(this._timers.entries());\n    this._checkFakeTimers();\n    this._immediates.forEach(this._runImmediate, this);\n    timerEntries.sort(([, left], [, right]) => left.expiry - right.expiry).forEach(([timerHandle]) => this._runTimerHandle(timerHandle));\n  }\n  advanceTimersToNextTimer(steps = 1) {\n    if (steps < 1) {\n      return;\n    }\n    const nextExpiry = Array.from(this._timers.values()).reduce((minExpiry, timer) => {\n      if (minExpiry === null || timer.expiry < minExpiry) return timer.expiry;\n      return minExpiry;\n    }, null);\n    if (nextExpiry !== null) {\n      this.advanceTimersByTime(nextExpiry - this._now);\n      this.advanceTimersToNextTimer(steps - 1);\n    }\n  }\n  advanceTimersByTime(msToRun) {\n    this._checkFakeTimers(); // Only run a generous number of timers and then bail.\n    // This is just to help avoid recursive loops\n\n    let i;\n    for (i = 0; i < this._maxLoops; i++) {\n      const timerHandle = this._getNextTimerHandle(); // If there are no more timer handles, stop!\n\n      if (timerHandle === null) {\n        break;\n      }\n      const timerValue = this._timers.get(timerHandle);\n      if (timerValue === undefined) {\n        break;\n      }\n      const nextTimerExpiry = timerValue.expiry;\n      if (this._now + msToRun < nextTimerExpiry) {\n        // There are no timers between now and the target we're running to, so\n        // adjust our time cursor and quit\n        this._now += msToRun;\n        break;\n      } else {\n        msToRun -= nextTimerExpiry - this._now;\n        this._now = nextTimerExpiry;\n        this._runTimerHandle(timerHandle);\n      }\n    }\n    if (i === this._maxLoops) {\n      throw new Error('Ran ' + this._maxLoops + ' timers, and there are still more! ' + \"Assuming we've hit an infinite recursion and bailing out...\");\n    }\n  }\n  runWithRealTimers(cb) {\n    const prevClearImmediate = this._global.clearImmediate;\n    const prevClearInterval = this._global.clearInterval;\n    const prevClearTimeout = this._global.clearTimeout;\n    const prevNextTick = this._global.process.nextTick;\n    const prevSetImmediate = this._global.setImmediate;\n    const prevSetInterval = this._global.setInterval;\n    const prevSetTimeout = this._global.setTimeout;\n    this.useRealTimers();\n    let cbErr = null;\n    let errThrown = false;\n    try {\n      cb();\n    } catch (e) {\n      errThrown = true;\n      cbErr = e;\n    }\n    this._global.clearImmediate = prevClearImmediate;\n    this._global.clearInterval = prevClearInterval;\n    this._global.clearTimeout = prevClearTimeout;\n    this._global.process.nextTick = prevNextTick;\n    this._global.setImmediate = prevSetImmediate;\n    this._global.setInterval = prevSetInterval;\n    this._global.setTimeout = prevSetTimeout;\n    if (errThrown) {\n      throw cbErr;\n    }\n  }\n  useRealTimers() {\n    const global = this._global;\n    if (typeof global.cancelAnimationFrame === 'function') {\n      (0, _jestUtil().setGlobal)(global, 'cancelAnimationFrame', this._timerAPIs.cancelAnimationFrame);\n    }\n    if (typeof global.clearImmediate === 'function') {\n      (0, _jestUtil().setGlobal)(global, 'clearImmediate', this._timerAPIs.clearImmediate);\n    }\n    (0, _jestUtil().setGlobal)(global, 'clearInterval', this._timerAPIs.clearInterval);\n    (0, _jestUtil().setGlobal)(global, 'clearTimeout', this._timerAPIs.clearTimeout);\n    if (typeof global.requestAnimationFrame === 'function') {\n      (0, _jestUtil().setGlobal)(global, 'requestAnimationFrame', this._timerAPIs.requestAnimationFrame);\n    }\n    if (typeof global.setImmediate === 'function') {\n      (0, _jestUtil().setGlobal)(global, 'setImmediate', this._timerAPIs.setImmediate);\n    }\n    (0, _jestUtil().setGlobal)(global, 'setInterval', this._timerAPIs.setInterval);\n    (0, _jestUtil().setGlobal)(global, 'setTimeout', this._timerAPIs.setTimeout);\n    global.process.nextTick = this._timerAPIs.nextTick;\n  }\n  useFakeTimers() {\n    this._createMocks();\n    const global = this._global;\n    if (typeof global.cancelAnimationFrame === 'function') {\n      (0, _jestUtil().setGlobal)(global, 'cancelAnimationFrame', this._fakeTimerAPIs.cancelAnimationFrame);\n    }\n    if (typeof global.clearImmediate === 'function') {\n      (0, _jestUtil().setGlobal)(global, 'clearImmediate', this._fakeTimerAPIs.clearImmediate);\n    }\n    (0, _jestUtil().setGlobal)(global, 'clearInterval', this._fakeTimerAPIs.clearInterval);\n    (0, _jestUtil().setGlobal)(global, 'clearTimeout', this._fakeTimerAPIs.clearTimeout);\n    if (typeof global.requestAnimationFrame === 'function') {\n      (0, _jestUtil().setGlobal)(global, 'requestAnimationFrame', this._fakeTimerAPIs.requestAnimationFrame);\n    }\n    if (typeof global.setImmediate === 'function') {\n      (0, _jestUtil().setGlobal)(global, 'setImmediate', this._fakeTimerAPIs.setImmediate);\n    }\n    (0, _jestUtil().setGlobal)(global, 'setInterval', this._fakeTimerAPIs.setInterval);\n    (0, _jestUtil().setGlobal)(global, 'setTimeout', this._fakeTimerAPIs.setTimeout);\n    global.process.nextTick = this._fakeTimerAPIs.nextTick;\n  }\n  getTimerCount() {\n    this._checkFakeTimers();\n    return this._timers.size + this._immediates.length + this._ticks.length;\n  }\n  _checkFakeTimers() {\n    var _this$_fakeTimerAPIs;\n    if (this._global.setTimeout !== ((_this$_fakeTimerAPIs = this._fakeTimerAPIs) === null || _this$_fakeTimerAPIs === void 0 ? void 0 : _this$_fakeTimerAPIs.setTimeout)) {\n      this._global.console.warn('A function to advance timers was called but the timers API is not ' + 'mocked with fake timers. Call `jest.useFakeTimers()` in this ' + 'test or enable fake timers globally by setting ' + '`\"timers\": \"fake\"` in ' + 'the configuration file. This warning is likely a result of a ' + 'default configuration change in Jest 15.\\n\\n' + 'Release Blog Post: https://jestjs.io/blog/2016/09/01/jest-15\\n' + 'Stack Trace:\\n' + (0, _jestMessageUtil().formatStackTrace)(new Error().stack, this._config, {\n        noStackTrace: false\n      }));\n    }\n  }\n  _createMocks() {\n    const fn = (impl // @ts-expect-error TODO: figure out better typings here\n    ) => this._moduleMocker.fn().mockImplementation(impl);\n    const promisifiableFakeSetTimeout = fn(this._fakeSetTimeout.bind(this)); // @ts-expect-error TODO: figure out better typings here\n\n    promisifiableFakeSetTimeout[_util().default.promisify.custom] = (delay, arg) => new Promise(resolve => promisifiableFakeSetTimeout(resolve, delay, arg)); // TODO: add better typings; these are mocks, but typed as regular timers\n\n    this._fakeTimerAPIs = {\n      cancelAnimationFrame: fn(this._fakeClearTimer.bind(this)),\n      clearImmediate: fn(this._fakeClearImmediate.bind(this)),\n      clearInterval: fn(this._fakeClearTimer.bind(this)),\n      clearTimeout: fn(this._fakeClearTimer.bind(this)),\n      nextTick: fn(this._fakeNextTick.bind(this)),\n      // @ts-expect-error TODO: figure out better typings here\n      requestAnimationFrame: fn(this._fakeRequestAnimationFrame.bind(this)),\n      // @ts-expect-error TODO: figure out better typings here\n      setImmediate: fn(this._fakeSetImmediate.bind(this)),\n      // @ts-expect-error TODO: figure out better typings here\n      setInterval: fn(this._fakeSetInterval.bind(this)),\n      // @ts-expect-error TODO: figure out better typings here\n      setTimeout: promisifiableFakeSetTimeout\n    };\n  }\n  _fakeClearTimer(timerRef) {\n    const uuid = this._timerConfig.refToId(timerRef);\n    if (uuid) {\n      this._timers.delete(String(uuid));\n    }\n  }\n  _fakeClearImmediate(uuid) {\n    this._immediates = this._immediates.filter(immediate => immediate.uuid !== uuid);\n  }\n  _fakeNextTick(callback, ...args) {\n    if (this._disposed) {\n      return;\n    }\n    const uuid = String(this._uuidCounter++);\n    this._ticks.push({\n      callback: () => callback.apply(null, args),\n      uuid\n    });\n    const cancelledTicks = this._cancelledTicks;\n    this._timerAPIs.nextTick(() => {\n      if (!cancelledTicks.hasOwnProperty(uuid)) {\n        // Callback may throw, so update the map prior calling.\n        cancelledTicks[uuid] = true;\n        callback.apply(null, args);\n      }\n    });\n  }\n  _fakeRequestAnimationFrame(callback) {\n    return this._fakeSetTimeout(() => {\n      // TODO: Use performance.now() once it's mocked\n      callback(this._now);\n    }, 1000 / 60);\n  }\n  _fakeSetImmediate(callback, ...args) {\n    if (this._disposed) {\n      return null;\n    }\n    const uuid = String(this._uuidCounter++);\n    this._immediates.push({\n      callback: () => callback.apply(null, args),\n      uuid\n    });\n    this._timerAPIs.setImmediate(() => {\n      if (this._immediates.find(x => x.uuid === uuid)) {\n        try {\n          callback.apply(null, args);\n        } finally {\n          this._fakeClearImmediate(uuid);\n        }\n      }\n    });\n    return uuid;\n  }\n  _fakeSetInterval(callback, intervalDelay, ...args) {\n    if (this._disposed) {\n      return null;\n    }\n    if (intervalDelay == null) {\n      intervalDelay = 0;\n    }\n    const uuid = this._uuidCounter++;\n    this._timers.set(String(uuid), {\n      callback: () => callback.apply(null, args),\n      expiry: this._now + intervalDelay,\n      interval: intervalDelay,\n      type: 'interval'\n    });\n    return this._timerConfig.idToRef(uuid);\n  }\n  _fakeSetTimeout(callback, delay, ...args) {\n    if (this._disposed) {\n      return null;\n    } // eslint-disable-next-line no-bitwise\n\n    delay = Number(delay) | 0;\n    const uuid = this._uuidCounter++;\n    this._timers.set(String(uuid), {\n      callback: () => callback.apply(null, args),\n      expiry: this._now + delay,\n      interval: undefined,\n      type: 'timeout'\n    });\n    return this._timerConfig.idToRef(uuid);\n  }\n  _getNextTimerHandle() {\n    let nextTimerHandle = null;\n    let soonestTime = MS_IN_A_YEAR;\n    this._timers.forEach((timer, uuid) => {\n      if (timer.expiry < soonestTime) {\n        soonestTime = timer.expiry;\n        nextTimerHandle = uuid;\n      }\n    });\n    return nextTimerHandle;\n  }\n  _runTimerHandle(timerHandle) {\n    const timer = this._timers.get(timerHandle);\n    if (!timer) {\n      return;\n    }\n    switch (timer.type) {\n      case 'timeout':\n        this._timers.delete(timerHandle);\n        timer.callback();\n        break;\n      case 'interval':\n        timer.expiry = this._now + (timer.interval || 0);\n        timer.callback();\n        break;\n      default:\n        throw new Error('Unexpected timer type: ' + timer.type);\n    }\n  }\n}\nexports.default = FakeTimers;","map":{"version":3,"names":["Object","defineProperty","exports","value","default","_util","data","_interopRequireDefault","require","_jestMessageUtil","_jestUtil","obj","__esModule","_defineProperty","key","enumerable","configurable","writable","MS_IN_A_YEAR","FakeTimers","constructor","global","moduleMocker","timerConfig","config","maxLoops","_global","_timerConfig","_config","_maxLoops","_uuidCounter","_moduleMocker","_timerAPIs","cancelAnimationFrame","clearImmediate","clearInterval","clearTimeout","nextTick","process","requestAnimationFrame","setImmediate","setInterval","setTimeout","reset","clearAllTimers","_immediates","_timers","clear","dispose","_disposed","_cancelledTicks","_now","_ticks","Map","runAllTicks","_checkFakeTimers","i","tick","shift","undefined","hasOwnProperty","uuid","callback","Error","runAllImmediates","immediate","_runImmediate","_fakeClearImmediate","runAllTimers","nextTimerHandle","_getNextTimerHandle","_runTimerHandle","length","runOnlyPendingTimers","timerEntries","Array","from","entries","forEach","sort","left","right","expiry","timerHandle","advanceTimersToNextTimer","steps","nextExpiry","values","reduce","minExpiry","timer","advanceTimersByTime","msToRun","timerValue","get","nextTimerExpiry","runWithRealTimers","cb","prevClearImmediate","prevClearInterval","prevClearTimeout","prevNextTick","prevSetImmediate","prevSetInterval","prevSetTimeout","useRealTimers","cbErr","errThrown","e","setGlobal","useFakeTimers","_createMocks","_fakeTimerAPIs","getTimerCount","size","_this$_fakeTimerAPIs","console","warn","formatStackTrace","stack","noStackTrace","fn","impl","mockImplementation","promisifiableFakeSetTimeout","_fakeSetTimeout","bind","promisify","custom","delay","arg","Promise","resolve","_fakeClearTimer","_fakeNextTick","_fakeRequestAnimationFrame","_fakeSetImmediate","_fakeSetInterval","timerRef","refToId","delete","String","filter","args","push","apply","cancelledTicks","find","x","intervalDelay","set","interval","type","idToRef","Number","soonestTime"],"sources":["C:/Users/chest/OneDrive/Documentos/GitHub/HackUPC/frontend/node_modules/@jest/fake-timers/build/legacyFakeTimers.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.default = void 0;\n\nfunction _util() {\n  const data = _interopRequireDefault(require('util'));\n\n  _util = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _jestMessageUtil() {\n  const data = require('jest-message-util');\n\n  _jestMessageUtil = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _jestUtil() {\n  const data = require('jest-util');\n\n  _jestUtil = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {default: obj};\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\n\nconst MS_IN_A_YEAR = 31536000000;\n\nclass FakeTimers {\n  constructor({global, moduleMocker, timerConfig, config, maxLoops}) {\n    _defineProperty(this, '_cancelledTicks', void 0);\n\n    _defineProperty(this, '_config', void 0);\n\n    _defineProperty(this, '_disposed', void 0);\n\n    _defineProperty(this, '_fakeTimerAPIs', void 0);\n\n    _defineProperty(this, '_global', void 0);\n\n    _defineProperty(this, '_immediates', void 0);\n\n    _defineProperty(this, '_maxLoops', void 0);\n\n    _defineProperty(this, '_moduleMocker', void 0);\n\n    _defineProperty(this, '_now', void 0);\n\n    _defineProperty(this, '_ticks', void 0);\n\n    _defineProperty(this, '_timerAPIs', void 0);\n\n    _defineProperty(this, '_timers', void 0);\n\n    _defineProperty(this, '_uuidCounter', void 0);\n\n    _defineProperty(this, '_timerConfig', void 0);\n\n    this._global = global;\n    this._timerConfig = timerConfig;\n    this._config = config;\n    this._maxLoops = maxLoops || 100000;\n    this._uuidCounter = 1;\n    this._moduleMocker = moduleMocker; // Store original timer APIs for future reference\n\n    this._timerAPIs = {\n      cancelAnimationFrame: global.cancelAnimationFrame,\n      clearImmediate: global.clearImmediate,\n      clearInterval: global.clearInterval,\n      clearTimeout: global.clearTimeout,\n      nextTick: global.process && global.process.nextTick,\n      requestAnimationFrame: global.requestAnimationFrame,\n      setImmediate: global.setImmediate,\n      setInterval: global.setInterval,\n      setTimeout: global.setTimeout\n    };\n    this.reset();\n  }\n\n  clearAllTimers() {\n    this._immediates = [];\n\n    this._timers.clear();\n  }\n\n  dispose() {\n    this._disposed = true;\n    this.clearAllTimers();\n  }\n\n  reset() {\n    this._cancelledTicks = {};\n    this._now = 0;\n    this._ticks = [];\n    this._immediates = [];\n    this._timers = new Map();\n  }\n\n  runAllTicks() {\n    this._checkFakeTimers(); // Only run a generous number of ticks and then bail.\n    // This is just to help avoid recursive loops\n\n    let i;\n\n    for (i = 0; i < this._maxLoops; i++) {\n      const tick = this._ticks.shift();\n\n      if (tick === undefined) {\n        break;\n      }\n\n      if (!this._cancelledTicks.hasOwnProperty(tick.uuid)) {\n        // Callback may throw, so update the map prior calling.\n        this._cancelledTicks[tick.uuid] = true;\n        tick.callback();\n      }\n    }\n\n    if (i === this._maxLoops) {\n      throw new Error(\n        'Ran ' +\n          this._maxLoops +\n          ' ticks, and there are still more! ' +\n          \"Assuming we've hit an infinite recursion and bailing out...\"\n      );\n    }\n  }\n\n  runAllImmediates() {\n    this._checkFakeTimers(); // Only run a generous number of immediates and then bail.\n\n    let i;\n\n    for (i = 0; i < this._maxLoops; i++) {\n      const immediate = this._immediates.shift();\n\n      if (immediate === undefined) {\n        break;\n      }\n\n      this._runImmediate(immediate);\n    }\n\n    if (i === this._maxLoops) {\n      throw new Error(\n        'Ran ' +\n          this._maxLoops +\n          ' immediates, and there are still more! Assuming ' +\n          \"we've hit an infinite recursion and bailing out...\"\n      );\n    }\n  }\n\n  _runImmediate(immediate) {\n    try {\n      immediate.callback();\n    } finally {\n      this._fakeClearImmediate(immediate.uuid);\n    }\n  }\n\n  runAllTimers() {\n    this._checkFakeTimers();\n\n    this.runAllTicks();\n    this.runAllImmediates(); // Only run a generous number of timers and then bail.\n    // This is just to help avoid recursive loops\n\n    let i;\n\n    for (i = 0; i < this._maxLoops; i++) {\n      const nextTimerHandle = this._getNextTimerHandle(); // If there are no more timer handles, stop!\n\n      if (nextTimerHandle === null) {\n        break;\n      }\n\n      this._runTimerHandle(nextTimerHandle); // Some of the immediate calls could be enqueued\n      // during the previous handling of the timers, we should\n      // run them as well.\n\n      if (this._immediates.length) {\n        this.runAllImmediates();\n      }\n\n      if (this._ticks.length) {\n        this.runAllTicks();\n      }\n    }\n\n    if (i === this._maxLoops) {\n      throw new Error(\n        'Ran ' +\n          this._maxLoops +\n          ' timers, and there are still more! ' +\n          \"Assuming we've hit an infinite recursion and bailing out...\"\n      );\n    }\n  }\n\n  runOnlyPendingTimers() {\n    // We need to hold the current shape of `this._timers` because existing\n    // timers can add new ones to the map and hence would run more than necessary.\n    // See https://github.com/facebook/jest/pull/4608 for details\n    const timerEntries = Array.from(this._timers.entries());\n\n    this._checkFakeTimers();\n\n    this._immediates.forEach(this._runImmediate, this);\n\n    timerEntries\n      .sort(([, left], [, right]) => left.expiry - right.expiry)\n      .forEach(([timerHandle]) => this._runTimerHandle(timerHandle));\n  }\n\n  advanceTimersToNextTimer(steps = 1) {\n    if (steps < 1) {\n      return;\n    }\n\n    const nextExpiry = Array.from(this._timers.values()).reduce(\n      (minExpiry, timer) => {\n        if (minExpiry === null || timer.expiry < minExpiry) return timer.expiry;\n        return minExpiry;\n      },\n      null\n    );\n\n    if (nextExpiry !== null) {\n      this.advanceTimersByTime(nextExpiry - this._now);\n      this.advanceTimersToNextTimer(steps - 1);\n    }\n  }\n\n  advanceTimersByTime(msToRun) {\n    this._checkFakeTimers(); // Only run a generous number of timers and then bail.\n    // This is just to help avoid recursive loops\n\n    let i;\n\n    for (i = 0; i < this._maxLoops; i++) {\n      const timerHandle = this._getNextTimerHandle(); // If there are no more timer handles, stop!\n\n      if (timerHandle === null) {\n        break;\n      }\n\n      const timerValue = this._timers.get(timerHandle);\n\n      if (timerValue === undefined) {\n        break;\n      }\n\n      const nextTimerExpiry = timerValue.expiry;\n\n      if (this._now + msToRun < nextTimerExpiry) {\n        // There are no timers between now and the target we're running to, so\n        // adjust our time cursor and quit\n        this._now += msToRun;\n        break;\n      } else {\n        msToRun -= nextTimerExpiry - this._now;\n        this._now = nextTimerExpiry;\n\n        this._runTimerHandle(timerHandle);\n      }\n    }\n\n    if (i === this._maxLoops) {\n      throw new Error(\n        'Ran ' +\n          this._maxLoops +\n          ' timers, and there are still more! ' +\n          \"Assuming we've hit an infinite recursion and bailing out...\"\n      );\n    }\n  }\n\n  runWithRealTimers(cb) {\n    const prevClearImmediate = this._global.clearImmediate;\n    const prevClearInterval = this._global.clearInterval;\n    const prevClearTimeout = this._global.clearTimeout;\n    const prevNextTick = this._global.process.nextTick;\n    const prevSetImmediate = this._global.setImmediate;\n    const prevSetInterval = this._global.setInterval;\n    const prevSetTimeout = this._global.setTimeout;\n    this.useRealTimers();\n    let cbErr = null;\n    let errThrown = false;\n\n    try {\n      cb();\n    } catch (e) {\n      errThrown = true;\n      cbErr = e;\n    }\n\n    this._global.clearImmediate = prevClearImmediate;\n    this._global.clearInterval = prevClearInterval;\n    this._global.clearTimeout = prevClearTimeout;\n    this._global.process.nextTick = prevNextTick;\n    this._global.setImmediate = prevSetImmediate;\n    this._global.setInterval = prevSetInterval;\n    this._global.setTimeout = prevSetTimeout;\n\n    if (errThrown) {\n      throw cbErr;\n    }\n  }\n\n  useRealTimers() {\n    const global = this._global;\n\n    if (typeof global.cancelAnimationFrame === 'function') {\n      (0, _jestUtil().setGlobal)(\n        global,\n        'cancelAnimationFrame',\n        this._timerAPIs.cancelAnimationFrame\n      );\n    }\n\n    if (typeof global.clearImmediate === 'function') {\n      (0, _jestUtil().setGlobal)(\n        global,\n        'clearImmediate',\n        this._timerAPIs.clearImmediate\n      );\n    }\n\n    (0, _jestUtil().setGlobal)(\n      global,\n      'clearInterval',\n      this._timerAPIs.clearInterval\n    );\n    (0, _jestUtil().setGlobal)(\n      global,\n      'clearTimeout',\n      this._timerAPIs.clearTimeout\n    );\n\n    if (typeof global.requestAnimationFrame === 'function') {\n      (0, _jestUtil().setGlobal)(\n        global,\n        'requestAnimationFrame',\n        this._timerAPIs.requestAnimationFrame\n      );\n    }\n\n    if (typeof global.setImmediate === 'function') {\n      (0, _jestUtil().setGlobal)(\n        global,\n        'setImmediate',\n        this._timerAPIs.setImmediate\n      );\n    }\n\n    (0, _jestUtil().setGlobal)(\n      global,\n      'setInterval',\n      this._timerAPIs.setInterval\n    );\n    (0, _jestUtil().setGlobal)(\n      global,\n      'setTimeout',\n      this._timerAPIs.setTimeout\n    );\n    global.process.nextTick = this._timerAPIs.nextTick;\n  }\n\n  useFakeTimers() {\n    this._createMocks();\n\n    const global = this._global;\n\n    if (typeof global.cancelAnimationFrame === 'function') {\n      (0, _jestUtil().setGlobal)(\n        global,\n        'cancelAnimationFrame',\n        this._fakeTimerAPIs.cancelAnimationFrame\n      );\n    }\n\n    if (typeof global.clearImmediate === 'function') {\n      (0, _jestUtil().setGlobal)(\n        global,\n        'clearImmediate',\n        this._fakeTimerAPIs.clearImmediate\n      );\n    }\n\n    (0, _jestUtil().setGlobal)(\n      global,\n      'clearInterval',\n      this._fakeTimerAPIs.clearInterval\n    );\n    (0, _jestUtil().setGlobal)(\n      global,\n      'clearTimeout',\n      this._fakeTimerAPIs.clearTimeout\n    );\n\n    if (typeof global.requestAnimationFrame === 'function') {\n      (0, _jestUtil().setGlobal)(\n        global,\n        'requestAnimationFrame',\n        this._fakeTimerAPIs.requestAnimationFrame\n      );\n    }\n\n    if (typeof global.setImmediate === 'function') {\n      (0, _jestUtil().setGlobal)(\n        global,\n        'setImmediate',\n        this._fakeTimerAPIs.setImmediate\n      );\n    }\n\n    (0, _jestUtil().setGlobal)(\n      global,\n      'setInterval',\n      this._fakeTimerAPIs.setInterval\n    );\n    (0, _jestUtil().setGlobal)(\n      global,\n      'setTimeout',\n      this._fakeTimerAPIs.setTimeout\n    );\n    global.process.nextTick = this._fakeTimerAPIs.nextTick;\n  }\n\n  getTimerCount() {\n    this._checkFakeTimers();\n\n    return this._timers.size + this._immediates.length + this._ticks.length;\n  }\n\n  _checkFakeTimers() {\n    var _this$_fakeTimerAPIs;\n\n    if (\n      this._global.setTimeout !==\n      ((_this$_fakeTimerAPIs = this._fakeTimerAPIs) === null ||\n      _this$_fakeTimerAPIs === void 0\n        ? void 0\n        : _this$_fakeTimerAPIs.setTimeout)\n    ) {\n      this._global.console.warn(\n        'A function to advance timers was called but the timers API is not ' +\n          'mocked with fake timers. Call `jest.useFakeTimers()` in this ' +\n          'test or enable fake timers globally by setting ' +\n          '`\"timers\": \"fake\"` in ' +\n          'the configuration file. This warning is likely a result of a ' +\n          'default configuration change in Jest 15.\\n\\n' +\n          'Release Blog Post: https://jestjs.io/blog/2016/09/01/jest-15\\n' +\n          'Stack Trace:\\n' +\n          (0, _jestMessageUtil().formatStackTrace)(\n            new Error().stack,\n            this._config,\n            {\n              noStackTrace: false\n            }\n          )\n      );\n    }\n  }\n\n  _createMocks() {\n    const fn = (\n      impl // @ts-expect-error TODO: figure out better typings here\n    ) => this._moduleMocker.fn().mockImplementation(impl);\n\n    const promisifiableFakeSetTimeout = fn(this._fakeSetTimeout.bind(this)); // @ts-expect-error TODO: figure out better typings here\n\n    promisifiableFakeSetTimeout[_util().default.promisify.custom] = (\n      delay,\n      arg\n    ) =>\n      new Promise(resolve => promisifiableFakeSetTimeout(resolve, delay, arg)); // TODO: add better typings; these are mocks, but typed as regular timers\n\n    this._fakeTimerAPIs = {\n      cancelAnimationFrame: fn(this._fakeClearTimer.bind(this)),\n      clearImmediate: fn(this._fakeClearImmediate.bind(this)),\n      clearInterval: fn(this._fakeClearTimer.bind(this)),\n      clearTimeout: fn(this._fakeClearTimer.bind(this)),\n      nextTick: fn(this._fakeNextTick.bind(this)),\n      // @ts-expect-error TODO: figure out better typings here\n      requestAnimationFrame: fn(this._fakeRequestAnimationFrame.bind(this)),\n      // @ts-expect-error TODO: figure out better typings here\n      setImmediate: fn(this._fakeSetImmediate.bind(this)),\n      // @ts-expect-error TODO: figure out better typings here\n      setInterval: fn(this._fakeSetInterval.bind(this)),\n      // @ts-expect-error TODO: figure out better typings here\n      setTimeout: promisifiableFakeSetTimeout\n    };\n  }\n\n  _fakeClearTimer(timerRef) {\n    const uuid = this._timerConfig.refToId(timerRef);\n\n    if (uuid) {\n      this._timers.delete(String(uuid));\n    }\n  }\n\n  _fakeClearImmediate(uuid) {\n    this._immediates = this._immediates.filter(\n      immediate => immediate.uuid !== uuid\n    );\n  }\n\n  _fakeNextTick(callback, ...args) {\n    if (this._disposed) {\n      return;\n    }\n\n    const uuid = String(this._uuidCounter++);\n\n    this._ticks.push({\n      callback: () => callback.apply(null, args),\n      uuid\n    });\n\n    const cancelledTicks = this._cancelledTicks;\n\n    this._timerAPIs.nextTick(() => {\n      if (!cancelledTicks.hasOwnProperty(uuid)) {\n        // Callback may throw, so update the map prior calling.\n        cancelledTicks[uuid] = true;\n        callback.apply(null, args);\n      }\n    });\n  }\n\n  _fakeRequestAnimationFrame(callback) {\n    return this._fakeSetTimeout(() => {\n      // TODO: Use performance.now() once it's mocked\n      callback(this._now);\n    }, 1000 / 60);\n  }\n\n  _fakeSetImmediate(callback, ...args) {\n    if (this._disposed) {\n      return null;\n    }\n\n    const uuid = String(this._uuidCounter++);\n\n    this._immediates.push({\n      callback: () => callback.apply(null, args),\n      uuid\n    });\n\n    this._timerAPIs.setImmediate(() => {\n      if (this._immediates.find(x => x.uuid === uuid)) {\n        try {\n          callback.apply(null, args);\n        } finally {\n          this._fakeClearImmediate(uuid);\n        }\n      }\n    });\n\n    return uuid;\n  }\n\n  _fakeSetInterval(callback, intervalDelay, ...args) {\n    if (this._disposed) {\n      return null;\n    }\n\n    if (intervalDelay == null) {\n      intervalDelay = 0;\n    }\n\n    const uuid = this._uuidCounter++;\n\n    this._timers.set(String(uuid), {\n      callback: () => callback.apply(null, args),\n      expiry: this._now + intervalDelay,\n      interval: intervalDelay,\n      type: 'interval'\n    });\n\n    return this._timerConfig.idToRef(uuid);\n  }\n\n  _fakeSetTimeout(callback, delay, ...args) {\n    if (this._disposed) {\n      return null;\n    } // eslint-disable-next-line no-bitwise\n\n    delay = Number(delay) | 0;\n    const uuid = this._uuidCounter++;\n\n    this._timers.set(String(uuid), {\n      callback: () => callback.apply(null, args),\n      expiry: this._now + delay,\n      interval: undefined,\n      type: 'timeout'\n    });\n\n    return this._timerConfig.idToRef(uuid);\n  }\n\n  _getNextTimerHandle() {\n    let nextTimerHandle = null;\n    let soonestTime = MS_IN_A_YEAR;\n\n    this._timers.forEach((timer, uuid) => {\n      if (timer.expiry < soonestTime) {\n        soonestTime = timer.expiry;\n        nextTimerHandle = uuid;\n      }\n    });\n\n    return nextTimerHandle;\n  }\n\n  _runTimerHandle(timerHandle) {\n    const timer = this._timers.get(timerHandle);\n\n    if (!timer) {\n      return;\n    }\n\n    switch (timer.type) {\n      case 'timeout':\n        this._timers.delete(timerHandle);\n\n        timer.callback();\n        break;\n\n      case 'interval':\n        timer.expiry = this._now + (timer.interval || 0);\n        timer.callback();\n        break;\n\n      default:\n        throw new Error('Unexpected timer type: ' + timer.type);\n    }\n  }\n}\n\nexports.default = FakeTimers;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}