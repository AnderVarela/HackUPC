{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst utils_1 = require(\"@typescript-eslint/utils\");\nconst util_1 = require(\"../util\");\nexports.default = (0, util_1.createRule)({\n  name: 'consistent-generic-constructors',\n  meta: {\n    type: 'suggestion',\n    docs: {\n      description: 'Enforce specifying generic type arguments on type annotation or constructor name of a constructor call',\n      recommended: 'strict'\n    },\n    messages: {\n      preferTypeAnnotation: 'The generic type arguments should be specified as part of the type annotation.',\n      preferConstructor: 'The generic type arguments should be specified as part of the constructor type arguments.'\n    },\n    fixable: 'code',\n    schema: [{\n      enum: ['type-annotation', 'constructor']\n    }]\n  },\n  defaultOptions: ['constructor'],\n  create(context, [mode]) {\n    const sourceCode = context.getSourceCode();\n    return {\n      'VariableDeclarator,PropertyDefinition,:matches(FunctionDeclaration,FunctionExpression) > AssignmentPattern'(node) {\n        var _a, _b;\n        function getLHSRHS() {\n          switch (node.type) {\n            case utils_1.AST_NODE_TYPES.VariableDeclarator:\n              return [node.id, node.init];\n            case utils_1.AST_NODE_TYPES.PropertyDefinition:\n              return [node, node.value];\n            case utils_1.AST_NODE_TYPES.AssignmentPattern:\n              return [node.left, node.right];\n            default:\n              throw new Error(`Unhandled node type: ${node.type}`);\n          }\n        }\n        const [lhsName, rhs] = getLHSRHS();\n        const lhs = (_a = lhsName.typeAnnotation) === null || _a === void 0 ? void 0 : _a.typeAnnotation;\n        if (!rhs || rhs.type !== utils_1.AST_NODE_TYPES.NewExpression || rhs.callee.type !== utils_1.AST_NODE_TYPES.Identifier) {\n          return;\n        }\n        if (lhs && (lhs.type !== utils_1.AST_NODE_TYPES.TSTypeReference || lhs.typeName.type !== utils_1.AST_NODE_TYPES.Identifier || lhs.typeName.name !== rhs.callee.name)) {\n          return;\n        }\n        if (mode === 'type-annotation') {\n          if (!lhs && rhs.typeParameters) {\n            const {\n              typeParameters,\n              callee\n            } = rhs;\n            const typeAnnotation = sourceCode.getText(callee) + sourceCode.getText(typeParameters);\n            context.report({\n              node,\n              messageId: 'preferTypeAnnotation',\n              fix(fixer) {\n                function getIDToAttachAnnotation() {\n                  if (node.type !== utils_1.AST_NODE_TYPES.PropertyDefinition) {\n                    return lhsName;\n                  }\n                  if (!node.computed) {\n                    return node.key;\n                  }\n                  // If the property's computed, we have to attach the\n                  // annotation after the square bracket, not the enclosed expression\n                  return sourceCode.getTokenAfter(node.key);\n                }\n                return [fixer.remove(typeParameters), fixer.insertTextAfter(getIDToAttachAnnotation(), ': ' + typeAnnotation)];\n              }\n            });\n          }\n          return;\n        }\n        if (mode === 'constructor') {\n          if ((lhs === null || lhs === void 0 ? void 0 : lhs.typeParameters) && !rhs.typeParameters) {\n            const hasParens = ((_b = sourceCode.getTokenAfter(rhs.callee)) === null || _b === void 0 ? void 0 : _b.value) === '(';\n            const extraComments = new Set(sourceCode.getCommentsInside(lhs.parent));\n            sourceCode.getCommentsInside(lhs.typeParameters).forEach(c => extraComments.delete(c));\n            context.report({\n              node,\n              messageId: 'preferConstructor',\n              *fix(fixer) {\n                yield fixer.remove(lhs.parent);\n                for (const comment of extraComments) {\n                  yield fixer.insertTextAfter(rhs.callee, sourceCode.getText(comment));\n                }\n                yield fixer.insertTextAfter(rhs.callee, sourceCode.getText(lhs.typeParameters));\n                if (!hasParens) {\n                  yield fixer.insertTextAfter(rhs.callee, '()');\n                }\n              }\n            });\n          }\n        }\n      }\n    };\n  }\n});","map":{"version":3,"names":["utils_1","require","util_1","exports","default","createRule","name","meta","type","docs","description","recommended","messages","preferTypeAnnotation","preferConstructor","fixable","schema","enum","defaultOptions","create","context","mode","sourceCode","getSourceCode","VariableDeclarator,PropertyDefinition,:matches(FunctionDeclaration,FunctionExpression) > AssignmentPattern","node","getLHSRHS","AST_NODE_TYPES","VariableDeclarator","id","init","PropertyDefinition","value","AssignmentPattern","left","right","Error","lhsName","rhs","lhs","_a","typeAnnotation","NewExpression","callee","Identifier","TSTypeReference","typeName","typeParameters","getText","report","messageId","fix","fixer","getIDToAttachAnnotation","computed","key","getTokenAfter","remove","insertTextAfter","hasParens","_b","extraComments","Set","getCommentsInside","parent","forEach","c","delete","comment"],"sources":["../../src/rules/consistent-generic-constructors.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}