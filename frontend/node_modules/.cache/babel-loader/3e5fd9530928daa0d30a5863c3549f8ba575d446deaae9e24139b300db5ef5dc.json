{"ast":null,"code":"'use strict';\n\nclass ERR_INVALID_ARG_TYPE extends TypeError {\n  constructor(name, expected, actual) {\n    super(`${name} must be ${expected} got ${actual}`);\n    this.code = 'ERR_INVALID_ARG_TYPE';\n  }\n}\nclass ERR_INVALID_ARG_VALUE extends TypeError {\n  constructor(arg1, arg2, expected) {\n    super(`The property ${arg1} ${expected}. Received '${arg2}'`);\n    this.code = 'ERR_INVALID_ARG_VALUE';\n  }\n}\nclass ERR_PARSE_ARGS_INVALID_OPTION_VALUE extends Error {\n  constructor(message) {\n    super(message);\n    this.code = 'ERR_PARSE_ARGS_INVALID_OPTION_VALUE';\n  }\n}\nclass ERR_PARSE_ARGS_UNKNOWN_OPTION extends Error {\n  constructor(option, allowPositionals) {\n    const suggestDashDash = allowPositionals ? `. To specify a positional argument starting with a '-', place it at the end of the command after '--', as in '-- ${JSON.stringify(option)}` : '';\n    super(`Unknown option '${option}'${suggestDashDash}`);\n    this.code = 'ERR_PARSE_ARGS_UNKNOWN_OPTION';\n  }\n}\nclass ERR_PARSE_ARGS_UNEXPECTED_POSITIONAL extends Error {\n  constructor(positional) {\n    super(`Unexpected argument '${positional}'. This command does not take positional arguments`);\n    this.code = 'ERR_PARSE_ARGS_UNEXPECTED_POSITIONAL';\n  }\n}\nmodule.exports = {\n  codes: {\n    ERR_INVALID_ARG_TYPE,\n    ERR_INVALID_ARG_VALUE,\n    ERR_PARSE_ARGS_INVALID_OPTION_VALUE,\n    ERR_PARSE_ARGS_UNKNOWN_OPTION,\n    ERR_PARSE_ARGS_UNEXPECTED_POSITIONAL\n  }\n};","map":{"version":3,"names":["ERR_INVALID_ARG_TYPE","TypeError","constructor","name","expected","actual","code","ERR_INVALID_ARG_VALUE","arg1","arg2","ERR_PARSE_ARGS_INVALID_OPTION_VALUE","Error","message","ERR_PARSE_ARGS_UNKNOWN_OPTION","option","allowPositionals","suggestDashDash","JSON","stringify","ERR_PARSE_ARGS_UNEXPECTED_POSITIONAL","positional","module","exports","codes"],"sources":["C:/Users/chest/OneDrive/Documentos/GitHub/HackUPC/frontend/node_modules/@pkgjs/parseargs/internal/errors.js"],"sourcesContent":["'use strict';\n\nclass ERR_INVALID_ARG_TYPE extends TypeError {\n  constructor(name, expected, actual) {\n    super(`${name} must be ${expected} got ${actual}`);\n    this.code = 'ERR_INVALID_ARG_TYPE';\n  }\n}\n\nclass ERR_INVALID_ARG_VALUE extends TypeError {\n  constructor(arg1, arg2, expected) {\n    super(`The property ${arg1} ${expected}. Received '${arg2}'`);\n    this.code = 'ERR_INVALID_ARG_VALUE';\n  }\n}\n\nclass ERR_PARSE_ARGS_INVALID_OPTION_VALUE extends Error {\n  constructor(message) {\n    super(message);\n    this.code = 'ERR_PARSE_ARGS_INVALID_OPTION_VALUE';\n  }\n}\n\nclass ERR_PARSE_ARGS_UNKNOWN_OPTION extends Error {\n  constructor(option, allowPositionals) {\n    const suggestDashDash = allowPositionals ? `. To specify a positional argument starting with a '-', place it at the end of the command after '--', as in '-- ${JSON.stringify(option)}` : '';\n    super(`Unknown option '${option}'${suggestDashDash}`);\n    this.code = 'ERR_PARSE_ARGS_UNKNOWN_OPTION';\n  }\n}\n\nclass ERR_PARSE_ARGS_UNEXPECTED_POSITIONAL extends Error {\n  constructor(positional) {\n    super(`Unexpected argument '${positional}'. This command does not take positional arguments`);\n    this.code = 'ERR_PARSE_ARGS_UNEXPECTED_POSITIONAL';\n  }\n}\n\nmodule.exports = {\n  codes: {\n    ERR_INVALID_ARG_TYPE,\n    ERR_INVALID_ARG_VALUE,\n    ERR_PARSE_ARGS_INVALID_OPTION_VALUE,\n    ERR_PARSE_ARGS_UNKNOWN_OPTION,\n    ERR_PARSE_ARGS_UNEXPECTED_POSITIONAL,\n  }\n};\n"],"mappings":"AAAA,YAAY;;AAEZ,MAAMA,oBAAoB,SAASC,SAAS,CAAC;EAC3CC,WAAWA,CAACC,IAAI,EAAEC,QAAQ,EAAEC,MAAM,EAAE;IAClC,KAAK,CAAE,GAAEF,IAAK,YAAWC,QAAS,QAAOC,MAAO,EAAC,CAAC;IAClD,IAAI,CAACC,IAAI,GAAG,sBAAsB;EACpC;AACF;AAEA,MAAMC,qBAAqB,SAASN,SAAS,CAAC;EAC5CC,WAAWA,CAACM,IAAI,EAAEC,IAAI,EAAEL,QAAQ,EAAE;IAChC,KAAK,CAAE,gBAAeI,IAAK,IAAGJ,QAAS,eAAcK,IAAK,GAAE,CAAC;IAC7D,IAAI,CAACH,IAAI,GAAG,uBAAuB;EACrC;AACF;AAEA,MAAMI,mCAAmC,SAASC,KAAK,CAAC;EACtDT,WAAWA,CAACU,OAAO,EAAE;IACnB,KAAK,CAACA,OAAO,CAAC;IACd,IAAI,CAACN,IAAI,GAAG,qCAAqC;EACnD;AACF;AAEA,MAAMO,6BAA6B,SAASF,KAAK,CAAC;EAChDT,WAAWA,CAACY,MAAM,EAAEC,gBAAgB,EAAE;IACpC,MAAMC,eAAe,GAAGD,gBAAgB,GAAI,oHAAmHE,IAAI,CAACC,SAAS,CAACJ,MAAM,CAAE,EAAC,GAAG,EAAE;IAC5L,KAAK,CAAE,mBAAkBA,MAAO,IAAGE,eAAgB,EAAC,CAAC;IACrD,IAAI,CAACV,IAAI,GAAG,+BAA+B;EAC7C;AACF;AAEA,MAAMa,oCAAoC,SAASR,KAAK,CAAC;EACvDT,WAAWA,CAACkB,UAAU,EAAE;IACtB,KAAK,CAAE,wBAAuBA,UAAW,oDAAmD,CAAC;IAC7F,IAAI,CAACd,IAAI,GAAG,sCAAsC;EACpD;AACF;AAEAe,MAAM,CAACC,OAAO,GAAG;EACfC,KAAK,EAAE;IACLvB,oBAAoB;IACpBO,qBAAqB;IACrBG,mCAAmC;IACnCG,6BAA6B;IAC7BM;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}