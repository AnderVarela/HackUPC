{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getUserCodeFrame = getUserCodeFrame;\n// We try to load node dependencies\nlet chalk = null;\nlet readFileSync = null;\nlet codeFrameColumns = null;\ntry {\n  const nodeRequire = module && module.require;\n  readFileSync = nodeRequire.call(module, 'fs').readFileSync;\n  codeFrameColumns = nodeRequire.call(module, '@babel/code-frame').codeFrameColumns;\n  chalk = nodeRequire.call(module, 'chalk');\n} catch {\n  // We're in a browser environment\n}\n\n// frame has the form \"at myMethod (location/to/my/file.js:10:2)\"\nfunction getCodeFrame(frame) {\n  const locationStart = frame.indexOf('(') + 1;\n  const locationEnd = frame.indexOf(')');\n  const frameLocation = frame.slice(locationStart, locationEnd);\n  const frameLocationElements = frameLocation.split(':');\n  const [filename, line, column] = [frameLocationElements[0], parseInt(frameLocationElements[1], 10), parseInt(frameLocationElements[2], 10)];\n  let rawFileContents = '';\n  try {\n    rawFileContents = readFileSync(filename, 'utf-8');\n  } catch {\n    return '';\n  }\n  const codeFrame = codeFrameColumns(rawFileContents, {\n    start: {\n      line,\n      column\n    }\n  }, {\n    highlightCode: true,\n    linesBelow: 0\n  });\n  return `${chalk.dim(frameLocation)}\\n${codeFrame}\\n`;\n}\nfunction getUserCodeFrame() {\n  // If we couldn't load dependencies, we can't generate the user trace\n  /* istanbul ignore next */\n  if (!readFileSync || !codeFrameColumns) {\n    return '';\n  }\n  const err = new Error();\n  const firstClientCodeFrame = err.stack.split('\\n').slice(1) // Remove first line which has the form \"Error: TypeError\"\n  .find(frame => !frame.includes('node_modules/')); // Ignore frames from 3rd party libraries\n\n  return getCodeFrame(firstClientCodeFrame);\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","getUserCodeFrame","chalk","readFileSync","codeFrameColumns","nodeRequire","module","require","call","getCodeFrame","frame","locationStart","indexOf","locationEnd","frameLocation","slice","frameLocationElements","split","filename","line","column","parseInt","rawFileContents","codeFrame","start","highlightCode","linesBelow","dim","err","Error","firstClientCodeFrame","stack","find","includes"],"sources":["C:/Users/chest/OneDrive/Documentos/GitHub/HackUPC/frontend/node_modules/@testing-library/dom/dist/get-user-code-frame.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getUserCodeFrame = getUserCodeFrame;\n// We try to load node dependencies\nlet chalk = null;\nlet readFileSync = null;\nlet codeFrameColumns = null;\ntry {\n  const nodeRequire = module && module.require;\n  readFileSync = nodeRequire.call(module, 'fs').readFileSync;\n  codeFrameColumns = nodeRequire.call(module, '@babel/code-frame').codeFrameColumns;\n  chalk = nodeRequire.call(module, 'chalk');\n} catch {\n  // We're in a browser environment\n}\n\n// frame has the form \"at myMethod (location/to/my/file.js:10:2)\"\nfunction getCodeFrame(frame) {\n  const locationStart = frame.indexOf('(') + 1;\n  const locationEnd = frame.indexOf(')');\n  const frameLocation = frame.slice(locationStart, locationEnd);\n  const frameLocationElements = frameLocation.split(':');\n  const [filename, line, column] = [frameLocationElements[0], parseInt(frameLocationElements[1], 10), parseInt(frameLocationElements[2], 10)];\n  let rawFileContents = '';\n  try {\n    rawFileContents = readFileSync(filename, 'utf-8');\n  } catch {\n    return '';\n  }\n  const codeFrame = codeFrameColumns(rawFileContents, {\n    start: {\n      line,\n      column\n    }\n  }, {\n    highlightCode: true,\n    linesBelow: 0\n  });\n  return `${chalk.dim(frameLocation)}\\n${codeFrame}\\n`;\n}\nfunction getUserCodeFrame() {\n  // If we couldn't load dependencies, we can't generate the user trace\n  /* istanbul ignore next */\n  if (!readFileSync || !codeFrameColumns) {\n    return '';\n  }\n  const err = new Error();\n  const firstClientCodeFrame = err.stack.split('\\n').slice(1) // Remove first line which has the form \"Error: TypeError\"\n  .find(frame => !frame.includes('node_modules/')); // Ignore frames from 3rd party libraries\n\n  return getCodeFrame(firstClientCodeFrame);\n}"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAC3CC,KAAK,EAAE;AACT,CAAC,CAAC;AACFD,OAAO,CAACE,gBAAgB,GAAGA,gBAAgB;AAC3C;AACA,IAAIC,KAAK,GAAG,IAAI;AAChB,IAAIC,YAAY,GAAG,IAAI;AACvB,IAAIC,gBAAgB,GAAG,IAAI;AAC3B,IAAI;EACF,MAAMC,WAAW,GAAGC,MAAM,IAAIA,MAAM,CAACC,OAAO;EAC5CJ,YAAY,GAAGE,WAAW,CAACG,IAAI,CAACF,MAAM,EAAE,IAAI,CAAC,CAACH,YAAY;EAC1DC,gBAAgB,GAAGC,WAAW,CAACG,IAAI,CAACF,MAAM,EAAE,mBAAmB,CAAC,CAACF,gBAAgB;EACjFF,KAAK,GAAGG,WAAW,CAACG,IAAI,CAACF,MAAM,EAAE,OAAO,CAAC;AAC3C,CAAC,CAAC,MAAM;EACN;AAAA;;AAGF;AACA,SAASG,YAAYA,CAACC,KAAK,EAAE;EAC3B,MAAMC,aAAa,GAAGD,KAAK,CAACE,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC;EAC5C,MAAMC,WAAW,GAAGH,KAAK,CAACE,OAAO,CAAC,GAAG,CAAC;EACtC,MAAME,aAAa,GAAGJ,KAAK,CAACK,KAAK,CAACJ,aAAa,EAAEE,WAAW,CAAC;EAC7D,MAAMG,qBAAqB,GAAGF,aAAa,CAACG,KAAK,CAAC,GAAG,CAAC;EACtD,MAAM,CAACC,QAAQ,EAAEC,IAAI,EAAEC,MAAM,CAAC,GAAG,CAACJ,qBAAqB,CAAC,CAAC,CAAC,EAAEK,QAAQ,CAACL,qBAAqB,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAEK,QAAQ,CAACL,qBAAqB,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;EAC3I,IAAIM,eAAe,GAAG,EAAE;EACxB,IAAI;IACFA,eAAe,GAAGnB,YAAY,CAACe,QAAQ,EAAE,OAAO,CAAC;EACnD,CAAC,CAAC,MAAM;IACN,OAAO,EAAE;EACX;EACA,MAAMK,SAAS,GAAGnB,gBAAgB,CAACkB,eAAe,EAAE;IAClDE,KAAK,EAAE;MACLL,IAAI;MACJC;IACF;EACF,CAAC,EAAE;IACDK,aAAa,EAAE,IAAI;IACnBC,UAAU,EAAE;EACd,CAAC,CAAC;EACF,OAAQ,GAAExB,KAAK,CAACyB,GAAG,CAACb,aAAa,CAAE,KAAIS,SAAU,IAAG;AACtD;AACA,SAAStB,gBAAgBA,CAAA,EAAG;EAC1B;EACA;EACA,IAAI,CAACE,YAAY,IAAI,CAACC,gBAAgB,EAAE;IACtC,OAAO,EAAE;EACX;EACA,MAAMwB,GAAG,GAAG,IAAIC,KAAK,CAAC,CAAC;EACvB,MAAMC,oBAAoB,GAAGF,GAAG,CAACG,KAAK,CAACd,KAAK,CAAC,IAAI,CAAC,CAACF,KAAK,CAAC,CAAC,CAAC,CAAC;EAAA,CAC3DiB,IAAI,CAACtB,KAAK,IAAI,CAACA,KAAK,CAACuB,QAAQ,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC;;EAElD,OAAOxB,YAAY,CAACqB,oBAAoB,CAAC;AAC3C","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}