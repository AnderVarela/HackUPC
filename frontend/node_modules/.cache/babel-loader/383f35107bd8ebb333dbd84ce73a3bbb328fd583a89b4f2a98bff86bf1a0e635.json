{"ast":null,"code":"'use strict';\n\nvar toIntegerOrInfinity = require('../internals/to-integer-or-infinity');\nvar $RangeError = RangeError;\nmodule.exports = function (it) {\n  var result = toIntegerOrInfinity(it);\n  if (result < 0) throw new $RangeError(\"The argument can't be less than 0\");\n  return result;\n};","map":{"version":3,"names":["toIntegerOrInfinity","require","$RangeError","RangeError","module","exports","it","result"],"sources":["C:/Users/chest/OneDrive/Documentos/GitHub/HackUPC/frontend/node_modules/core-js-pure/internals/to-positive-integer.js"],"sourcesContent":["'use strict';\nvar toIntegerOrInfinity = require('../internals/to-integer-or-infinity');\n\nvar $RangeError = RangeError;\n\nmodule.exports = function (it) {\n  var result = toIntegerOrInfinity(it);\n  if (result < 0) throw new $RangeError(\"The argument can't be less than 0\");\n  return result;\n};\n"],"mappings":"AAAA,YAAY;;AACZ,IAAIA,mBAAmB,GAAGC,OAAO,CAAC,qCAAqC,CAAC;AAExE,IAAIC,WAAW,GAAGC,UAAU;AAE5BC,MAAM,CAACC,OAAO,GAAG,UAAUC,EAAE,EAAE;EAC7B,IAAIC,MAAM,GAAGP,mBAAmB,CAACM,EAAE,CAAC;EACpC,IAAIC,MAAM,GAAG,CAAC,EAAE,MAAM,IAAIL,WAAW,CAAC,mCAAmC,CAAC;EAC1E,OAAOK,MAAM;AACf,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}