{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst utils_1 = require(\"@typescript-eslint/utils\");\nconst util = __importStar(require(\"../util\"));\nexports.default = util.createRule({\n  name: 'no-confusing-non-null-assertion',\n  meta: {\n    type: 'problem',\n    docs: {\n      description: 'Disallow non-null assertion in locations that may be confusing',\n      recommended: 'strict'\n    },\n    fixable: 'code',\n    hasSuggestions: true,\n    messages: {\n      confusingEqual: 'Confusing combinations of non-null assertion and equal test like \"a! == b\", which looks very similar to not equal \"a !== b\".',\n      confusingAssign: 'Confusing combinations of non-null assertion and equal test like \"a! = b\", which looks very similar to not equal \"a != b\".',\n      notNeedInEqualTest: 'Unnecessary non-null assertion (!) in equal test.',\n      notNeedInAssign: 'Unnecessary non-null assertion (!) in assignment left hand.',\n      wrapUpLeft: 'Wrap up left hand to avoid putting non-null assertion \"!\" and \"=\" together.'\n    },\n    schema: []\n  },\n  defaultOptions: [],\n  create(context) {\n    const sourceCode = context.getSourceCode();\n    return {\n      'BinaryExpression, AssignmentExpression'(node) {\n        function isLeftHandPrimaryExpression(node) {\n          return node.type === utils_1.AST_NODE_TYPES.TSNonNullExpression;\n        }\n        if (node.operator === '==' || node.operator === '===' || node.operator === '=') {\n          const isAssign = node.operator === '=';\n          const leftHandFinalToken = sourceCode.getLastToken(node.left);\n          const tokenAfterLeft = sourceCode.getTokenAfter(node.left);\n          if ((leftHandFinalToken === null || leftHandFinalToken === void 0 ? void 0 : leftHandFinalToken.type) === utils_1.AST_TOKEN_TYPES.Punctuator && (leftHandFinalToken === null || leftHandFinalToken === void 0 ? void 0 : leftHandFinalToken.value) === '!' && (tokenAfterLeft === null || tokenAfterLeft === void 0 ? void 0 : tokenAfterLeft.value) !== ')') {\n            if (isLeftHandPrimaryExpression(node.left)) {\n              context.report({\n                node,\n                messageId: isAssign ? 'confusingAssign' : 'confusingEqual',\n                suggest: [{\n                  messageId: isAssign ? 'notNeedInAssign' : 'notNeedInEqualTest',\n                  fix: fixer => [fixer.remove(leftHandFinalToken)]\n                }]\n              });\n            } else {\n              context.report({\n                node,\n                messageId: isAssign ? 'confusingAssign' : 'confusingEqual',\n                suggest: [{\n                  messageId: 'wrapUpLeft',\n                  fix: fixer => [fixer.insertTextBefore(node.left, '('), fixer.insertTextAfter(node.left, ')')]\n                }]\n              });\n            }\n          }\n        }\n      }\n    };\n  }\n});","map":{"version":3,"names":["utils_1","require","util","__importStar","exports","default","createRule","name","meta","type","docs","description","recommended","fixable","hasSuggestions","messages","confusingEqual","confusingAssign","notNeedInEqualTest","notNeedInAssign","wrapUpLeft","schema","defaultOptions","create","context","sourceCode","getSourceCode","BinaryExpression, AssignmentExpression","node","isLeftHandPrimaryExpression","AST_NODE_TYPES","TSNonNullExpression","operator","isAssign","leftHandFinalToken","getLastToken","left","tokenAfterLeft","getTokenAfter","AST_TOKEN_TYPES","Punctuator","value","report","messageId","suggest","fix","fixer","remove","insertTextBefore","insertTextAfter"],"sources":["../../src/rules/no-confusing-non-null-assertion.ts"],"sourcesContent":[null],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,MAAAA,OAAA,GAAAC,OAAA;AAEA,MAAAC,IAAA,GAAAC,YAAA,CAAAF,OAAA;AAEAG,OAAA,CAAAC,OAAA,GAAeH,IAAI,CAACI,UAAU,CAAC;EAC7BC,IAAI,EAAE,iCAAiC;EACvCC,IAAI,EAAE;IACJC,IAAI,EAAE,SAAS;IACfC,IAAI,EAAE;MACJC,WAAW,EACT,gEAAgE;MAClEC,WAAW,EAAE;KACd;IACDC,OAAO,EAAE,MAAM;IACfC,cAAc,EAAE,IAAI;IACpBC,QAAQ,EAAE;MACRC,cAAc,EACZ,8HAA8H;MAChIC,eAAe,EACb,4HAA4H;MAC9HC,kBAAkB,EAAE,mDAAmD;MACvEC,eAAe,EACb,6DAA6D;MAC/DC,UAAU,EACR;KACH;IACDC,MAAM,EAAE;GACT;EACDC,cAAc,EAAE,EAAE;EAClBC,MAAMA,CAACC,OAAO;IACZ,MAAMC,UAAU,GAAGD,OAAO,CAACE,aAAa,EAAE;IAC1C,OAAO;MACL,wCAAwCC,CACtCC,IAA+D;QAE/D,SAASC,2BAA2BA,CAClCD,IAAsD;UAEtD,OAAOA,IAAI,CAACnB,IAAI,KAAKT,OAAA,CAAA8B,cAAc,CAACC,mBAAmB;QACzD;QAEA,IACEH,IAAI,CAACI,QAAQ,KAAK,IAAI,IACtBJ,IAAI,CAACI,QAAQ,KAAK,KAAK,IACvBJ,IAAI,CAACI,QAAQ,KAAK,GAAG,EACrB;UACA,MAAMC,QAAQ,GAAGL,IAAI,CAACI,QAAQ,KAAK,GAAG;UACtC,MAAME,kBAAkB,GAAGT,UAAU,CAACU,YAAY,CAACP,IAAI,CAACQ,IAAI,CAAC;UAC7D,MAAMC,cAAc,GAAGZ,UAAU,CAACa,aAAa,CAACV,IAAI,CAACQ,IAAI,CAAC;UAC1D,IACE,CAAAF,kBAAkB,aAAlBA,kBAAkB,uBAAlBA,kBAAkB,CAAEzB,IAAI,MAAKT,OAAA,CAAAuC,eAAe,CAACC,UAAU,IACvD,CAAAN,kBAAkB,aAAlBA,kBAAkB,uBAAlBA,kBAAkB,CAAEO,KAAK,MAAK,GAAG,IACjC,CAAAJ,cAAc,aAAdA,cAAc,uBAAdA,cAAc,CAAEI,KAAK,MAAK,GAAG,EAC7B;YACA,IAAIZ,2BAA2B,CAACD,IAAI,CAACQ,IAAI,CAAC,EAAE;cAC1CZ,OAAO,CAACkB,MAAM,CAAC;gBACbd,IAAI;gBACJe,SAAS,EAAEV,QAAQ,GAAG,iBAAiB,GAAG,gBAAgB;gBAC1DW,OAAO,EAAE,CACP;kBACED,SAAS,EAAEV,QAAQ,GACf,iBAAiB,GACjB,oBAAoB;kBACxBY,GAAG,EAAGC,KAAK,IAAyB,CAClCA,KAAK,CAACC,MAAM,CAACb,kBAAkB,CAAC;iBAEnC;eAEJ,CAAC;aACH,MAAM;cACLV,OAAO,CAACkB,MAAM,CAAC;gBACbd,IAAI;gBACJe,SAAS,EAAEV,QAAQ,GAAG,iBAAiB,GAAG,gBAAgB;gBAC1DW,OAAO,EAAE,CACP;kBACED,SAAS,EAAE,YAAY;kBACvBE,GAAG,EAAGC,KAAK,IAAyB,CAClCA,KAAK,CAACE,gBAAgB,CAACpB,IAAI,CAACQ,IAAI,EAAE,GAAG,CAAC,EACtCU,KAAK,CAACG,eAAe,CAACrB,IAAI,CAACQ,IAAI,EAAE,GAAG,CAAC;iBAExC;eAEJ,CAAC;;;;MAIV;KACD;EACH;CACD,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}