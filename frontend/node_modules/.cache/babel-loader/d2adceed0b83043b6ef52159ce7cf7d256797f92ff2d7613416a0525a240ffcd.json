{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst scope_manager_1 = require(\"@typescript-eslint/scope-manager\");\nconst utils_1 = require(\"@typescript-eslint/utils\");\nconst util = __importStar(require(\"../util\"));\nconst SENTINEL_TYPE = /^(?:(?:Function|Class)(?:Declaration|Expression)|ArrowFunctionExpression|CatchClause|ImportDeclaration|ExportNamedDeclaration)$/;\n/**\n * Parses a given value as options.\n */\nfunction parseOptions(options) {\n  let functions = true;\n  let classes = true;\n  let enums = true;\n  let variables = true;\n  let typedefs = true;\n  let ignoreTypeReferences = true;\n  let allowNamedExports = false;\n  if (typeof options === 'string') {\n    functions = options !== 'nofunc';\n  } else if (typeof options === 'object' && options != null) {\n    functions = options.functions !== false;\n    classes = options.classes !== false;\n    enums = options.enums !== false;\n    variables = options.variables !== false;\n    typedefs = options.typedefs !== false;\n    ignoreTypeReferences = options.ignoreTypeReferences !== false;\n    allowNamedExports = options.allowNamedExports !== false;\n  }\n  return {\n    functions,\n    classes,\n    enums,\n    variables,\n    typedefs,\n    ignoreTypeReferences,\n    allowNamedExports\n  };\n}\n/**\n * Checks whether or not a given variable is a function declaration.\n */\nfunction isFunction(variable) {\n  return variable.defs[0].type === scope_manager_1.DefinitionType.FunctionName;\n}\n/**\n * Checks whether or not a given variable is a type declaration.\n */\nfunction isTypedef(variable) {\n  return variable.defs[0].type === scope_manager_1.DefinitionType.Type;\n}\n/**\n * Checks whether or not a given variable is a enum declaration.\n */\nfunction isOuterEnum(variable, reference) {\n  return variable.defs[0].type === scope_manager_1.DefinitionType.TSEnumName && variable.scope.variableScope !== reference.from.variableScope;\n}\n/**\n * Checks whether or not a given variable is a class declaration in an upper function scope.\n */\nfunction isOuterClass(variable, reference) {\n  return variable.defs[0].type === scope_manager_1.DefinitionType.ClassName && variable.scope.variableScope !== reference.from.variableScope;\n}\n/**\n * Checks whether or not a given variable is a variable declaration in an upper function scope.\n */\nfunction isOuterVariable(variable, reference) {\n  return variable.defs[0].type === scope_manager_1.DefinitionType.Variable && variable.scope.variableScope !== reference.from.variableScope;\n}\n/**\n * Checks whether or not a given reference is a export reference.\n */\nfunction isNamedExports(reference) {\n  var _a;\n  const {\n    identifier\n  } = reference;\n  return ((_a = identifier.parent) === null || _a === void 0 ? void 0 : _a.type) === utils_1.AST_NODE_TYPES.ExportSpecifier && identifier.parent.local === identifier;\n}\n/**\n * Recursively checks whether or not a given reference has a type query declaration among it's parents\n */\nfunction referenceContainsTypeQuery(node) {\n  switch (node.type) {\n    case utils_1.AST_NODE_TYPES.TSTypeQuery:\n      return true;\n    case utils_1.AST_NODE_TYPES.TSQualifiedName:\n    case utils_1.AST_NODE_TYPES.Identifier:\n      if (!node.parent) {\n        return false;\n      }\n      return referenceContainsTypeQuery(node.parent);\n    default:\n      // if we find a different node, there's no chance that we're in a TSTypeQuery\n      return false;\n  }\n}\n/**\n * Checks whether or not a given reference is a type reference.\n */\nfunction isTypeReference(reference) {\n  return reference.isTypeReference || referenceContainsTypeQuery(reference.identifier);\n}\n/**\n * Checks whether or not a given location is inside of the range of a given node.\n */\nfunction isInRange(node, location) {\n  return !!node && node.range[0] <= location && location <= node.range[1];\n}\n/**\n * Decorators are transpiled such that the decorator is placed after the class declaration\n * So it is considered safe\n */\nfunction isClassRefInClassDecorator(variable, reference) {\n  if (variable.defs[0].type !== scope_manager_1.DefinitionType.ClassName) {\n    return false;\n  }\n  if (!variable.defs[0].node.decorators || variable.defs[0].node.decorators.length === 0) {\n    return false;\n  }\n  for (const deco of variable.defs[0].node.decorators) {\n    if (reference.identifier.range[0] >= deco.range[0] && reference.identifier.range[1] <= deco.range[1]) {\n      return true;\n    }\n  }\n  return false;\n}\n/**\n * Checks whether or not a given reference is inside of the initializers of a given variable.\n *\n * @returns `true` in the following cases:\n * - var a = a\n * - var [a = a] = list\n * - var {a = a} = obj\n * - for (var a in a) {}\n * - for (var a of a) {}\n */\nfunction isInInitializer(variable, reference) {\n  var _a;\n  if (variable.scope !== reference.from) {\n    return false;\n  }\n  let node = variable.identifiers[0].parent;\n  const location = reference.identifier.range[1];\n  while (node) {\n    if (node.type === utils_1.AST_NODE_TYPES.VariableDeclarator) {\n      if (isInRange(node.init, location)) {\n        return true;\n      }\n      if (((_a = node.parent) === null || _a === void 0 ? void 0 : _a.parent) && (node.parent.parent.type === utils_1.AST_NODE_TYPES.ForInStatement || node.parent.parent.type === utils_1.AST_NODE_TYPES.ForOfStatement) && isInRange(node.parent.parent.right, location)) {\n        return true;\n      }\n      break;\n    } else if (node.type === utils_1.AST_NODE_TYPES.AssignmentPattern) {\n      if (isInRange(node.right, location)) {\n        return true;\n      }\n    } else if (SENTINEL_TYPE.test(node.type)) {\n      break;\n    }\n    node = node.parent;\n  }\n  return false;\n}\nexports.default = util.createRule({\n  name: 'no-use-before-define',\n  meta: {\n    type: 'problem',\n    docs: {\n      description: 'Disallow the use of variables before they are defined',\n      recommended: false,\n      extendsBaseRule: true\n    },\n    messages: {\n      noUseBeforeDefine: \"'{{name}}' was used before it was defined.\"\n    },\n    schema: [{\n      oneOf: [{\n        enum: ['nofunc']\n      }, {\n        type: 'object',\n        properties: {\n          functions: {\n            type: 'boolean'\n          },\n          classes: {\n            type: 'boolean'\n          },\n          enums: {\n            type: 'boolean'\n          },\n          variables: {\n            type: 'boolean'\n          },\n          typedefs: {\n            type: 'boolean'\n          },\n          ignoreTypeReferences: {\n            type: 'boolean'\n          },\n          allowNamedExports: {\n            type: 'boolean'\n          }\n        },\n        additionalProperties: false\n      }]\n    }]\n  },\n  defaultOptions: [{\n    functions: true,\n    classes: true,\n    enums: true,\n    variables: true,\n    typedefs: true,\n    ignoreTypeReferences: true,\n    allowNamedExports: false\n  }],\n  create(context, optionsWithDefault) {\n    const options = parseOptions(optionsWithDefault[0]);\n    /**\n     * Determines whether a given use-before-define case should be reported according to the options.\n     * @param variable The variable that gets used before being defined\n     * @param reference The reference to the variable\n     */\n    function isForbidden(variable, reference) {\n      if (options.ignoreTypeReferences && isTypeReference(reference)) {\n        return false;\n      }\n      if (isFunction(variable)) {\n        return options.functions;\n      }\n      if (isOuterClass(variable, reference)) {\n        return options.classes;\n      }\n      if (isOuterVariable(variable, reference)) {\n        return options.variables;\n      }\n      if (isOuterEnum(variable, reference)) {\n        return options.enums;\n      }\n      if (isTypedef(variable)) {\n        return options.typedefs;\n      }\n      return true;\n    }\n    function isDefinedBeforeUse(variable, reference) {\n      return variable.identifiers[0].range[1] <= reference.identifier.range[1] && !isInInitializer(variable, reference);\n    }\n    /**\n     * Finds and validates all variables in a given scope.\n     */\n    function findVariablesInScope(scope) {\n      scope.references.forEach(reference => {\n        const variable = reference.resolved;\n        function report() {\n          context.report({\n            node: reference.identifier,\n            messageId: 'noUseBeforeDefine',\n            data: {\n              name: reference.identifier.name\n            }\n          });\n        }\n        // Skips when the reference is:\n        // - initializations.\n        // - referring to an undefined variable.\n        // - referring to a global environment variable (there're no identifiers).\n        // - located preceded by the variable (except in initializers).\n        // - allowed by options.\n        if (reference.init) {\n          return;\n        }\n        if (!options.allowNamedExports && isNamedExports(reference)) {\n          if (!variable || !isDefinedBeforeUse(variable, reference)) {\n            report();\n          }\n          return;\n        }\n        if (!variable) {\n          return;\n        }\n        if (variable.identifiers.length === 0 || isDefinedBeforeUse(variable, reference) || !isForbidden(variable, reference) || isClassRefInClassDecorator(variable, reference) || reference.from.type === utils_1.TSESLint.Scope.ScopeType.functionType) {\n          return;\n        }\n        // Reports.\n        report();\n      });\n      scope.childScopes.forEach(findVariablesInScope);\n    }\n    return {\n      Program() {\n        findVariablesInScope(context.getScope());\n      }\n    };\n  }\n});","map":{"version":3,"names":["scope_manager_1","require","utils_1","util","__importStar","SENTINEL_TYPE","parseOptions","options","functions","classes","enums","variables","typedefs","ignoreTypeReferences","allowNamedExports","isFunction","variable","defs","type","DefinitionType","FunctionName","isTypedef","Type","isOuterEnum","reference","TSEnumName","scope","variableScope","from","isOuterClass","ClassName","isOuterVariable","Variable","isNamedExports","identifier","_a","parent","AST_NODE_TYPES","ExportSpecifier","local","referenceContainsTypeQuery","node","TSTypeQuery","TSQualifiedName","Identifier","isTypeReference","isInRange","location","range","isClassRefInClassDecorator","decorators","length","deco","isInInitializer","identifiers","VariableDeclarator","init","ForInStatement","ForOfStatement","right","AssignmentPattern","test","exports","default","createRule","name","meta","docs","description","recommended","extendsBaseRule","messages","noUseBeforeDefine","schema","oneOf","enum","properties","additionalProperties","defaultOptions","create","context","optionsWithDefault","isForbidden","isDefinedBeforeUse","findVariablesInScope","references","forEach","resolved","report","messageId","data","TSESLint","Scope","ScopeType","functionType","childScopes","Program","getScope"],"sources":["../../src/rules/no-use-before-define.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}