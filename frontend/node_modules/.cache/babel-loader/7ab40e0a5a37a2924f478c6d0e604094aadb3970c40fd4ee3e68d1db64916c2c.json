{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ComputeExponentForMagnitude = void 0;\n/**\n * The abstract operation ComputeExponentForMagnitude computes an exponent by which to scale a\n * number of the given magnitude (power of ten of the most significant digit) according to the\n * locale and the desired notation (scientific, engineering, or compact).\n */\nfunction ComputeExponentForMagnitude(numberFormat, magnitude, _a) {\n  var getInternalSlots = _a.getInternalSlots;\n  var internalSlots = getInternalSlots(numberFormat);\n  var notation = internalSlots.notation,\n    dataLocaleData = internalSlots.dataLocaleData,\n    numberingSystem = internalSlots.numberingSystem;\n  switch (notation) {\n    case 'standard':\n      return 0;\n    case 'scientific':\n      return magnitude;\n    case 'engineering':\n      return Math.floor(magnitude / 3) * 3;\n    default:\n      {\n        // Let exponent be an implementation- and locale-dependent (ILD) integer by which to scale a\n        // number of the given magnitude in compact notation for the current locale.\n        var compactDisplay = internalSlots.compactDisplay,\n          style = internalSlots.style,\n          currencyDisplay = internalSlots.currencyDisplay;\n        var thresholdMap = void 0;\n        if (style === 'currency' && currencyDisplay !== 'name') {\n          var currency = dataLocaleData.numbers.currency[numberingSystem] || dataLocaleData.numbers.currency[dataLocaleData.numbers.nu[0]];\n          thresholdMap = currency.short;\n        } else {\n          var decimal = dataLocaleData.numbers.decimal[numberingSystem] || dataLocaleData.numbers.decimal[dataLocaleData.numbers.nu[0]];\n          thresholdMap = compactDisplay === 'long' ? decimal.long : decimal.short;\n        }\n        if (!thresholdMap) {\n          return 0;\n        }\n        var num = String(Math.pow(10, magnitude));\n        var thresholds = Object.keys(thresholdMap); // TODO: this can be pre-processed\n        if (num < thresholds[0]) {\n          return 0;\n        }\n        if (num > thresholds[thresholds.length - 1]) {\n          return thresholds[thresholds.length - 1].length - 1;\n        }\n        var i = thresholds.indexOf(num);\n        if (i === -1) {\n          return 0;\n        }\n        // See https://unicode.org/reports/tr35/tr35-numbers.html#Compact_Number_Formats\n        // Special handling if the pattern is precisely `0`.\n        var magnitudeKey = thresholds[i];\n        // TODO: do we need to handle plural here?\n        var compactPattern = thresholdMap[magnitudeKey].other;\n        if (compactPattern === '0') {\n          return 0;\n        }\n        // Example: in zh-TW, `10000000` maps to `0000萬`. So we need to return 8 - 4 = 4 here.\n        return magnitudeKey.length - thresholdMap[magnitudeKey].other.match(/0+/)[0].length;\n      }\n  }\n}\nexports.ComputeExponentForMagnitude = ComputeExponentForMagnitude;","map":{"version":3,"names":["Object","defineProperty","exports","value","ComputeExponentForMagnitude","numberFormat","magnitude","_a","getInternalSlots","internalSlots","notation","dataLocaleData","numberingSystem","Math","floor","compactDisplay","style","currencyDisplay","thresholdMap","currency","numbers","nu","short","decimal","long","num","String","pow","thresholds","keys","length","i","indexOf","magnitudeKey","compactPattern","other","match"],"sources":["C:/Users/chest/OneDrive/Documentos/GitHub/HackUPC/frontend/node_modules/@formatjs/ecma402-abstract/NumberFormat/ComputeExponentForMagnitude.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ComputeExponentForMagnitude = void 0;\n/**\n * The abstract operation ComputeExponentForMagnitude computes an exponent by which to scale a\n * number of the given magnitude (power of ten of the most significant digit) according to the\n * locale and the desired notation (scientific, engineering, or compact).\n */\nfunction ComputeExponentForMagnitude(numberFormat, magnitude, _a) {\n    var getInternalSlots = _a.getInternalSlots;\n    var internalSlots = getInternalSlots(numberFormat);\n    var notation = internalSlots.notation, dataLocaleData = internalSlots.dataLocaleData, numberingSystem = internalSlots.numberingSystem;\n    switch (notation) {\n        case 'standard':\n            return 0;\n        case 'scientific':\n            return magnitude;\n        case 'engineering':\n            return Math.floor(magnitude / 3) * 3;\n        default: {\n            // Let exponent be an implementation- and locale-dependent (ILD) integer by which to scale a\n            // number of the given magnitude in compact notation for the current locale.\n            var compactDisplay = internalSlots.compactDisplay, style = internalSlots.style, currencyDisplay = internalSlots.currencyDisplay;\n            var thresholdMap = void 0;\n            if (style === 'currency' && currencyDisplay !== 'name') {\n                var currency = dataLocaleData.numbers.currency[numberingSystem] ||\n                    dataLocaleData.numbers.currency[dataLocaleData.numbers.nu[0]];\n                thresholdMap = currency.short;\n            }\n            else {\n                var decimal = dataLocaleData.numbers.decimal[numberingSystem] ||\n                    dataLocaleData.numbers.decimal[dataLocaleData.numbers.nu[0]];\n                thresholdMap = compactDisplay === 'long' ? decimal.long : decimal.short;\n            }\n            if (!thresholdMap) {\n                return 0;\n            }\n            var num = String(Math.pow(10, magnitude));\n            var thresholds = Object.keys(thresholdMap); // TODO: this can be pre-processed\n            if (num < thresholds[0]) {\n                return 0;\n            }\n            if (num > thresholds[thresholds.length - 1]) {\n                return thresholds[thresholds.length - 1].length - 1;\n            }\n            var i = thresholds.indexOf(num);\n            if (i === -1) {\n                return 0;\n            }\n            // See https://unicode.org/reports/tr35/tr35-numbers.html#Compact_Number_Formats\n            // Special handling if the pattern is precisely `0`.\n            var magnitudeKey = thresholds[i];\n            // TODO: do we need to handle plural here?\n            var compactPattern = thresholdMap[magnitudeKey].other;\n            if (compactPattern === '0') {\n                return 0;\n            }\n            // Example: in zh-TW, `10000000` maps to `0000萬`. So we need to return 8 - 4 = 4 here.\n            return (magnitudeKey.length -\n                thresholdMap[magnitudeKey].other.match(/0+/)[0].length);\n        }\n    }\n}\nexports.ComputeExponentForMagnitude = ComputeExponentForMagnitude;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}