{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"ValidationError\", {\n  enumerable: true,\n  get: function () {\n    return _ValidationError.default;\n  }\n});\nexports.disableValidation = disableValidation;\nexports.enableValidation = enableValidation;\nexports.needValidate = needValidate;\nexports.validate = validate;\nvar _ValidationError = _interopRequireDefault(require(\"./ValidationError\"));\nvar _memorize = _interopRequireDefault(require(\"./util/memorize\"));\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nconst getAjv = (0, _memorize.default)(() => {\n  // Use CommonJS require for ajv libs so TypeScript consumers aren't locked into esModuleInterop (see #110).\n  // eslint-disable-next-line global-require\n  const Ajv = require(\"ajv\").default;\n  // eslint-disable-next-line global-require\n  const ajvKeywords = require(\"ajv-keywords\").default;\n  // eslint-disable-next-line global-require\n  const addFormats = require(\"ajv-formats\").default;\n\n  /**\n   * @type {Ajv}\n   */\n  const ajv = new Ajv({\n    strict: false,\n    allErrors: true,\n    verbose: true,\n    $data: true\n  });\n  ajvKeywords(ajv, [\"instanceof\", \"patternRequired\"]);\n  addFormats(ajv, {\n    keywords: true\n  });\n\n  // Custom keywords\n  // eslint-disable-next-line global-require\n  const addAbsolutePathKeyword = require(\"./keywords/absolutePath\").default;\n  addAbsolutePathKeyword(ajv);\n  const addUndefinedAsNullKeyword =\n  // eslint-disable-next-line global-require\n  require(\"./keywords/undefinedAsNull\").default;\n  addUndefinedAsNullKeyword(ajv);\n  return ajv;\n});\n\n/** @typedef {import(\"json-schema\").JSONSchema4} JSONSchema4 */\n/** @typedef {import(\"json-schema\").JSONSchema6} JSONSchema6 */\n/** @typedef {import(\"json-schema\").JSONSchema7} JSONSchema7 */\n/** @typedef {import(\"ajv\").ErrorObject} ErrorObject */\n\n/**\n * @typedef {Object} Extend\n * @property {string=} formatMinimum\n * @property {string=} formatMaximum\n * @property {string=} formatExclusiveMinimum\n * @property {string=} formatExclusiveMaximum\n * @property {string=} link\n * @property {boolean=} undefinedAsNull\n */\n\n/** @typedef {(JSONSchema4 | JSONSchema6 | JSONSchema7) & Extend} Schema */\n\n/** @typedef {ErrorObject & { children?: Array<ErrorObject> }} SchemaUtilErrorObject */\n\n/**\n * @callback PostFormatter\n * @param {string} formattedError\n * @param {SchemaUtilErrorObject} error\n * @returns {string}\n */\n\n/**\n * @typedef {Object} ValidationErrorConfiguration\n * @property {string=} name\n * @property {string=} baseDataPath\n * @property {PostFormatter=} postFormatter\n */\n\n/**\n * @param {SchemaUtilErrorObject} error\n * @param {number} idx\n * @returns {SchemaUtilErrorObject}\n */\nfunction applyPrefix(error, idx) {\n  // eslint-disable-next-line no-param-reassign\n  error.instancePath = `[${idx}]${error.instancePath}`;\n  if (error.children) {\n    error.children.forEach(err => applyPrefix(err, idx));\n  }\n  return error;\n}\nlet skipValidation = false;\n\n// We use `process.env.SKIP_VALIDATION` because you can have multiple `schema-utils` with different version,\n// so we want to disable it globally, `process.env` doesn't supported by browsers, so we have the local `skipValidation` variables\n\n// Enable validation\nfunction enableValidation() {\n  skipValidation = false;\n\n  // Disable validation for any versions\n  if (process && process.env) {\n    process.env.SKIP_VALIDATION = \"n\";\n  }\n}\n\n// Disable validation\nfunction disableValidation() {\n  skipValidation = true;\n  if (process && process.env) {\n    process.env.SKIP_VALIDATION = \"y\";\n  }\n}\n\n// Check if we need to confirm\nfunction needValidate() {\n  if (skipValidation) {\n    return false;\n  }\n  if (process && process.env && process.env.SKIP_VALIDATION) {\n    const value = process.env.SKIP_VALIDATION.trim();\n    if (/^(?:y|yes|true|1|on)$/i.test(value)) {\n      return false;\n    }\n    if (/^(?:n|no|false|0|off)$/i.test(value)) {\n      return true;\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Schema} schema\n * @param {Array<object> | object} options\n * @param {ValidationErrorConfiguration=} configuration\n * @returns {void}\n */\nfunction validate(schema, options, configuration) {\n  if (!needValidate()) {\n    return;\n  }\n  let errors = [];\n  if (Array.isArray(options)) {\n    for (let i = 0; i <= options.length - 1; i++) {\n      errors.push(...validateObject(schema, options[i]).map(err => applyPrefix(err, i)));\n    }\n  } else {\n    errors = validateObject(schema, options);\n  }\n  if (errors.length > 0) {\n    throw new _ValidationError.default(errors, schema, configuration);\n  }\n}\n\n/**\n * @param {Schema} schema\n * @param {Array<object> | object} options\n * @returns {Array<SchemaUtilErrorObject>}\n */\nfunction validateObject(schema, options) {\n  // Not need to cache, because `ajv@8` has built-in cache\n  const compiledSchema = getAjv().compile(schema);\n  const valid = compiledSchema(options);\n  if (valid) return [];\n  return compiledSchema.errors ? filterErrors(compiledSchema.errors) : [];\n}\n\n/**\n * @param {Array<ErrorObject>} errors\n * @returns {Array<SchemaUtilErrorObject>}\n */\nfunction filterErrors(errors) {\n  /** @type {Array<SchemaUtilErrorObject>} */\n  let newErrors = [];\n  for (const error of /** @type {Array<SchemaUtilErrorObject>} */errors) {\n    const {\n      instancePath\n    } = error;\n    /** @type {Array<SchemaUtilErrorObject>} */\n    let children = [];\n    newErrors = newErrors.filter(oldError => {\n      if (oldError.instancePath.includes(instancePath)) {\n        if (oldError.children) {\n          children = children.concat(oldError.children.slice(0));\n        }\n\n        // eslint-disable-next-line no-undefined, no-param-reassign\n        oldError.children = undefined;\n        children.push(oldError);\n        return false;\n      }\n      return true;\n    });\n    if (children.length) {\n      error.children = children;\n    }\n    newErrors.push(error);\n  }\n  return newErrors;\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","enumerable","get","_ValidationError","default","disableValidation","enableValidation","needValidate","validate","_interopRequireDefault","require","_memorize","obj","__esModule","getAjv","Ajv","ajvKeywords","addFormats","ajv","strict","allErrors","verbose","$data","keywords","addAbsolutePathKeyword","addUndefinedAsNullKeyword","applyPrefix","error","idx","instancePath","children","forEach","err","skipValidation","process","env","SKIP_VALIDATION","trim","test","schema","options","configuration","errors","Array","isArray","i","length","push","validateObject","map","compiledSchema","compile","valid","filterErrors","newErrors","filter","oldError","includes","concat","slice","undefined"],"sources":["C:/Users/chest/OneDrive/Documentos/GitHub/HackUPC/frontend/node_modules/css-minimizer-webpack-plugin/node_modules/schema-utils/dist/validate.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"ValidationError\", {\n  enumerable: true,\n  get: function () {\n    return _ValidationError.default;\n  }\n});\nexports.disableValidation = disableValidation;\nexports.enableValidation = enableValidation;\nexports.needValidate = needValidate;\nexports.validate = validate;\nvar _ValidationError = _interopRequireDefault(require(\"./ValidationError\"));\nvar _memorize = _interopRequireDefault(require(\"./util/memorize\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nconst getAjv = (0, _memorize.default)(() => {\n  // Use CommonJS require for ajv libs so TypeScript consumers aren't locked into esModuleInterop (see #110).\n  // eslint-disable-next-line global-require\n  const Ajv = require(\"ajv\").default;\n  // eslint-disable-next-line global-require\n  const ajvKeywords = require(\"ajv-keywords\").default;\n  // eslint-disable-next-line global-require\n  const addFormats = require(\"ajv-formats\").default;\n\n  /**\n   * @type {Ajv}\n   */\n  const ajv = new Ajv({\n    strict: false,\n    allErrors: true,\n    verbose: true,\n    $data: true\n  });\n  ajvKeywords(ajv, [\"instanceof\", \"patternRequired\"]);\n  addFormats(ajv, {\n    keywords: true\n  });\n\n  // Custom keywords\n  // eslint-disable-next-line global-require\n  const addAbsolutePathKeyword = require(\"./keywords/absolutePath\").default;\n  addAbsolutePathKeyword(ajv);\n  const addUndefinedAsNullKeyword =\n  // eslint-disable-next-line global-require\n  require(\"./keywords/undefinedAsNull\").default;\n  addUndefinedAsNullKeyword(ajv);\n  return ajv;\n});\n\n/** @typedef {import(\"json-schema\").JSONSchema4} JSONSchema4 */\n/** @typedef {import(\"json-schema\").JSONSchema6} JSONSchema6 */\n/** @typedef {import(\"json-schema\").JSONSchema7} JSONSchema7 */\n/** @typedef {import(\"ajv\").ErrorObject} ErrorObject */\n\n/**\n * @typedef {Object} Extend\n * @property {string=} formatMinimum\n * @property {string=} formatMaximum\n * @property {string=} formatExclusiveMinimum\n * @property {string=} formatExclusiveMaximum\n * @property {string=} link\n * @property {boolean=} undefinedAsNull\n */\n\n/** @typedef {(JSONSchema4 | JSONSchema6 | JSONSchema7) & Extend} Schema */\n\n/** @typedef {ErrorObject & { children?: Array<ErrorObject> }} SchemaUtilErrorObject */\n\n/**\n * @callback PostFormatter\n * @param {string} formattedError\n * @param {SchemaUtilErrorObject} error\n * @returns {string}\n */\n\n/**\n * @typedef {Object} ValidationErrorConfiguration\n * @property {string=} name\n * @property {string=} baseDataPath\n * @property {PostFormatter=} postFormatter\n */\n\n/**\n * @param {SchemaUtilErrorObject} error\n * @param {number} idx\n * @returns {SchemaUtilErrorObject}\n */\nfunction applyPrefix(error, idx) {\n  // eslint-disable-next-line no-param-reassign\n  error.instancePath = `[${idx}]${error.instancePath}`;\n  if (error.children) {\n    error.children.forEach(err => applyPrefix(err, idx));\n  }\n  return error;\n}\nlet skipValidation = false;\n\n// We use `process.env.SKIP_VALIDATION` because you can have multiple `schema-utils` with different version,\n// so we want to disable it globally, `process.env` doesn't supported by browsers, so we have the local `skipValidation` variables\n\n// Enable validation\nfunction enableValidation() {\n  skipValidation = false;\n\n  // Disable validation for any versions\n  if (process && process.env) {\n    process.env.SKIP_VALIDATION = \"n\";\n  }\n}\n\n// Disable validation\nfunction disableValidation() {\n  skipValidation = true;\n  if (process && process.env) {\n    process.env.SKIP_VALIDATION = \"y\";\n  }\n}\n\n// Check if we need to confirm\nfunction needValidate() {\n  if (skipValidation) {\n    return false;\n  }\n  if (process && process.env && process.env.SKIP_VALIDATION) {\n    const value = process.env.SKIP_VALIDATION.trim();\n    if (/^(?:y|yes|true|1|on)$/i.test(value)) {\n      return false;\n    }\n    if (/^(?:n|no|false|0|off)$/i.test(value)) {\n      return true;\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Schema} schema\n * @param {Array<object> | object} options\n * @param {ValidationErrorConfiguration=} configuration\n * @returns {void}\n */\nfunction validate(schema, options, configuration) {\n  if (!needValidate()) {\n    return;\n  }\n  let errors = [];\n  if (Array.isArray(options)) {\n    for (let i = 0; i <= options.length - 1; i++) {\n      errors.push(...validateObject(schema, options[i]).map(err => applyPrefix(err, i)));\n    }\n  } else {\n    errors = validateObject(schema, options);\n  }\n  if (errors.length > 0) {\n    throw new _ValidationError.default(errors, schema, configuration);\n  }\n}\n\n/**\n * @param {Schema} schema\n * @param {Array<object> | object} options\n * @returns {Array<SchemaUtilErrorObject>}\n */\nfunction validateObject(schema, options) {\n  // Not need to cache, because `ajv@8` has built-in cache\n  const compiledSchema = getAjv().compile(schema);\n  const valid = compiledSchema(options);\n  if (valid) return [];\n  return compiledSchema.errors ? filterErrors(compiledSchema.errors) : [];\n}\n\n/**\n * @param {Array<ErrorObject>} errors\n * @returns {Array<SchemaUtilErrorObject>}\n */\nfunction filterErrors(errors) {\n  /** @type {Array<SchemaUtilErrorObject>} */\n  let newErrors = [];\n  for (const error of /** @type {Array<SchemaUtilErrorObject>} */errors) {\n    const {\n      instancePath\n    } = error;\n    /** @type {Array<SchemaUtilErrorObject>} */\n    let children = [];\n    newErrors = newErrors.filter(oldError => {\n      if (oldError.instancePath.includes(instancePath)) {\n        if (oldError.children) {\n          children = children.concat(oldError.children.slice(0));\n        }\n\n        // eslint-disable-next-line no-undefined, no-param-reassign\n        oldError.children = undefined;\n        children.push(oldError);\n        return false;\n      }\n      return true;\n    });\n    if (children.length) {\n      error.children = children;\n    }\n    newErrors.push(error);\n  }\n  return newErrors;\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}