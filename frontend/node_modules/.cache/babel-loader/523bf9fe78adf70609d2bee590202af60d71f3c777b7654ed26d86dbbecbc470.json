{"ast":null,"code":"let source, pos, end;\nlet openTokenDepth, templateDepth, lastTokenPos, lastSlashWasDivision, templateStack, templateStackDepth, openTokenPosStack, openClassPosStack, nextBraceIsClass, starExportMap, lastStarExportSpecifier, _exports, unsafeGetters, reexports;\nfunction resetState() {\n  openTokenDepth = 0;\n  templateDepth = -1;\n  lastTokenPos = -1;\n  lastSlashWasDivision = false;\n  templateStack = new Array(1024);\n  templateStackDepth = 0;\n  openTokenPosStack = new Array(1024);\n  openClassPosStack = new Array(1024);\n  nextBraceIsClass = false;\n  starExportMap = Object.create(null);\n  lastStarExportSpecifier = null;\n  _exports = new Set();\n  unsafeGetters = new Set();\n  reexports = new Set();\n}\n\n// RequireType\nconst Import = 0;\nconst ExportAssign = 1;\nconst ExportStar = 2;\nfunction parseCJS(source, name = '@') {\n  resetState();\n  try {\n    parseSource(source);\n  } catch (e) {\n    e.message += `\\n  at ${name}:${source.slice(0, pos).split('\\n').length}:${pos - source.lastIndexOf('\\n', pos - 1)}`;\n    e.loc = pos;\n    throw e;\n  }\n  const result = {\n    exports: [..._exports].filter(expt => expt !== undefined && !unsafeGetters.has(expt)),\n    reexports: [...reexports].filter(reexpt => reexpt !== undefined)\n  };\n  resetState();\n  return result;\n}\nfunction decode(str) {\n  if (str[0] === '\"' || str[0] === '\\'') {\n    try {\n      const decoded = (0, eval)(str);\n      // Filter to exclude non-matching UTF-16 surrogate strings\n      for (let i = 0; i < decoded.length; i++) {\n        const surrogatePrefix = decoded.charCodeAt(i) & 0xFC00;\n        if (surrogatePrefix < 0xD800) {\n          // Not a surrogate\n          continue;\n        } else if (surrogatePrefix === 0xD800) {\n          // Validate surrogate pair\n          if ((decoded.charCodeAt(++i) & 0xFC00) !== 0xDC00) return;\n        } else {\n          // Out-of-range surrogate code (above 0xD800)\n          return;\n        }\n      }\n      return decoded;\n    } catch {}\n  } else {\n    return str;\n  }\n}\nfunction parseSource(cjsSource) {\n  source = cjsSource;\n  pos = -1;\n  end = source.length - 1;\n  let ch = 0;\n\n  // Handle #!\n  if (source.charCodeAt(0) === 35 /*#*/ && source.charCodeAt(1) === 33 /*!*/) {\n    if (source.length === 2) return true;\n    pos += 2;\n    while (pos++ < end) {\n      ch = source.charCodeAt(pos);\n      if (ch === 10 /*\\n*/ || ch === 13 /*\\r*/) break;\n    }\n  }\n  while (pos++ < end) {\n    ch = source.charCodeAt(pos);\n    if (ch === 32 || ch < 14 && ch > 8) continue;\n    if (openTokenDepth === 0) {\n      switch (ch) {\n        case 105 /*i*/:\n          if (source.startsWith('mport', pos + 1) && keywordStart(pos)) throwIfImportStatement();\n          lastTokenPos = pos;\n          continue;\n        case 114 /*r*/:\n          const startPos = pos;\n          if (tryParseRequire(Import) && keywordStart(startPos)) tryBacktrackAddStarExportBinding(startPos - 1);\n          lastTokenPos = pos;\n          continue;\n        case 95 /*_*/:\n          if (source.startsWith('interopRequireWildcard', pos + 1) && (keywordStart(pos) || source.charCodeAt(pos - 1) === 46 /*.*/)) {\n            const startPos = pos;\n            pos += 23;\n            if (source.charCodeAt(pos) === 40 /*(*/) {\n              pos++;\n              openTokenPosStack[openTokenDepth++] = lastTokenPos;\n              if (tryParseRequire(Import) && keywordStart(startPos)) {\n                tryBacktrackAddStarExportBinding(startPos - 1);\n              }\n            }\n          } else if (source.startsWith('_export', pos + 1) && (keywordStart(pos) || source.charCodeAt(pos - 1) === 46 /*.*/)) {\n            pos += 8;\n            if (source.startsWith('Star', pos)) pos += 4;\n            if (source.charCodeAt(pos) === 40 /*(*/) {\n              openTokenPosStack[openTokenDepth++] = lastTokenPos;\n              if (source.charCodeAt(++pos) === 114 /*r*/) tryParseRequire(ExportStar);\n            }\n          }\n          lastTokenPos = pos;\n          continue;\n      }\n    }\n    switch (ch) {\n      case 101 /*e*/:\n        if (source.startsWith('xport', pos + 1) && keywordStart(pos)) {\n          if (source.charCodeAt(pos + 6) === 115 /*s*/) tryParseExportsDotAssign(false);else if (openTokenDepth === 0) throwIfExportStatement();\n        }\n        break;\n      case 99 /*c*/:\n        if (keywordStart(pos) && source.startsWith('lass', pos + 1) && isBrOrWs(source.charCodeAt(pos + 5))) nextBraceIsClass = true;\n        break;\n      case 109 /*m*/:\n        if (source.startsWith('odule', pos + 1) && keywordStart(pos)) tryParseModuleExportsDotAssign();\n        break;\n      case 79 /*O*/:\n        if (source.startsWith('bject', pos + 1) && keywordStart(pos)) tryParseObjectDefineOrKeys(openTokenDepth === 0);\n        break;\n      case 40 /*(*/:\n        openTokenPosStack[openTokenDepth++] = lastTokenPos;\n        break;\n      case 41 /*)*/:\n        if (openTokenDepth === 0) throw new Error('Unexpected closing bracket.');\n        openTokenDepth--;\n        break;\n      case 123 /*{*/:\n        openClassPosStack[openTokenDepth] = nextBraceIsClass;\n        nextBraceIsClass = false;\n        openTokenPosStack[openTokenDepth++] = lastTokenPos;\n        break;\n      case 125 /*}*/:\n        if (openTokenDepth === 0) throw new Error('Unexpected closing brace.');\n        if (openTokenDepth-- === templateDepth) {\n          templateDepth = templateStack[--templateStackDepth];\n          templateString();\n        } else {\n          if (templateDepth !== -1 && openTokenDepth < templateDepth) throw new Error('Unexpected closing brace.');\n        }\n        break;\n      case 60 /*>*/:\n        // TODO: <!-- XML comment support\n        break;\n      case 39 /*'*/:\n      case 34 /*\"*/:\n        stringLiteral(ch);\n        break;\n      case 47 /*/*/:\n        {\n          const next_ch = source.charCodeAt(pos + 1);\n          if (next_ch === 47 /*/*/) {\n            lineComment();\n            // dont update lastToken\n            continue;\n          } else if (next_ch === 42 /***/) {\n            blockComment();\n            // dont update lastToken\n            continue;\n          } else {\n            // Division / regex ambiguity handling based on checking backtrack analysis of:\n            // - what token came previously (lastToken)\n            // - if a closing brace or paren, what token came before the corresponding\n            //   opening brace or paren (lastOpenTokenIndex)\n            const lastToken = source.charCodeAt(lastTokenPos);\n            if (isExpressionPunctuator(lastToken) && !(lastToken === 46 /*.*/ && source.charCodeAt(lastTokenPos - 1) >= 48 /*0*/ && source.charCodeAt(lastTokenPos - 1) <= 57 /*9*/) && !(lastToken === 43 /*+*/ && source.charCodeAt(lastTokenPos - 1) === 43 /*+*/) && !(lastToken === 45 /*-*/ && source.charCodeAt(lastTokenPos - 1) === 45 /*-*/) || lastToken === 41 /*)*/ && isParenKeyword(openTokenPosStack[openTokenDepth]) || lastToken === 125 /*}*/ && (isExpressionTerminator(openTokenPosStack[openTokenDepth]) || openClassPosStack[openTokenDepth]) || lastToken === 47 /*/*/ && lastSlashWasDivision || isExpressionKeyword(lastTokenPos) || !lastToken) {\n              regularExpression();\n              lastSlashWasDivision = false;\n            } else {\n              lastSlashWasDivision = true;\n            }\n          }\n          break;\n        }\n      case 96 /*`*/:\n        templateString();\n        break;\n    }\n    lastTokenPos = pos;\n  }\n  if (templateDepth !== -1) throw new Error('Unterminated template.');\n  if (openTokenDepth) throw new Error('Unterminated braces.');\n}\nfunction tryBacktrackAddStarExportBinding(bPos) {\n  while (source.charCodeAt(bPos) === 32 /* */ && bPos >= 0) bPos--;\n  if (source.charCodeAt(bPos) === 61 /*=*/) {\n    bPos--;\n    while (source.charCodeAt(bPos) === 32 /* */ && bPos >= 0) bPos--;\n    let codePoint;\n    const id_end = bPos;\n    let identifierStart = false;\n    while ((codePoint = codePointAtLast(bPos)) && bPos >= 0) {\n      if (codePoint === 92 /*\\*/) return;\n      if (!isIdentifierChar(codePoint, true)) break;\n      identifierStart = isIdentifierStart(codePoint, true);\n      bPos -= codePointLen(codePoint);\n    }\n    if (identifierStart && source.charCodeAt(bPos) === 32 /* */) {\n      const starExportId = source.slice(bPos + 1, id_end + 1);\n      while (source.charCodeAt(bPos) === 32 /* */ && bPos >= 0) bPos--;\n      switch (source.charCodeAt(bPos)) {\n        case 114 /*r*/:\n          if (!source.startsWith('va', bPos - 2)) return;\n          break;\n        case 116 /*t*/:\n          if (!source.startsWith('le', bPos - 2) && !source.startsWith('cons', bPos - 4)) return;\n          break;\n        default:\n          return;\n      }\n      starExportMap[starExportId] = lastStarExportSpecifier;\n    }\n  }\n}\n\n// `Object.` `prototype.`? hasOwnProperty.call(`  IDENTIFIER `, ` IDENTIFIER$2 `)`\nfunction tryParseObjectHasOwnProperty(it_id) {\n  ch = commentWhitespace();\n  if (ch !== 79 /*O*/ || !source.startsWith('bject', pos + 1)) return false;\n  pos += 6;\n  ch = commentWhitespace();\n  if (ch !== 46 /*.*/) return false;\n  pos++;\n  ch = commentWhitespace();\n  if (ch === 112 /*p*/) {\n    if (!source.startsWith('rototype', pos + 1)) return false;\n    pos += 9;\n    ch = commentWhitespace();\n    if (ch !== 46 /*.*/) return false;\n    pos++;\n    ch = commentWhitespace();\n  }\n  if (ch !== 104 /*h*/ || !source.startsWith('asOwnProperty', pos + 1)) return false;\n  pos += 14;\n  ch = commentWhitespace();\n  if (ch !== 46 /*.*/) return false;\n  pos++;\n  ch = commentWhitespace();\n  if (ch !== 99 /*c*/ || !source.startsWith('all', pos + 1)) return false;\n  pos += 4;\n  ch = commentWhitespace();\n  if (ch !== 40 /*(*/) return false;\n  pos++;\n  ch = commentWhitespace();\n  if (!identifier()) return false;\n  ch = commentWhitespace();\n  if (ch !== 44 /*,*/) return false;\n  pos++;\n  ch = commentWhitespace();\n  if (!source.startsWith(it_id, pos)) return false;\n  pos += it_id.length;\n  ch = commentWhitespace();\n  if (ch !== 41 /*)*/) return false;\n  pos++;\n  return true;\n}\nfunction tryParseObjectDefineOrKeys(keys) {\n  pos += 6;\n  let revertPos = pos - 1;\n  let ch = commentWhitespace();\n  if (ch === 46 /*.*/) {\n    pos++;\n    ch = commentWhitespace();\n    if (ch === 100 /*d*/ && source.startsWith('efineProperty', pos + 1)) {\n      let expt;\n      while (true) {\n        pos += 14;\n        revertPos = pos - 1;\n        ch = commentWhitespace();\n        if (ch !== 40 /*(*/) break;\n        pos++;\n        ch = commentWhitespace();\n        if (!readExportsOrModuleDotExports(ch)) break;\n        ch = commentWhitespace();\n        if (ch !== 44 /*,*/) break;\n        pos++;\n        ch = commentWhitespace();\n        if (ch !== 39 /*'*/ && ch !== 34 /*\"*/) break;\n        const exportPos = pos;\n        stringLiteral(ch);\n        expt = source.slice(exportPos, ++pos);\n        ch = commentWhitespace();\n        if (ch !== 44 /*,*/) break;\n        pos++;\n        ch = commentWhitespace();\n        if (ch !== 123 /*{*/) break;\n        pos++;\n        ch = commentWhitespace();\n        if (ch === 101 /*e*/) {\n          if (!source.startsWith('numerable', pos + 1)) break;\n          pos += 10;\n          ch = commentWhitespace();\n          if (ch !== 58 /*:*/) break;\n          pos++;\n          ch = commentWhitespace();\n          if (ch !== 116 /*t*/ || !source.startsWith('rue', pos + 1)) break;\n          pos += 4;\n          ch = commentWhitespace();\n          if (ch !== 44) break;\n          pos++;\n          ch = commentWhitespace();\n        }\n        if (ch === 118 /*v*/) {\n          if (!source.startsWith('alue', pos + 1)) break;\n          pos += 5;\n          ch = commentWhitespace();\n          if (ch !== 58 /*:*/) break;\n          _exports.add(decode(expt));\n          pos = revertPos;\n          return;\n        } else if (ch === 103 /*g*/) {\n          if (!source.startsWith('et', pos + 1)) break;\n          pos += 3;\n          ch = commentWhitespace();\n          if (ch === 58 /*:*/) {\n            pos++;\n            ch = commentWhitespace();\n            if (ch !== 102 /*f*/) break;\n            if (!source.startsWith('unction', pos + 1)) break;\n            pos += 8;\n            let lastPos = pos;\n            ch = commentWhitespace();\n            if (ch !== 40 && (lastPos === pos || !identifier())) break;\n            ch = commentWhitespace();\n          }\n          if (ch !== 40 /*(*/) break;\n          pos++;\n          ch = commentWhitespace();\n          if (ch !== 41 /*)*/) break;\n          pos++;\n          ch = commentWhitespace();\n          if (ch !== 123 /*{*/) break;\n          pos++;\n          ch = commentWhitespace();\n          if (ch !== 114 /*r*/) break;\n          if (!source.startsWith('eturn', pos + 1)) break;\n          pos += 6;\n          ch = commentWhitespace();\n          if (!identifier()) break;\n          ch = commentWhitespace();\n          if (ch === 46 /*.*/) {\n            pos++;\n            commentWhitespace();\n            if (!identifier()) break;\n            ch = commentWhitespace();\n          } else if (ch === 91 /*[*/) {\n            pos++;\n            ch = commentWhitespace();\n            if (ch === 39 /*'*/ || ch === 34 /*\"*/) stringLiteral(ch);else break;\n            pos++;\n            ch = commentWhitespace();\n            if (ch !== 93 /*]*/) break;\n            pos++;\n            ch = commentWhitespace();\n          }\n          if (ch === 59 /*;*/) {\n            pos++;\n            ch = commentWhitespace();\n          }\n          if (ch !== 125 /*}*/) break;\n          pos++;\n          ch = commentWhitespace();\n          if (ch === 44 /*,*/) {\n            pos++;\n            ch = commentWhitespace();\n          }\n          if (ch !== 125 /*}*/) break;\n          pos++;\n          ch = commentWhitespace();\n          if (ch !== 41 /*)*/) break;\n          _exports.add(decode(expt));\n          return;\n        }\n        break;\n      }\n      if (expt) {\n        unsafeGetters.add(decode(expt));\n      }\n    } else if (keys && ch === 107 /*k*/ && source.startsWith('eys', pos + 1)) {\n      while (true) {\n        pos += 4;\n        revertPos = pos - 1;\n        ch = commentWhitespace();\n        if (ch !== 40 /*(*/) break;\n        pos++;\n        ch = commentWhitespace();\n        const id_start = pos;\n        if (!identifier()) break;\n        const id = source.slice(id_start, pos);\n        ch = commentWhitespace();\n        if (ch !== 41 /*)*/) break;\n        revertPos = pos++;\n        ch = commentWhitespace();\n        if (ch !== 46 /*.*/) break;\n        pos++;\n        ch = commentWhitespace();\n        if (ch !== 102 /*f*/ || !source.startsWith('orEach', pos + 1)) break;\n        pos += 7;\n        ch = commentWhitespace();\n        revertPos = pos - 1;\n        if (ch !== 40 /*(*/) break;\n        pos++;\n        ch = commentWhitespace();\n        if (ch !== 102 /*f*/ || !source.startsWith('unction', pos + 1)) break;\n        pos += 8;\n        ch = commentWhitespace();\n        if (ch !== 40 /*(*/) break;\n        pos++;\n        ch = commentWhitespace();\n        const it_id_start = pos;\n        if (!identifier()) break;\n        const it_id = source.slice(it_id_start, pos);\n        ch = commentWhitespace();\n        if (ch !== 41 /*)*/) break;\n        pos++;\n        ch = commentWhitespace();\n        if (ch !== 123 /*{*/) break;\n        pos++;\n        ch = commentWhitespace();\n        if (ch !== 105 /*i*/ || source.charCodeAt(pos + 1) !== 102 /*f*/) break;\n        pos += 2;\n        ch = commentWhitespace();\n        if (ch !== 40 /*(*/) break;\n        pos++;\n        ch = commentWhitespace();\n        if (!source.startsWith(it_id, pos)) break;\n        pos += it_id.length;\n        ch = commentWhitespace();\n        // `if (` IDENTIFIER$2 `===` ( `'default'` | `\"default\"` ) `||` IDENTIFIER$2 `===` ( '__esModule' | `\"__esModule\"` ) `) return` `;`? |\n        if (ch === 61 /*=*/) {\n          if (!source.startsWith('==', pos + 1)) break;\n          pos += 3;\n          ch = commentWhitespace();\n          if (ch !== 34 /*\"*/ && ch !== 39 /*'*/) break;\n          let quot = ch;\n          if (!source.startsWith('default', pos + 1)) break;\n          pos += 8;\n          ch = commentWhitespace();\n          if (ch !== quot) break;\n          pos += 1;\n          ch = commentWhitespace();\n          if (ch !== 124 /*|*/ || source.charCodeAt(pos + 1) !== 124 /*|*/) break;\n          pos += 2;\n          ch = commentWhitespace();\n          if (source.slice(pos, pos + it_id.length) !== it_id) break;\n          pos += it_id.length;\n          ch = commentWhitespace();\n          if (ch !== 61 /*=*/ || source.slice(pos + 1, pos + 3) !== '==') break;\n          pos += 3;\n          ch = commentWhitespace();\n          if (ch !== 34 /*\"*/ && ch !== 39 /*'*/) break;\n          quot = ch;\n          if (!source.startsWith('__esModule', pos + 1)) break;\n          pos += 11;\n          ch = commentWhitespace();\n          if (ch !== quot) break;\n          pos += 1;\n          ch = commentWhitespace();\n          if (ch !== 41 /*)*/) break;\n          pos += 1;\n          ch = commentWhitespace();\n          if (ch !== 114 /*r*/ || !source.startsWith('eturn', pos + 1)) break;\n          pos += 6;\n          ch = commentWhitespace();\n          if (ch === 59 /*;*/) pos++;\n          ch = commentWhitespace();\n\n          // `if (`\n          if (ch === 105 /*i*/ && source.charCodeAt(pos + 1) === 102 /*f*/) {\n            let inIf = true;\n            pos += 2;\n            ch = commentWhitespace();\n            if (ch !== 40 /*(*/) break;\n            pos++;\n            const ifInnerPos = pos;\n            // `Object.prototype.hasOwnProperty.call(`  IDENTIFIER `, ` IDENTIFIER$2 `)) return` `;`?\n            if (tryParseObjectHasOwnProperty(it_id)) {\n              ch = commentWhitespace();\n              if (ch !== 41 /*)*/) break;\n              pos++;\n              ch = commentWhitespace();\n              if (ch !== 114 /*r*/ || !source.startsWith('eturn', pos + 1)) break;\n              pos += 6;\n              ch = commentWhitespace();\n              if (ch === 59 /*;*/) pos++;\n              ch = commentWhitespace();\n              // match next if\n              if (ch === 105 /*i*/ && source.charCodeAt(pos + 1) === 102 /*f*/) {\n                pos += 2;\n                ch = commentWhitespace();\n                if (ch !== 40 /*(*/) break;\n                pos++;\n              } else {\n                inIf = false;\n              }\n            } else {\n              pos = ifInnerPos;\n            }\n\n            // IDENTIFIER$2 `in` EXPORTS_IDENTIFIER `&&` EXPORTS_IDENTIFIER `[` IDENTIFIER$2 `] ===` IDENTIFIER$1 `[` IDENTIFIER$2 `]) return` `;`?\n            if (inIf) {\n              if (!source.startsWith(it_id, pos)) break;\n              pos += it_id.length;\n              ch = commentWhitespace();\n              if (ch !== 105 /*i*/ || !source.startsWith('n ', pos + 1)) break;\n              pos += 3;\n              ch = commentWhitespace();\n              if (!readExportsOrModuleDotExports(ch)) break;\n              ch = commentWhitespace();\n              if (ch !== 38 /*&*/ || source.charCodeAt(pos + 1) !== 38 /*&*/) break;\n              pos += 2;\n              ch = commentWhitespace();\n              if (!readExportsOrModuleDotExports(ch)) break;\n              ch = commentWhitespace();\n              if (ch !== 91 /*[*/) break;\n              pos++;\n              ch = commentWhitespace();\n              if (!source.startsWith(it_id, pos)) break;\n              pos += it_id.length;\n              ch = commentWhitespace();\n              if (ch !== 93 /*]*/) break;\n              pos++;\n              ch = commentWhitespace();\n              if (ch !== 61 /*=*/ || !source.startsWith('==', pos + 1)) break;\n              pos += 3;\n              ch = commentWhitespace();\n              if (!source.startsWith(id, pos)) break;\n              pos += id.length;\n              ch = commentWhitespace();\n              if (ch !== 91 /*[*/) break;\n              pos++;\n              ch = commentWhitespace();\n              if (!source.startsWith(it_id, pos)) break;\n              pos += it_id.length;\n              ch = commentWhitespace();\n              if (ch !== 93 /*]*/) break;\n              pos++;\n              ch = commentWhitespace();\n              if (ch !== 41 /*)*/) break;\n              pos++;\n              ch = commentWhitespace();\n              if (ch !== 114 /*r*/ || !source.startsWith('eturn', pos + 1)) break;\n              pos += 6;\n              ch = commentWhitespace();\n              if (ch === 59 /*;*/) pos++;\n              ch = commentWhitespace();\n            }\n          }\n        }\n        // `if (` IDENTIFIER$2 `!==` ( `'default'` | `\"default\"` ) (`&& !` IDENTIFIER `.hasOwnProperty(` IDENTIFIER$2 `)`  )? `)`\n        else if (ch === 33 /*!*/) {\n          if (!source.startsWith('==', pos + 1)) break;\n          pos += 3;\n          ch = commentWhitespace();\n          if (ch !== 34 /*\"*/ && ch !== 39 /*'*/) break;\n          const quot = ch;\n          if (!source.startsWith('default', pos + 1)) break;\n          pos += 8;\n          ch = commentWhitespace();\n          if (ch !== quot) break;\n          pos += 1;\n          ch = commentWhitespace();\n          if (ch === 38 /*&*/) {\n            if (source.charCodeAt(pos + 1) !== 38 /*&*/) break;\n            pos += 2;\n            ch = commentWhitespace();\n            if (ch !== 33 /*!*/) break;\n            pos += 1;\n            ch = commentWhitespace();\n            if (ch === 79 /*O*/ && source.startsWith('bject', pos + 1) && source[pos + 6] === '.') {\n              if (!tryParseObjectHasOwnProperty(it_id)) break;\n            } else if (identifier()) {\n              ch = commentWhitespace();\n              if (ch !== 46 /*.*/) break;\n              pos++;\n              ch = commentWhitespace();\n              if (ch !== 104 /*h*/ || !source.startsWith('asOwnProperty', pos + 1)) break;\n              pos += 14;\n              ch = commentWhitespace();\n              if (ch !== 40 /*(*/) break;\n              pos += 1;\n              ch = commentWhitespace();\n              if (!source.startsWith(it_id, pos)) break;\n              pos += it_id.length;\n              ch = commentWhitespace();\n              if (ch !== 41 /*)*/) break;\n              pos += 1;\n            } else break;\n            ch = commentWhitespace();\n          }\n          if (ch !== 41 /*)*/) break;\n          pos += 1;\n          ch = commentWhitespace();\n        } else break;\n\n        // EXPORTS_IDENTIFIER `[` IDENTIFIER$2 `] =` IDENTIFIER$1 `[` IDENTIFIER$2 `]`\n        if (readExportsOrModuleDotExports(ch)) {\n          ch = commentWhitespace();\n          if (ch !== 91 /*[*/) break;\n          pos++;\n          ch = commentWhitespace();\n          if (source.slice(pos, pos + it_id.length) !== it_id) break;\n          pos += it_id.length;\n          ch = commentWhitespace();\n          if (ch !== 93 /*]*/) break;\n          pos++;\n          ch = commentWhitespace();\n          if (ch !== 61 /*=*/) break;\n          pos++;\n          ch = commentWhitespace();\n          if (source.slice(pos, pos + id.length) !== id) break;\n          pos += id.length;\n          ch = commentWhitespace();\n          if (ch !== 91 /*[*/) break;\n          pos++;\n          ch = commentWhitespace();\n          if (source.slice(pos, pos + it_id.length) !== it_id) break;\n          pos += it_id.length;\n          ch = commentWhitespace();\n          if (ch !== 93 /*]*/) break;\n          pos++;\n          ch = commentWhitespace();\n          if (ch === 59 /*;*/) {\n            pos++;\n            ch = commentWhitespace();\n          }\n        }\n        // `Object.defineProperty(` EXPORTS_IDENTIFIER `, ` IDENTIFIER$2 `, { enumerable: true, get: function () { return ` IDENTIFIER$1 `[` IDENTIFIER$2 `]; } })`\n        else if (ch === 79 /*O*/) {\n          if (source.slice(pos + 1, pos + 6) !== 'bject') break;\n          pos += 6;\n          ch = commentWhitespace();\n          if (ch !== 46 /*.*/) break;\n          pos++;\n          ch = commentWhitespace();\n          if (ch !== 100 /*d*/ || !source.startsWith('efineProperty', pos + 1)) break;\n          pos += 14;\n          ch = commentWhitespace();\n          if (ch !== 40 /*(*/) break;\n          pos++;\n          ch = commentWhitespace();\n          if (!readExportsOrModuleDotExports(ch)) break;\n          ch = commentWhitespace();\n          if (ch !== 44 /*,*/) break;\n          pos++;\n          ch = commentWhitespace();\n          if (!source.startsWith(it_id, pos)) break;\n          pos += it_id.length;\n          ch = commentWhitespace();\n          if (ch !== 44 /*,*/) break;\n          pos++;\n          ch = commentWhitespace();\n          if (ch !== 123 /*{*/) break;\n          pos++;\n          ch = commentWhitespace();\n          if (ch !== 101 /*e*/ || !source.startsWith('numerable', pos + 1)) break;\n          pos += 10;\n          ch = commentWhitespace();\n          if (ch !== 58 /*:*/) break;\n          pos++;\n          ch = commentWhitespace();\n          if (ch !== 116 /*t*/ && !source.startsWith('rue', pos + 1)) break;\n          pos += 4;\n          ch = commentWhitespace();\n          if (ch !== 44 /*,*/) break;\n          pos++;\n          ch = commentWhitespace();\n          if (ch !== 103 /*g*/ || !source.startsWith('et', pos + 1)) break;\n          pos += 3;\n          ch = commentWhitespace();\n          if (ch === 58 /*:*/) {\n            pos++;\n            ch = commentWhitespace();\n            if (ch !== 102 /*f*/) break;\n            if (!source.startsWith('unction', pos + 1)) break;\n            pos += 8;\n            let lastPos = pos;\n            ch = commentWhitespace();\n            if (ch !== 40 && (lastPos === pos || !identifier())) break;\n            ch = commentWhitespace();\n          }\n          if (ch !== 40 /*(*/) break;\n          pos++;\n          ch = commentWhitespace();\n          if (ch !== 41 /*)*/) break;\n          pos++;\n          ch = commentWhitespace();\n          if (ch !== 123 /*{*/) break;\n          pos++;\n          ch = commentWhitespace();\n          if (ch !== 114 /*r*/ || !source.startsWith('eturn', pos + 1)) break;\n          pos += 6;\n          ch = commentWhitespace();\n          if (!source.startsWith(id, pos)) break;\n          pos += id.length;\n          ch = commentWhitespace();\n          if (ch !== 91 /*[*/) break;\n          pos++;\n          ch = commentWhitespace();\n          if (!source.startsWith(it_id, pos)) break;\n          pos += it_id.length;\n          ch = commentWhitespace();\n          if (ch !== 93 /*]*/) break;\n          pos++;\n          ch = commentWhitespace();\n          if (ch === 59 /*;*/) {\n            pos++;\n            ch = commentWhitespace();\n          }\n          if (ch !== 125 /*}*/) break;\n          pos++;\n          ch = commentWhitespace();\n          if (ch === 44 /*,*/) {\n            pos++;\n            ch = commentWhitespace();\n          }\n          if (ch !== 125 /*}*/) break;\n          pos++;\n          ch = commentWhitespace();\n          if (ch !== 41 /*)*/) break;\n          pos++;\n          ch = commentWhitespace();\n          if (ch === 59 /*;*/) {\n            pos++;\n            ch = commentWhitespace();\n          }\n        } else break;\n        if (ch !== 125 /*}*/) break;\n        pos++;\n        ch = commentWhitespace();\n        if (ch !== 41 /*)*/) break;\n        const starExportSpecifier = starExportMap[id];\n        if (starExportSpecifier) {\n          reexports.add(decode(starExportSpecifier));\n          pos = revertPos;\n          return;\n        }\n        return;\n      }\n    }\n  }\n  pos = revertPos;\n}\nfunction readExportsOrModuleDotExports(ch) {\n  const revertPos = pos;\n  if (ch === 109 /*m*/ && source.startsWith('odule', pos + 1)) {\n    pos += 6;\n    ch = commentWhitespace();\n    if (ch !== 46 /*.*/) {\n      pos = revertPos;\n      return false;\n    }\n    pos++;\n    ch = commentWhitespace();\n  }\n  if (ch === 101 /*e*/ && source.startsWith('xports', pos + 1)) {\n    pos += 7;\n    return true;\n  } else {\n    pos = revertPos;\n    return false;\n  }\n}\nfunction tryParseModuleExportsDotAssign() {\n  pos += 6;\n  const revertPos = pos - 1;\n  let ch = commentWhitespace();\n  if (ch === 46 /*.*/) {\n    pos++;\n    ch = commentWhitespace();\n    if (ch === 101 /*e*/ && source.startsWith('xports', pos + 1)) {\n      tryParseExportsDotAssign(true);\n      return;\n    }\n  }\n  pos = revertPos;\n}\nfunction tryParseExportsDotAssign(assign) {\n  pos += 7;\n  const revertPos = pos - 1;\n  let ch = commentWhitespace();\n  switch (ch) {\n    // exports.asdf\n    case 46 /*.*/:\n      {\n        pos++;\n        ch = commentWhitespace();\n        const startPos = pos;\n        if (identifier()) {\n          const endPos = pos;\n          ch = commentWhitespace();\n          if (ch === 61 /*=*/) {\n            _exports.add(decode(source.slice(startPos, endPos)));\n            return;\n          }\n        }\n        break;\n      }\n    // exports['asdf']\n    case 91 /*[*/:\n      {\n        pos++;\n        ch = commentWhitespace();\n        if (ch === 39 /*'*/ || ch === 34 /*\"*/) {\n          const startPos = pos;\n          stringLiteral(ch);\n          const endPos = ++pos;\n          ch = commentWhitespace();\n          if (ch !== 93 /*]*/) break;\n          pos++;\n          ch = commentWhitespace();\n          if (ch !== 61 /*=*/) break;\n          _exports.add(decode(source.slice(startPos, endPos)));\n        }\n        break;\n      }\n    // module.exports =\n    case 61 /*=*/:\n      {\n        if (assign) {\n          if (reexports.size) reexports = new Set();\n          pos++;\n          ch = commentWhitespace();\n          // { ... }\n          if (ch === 123 /*{*/) {\n            tryParseLiteralExports();\n            return;\n          }\n\n          // require('...')\n          if (ch === 114 /*r*/) tryParseRequire(ExportAssign);\n        }\n      }\n  }\n  pos = revertPos;\n}\nfunction tryParseRequire(requireType) {\n  // require('...')\n  const revertPos = pos;\n  if (source.startsWith('equire', pos + 1)) {\n    pos += 7;\n    let ch = commentWhitespace();\n    if (ch === 40 /*(*/) {\n      pos++;\n      ch = commentWhitespace();\n      const reexportStart = pos;\n      if (ch === 39 /*'*/ || ch === 34 /*\"*/) {\n        stringLiteral(ch);\n        const reexportEnd = ++pos;\n        ch = commentWhitespace();\n        if (ch === 41 /*)*/) {\n          switch (requireType) {\n            case ExportAssign:\n              reexports.add(decode(source.slice(reexportStart, reexportEnd)));\n              return true;\n            case ExportStar:\n              reexports.add(decode(source.slice(reexportStart, reexportEnd)));\n              return true;\n            default:\n              lastStarExportSpecifier = decode(source.slice(reexportStart, reexportEnd));\n              return true;\n          }\n        }\n      }\n    }\n    pos = revertPos;\n  }\n  return false;\n}\nfunction tryParseLiteralExports() {\n  const revertPos = pos - 1;\n  while (pos++ < end) {\n    let ch = commentWhitespace();\n    const startPos = pos;\n    if (identifier()) {\n      const endPos = pos;\n      ch = commentWhitespace();\n      if (ch === 58 /*:*/) {\n        pos++;\n        ch = commentWhitespace();\n        // nothing more complex than identifier expressions for now\n        if (!identifier()) {\n          pos = revertPos;\n          return;\n        }\n        ch = source.charCodeAt(pos);\n      }\n      _exports.add(decode(source.slice(startPos, endPos)));\n    } else if (ch === 46 /*.*/ && source.startsWith('..', pos + 1)) {\n      pos += 3;\n      if (source.charCodeAt(pos) === 114 /*r*/ && tryParseRequire(ExportAssign)) {\n        pos++;\n      } else if (!identifier()) {\n        pos = revertPos;\n        return;\n      }\n      ch = commentWhitespace();\n    } else if (ch === 39 /*'*/ || ch === 34 /*\"*/) {\n      const startPos = pos;\n      stringLiteral(ch);\n      const endPos = ++pos;\n      ch = commentWhitespace();\n      if (ch === 58 /*:*/) {\n        pos++;\n        ch = commentWhitespace();\n        // nothing more complex than identifier expressions for now\n        if (!identifier()) {\n          pos = revertPos;\n          return;\n        }\n        ch = source.charCodeAt(pos);\n        _exports.add(decode(source.slice(startPos, endPos)));\n      }\n    } else {\n      pos = revertPos;\n      return;\n    }\n    if (ch === 125 /*}*/) return;\n    if (ch !== 44 /*,*/) {\n      pos = revertPos;\n      return;\n    }\n  }\n}\n\n// --- Extracted from AcornJS ---\n//(https://github.com/acornjs/acorn/blob/master/acorn/src/identifier.js#L23\n//\n// MIT License\n\n// Copyright (C) 2012-2018 by various contributors (see AUTHORS)\n\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n// ## Character categories\n\n// Big ugly regular expressions that match characters in the\n// whitespace, identifier, and identifier-start categories. These\n// are only applied when a character is found to actually have a\n// code point above 128.\n// Generated by `bin/generate-identifier-regex.js`.\nlet nonASCIIidentifierStartChars = \"\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u037f\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u052f\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05d0-\\u05ea\\u05ef-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086a\\u08a0-\\u08b4\\u08b6-\\u08c7\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u09fc\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0af9\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c39\\u0c3d\\u0c58-\\u0c5a\\u0c60\\u0c61\\u0c80\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d04-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d54-\\u0d56\\u0d5f-\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e86-\\u0e8a\\u0e8c-\\u0ea3\\u0ea5\\u0ea7-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f5\\u13f8-\\u13fd\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f8\\u1700-\\u170c\\u170e-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1878\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191e\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4b\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1c80-\\u1c88\\u1c90-\\u1cba\\u1cbd-\\u1cbf\\u1ce9-\\u1cec\\u1cee-\\u1cf3\\u1cf5\\u1cf6\\u1cfa\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2118-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309b-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312f\\u3131-\\u318e\\u31a0-\\u31bf\\u31f0-\\u31ff\\u3400-\\u4dbf\\u4e00-\\u9ffc\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua69d\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua7bf\\ua7c2-\\ua7ca\\ua7f5-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua8fd\\ua8fe\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\ua9e0-\\ua9e4\\ua9e6-\\ua9ef\\ua9fa-\\ua9fe\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa7e-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uab30-\\uab5a\\uab5c-\\uab69\\uab70-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc\";\nlet nonASCIIidentifierChars = \"\\u200c\\u200d\\xb7\\u0300-\\u036f\\u0387\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u064b-\\u0669\\u0670\\u06d6-\\u06dc\\u06df-\\u06e4\\u06e7\\u06e8\\u06ea-\\u06ed\\u06f0-\\u06f9\\u0711\\u0730-\\u074a\\u07a6-\\u07b0\\u07c0-\\u07c9\\u07eb-\\u07f3\\u07fd\\u0816-\\u0819\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0859-\\u085b\\u08d3-\\u08e1\\u08e3-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09cb-\\u09cd\\u09d7\\u09e2\\u09e3\\u09e6-\\u09ef\\u09fe\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2\\u0ae3\\u0ae6-\\u0aef\\u0afa-\\u0aff\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b55-\\u0b57\\u0b62\\u0b63\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c00-\\u0c04\\u0c3e-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62\\u0c63\\u0c66-\\u0c6f\\u0c81-\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2\\u0ce3\\u0ce6-\\u0cef\\u0d00-\\u0d03\\u0d3b\\u0d3c\\u0d3e-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4d\\u0d57\\u0d62\\u0d63\\u0d66-\\u0d6f\\u0d81-\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0de6-\\u0def\\u0df2\\u0df3\\u0e31\\u0e34-\\u0e3a\\u0e47-\\u0e4e\\u0e50-\\u0e59\\u0eb1\\u0eb4-\\u0ebc\\u0ec8-\\u0ecd\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f3e\\u0f3f\\u0f71-\\u0f84\\u0f86\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u102b-\\u103e\\u1040-\\u1049\\u1056-\\u1059\\u105e-\\u1060\\u1062-\\u1064\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u1369-\\u1371\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17b4-\\u17d3\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u1810-\\u1819\\u18a9\\u1920-\\u192b\\u1930-\\u193b\\u1946-\\u194f\\u19d0-\\u19da\\u1a17-\\u1a1b\\u1a55-\\u1a5e\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1ab0-\\u1abd\\u1abf\\u1ac0\\u1b00-\\u1b04\\u1b34-\\u1b44\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1b80-\\u1b82\\u1ba1-\\u1bad\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c24-\\u1c37\\u1c40-\\u1c49\\u1c50-\\u1c59\\u1cd0-\\u1cd2\\u1cd4-\\u1ce8\\u1ced\\u1cf4\\u1cf7-\\u1cf9\\u1dc0-\\u1df9\\u1dfb-\\u1dff\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2cef-\\u2cf1\\u2d7f\\u2de0-\\u2dff\\u302a-\\u302f\\u3099\\u309a\\ua620-\\ua629\\ua66f\\ua674-\\ua67d\\ua69e\\ua69f\\ua6f0\\ua6f1\\ua802\\ua806\\ua80b\\ua823-\\ua827\\ua82c\\ua880\\ua881\\ua8b4-\\ua8c5\\ua8d0-\\ua8d9\\ua8e0-\\ua8f1\\ua8ff-\\ua909\\ua926-\\ua92d\\ua947-\\ua953\\ua980-\\ua983\\ua9b3-\\ua9c0\\ua9d0-\\ua9d9\\ua9e5\\ua9f0-\\ua9f9\\uaa29-\\uaa36\\uaa43\\uaa4c\\uaa4d\\uaa50-\\uaa59\\uaa7b-\\uaa7d\\uaab0\\uaab2-\\uaab4\\uaab7\\uaab8\\uaabe\\uaabf\\uaac1\\uaaeb-\\uaaef\\uaaf5\\uaaf6\\uabe3-\\uabea\\uabec\\uabed\\uabf0-\\uabf9\\ufb1e\\ufe00-\\ufe0f\\ufe20-\\ufe2f\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f\";\nconst nonASCIIidentifierStart = new RegExp(\"[\" + nonASCIIidentifierStartChars + \"]\");\nconst nonASCIIidentifier = new RegExp(\"[\" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + \"]\");\nnonASCIIidentifierStartChars = nonASCIIidentifierChars = null;\n\n// These are a run-length and offset encoded representation of the\n// >0xffff code points that are a valid part of identifiers. The\n// offset starts at 0x10000, and each pair of numbers represents an\n// offset to the next range, and then a size of the range. They were\n// generated by bin/generate-identifier-regex.js\n\n// eslint-disable-next-line comma-spacing\nconst astralIdentifierStartCodes = [0, 11, 2, 25, 2, 18, 2, 1, 2, 14, 3, 13, 35, 122, 70, 52, 268, 28, 4, 48, 48, 31, 14, 29, 6, 37, 11, 29, 3, 35, 5, 7, 2, 4, 43, 157, 19, 35, 5, 35, 5, 39, 9, 51, 157, 310, 10, 21, 11, 7, 153, 5, 3, 0, 2, 43, 2, 1, 4, 0, 3, 22, 11, 22, 10, 30, 66, 18, 2, 1, 11, 21, 11, 25, 71, 55, 7, 1, 65, 0, 16, 3, 2, 2, 2, 28, 43, 28, 4, 28, 36, 7, 2, 27, 28, 53, 11, 21, 11, 18, 14, 17, 111, 72, 56, 50, 14, 50, 14, 35, 349, 41, 7, 1, 79, 28, 11, 0, 9, 21, 107, 20, 28, 22, 13, 52, 76, 44, 33, 24, 27, 35, 30, 0, 3, 0, 9, 34, 4, 0, 13, 47, 15, 3, 22, 0, 2, 0, 36, 17, 2, 24, 85, 6, 2, 0, 2, 3, 2, 14, 2, 9, 8, 46, 39, 7, 3, 1, 3, 21, 2, 6, 2, 1, 2, 4, 4, 0, 19, 0, 13, 4, 159, 52, 19, 3, 21, 2, 31, 47, 21, 1, 2, 0, 185, 46, 42, 3, 37, 47, 21, 0, 60, 42, 14, 0, 72, 26, 230, 43, 117, 63, 32, 7, 3, 0, 3, 7, 2, 1, 2, 23, 16, 0, 2, 0, 95, 7, 3, 38, 17, 0, 2, 0, 29, 0, 11, 39, 8, 0, 22, 0, 12, 45, 20, 0, 35, 56, 264, 8, 2, 36, 18, 0, 50, 29, 113, 6, 2, 1, 2, 37, 22, 0, 26, 5, 2, 1, 2, 31, 15, 0, 328, 18, 190, 0, 80, 921, 103, 110, 18, 195, 2749, 1070, 4050, 582, 8634, 568, 8, 30, 114, 29, 19, 47, 17, 3, 32, 20, 6, 18, 689, 63, 129, 74, 6, 0, 67, 12, 65, 1, 2, 0, 29, 6135, 9, 1237, 43, 8, 8952, 286, 50, 2, 18, 3, 9, 395, 2309, 106, 6, 12, 4, 8, 8, 9, 5991, 84, 2, 70, 2, 1, 3, 0, 3, 1, 3, 3, 2, 11, 2, 0, 2, 6, 2, 64, 2, 3, 3, 7, 2, 6, 2, 27, 2, 3, 2, 4, 2, 0, 4, 6, 2, 339, 3, 24, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 7, 2357, 44, 11, 6, 17, 0, 370, 43, 1301, 196, 60, 67, 8, 0, 1205, 3, 2, 26, 2, 1, 2, 0, 3, 0, 2, 9, 2, 3, 2, 0, 2, 0, 7, 0, 5, 0, 2, 0, 2, 0, 2, 2, 2, 1, 2, 0, 3, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 1, 2, 0, 3, 3, 2, 6, 2, 3, 2, 3, 2, 0, 2, 9, 2, 16, 6, 2, 2, 4, 2, 16, 4421, 42717, 35, 4148, 12, 221, 3, 5761, 15, 7472, 3104, 541, 1507, 4938];\n\n// eslint-disable-next-line comma-spacing\nconst astralIdentifierCodes = [509, 0, 227, 0, 150, 4, 294, 9, 1368, 2, 2, 1, 6, 3, 41, 2, 5, 0, 166, 1, 574, 3, 9, 9, 370, 1, 154, 10, 176, 2, 54, 14, 32, 9, 16, 3, 46, 10, 54, 9, 7, 2, 37, 13, 2, 9, 6, 1, 45, 0, 13, 2, 49, 13, 9, 3, 2, 11, 83, 11, 7, 0, 161, 11, 6, 9, 7, 3, 56, 1, 2, 6, 3, 1, 3, 2, 10, 0, 11, 1, 3, 6, 4, 4, 193, 17, 10, 9, 5, 0, 82, 19, 13, 9, 214, 6, 3, 8, 28, 1, 83, 16, 16, 9, 82, 12, 9, 9, 84, 14, 5, 9, 243, 14, 166, 9, 71, 5, 2, 1, 3, 3, 2, 0, 2, 1, 13, 9, 120, 6, 3, 6, 4, 0, 29, 9, 41, 6, 2, 3, 9, 0, 10, 10, 47, 15, 406, 7, 2, 7, 17, 9, 57, 21, 2, 13, 123, 5, 4, 0, 2, 1, 2, 6, 2, 0, 9, 9, 49, 4, 2, 1, 2, 4, 9, 9, 330, 3, 19306, 9, 135, 4, 60, 6, 26, 9, 1014, 0, 2, 54, 8, 3, 82, 0, 12, 1, 19628, 1, 5319, 4, 4, 5, 9, 7, 3, 6, 31, 3, 149, 2, 1418, 49, 513, 54, 5, 49, 9, 0, 15, 0, 23, 4, 2, 14, 1361, 6, 2, 16, 3, 6, 2, 1, 2, 4, 262, 6, 10, 9, 419, 13, 1495, 6, 110, 6, 6, 9, 4759, 9, 787719, 239];\n\n// This has a complexity linear to the value of the code. The\n// assumption is that looking up astral identifier characters is\n// rare.\nfunction isInAstralSet(code, set) {\n  let pos = 0x10000;\n  for (let i = 0; i < set.length; i += 2) {\n    pos += set[i];\n    if (pos > code) return false;\n    pos += set[i + 1];\n    if (pos >= code) return true;\n  }\n}\n\n// Test whether a given character code starts an identifier.\n\nfunction isIdentifierStart(code, astral) {\n  if (code < 65) return code === 36;\n  if (code < 91) return true;\n  if (code < 97) return code === 95;\n  if (code < 123) return true;\n  if (code <= 0xffff) return code >= 0xaa && nonASCIIidentifierStart.test(String.fromCharCode(code));\n  if (astral === false) return false;\n  return isInAstralSet(code, astralIdentifierStartCodes);\n}\n\n// Test whether a given character is part of an identifier.\n\nfunction isIdentifierChar(code, astral) {\n  if (code < 48) return code === 36;\n  if (code < 58) return true;\n  if (code < 65) return false;\n  if (code < 91) return true;\n  if (code < 97) return code === 95;\n  if (code < 123) return true;\n  if (code <= 0xffff) return code >= 0xaa && nonASCIIidentifier.test(String.fromCharCode(code));\n  if (astral === false) return false;\n  return isInAstralSet(code, astralIdentifierStartCodes) || isInAstralSet(code, astralIdentifierCodes);\n}\nfunction identifier() {\n  let ch = source.codePointAt(pos);\n  if (!isIdentifierStart(ch, true) || ch === '\\\\') return false;\n  pos += codePointLen(ch);\n  while (ch = source.codePointAt(pos)) {\n    if (isIdentifierChar(ch, true)) {\n      pos += codePointLen(ch);\n    } else if (ch === '\\\\') {\n      // no identifier escapes support for now\n      return false;\n    } else {\n      break;\n    }\n  }\n  return true;\n}\nfunction codePointLen(ch) {\n  if (ch < 0x10000) return 1;\n  return 2;\n}\nfunction codePointAtLast(bPos) {\n  // Gives the UTF char for backtracking surrogates\n  const ch = source.charCodeAt(bPos);\n  if ((ch & 0xFC00) === 0xDC00) return ((source.charCodeAt(bPos - 1) & 0x3FF) << 10 | ch & 0x3FF) + 0x10000;\n  return ch;\n}\nfunction esmSyntaxErr(msg) {\n  return Object.assign(new Error(msg), {\n    code: 'ERR_LEXER_ESM_SYNTAX'\n  });\n}\nfunction throwIfImportStatement() {\n  const startPos = pos;\n  pos += 6;\n  const ch = commentWhitespace();\n  switch (ch) {\n    // dynamic import\n    case 40 /*(*/:\n      openTokenPosStack[openTokenDepth++] = startPos;\n      return;\n    // import.meta\n    case 46 /*.*/:\n      throw esmSyntaxErr('Unexpected import.meta in CJS module.');\n    default:\n      // no space after \"import\" -> not an import keyword\n      if (pos === startPos + 6) break;\n    case 34 /*\"*/:\n    case 39 /*'*/:\n    case 123 /*{*/:\n    case 42 /***/:\n      // import statement only permitted at base-level\n      if (openTokenDepth !== 0) {\n        pos--;\n        return;\n      }\n      // import statements are a syntax error in CommonJS\n      throw esmSyntaxErr('Unexpected import statement in CJS module.');\n  }\n}\nfunction throwIfExportStatement() {\n  pos += 6;\n  const curPos = pos;\n  const ch = commentWhitespace();\n  if (pos === curPos && !isPunctuator(ch)) return;\n  throw esmSyntaxErr('Unexpected export statement in CJS module.');\n}\nfunction commentWhitespace() {\n  let ch;\n  do {\n    ch = source.charCodeAt(pos);\n    if (ch === 47 /*/*/) {\n      const next_ch = source.charCodeAt(pos + 1);\n      if (next_ch === 47 /*/*/) lineComment();else if (next_ch === 42 /***/) blockComment();else return ch;\n    } else if (!isBrOrWs(ch)) {\n      return ch;\n    }\n  } while (pos++ < end);\n  return ch;\n}\nfunction templateString() {\n  while (pos++ < end) {\n    const ch = source.charCodeAt(pos);\n    if (ch === 36 /*$*/ && source.charCodeAt(pos + 1) === 123 /*{*/) {\n      pos++;\n      templateStack[templateStackDepth++] = templateDepth;\n      templateDepth = ++openTokenDepth;\n      return;\n    }\n    if (ch === 96 /*`*/) return;\n    if (ch === 92 /*\\*/) pos++;\n  }\n  syntaxError();\n}\nfunction blockComment() {\n  pos++;\n  while (pos++ < end) {\n    const ch = source.charCodeAt(pos);\n    if (ch === 42 /***/ && source.charCodeAt(pos + 1) === 47 /*/*/) {\n      pos++;\n      return;\n    }\n  }\n}\nfunction lineComment() {\n  while (pos++ < end) {\n    const ch = source.charCodeAt(pos);\n    if (ch === 10 /*\\n*/ || ch === 13 /*\\r*/) return;\n  }\n}\nfunction stringLiteral(quote) {\n  while (pos++ < end) {\n    let ch = source.charCodeAt(pos);\n    if (ch === quote) return;\n    if (ch === 92 /*\\*/) {\n      ch = source.charCodeAt(++pos);\n      if (ch === 13 /*\\r*/ && source.charCodeAt(pos + 1) === 10 /*\\n*/) pos++;\n    } else if (isBr(ch)) break;\n  }\n  throw new Error('Unterminated string.');\n}\nfunction regexCharacterClass() {\n  while (pos++ < end) {\n    let ch = source.charCodeAt(pos);\n    if (ch === 93 /*]*/) return ch;\n    if (ch === 92 /*\\*/) pos++;else if (ch === 10 /*\\n*/ || ch === 13 /*\\r*/) break;\n  }\n  throw new Error('Syntax error reading regular expression class.');\n}\nfunction regularExpression() {\n  while (pos++ < end) {\n    let ch = source.charCodeAt(pos);\n    if (ch === 47 /*/*/) return;\n    if (ch === 91 /*[*/) ch = regexCharacterClass();else if (ch === 92 /*\\*/) pos++;else if (ch === 10 /*\\n*/ || ch === 13 /*\\r*/) break;\n  }\n  throw new Error('Syntax error reading regular expression.');\n}\n\n// Note: non-asii BR and whitespace checks omitted for perf / footprint\n// if there is a significant user need this can be reconsidered\nfunction isBr(c) {\n  return c === 13 /*\\r*/ || c === 10 /*\\n*/;\n}\nfunction isBrOrWs(c) {\n  return c > 8 && c < 14 || c === 32 || c === 160;\n}\nfunction isBrOrWsOrPunctuatorNotDot(c) {\n  return c > 8 && c < 14 || c === 32 || c === 160 || isPunctuator(c) && c !== 46 /*.*/;\n}\nfunction keywordStart(pos) {\n  return pos === 0 || isBrOrWsOrPunctuatorNotDot(source.charCodeAt(pos - 1));\n}\nfunction readPrecedingKeyword(pos, match) {\n  if (pos < match.length - 1) return false;\n  return source.startsWith(match, pos - match.length + 1) && (pos === 0 || isBrOrWsOrPunctuatorNotDot(source.charCodeAt(pos - match.length)));\n}\nfunction readPrecedingKeyword1(pos, ch) {\n  return source.charCodeAt(pos) === ch && (pos === 0 || isBrOrWsOrPunctuatorNotDot(source.charCodeAt(pos - 1)));\n}\n\n// Detects one of case, debugger, delete, do, else, in, instanceof, new,\n//   return, throw, typeof, void, yield, await\nfunction isExpressionKeyword(pos) {\n  switch (source.charCodeAt(pos)) {\n    case 100 /*d*/:\n      switch (source.charCodeAt(pos - 1)) {\n        case 105 /*i*/:\n          // void\n          return readPrecedingKeyword(pos - 2, 'vo');\n        case 108 /*l*/:\n          // yield\n          return readPrecedingKeyword(pos - 2, 'yie');\n        default:\n          return false;\n      }\n    case 101 /*e*/:\n      switch (source.charCodeAt(pos - 1)) {\n        case 115 /*s*/:\n          switch (source.charCodeAt(pos - 2)) {\n            case 108 /*l*/:\n              // else\n              return readPrecedingKeyword1(pos - 3, 101 /*e*/);\n            case 97 /*a*/:\n              // case\n              return readPrecedingKeyword1(pos - 3, 99 /*c*/);\n            default:\n              return false;\n          }\n        case 116 /*t*/:\n          // delete\n          return readPrecedingKeyword(pos - 2, 'dele');\n        default:\n          return false;\n      }\n    case 102 /*f*/:\n      if (source.charCodeAt(pos - 1) !== 111 /*o*/ || source.charCodeAt(pos - 2) !== 101 /*e*/) return false;\n      switch (source.charCodeAt(pos - 3)) {\n        case 99 /*c*/:\n          // instanceof\n          return readPrecedingKeyword(pos - 4, 'instan');\n        case 112 /*p*/:\n          // typeof\n          return readPrecedingKeyword(pos - 4, 'ty');\n        default:\n          return false;\n      }\n    case 110 /*n*/:\n      // in, return\n      return readPrecedingKeyword1(pos - 1, 105 /*i*/) || readPrecedingKeyword(pos - 1, 'retur');\n    case 111 /*o*/:\n      // do\n      return readPrecedingKeyword1(pos - 1, 100 /*d*/);\n    case 114 /*r*/:\n      // debugger\n      return readPrecedingKeyword(pos - 1, 'debugge');\n    case 116 /*t*/:\n      // await\n      return readPrecedingKeyword(pos - 1, 'awai');\n    case 119 /*w*/:\n      switch (source.charCodeAt(pos - 1)) {\n        case 101 /*e*/:\n          // new\n          return readPrecedingKeyword1(pos - 2, 110 /*n*/);\n        case 111 /*o*/:\n          // throw\n          return readPrecedingKeyword(pos - 2, 'thr');\n        default:\n          return false;\n      }\n  }\n  return false;\n}\nfunction isParenKeyword(curPos) {\n  return source.charCodeAt(curPos) === 101 /*e*/ && source.startsWith('whil', curPos - 4) || source.charCodeAt(curPos) === 114 /*r*/ && source.startsWith('fo', curPos - 2) || source.charCodeAt(curPos - 1) === 105 /*i*/ && source.charCodeAt(curPos) === 102 /*f*/;\n}\nfunction isPunctuator(ch) {\n  // 23 possible punctuator endings: !%&()*+,-./:;<=>?[]^{}|~\n  return ch === 33 /*!*/ || ch === 37 /*%*/ || ch === 38 /*&*/ || ch > 39 && ch < 48 || ch > 57 && ch < 64 || ch === 91 /*[*/ || ch === 93 /*]*/ || ch === 94 /*^*/ || ch > 122 && ch < 127;\n}\nfunction isExpressionPunctuator(ch) {\n  // 20 possible expression endings: !%&(*+,-.:;<=>?[^{|~\n  return ch === 33 /*!*/ || ch === 37 /*%*/ || ch === 38 /*&*/ || ch > 39 && ch < 47 && ch !== 41 || ch > 57 && ch < 64 || ch === 91 /*[*/ || ch === 94 /*^*/ || ch > 122 && ch < 127 && ch !== 125 /*}*/;\n}\nfunction isExpressionTerminator(curPos) {\n  // detects:\n  // => ; ) finally catch else\n  // as all of these followed by a { will indicate a statement brace\n  switch (source.charCodeAt(curPos)) {\n    case 62 /*>*/:\n      return source.charCodeAt(curPos - 1) === 61 /*=*/;\n    case 59 /*;*/:\n    case 41 /*)*/:\n      return true;\n    case 104 /*h*/:\n      return source.startsWith('catc', curPos - 4);\n    case 121 /*y*/:\n      return source.startsWith('finall', curPos - 6);\n    case 101 /*e*/:\n      return source.startsWith('els', curPos - 3);\n  }\n  return false;\n}\nconst initPromise = Promise.resolve();\nmodule.exports.init = () => initPromise;\nmodule.exports.parse = parseCJS;","map":{"version":3,"names":["source","pos","end","openTokenDepth","templateDepth","lastTokenPos","lastSlashWasDivision","templateStack","templateStackDepth","openTokenPosStack","openClassPosStack","nextBraceIsClass","starExportMap","lastStarExportSpecifier","_exports","unsafeGetters","reexports","resetState","Array","Object","create","Set","Import","ExportAssign","ExportStar","parseCJS","name","parseSource","e","message","slice","split","length","lastIndexOf","loc","result","exports","filter","expt","undefined","has","reexpt","decode","str","decoded","eval","i","surrogatePrefix","charCodeAt","cjsSource","ch","startsWith","keywordStart","throwIfImportStatement","startPos","tryParseRequire","tryBacktrackAddStarExportBinding","tryParseExportsDotAssign","throwIfExportStatement","isBrOrWs","tryParseModuleExportsDotAssign","tryParseObjectDefineOrKeys","Error","templateString","stringLiteral","next_ch","lineComment","blockComment","lastToken","isExpressionPunctuator","isParenKeyword","isExpressionTerminator","isExpressionKeyword","regularExpression","bPos","codePoint","id_end","identifierStart","codePointAtLast","isIdentifierChar","isIdentifierStart","codePointLen","starExportId","tryParseObjectHasOwnProperty","it_id","commentWhitespace","identifier","keys","revertPos","readExportsOrModuleDotExports","exportPos","add","lastPos","id_start","id","it_id_start","quot","inIf","ifInnerPos","starExportSpecifier","assign","endPos","size","tryParseLiteralExports","requireType","reexportStart","reexportEnd","nonASCIIidentifierStartChars","nonASCIIidentifierChars","nonASCIIidentifierStart","RegExp","nonASCIIidentifier","astralIdentifierStartCodes","astralIdentifierCodes","isInAstralSet","code","set","astral","test","String","fromCharCode","codePointAt","esmSyntaxErr","msg","curPos","isPunctuator","syntaxError","quote","isBr","regexCharacterClass","c","isBrOrWsOrPunctuatorNotDot","readPrecedingKeyword","match","readPrecedingKeyword1","initPromise","Promise","resolve","module","init","parse"],"sources":["C:/Users/chest/OneDrive/Documentos/GitHub/HackUPC/frontend/node_modules/cjs-module-lexer/lexer.js"],"sourcesContent":["let source, pos, end;\r\nlet openTokenDepth,\r\n  templateDepth,\r\n  lastTokenPos,\r\n  lastSlashWasDivision,\r\n  templateStack,\r\n  templateStackDepth,\r\n  openTokenPosStack,\r\n  openClassPosStack,\r\n  nextBraceIsClass,\r\n  starExportMap,\r\n  lastStarExportSpecifier,\r\n  _exports,\r\n  unsafeGetters,\r\n  reexports;\r\n\r\nfunction resetState () {\r\n  openTokenDepth = 0;\r\n  templateDepth = -1;\r\n  lastTokenPos = -1;\r\n  lastSlashWasDivision = false;\r\n  templateStack = new Array(1024);\r\n  templateStackDepth = 0;\r\n  openTokenPosStack = new Array(1024);\r\n  openClassPosStack = new Array(1024);\r\n  nextBraceIsClass = false;\r\n  starExportMap = Object.create(null);\r\n  lastStarExportSpecifier = null;\r\n\r\n  _exports = new Set();\r\n  unsafeGetters = new Set();\r\n  reexports = new Set();\r\n}\r\n\r\n// RequireType\r\nconst Import = 0;\r\nconst ExportAssign = 1;\r\nconst ExportStar = 2;\r\n\r\nfunction parseCJS (source, name = '@') {\r\n  resetState();\r\n  try {\r\n    parseSource(source);\r\n  }\r\n  catch (e) {\r\n    e.message += `\\n  at ${name}:${source.slice(0, pos).split('\\n').length}:${pos - source.lastIndexOf('\\n', pos - 1)}`;\r\n    e.loc = pos;\r\n    throw e;\r\n  }\r\n  const result = { exports: [..._exports].filter(expt => expt !== undefined && !unsafeGetters.has(expt)), reexports: [...reexports].filter(reexpt => reexpt !== undefined) };\r\n  resetState();\r\n  return result;\r\n}\r\n\r\nfunction decode (str) {\r\n  if (str[0] === '\"' || str[0] === '\\'') {\r\n    try {\r\n      const decoded = (0, eval)(str);\r\n      // Filter to exclude non-matching UTF-16 surrogate strings\r\n      for (let i = 0; i < decoded.length; i++) {\r\n        const surrogatePrefix = decoded.charCodeAt(i) & 0xFC00;\r\n        if (surrogatePrefix < 0xD800) {\r\n          // Not a surrogate\r\n          continue;\r\n        }\r\n        else if (surrogatePrefix === 0xD800) {\r\n          // Validate surrogate pair\r\n          if ((decoded.charCodeAt(++i) & 0xFC00) !== 0xDC00)\r\n            return;\r\n        }\r\n        else {\r\n          // Out-of-range surrogate code (above 0xD800)\r\n          return;\r\n        }\r\n      }\r\n      return decoded;\r\n    }\r\n    catch {}\r\n  }\r\n  else {\r\n    return str;\r\n  }\r\n}\r\n\r\nfunction parseSource (cjsSource) {\r\n  source = cjsSource;\r\n  pos = -1;\r\n  end = source.length - 1;\r\n  let ch = 0;\r\n\r\n  // Handle #!\r\n  if (source.charCodeAt(0) === 35/*#*/ && source.charCodeAt(1) === 33/*!*/) {\r\n    if (source.length === 2)\r\n      return true;\r\n    pos += 2;\r\n    while (pos++ < end) {\r\n      ch = source.charCodeAt(pos);\r\n      if (ch === 10/*\\n*/ || ch === 13/*\\r*/)\r\n        break;\r\n    }\r\n  }\r\n\r\n  while (pos++ < end) {\r\n    ch = source.charCodeAt(pos);\r\n\r\n    if (ch === 32 || ch < 14 && ch > 8)\r\n      continue;\r\n\r\n    if (openTokenDepth === 0) {\r\n      switch (ch) {\r\n        case 105/*i*/:\r\n          if (source.startsWith('mport', pos + 1) && keywordStart(pos))\r\n            throwIfImportStatement();\r\n          lastTokenPos = pos;\r\n          continue;\r\n        case 114/*r*/:\r\n          const startPos = pos;\r\n          if (tryParseRequire(Import) && keywordStart(startPos))\r\n            tryBacktrackAddStarExportBinding(startPos - 1);\r\n          lastTokenPos = pos;\r\n          continue;\r\n        case 95/*_*/:\r\n          if (source.startsWith('interopRequireWildcard', pos + 1) && (keywordStart(pos) || source.charCodeAt(pos - 1) === 46/*.*/)) {\r\n            const startPos = pos;\r\n            pos += 23;\r\n            if (source.charCodeAt(pos) === 40/*(*/) {\r\n              pos++;\r\n              openTokenPosStack[openTokenDepth++] = lastTokenPos;\r\n              if (tryParseRequire(Import) && keywordStart(startPos)) {\r\n                tryBacktrackAddStarExportBinding(startPos - 1);\r\n              }\r\n            }\r\n          }\r\n          else if (source.startsWith('_export', pos + 1) && (keywordStart(pos) || source.charCodeAt(pos - 1) === 46/*.*/)) {\r\n            pos += 8;\r\n            if (source.startsWith('Star', pos))\r\n              pos += 4;\r\n            if (source.charCodeAt(pos) === 40/*(*/) {\r\n              openTokenPosStack[openTokenDepth++] = lastTokenPos;\r\n              if (source.charCodeAt(++pos) === 114/*r*/)\r\n                tryParseRequire(ExportStar);\r\n            }\r\n          }\r\n          lastTokenPos = pos;\r\n          continue;\r\n      }\r\n    }\r\n\r\n    switch (ch) {\r\n      case 101/*e*/:\r\n        if (source.startsWith('xport', pos + 1) && keywordStart(pos)) {\r\n          if (source.charCodeAt(pos + 6) === 115/*s*/)\r\n            tryParseExportsDotAssign(false);\r\n          else if (openTokenDepth === 0)\r\n            throwIfExportStatement();\r\n        }\r\n        break;\r\n      case 99/*c*/:\r\n        if (keywordStart(pos) && source.startsWith('lass', pos + 1) && isBrOrWs(source.charCodeAt(pos + 5)))\r\n          nextBraceIsClass = true;\r\n        break;\r\n      case 109/*m*/:\r\n        if (source.startsWith('odule', pos + 1) && keywordStart(pos))\r\n          tryParseModuleExportsDotAssign();\r\n        break;\r\n      case 79/*O*/:\r\n        if (source.startsWith('bject', pos + 1) && keywordStart(pos))\r\n          tryParseObjectDefineOrKeys(openTokenDepth === 0);\r\n        break;\r\n      case 40/*(*/:\r\n        openTokenPosStack[openTokenDepth++] = lastTokenPos;\r\n        break;\r\n      case 41/*)*/:\r\n        if (openTokenDepth === 0)\r\n          throw new Error('Unexpected closing bracket.');\r\n        openTokenDepth--;\r\n        break;\r\n      case 123/*{*/:\r\n        openClassPosStack[openTokenDepth] = nextBraceIsClass;\r\n        nextBraceIsClass = false;\r\n        openTokenPosStack[openTokenDepth++] = lastTokenPos;\r\n        break;\r\n      case 125/*}*/:\r\n        if (openTokenDepth === 0)\r\n          throw new Error('Unexpected closing brace.');\r\n        if (openTokenDepth-- === templateDepth) {\r\n          templateDepth = templateStack[--templateStackDepth];\r\n          templateString();\r\n        }\r\n        else {\r\n          if (templateDepth !== -1 && openTokenDepth < templateDepth)\r\n            throw new Error('Unexpected closing brace.');\r\n        }\r\n        break;\r\n      case 60/*>*/:\r\n        // TODO: <!-- XML comment support\r\n        break;\r\n      case 39/*'*/:\r\n      case 34/*\"*/:\r\n        stringLiteral(ch);\r\n        break;\r\n      case 47/*/*/: {\r\n        const next_ch = source.charCodeAt(pos + 1);\r\n        if (next_ch === 47/*/*/) {\r\n          lineComment();\r\n          // dont update lastToken\r\n          continue;\r\n        }\r\n        else if (next_ch === 42/***/) {\r\n          blockComment();\r\n          // dont update lastToken\r\n          continue;\r\n        }\r\n        else {\r\n          // Division / regex ambiguity handling based on checking backtrack analysis of:\r\n          // - what token came previously (lastToken)\r\n          // - if a closing brace or paren, what token came before the corresponding\r\n          //   opening brace or paren (lastOpenTokenIndex)\r\n          const lastToken = source.charCodeAt(lastTokenPos);\r\n          if (isExpressionPunctuator(lastToken) &&\r\n              !(lastToken === 46/*.*/ && (source.charCodeAt(lastTokenPos - 1) >= 48/*0*/ && source.charCodeAt(lastTokenPos - 1) <= 57/*9*/)) &&\r\n              !(lastToken === 43/*+*/ && source.charCodeAt(lastTokenPos - 1) === 43/*+*/) && !(lastToken === 45/*-*/ && source.charCodeAt(lastTokenPos - 1) === 45/*-*/) ||\r\n              lastToken === 41/*)*/ && isParenKeyword(openTokenPosStack[openTokenDepth]) ||\r\n              lastToken === 125/*}*/ && (isExpressionTerminator(openTokenPosStack[openTokenDepth]) || openClassPosStack[openTokenDepth]) ||\r\n              lastToken === 47/*/*/ && lastSlashWasDivision ||\r\n              isExpressionKeyword(lastTokenPos) ||\r\n              !lastToken) {\r\n            regularExpression();\r\n            lastSlashWasDivision = false;\r\n          }\r\n          else {\r\n            lastSlashWasDivision = true;\r\n          }\r\n        }\r\n        break;\r\n      }\r\n      case 96/*`*/:\r\n        templateString();\r\n        break;\r\n    }\r\n    lastTokenPos = pos;\r\n  }\r\n\r\n  if (templateDepth !== -1)\r\n    throw new Error('Unterminated template.');\r\n\r\n  if (openTokenDepth)\r\n    throw new Error('Unterminated braces.');\r\n}\r\n\r\nfunction tryBacktrackAddStarExportBinding (bPos) {\r\n  while (source.charCodeAt(bPos) === 32/* */ && bPos >= 0)\r\n    bPos--;\r\n  if (source.charCodeAt(bPos) === 61/*=*/) {\r\n    bPos--;\r\n    while (source.charCodeAt(bPos) === 32/* */ && bPos >= 0)\r\n      bPos--;\r\n    let codePoint;\r\n    const id_end = bPos;\r\n    let identifierStart = false;\r\n    while ((codePoint = codePointAtLast(bPos)) && bPos >= 0) {\r\n      if (codePoint === 92/*\\*/)\r\n        return;\r\n      if (!isIdentifierChar(codePoint, true))\r\n        break;\r\n      identifierStart = isIdentifierStart(codePoint, true);\r\n      bPos -= codePointLen(codePoint);\r\n    }\r\n    if (identifierStart && source.charCodeAt(bPos) === 32/* */) {\r\n      const starExportId = source.slice(bPos + 1, id_end + 1);\r\n      while (source.charCodeAt(bPos) === 32/* */ && bPos >= 0)\r\n        bPos--;\r\n      switch (source.charCodeAt(bPos)) {\r\n        case 114/*r*/:\r\n          if (!source.startsWith('va', bPos - 2))\r\n            return;\r\n          break;\r\n        case 116/*t*/:\r\n          if (!source.startsWith('le', bPos - 2) && !source.startsWith('cons', bPos - 4))\r\n            return;\r\n          break;\r\n        default: return;\r\n      }\r\n      starExportMap[starExportId] = lastStarExportSpecifier;\r\n    }\r\n  }\r\n}\r\n\r\n// `Object.` `prototype.`? hasOwnProperty.call(`  IDENTIFIER `, ` IDENTIFIER$2 `)`\r\nfunction tryParseObjectHasOwnProperty (it_id) {\r\n  ch = commentWhitespace();\r\n  if (ch !== 79/*O*/ || !source.startsWith('bject', pos + 1)) return false;\r\n  pos += 6;\r\n  ch = commentWhitespace();\r\n  if (ch !== 46/*.*/) return false;\r\n  pos++;\r\n  ch = commentWhitespace();\r\n  if (ch === 112/*p*/) {\r\n    if (!source.startsWith('rototype', pos + 1)) return false;\r\n    pos += 9;\r\n    ch = commentWhitespace();\r\n    if (ch !== 46/*.*/) return false;\r\n    pos++;\r\n    ch = commentWhitespace();\r\n  }\r\n  if (ch !== 104/*h*/ || !source.startsWith('asOwnProperty', pos + 1)) return false;\r\n  pos += 14;\r\n  ch = commentWhitespace();\r\n  if (ch !== 46/*.*/) return false;\r\n  pos++;\r\n  ch = commentWhitespace();\r\n  if (ch !== 99/*c*/ || !source.startsWith('all', pos + 1)) return false;\r\n  pos += 4;\r\n  ch = commentWhitespace();\r\n  if (ch !== 40/*(*/) return false;\r\n  pos++;\r\n  ch = commentWhitespace();\r\n  if (!identifier()) return false;\r\n  ch = commentWhitespace();\r\n  if (ch !== 44/*,*/) return false;\r\n  pos++;\r\n  ch = commentWhitespace();\r\n  if (!source.startsWith(it_id, pos)) return false;\r\n  pos += it_id.length;\r\n  ch = commentWhitespace();\r\n  if (ch !== 41/*)*/) return false;\r\n  pos++;\r\n  return true;\r\n}\r\n\r\nfunction tryParseObjectDefineOrKeys (keys) {\r\n  pos += 6;\r\n  let revertPos = pos - 1;\r\n  let ch = commentWhitespace();\r\n  if (ch === 46/*.*/) {\r\n    pos++;\r\n    ch = commentWhitespace();\r\n    if (ch === 100/*d*/ && source.startsWith('efineProperty', pos + 1)) {\r\n      let expt;\r\n      while (true) {\r\n        pos += 14;\r\n        revertPos = pos - 1;\r\n        ch = commentWhitespace();\r\n        if (ch !== 40/*(*/) break;\r\n        pos++;\r\n        ch = commentWhitespace();\r\n        if (!readExportsOrModuleDotExports(ch)) break;\r\n        ch = commentWhitespace();\r\n        if (ch !== 44/*,*/) break;\r\n        pos++;\r\n        ch = commentWhitespace();\r\n        if (ch !== 39/*'*/ && ch !== 34/*\"*/) break;\r\n        const exportPos = pos;\r\n        stringLiteral(ch);\r\n        expt = source.slice(exportPos, ++pos);\r\n        ch = commentWhitespace();\r\n        if (ch !== 44/*,*/) break;\r\n        pos++;\r\n        ch = commentWhitespace();\r\n        if (ch !== 123/*{*/) break;\r\n        pos++;\r\n        ch = commentWhitespace();\r\n        if (ch === 101/*e*/) {\r\n          if (!source.startsWith('numerable', pos + 1)) break;\r\n          pos += 10;\r\n          ch = commentWhitespace();\r\n          if (ch !== 58/*:*/) break;\r\n          pos++;\r\n          ch = commentWhitespace();\r\n          if (ch !== 116/*t*/ || !source.startsWith('rue', pos + 1)) break;\r\n          pos += 4;\r\n          ch = commentWhitespace();\r\n          if (ch !== 44) break;\r\n          pos++;\r\n          ch = commentWhitespace();\r\n        }\r\n        if (ch === 118/*v*/) {\r\n          if (!source.startsWith('alue', pos + 1)) break;\r\n          pos += 5;\r\n          ch = commentWhitespace();\r\n          if (ch !== 58/*:*/) break;\r\n          _exports.add(decode(expt));\r\n          pos = revertPos;\r\n          return;\r\n        }\r\n        else if (ch === 103/*g*/) {\r\n          if (!source.startsWith('et', pos + 1)) break;\r\n          pos += 3;\r\n          ch = commentWhitespace();\r\n          if (ch === 58/*:*/) {\r\n            pos++;\r\n            ch = commentWhitespace();\r\n            if (ch !== 102/*f*/) break;\r\n            if (!source.startsWith('unction', pos + 1)) break;\r\n            pos += 8;\r\n            let lastPos = pos;\r\n            ch = commentWhitespace();\r\n            if (ch !== 40 && (lastPos === pos || !identifier())) break;\r\n            ch = commentWhitespace();\r\n          }\r\n          if (ch !== 40/*(*/) break;\r\n          pos++;\r\n          ch = commentWhitespace();\r\n          if (ch !== 41/*)*/) break;\r\n          pos++;\r\n          ch = commentWhitespace();\r\n          if (ch !== 123/*{*/) break;\r\n          pos++;\r\n          ch = commentWhitespace();\r\n          if (ch !== 114/*r*/) break;\r\n          if (!source.startsWith('eturn', pos + 1)) break;\r\n          pos += 6;\r\n          ch = commentWhitespace();\r\n          if (!identifier()) break;\r\n          ch = commentWhitespace();\r\n          if (ch === 46/*.*/) {\r\n            pos++;\r\n            commentWhitespace();\r\n            if (!identifier()) break;\r\n            ch = commentWhitespace();\r\n          }\r\n          else if (ch === 91/*[*/) {\r\n            pos++;\r\n            ch = commentWhitespace();\r\n            if (ch === 39/*'*/ || ch === 34/*\"*/) stringLiteral(ch);\r\n            else break;\r\n            pos++;\r\n            ch = commentWhitespace();\r\n            if (ch !== 93/*]*/) break;\r\n            pos++;\r\n            ch = commentWhitespace();\r\n          }\r\n          if (ch === 59/*;*/) {\r\n            pos++;\r\n            ch = commentWhitespace();\r\n          }\r\n          if (ch !== 125/*}*/) break;\r\n          pos++;\r\n          ch = commentWhitespace();\r\n          if (ch === 44/*,*/) {\r\n            pos++;\r\n            ch = commentWhitespace();\r\n          }\r\n          if (ch !== 125/*}*/) break;\r\n          pos++;\r\n          ch = commentWhitespace();\r\n          if (ch !== 41/*)*/) break;\r\n          _exports.add(decode(expt));\r\n          return;\r\n        }\r\n        break;\r\n      }\r\n      if (expt) {\r\n        unsafeGetters.add(decode(expt));\r\n      }\r\n    }\r\n    else if (keys && ch === 107/*k*/ && source.startsWith('eys', pos + 1)) {\r\n      while (true) {\r\n        pos += 4;\r\n        revertPos = pos - 1;\r\n        ch = commentWhitespace();\r\n        if (ch !== 40/*(*/) break;\r\n        pos++;\r\n        ch = commentWhitespace();\r\n        const id_start = pos;\r\n        if (!identifier()) break;\r\n        const id = source.slice(id_start, pos);\r\n        ch = commentWhitespace();\r\n        if (ch !== 41/*)*/) break;\r\n\r\n        revertPos = pos++;\r\n        ch = commentWhitespace();\r\n        if (ch !== 46/*.*/) break;\r\n        pos++;\r\n        ch = commentWhitespace();\r\n        if (ch !== 102/*f*/ || !source.startsWith('orEach', pos + 1)) break;\r\n        pos += 7;\r\n        ch = commentWhitespace();\r\n        revertPos = pos - 1;\r\n        if (ch !== 40/*(*/) break;\r\n        pos++;\r\n        ch = commentWhitespace();\r\n        if (ch !== 102/*f*/ || !source.startsWith('unction', pos + 1)) break;\r\n        pos += 8;\r\n        ch = commentWhitespace();\r\n        if (ch !== 40/*(*/) break;\r\n        pos++;\r\n        ch = commentWhitespace();\r\n        const it_id_start = pos;\r\n        if (!identifier()) break;\r\n        const it_id = source.slice(it_id_start, pos);\r\n        ch = commentWhitespace();\r\n        if (ch !== 41/*)*/) break;\r\n        pos++;\r\n        ch = commentWhitespace();\r\n        if (ch !== 123/*{*/) break;\r\n        pos++;\r\n        ch = commentWhitespace();\r\n        if (ch !== 105/*i*/ || source.charCodeAt(pos + 1) !== 102/*f*/) break;\r\n        pos += 2;\r\n        ch = commentWhitespace();\r\n        if (ch !== 40/*(*/) break;\r\n        pos++;\r\n        ch = commentWhitespace();\r\n        if (!source.startsWith(it_id, pos)) break;\r\n        pos += it_id.length;\r\n        ch = commentWhitespace();\r\n        // `if (` IDENTIFIER$2 `===` ( `'default'` | `\"default\"` ) `||` IDENTIFIER$2 `===` ( '__esModule' | `\"__esModule\"` ) `) return` `;`? |\r\n        if (ch === 61/*=*/) {\r\n          if (!source.startsWith('==', pos + 1)) break;\r\n          pos += 3;\r\n          ch = commentWhitespace();\r\n          if (ch !== 34/*\"*/ && ch !== 39/*'*/) break;\r\n          let quot = ch;\r\n          if (!source.startsWith('default', pos + 1)) break;\r\n          pos += 8;\r\n          ch = commentWhitespace();\r\n          if (ch !== quot) break;\r\n          pos += 1;\r\n          ch = commentWhitespace();\r\n          if (ch !== 124/*|*/ || source.charCodeAt(pos + 1) !== 124/*|*/) break;\r\n          pos += 2;\r\n          ch = commentWhitespace();\r\n          if (source.slice(pos, pos + it_id.length) !== it_id) break;\r\n          pos += it_id.length;\r\n          ch = commentWhitespace();\r\n          if (ch !== 61/*=*/ || source.slice(pos + 1, pos + 3) !== '==') break;\r\n          pos += 3;\r\n          ch = commentWhitespace();\r\n          if (ch !== 34/*\"*/ && ch !== 39/*'*/) break;\r\n          quot = ch;\r\n          if (!source.startsWith('__esModule', pos + 1)) break;\r\n          pos += 11;\r\n          ch = commentWhitespace();\r\n          if (ch !== quot) break;\r\n          pos += 1;\r\n          ch = commentWhitespace();\r\n          if (ch !== 41/*)*/) break;\r\n          pos += 1;\r\n          ch = commentWhitespace();\r\n          if (ch !== 114/*r*/ || !source.startsWith('eturn', pos + 1)) break;\r\n          pos += 6;\r\n          ch = commentWhitespace();\r\n          if (ch === 59/*;*/)\r\n            pos++;\r\n          ch = commentWhitespace();\r\n\r\n          // `if (`\r\n          if (ch === 105/*i*/ && source.charCodeAt(pos + 1) === 102/*f*/) {\r\n            let inIf = true;\r\n            pos += 2;\r\n            ch = commentWhitespace();\r\n            if (ch !== 40/*(*/) break;\r\n            pos++;\r\n            const ifInnerPos = pos;\r\n            // `Object.prototype.hasOwnProperty.call(`  IDENTIFIER `, ` IDENTIFIER$2 `)) return` `;`?\r\n            if (tryParseObjectHasOwnProperty(it_id)) {\r\n              ch = commentWhitespace();\r\n              if (ch !== 41/*)*/) break;\r\n              pos++;\r\n              ch = commentWhitespace();\r\n              if (ch !== 114/*r*/ || !source.startsWith('eturn', pos + 1)) break;\r\n              pos += 6;\r\n              ch = commentWhitespace();\r\n              if (ch === 59/*;*/)\r\n                pos++;\r\n              ch = commentWhitespace();\r\n              // match next if\r\n              if (ch === 105/*i*/ && source.charCodeAt(pos + 1) === 102/*f*/) {\r\n                pos += 2;\r\n                ch = commentWhitespace();\r\n                if (ch !== 40/*(*/) break;\r\n                pos++;\r\n              }\r\n              else {\r\n                inIf = false;\r\n              }\r\n            }\r\n            else {\r\n              pos = ifInnerPos;\r\n            }\r\n\r\n            // IDENTIFIER$2 `in` EXPORTS_IDENTIFIER `&&` EXPORTS_IDENTIFIER `[` IDENTIFIER$2 `] ===` IDENTIFIER$1 `[` IDENTIFIER$2 `]) return` `;`?\r\n            if (inIf) {\r\n              if (!source.startsWith(it_id, pos)) break;\r\n              pos += it_id.length;\r\n              ch = commentWhitespace();\r\n              if (ch !== 105/*i*/ || !source.startsWith('n ', pos + 1)) break;\r\n              pos += 3;\r\n              ch = commentWhitespace();\r\n              if (!readExportsOrModuleDotExports(ch)) break;\r\n              ch = commentWhitespace();\r\n              if (ch !== 38/*&*/ || source.charCodeAt(pos + 1) !== 38/*&*/) break;\r\n              pos += 2;\r\n              ch = commentWhitespace();\r\n              if (!readExportsOrModuleDotExports(ch)) break;\r\n              ch = commentWhitespace();\r\n              if (ch !== 91/*[*/) break;\r\n              pos++;\r\n              ch = commentWhitespace();\r\n              if (!source.startsWith(it_id, pos)) break;\r\n              pos += it_id.length;\r\n              ch = commentWhitespace();\r\n              if (ch !== 93/*]*/) break;\r\n              pos++;\r\n              ch = commentWhitespace();\r\n              if (ch !== 61/*=*/ || !source.startsWith('==', pos + 1)) break;\r\n              pos += 3;\r\n              ch = commentWhitespace();\r\n              if (!source.startsWith(id, pos)) break;\r\n              pos += id.length;\r\n              ch = commentWhitespace();\r\n              if (ch !== 91/*[*/) break;\r\n              pos++;\r\n              ch = commentWhitespace();\r\n              if (!source.startsWith(it_id, pos)) break;\r\n              pos += it_id.length;\r\n              ch = commentWhitespace();\r\n              if (ch !== 93/*]*/) break;\r\n              pos++;\r\n              ch = commentWhitespace();\r\n              if (ch !== 41/*)*/) break;\r\n              pos++;\r\n              ch = commentWhitespace();\r\n              if (ch !== 114/*r*/ || !source.startsWith('eturn', pos + 1)) break;\r\n              pos += 6;\r\n              ch = commentWhitespace();\r\n              if (ch === 59/*;*/)\r\n                pos++;\r\n              ch = commentWhitespace();\r\n            }\r\n          }\r\n        }\r\n        // `if (` IDENTIFIER$2 `!==` ( `'default'` | `\"default\"` ) (`&& !` IDENTIFIER `.hasOwnProperty(` IDENTIFIER$2 `)`  )? `)`\r\n        else if (ch === 33/*!*/) {\r\n          if (!source.startsWith('==', pos + 1)) break;\r\n          pos += 3;\r\n          ch = commentWhitespace();\r\n          if (ch !== 34/*\"*/ && ch !== 39/*'*/) break;\r\n          const quot = ch;\r\n          if (!source.startsWith('default', pos + 1)) break;\r\n          pos += 8;\r\n          ch = commentWhitespace();\r\n          if (ch !== quot) break;\r\n          pos += 1;\r\n          ch = commentWhitespace();\r\n          if (ch === 38/*&*/) {\r\n            if (source.charCodeAt(pos + 1) !== 38/*&*/) break;\r\n            pos += 2;\r\n            ch = commentWhitespace();\r\n            if (ch !== 33/*!*/) break;\r\n            pos += 1;\r\n            ch = commentWhitespace();\r\n            if (ch === 79/*O*/ && source.startsWith('bject', pos + 1) && source[pos + 6] === '.') {\r\n              if (!tryParseObjectHasOwnProperty(it_id)) break;\r\n            }\r\n            else if (identifier()) {\r\n              ch = commentWhitespace();\r\n              if (ch !== 46/*.*/) break;\r\n              pos++;\r\n              ch = commentWhitespace();\r\n              if (ch !== 104/*h*/ || !source.startsWith('asOwnProperty', pos + 1)) break;\r\n              pos += 14;\r\n              ch = commentWhitespace();\r\n              if (ch !== 40/*(*/) break;\r\n              pos += 1;\r\n              ch = commentWhitespace();\r\n              if (!source.startsWith(it_id, pos)) break;\r\n              pos += it_id.length;\r\n              ch = commentWhitespace();\r\n              if (ch !== 41/*)*/) break;\r\n              pos += 1;\r\n            }\r\n            else break;\r\n            ch = commentWhitespace();\r\n          }\r\n          if (ch !== 41/*)*/) break;\r\n          pos += 1;\r\n          ch = commentWhitespace();\r\n        }\r\n        else break;\r\n\r\n        // EXPORTS_IDENTIFIER `[` IDENTIFIER$2 `] =` IDENTIFIER$1 `[` IDENTIFIER$2 `]`\r\n        if (readExportsOrModuleDotExports(ch)) {\r\n          ch = commentWhitespace();\r\n          if (ch !== 91/*[*/) break;\r\n          pos++;\r\n          ch = commentWhitespace();\r\n          if (source.slice(pos, pos + it_id.length) !== it_id) break;\r\n          pos += it_id.length;\r\n          ch = commentWhitespace();\r\n          if (ch !== 93/*]*/) break;\r\n          pos++;\r\n          ch = commentWhitespace();\r\n          if (ch !== 61/*=*/) break;\r\n          pos++;\r\n          ch = commentWhitespace();\r\n          if (source.slice(pos, pos + id.length) !== id) break;\r\n          pos += id.length;\r\n          ch = commentWhitespace();\r\n          if (ch !== 91/*[*/) break;\r\n          pos++;\r\n          ch = commentWhitespace();\r\n          if (source.slice(pos, pos + it_id.length) !== it_id) break;\r\n          pos += it_id.length;\r\n          ch = commentWhitespace();\r\n          if (ch !== 93/*]*/) break;\r\n          pos++;\r\n          ch = commentWhitespace();\r\n          if (ch === 59/*;*/) {\r\n            pos++;\r\n            ch = commentWhitespace();\r\n          }\r\n        }\r\n        // `Object.defineProperty(` EXPORTS_IDENTIFIER `, ` IDENTIFIER$2 `, { enumerable: true, get: function () { return ` IDENTIFIER$1 `[` IDENTIFIER$2 `]; } })`\r\n        else if (ch === 79/*O*/) {\r\n          if (source.slice(pos + 1, pos + 6) !== 'bject') break;\r\n          pos += 6;\r\n          ch = commentWhitespace();\r\n          if (ch !== 46/*.*/) break;\r\n          pos++;\r\n          ch = commentWhitespace();\r\n          if (ch !== 100/*d*/ || !source.startsWith('efineProperty', pos + 1)) break;\r\n          pos += 14;\r\n          ch = commentWhitespace();\r\n          if (ch !== 40/*(*/) break;\r\n          pos++;\r\n          ch = commentWhitespace();\r\n          if (!readExportsOrModuleDotExports(ch)) break;\r\n          ch = commentWhitespace();\r\n          if (ch !== 44/*,*/) break;\r\n          pos++;\r\n          ch = commentWhitespace();\r\n          if (!source.startsWith(it_id, pos)) break;\r\n          pos += it_id.length;\r\n          ch = commentWhitespace();\r\n          if (ch !== 44/*,*/) break;\r\n          pos++;\r\n          ch = commentWhitespace();\r\n          if (ch !== 123/*{*/) break;\r\n          pos++;\r\n          ch = commentWhitespace();\r\n          if (ch !== 101/*e*/ || !source.startsWith('numerable', pos + 1)) break;\r\n          pos += 10;\r\n          ch = commentWhitespace();\r\n          if (ch !== 58/*:*/) break;\r\n          pos++;\r\n          ch = commentWhitespace();\r\n          if (ch !== 116/*t*/ && !source.startsWith('rue', pos + 1)) break;\r\n          pos += 4;\r\n          ch = commentWhitespace();\r\n          if (ch !== 44/*,*/) break;\r\n          pos++;\r\n          ch = commentWhitespace();\r\n          if (ch !== 103/*g*/ || !source.startsWith('et', pos + 1)) break;\r\n          pos += 3;\r\n          ch = commentWhitespace();\r\n          if (ch === 58/*:*/) {\r\n            pos++;\r\n            ch = commentWhitespace();\r\n            if (ch !== 102/*f*/) break;\r\n            if (!source.startsWith('unction', pos + 1)) break;\r\n            pos += 8;\r\n            let lastPos = pos;\r\n            ch = commentWhitespace();\r\n            if (ch !== 40 && (lastPos === pos || !identifier())) break;\r\n            ch = commentWhitespace();\r\n          }\r\n          if (ch !== 40/*(*/) break;\r\n          pos++;\r\n          ch = commentWhitespace();\r\n          if (ch !== 41/*)*/) break;\r\n          pos++;\r\n          ch = commentWhitespace();\r\n          if (ch !== 123/*{*/) break;\r\n          pos++;\r\n          ch = commentWhitespace();\r\n          if (ch !== 114/*r*/ || !source.startsWith('eturn', pos + 1)) break;\r\n          pos += 6;\r\n          ch = commentWhitespace();\r\n          if (!source.startsWith(id, pos)) break;\r\n          pos += id.length;\r\n          ch = commentWhitespace();\r\n          if (ch !== 91/*[*/) break;\r\n          pos++;\r\n          ch = commentWhitespace();\r\n          if (!source.startsWith(it_id, pos)) break;\r\n          pos += it_id.length;\r\n          ch = commentWhitespace();\r\n          if (ch !== 93/*]*/) break;\r\n          pos++;\r\n          ch = commentWhitespace();\r\n          if (ch === 59/*;*/) {\r\n            pos++;\r\n            ch = commentWhitespace();\r\n          }\r\n          if (ch !== 125/*}*/) break;\r\n          pos++;\r\n          ch = commentWhitespace();\r\n          if (ch === 44/*,*/) {\r\n            pos++;\r\n            ch = commentWhitespace();\r\n          }\r\n          if (ch !== 125/*}*/) break;\r\n          pos++;\r\n          ch = commentWhitespace();\r\n          if (ch !== 41/*)*/) break;\r\n          pos++;\r\n          ch = commentWhitespace();\r\n          if (ch === 59/*;*/) {\r\n            pos++;\r\n            ch = commentWhitespace();\r\n          }\r\n        }\r\n        else break;\r\n\r\n        if (ch !== 125/*}*/) break;\r\n        pos++;\r\n        ch = commentWhitespace();\r\n        if (ch !== 41/*)*/) break;\r\n\r\n        const starExportSpecifier = starExportMap[id];\r\n        if (starExportSpecifier) {\r\n          reexports.add(decode(starExportSpecifier));\r\n          pos = revertPos;\r\n          return;\r\n        }\r\n        return;\r\n      }\r\n    }\r\n  }\r\n  pos = revertPos;\r\n}\r\n\r\nfunction readExportsOrModuleDotExports (ch) {\r\n  const revertPos = pos;\r\n  if (ch === 109/*m*/ && source.startsWith('odule', pos + 1)) {\r\n    pos += 6;\r\n    ch = commentWhitespace();\r\n    if (ch !== 46/*.*/) {\r\n      pos = revertPos;\r\n      return false;\r\n    }\r\n    pos++;\r\n    ch = commentWhitespace();\r\n  }\r\n  if (ch === 101/*e*/ && source.startsWith('xports', pos + 1)) {\r\n    pos += 7;\r\n    return true;\r\n  }\r\n  else {\r\n    pos = revertPos;\r\n    return false;\r\n  }\r\n}\r\n\r\nfunction tryParseModuleExportsDotAssign () {\r\n  pos += 6;\r\n  const revertPos = pos - 1;\r\n  let ch = commentWhitespace();\r\n  if (ch === 46/*.*/) {\r\n    pos++;\r\n    ch = commentWhitespace();\r\n    if (ch === 101/*e*/ && source.startsWith('xports', pos + 1)) {\r\n      tryParseExportsDotAssign(true);\r\n      return;\r\n    }\r\n  }\r\n  pos = revertPos;\r\n}\r\n\r\nfunction tryParseExportsDotAssign (assign) {\r\n  pos += 7;\r\n  const revertPos = pos - 1;\r\n  let ch = commentWhitespace();\r\n  switch (ch) {\r\n    // exports.asdf\r\n    case 46/*.*/: {\r\n      pos++;\r\n      ch = commentWhitespace();\r\n      const startPos = pos;\r\n      if (identifier()) {\r\n        const endPos = pos;\r\n        ch = commentWhitespace();\r\n        if (ch === 61/*=*/) {\r\n          _exports.add(decode(source.slice(startPos, endPos)));\r\n          return;\r\n        }\r\n      }\r\n      break;\r\n    }\r\n    // exports['asdf']\r\n    case 91/*[*/: {\r\n      pos++;\r\n      ch = commentWhitespace();\r\n      if (ch === 39/*'*/ || ch === 34/*\"*/) {\r\n        const startPos = pos;\r\n        stringLiteral(ch);\r\n        const endPos = ++pos;\r\n        ch = commentWhitespace();\r\n        if (ch !== 93/*]*/) break;\r\n        pos++;\r\n        ch = commentWhitespace();\r\n        if (ch !== 61/*=*/) break;\r\n        _exports.add(decode(source.slice(startPos, endPos)));\r\n      }\r\n      break;\r\n    }\r\n    // module.exports =\r\n    case 61/*=*/: {\r\n      if (assign) {\r\n        if (reexports.size)\r\n          reexports = new Set();\r\n        pos++;\r\n        ch = commentWhitespace();\r\n        // { ... }\r\n        if (ch === 123/*{*/) {\r\n          tryParseLiteralExports();\r\n          return;\r\n        }\r\n\r\n        // require('...')\r\n        if (ch === 114/*r*/)\r\n          tryParseRequire(ExportAssign);\r\n      }\r\n    }\r\n  }\r\n  pos = revertPos;\r\n}\r\n\r\nfunction tryParseRequire (requireType) {\r\n  // require('...')\r\n  const revertPos = pos;\r\n  if (source.startsWith('equire', pos + 1)) {\r\n    pos += 7;\r\n    let ch = commentWhitespace();\r\n    if (ch === 40/*(*/) {\r\n      pos++;\r\n      ch = commentWhitespace();\r\n      const reexportStart = pos;\r\n      if (ch === 39/*'*/ || ch === 34/*\"*/) {\r\n        stringLiteral(ch);\r\n        const reexportEnd = ++pos;\r\n        ch = commentWhitespace();\r\n        if (ch === 41/*)*/) {\r\n          switch (requireType) {\r\n            case ExportAssign:\r\n              reexports.add(decode(source.slice(reexportStart, reexportEnd)));\r\n              return true;\r\n            case ExportStar:\r\n              reexports.add(decode(source.slice(reexportStart, reexportEnd)));\r\n              return true;\r\n            default:\r\n              lastStarExportSpecifier = decode(source.slice(reexportStart, reexportEnd));\r\n              return true;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    pos = revertPos;\r\n  }\r\n  return false;\r\n}\r\n\r\nfunction tryParseLiteralExports () {\r\n  const revertPos = pos - 1;\r\n  while (pos++ < end) {\r\n    let ch = commentWhitespace();\r\n    const startPos = pos;\r\n    if (identifier()) {\r\n      const endPos = pos;\r\n      ch = commentWhitespace();\r\n      if (ch === 58/*:*/) {\r\n        pos++;\r\n        ch = commentWhitespace();\r\n        // nothing more complex than identifier expressions for now\r\n        if (!identifier()) {\r\n          pos = revertPos;\r\n          return;\r\n        }\r\n        ch = source.charCodeAt(pos);\r\n      }\r\n      _exports.add(decode(source.slice(startPos, endPos)));\r\n    }\r\n    else if (ch === 46/*.*/ && source.startsWith('..', pos + 1)) {\r\n      pos += 3;\r\n      if (source.charCodeAt(pos) === 114/*r*/ && tryParseRequire(ExportAssign)) {\r\n        pos++;\r\n      }\r\n      else if (!identifier()) {\r\n        pos = revertPos;\r\n        return;\r\n      }\r\n      ch = commentWhitespace();\r\n    }\r\n    else if (ch === 39/*'*/ || ch === 34/*\"*/) {\r\n      const startPos = pos;\r\n      stringLiteral(ch);\r\n      const endPos = ++pos;\r\n      ch = commentWhitespace();\r\n      if (ch === 58/*:*/) {\r\n        pos++;\r\n        ch = commentWhitespace();\r\n        // nothing more complex than identifier expressions for now\r\n        if (!identifier()) {\r\n          pos = revertPos;\r\n          return;\r\n        }\r\n        ch = source.charCodeAt(pos);\r\n        _exports.add(decode(source.slice(startPos, endPos)));\r\n      }\r\n    }\r\n    else {\r\n      pos = revertPos;\r\n      return;\r\n    }\r\n\r\n    if (ch === 125/*}*/)\r\n      return;\r\n\r\n    if (ch !== 44/*,*/) {\r\n      pos = revertPos;\r\n      return;\r\n    }\r\n  }\r\n}\r\n\r\n// --- Extracted from AcornJS ---\r\n//(https://github.com/acornjs/acorn/blob/master/acorn/src/identifier.js#L23\r\n//\r\n// MIT License\r\n\r\n// Copyright (C) 2012-2018 by various contributors (see AUTHORS)\r\n\r\n// Permission is hereby granted, free of charge, to any person obtaining a copy\r\n// of this software and associated documentation files (the \"Software\"), to deal\r\n// in the Software without restriction, including without limitation the rights\r\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n// copies of the Software, and to permit persons to whom the Software is\r\n// furnished to do so, subject to the following conditions:\r\n\r\n// The above copyright notice and this permission notice shall be included in\r\n// all copies or substantial portions of the Software.\r\n\r\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n// THE SOFTWARE.\r\n\r\n// ## Character categories\r\n\r\n// Big ugly regular expressions that match characters in the\r\n// whitespace, identifier, and identifier-start categories. These\r\n// are only applied when a character is found to actually have a\r\n// code point above 128.\r\n// Generated by `bin/generate-identifier-regex.js`.\r\nlet nonASCIIidentifierStartChars = \"\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u037f\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u052f\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05d0-\\u05ea\\u05ef-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086a\\u08a0-\\u08b4\\u08b6-\\u08c7\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u09fc\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0af9\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c39\\u0c3d\\u0c58-\\u0c5a\\u0c60\\u0c61\\u0c80\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d04-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d54-\\u0d56\\u0d5f-\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e86-\\u0e8a\\u0e8c-\\u0ea3\\u0ea5\\u0ea7-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f5\\u13f8-\\u13fd\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f8\\u1700-\\u170c\\u170e-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1878\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191e\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4b\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1c80-\\u1c88\\u1c90-\\u1cba\\u1cbd-\\u1cbf\\u1ce9-\\u1cec\\u1cee-\\u1cf3\\u1cf5\\u1cf6\\u1cfa\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2118-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309b-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312f\\u3131-\\u318e\\u31a0-\\u31bf\\u31f0-\\u31ff\\u3400-\\u4dbf\\u4e00-\\u9ffc\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua69d\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua7bf\\ua7c2-\\ua7ca\\ua7f5-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua8fd\\ua8fe\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\ua9e0-\\ua9e4\\ua9e6-\\ua9ef\\ua9fa-\\ua9fe\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa7e-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uab30-\\uab5a\\uab5c-\\uab69\\uab70-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc\"\r\nlet nonASCIIidentifierChars = \"\\u200c\\u200d\\xb7\\u0300-\\u036f\\u0387\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u064b-\\u0669\\u0670\\u06d6-\\u06dc\\u06df-\\u06e4\\u06e7\\u06e8\\u06ea-\\u06ed\\u06f0-\\u06f9\\u0711\\u0730-\\u074a\\u07a6-\\u07b0\\u07c0-\\u07c9\\u07eb-\\u07f3\\u07fd\\u0816-\\u0819\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0859-\\u085b\\u08d3-\\u08e1\\u08e3-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09cb-\\u09cd\\u09d7\\u09e2\\u09e3\\u09e6-\\u09ef\\u09fe\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2\\u0ae3\\u0ae6-\\u0aef\\u0afa-\\u0aff\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b55-\\u0b57\\u0b62\\u0b63\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c00-\\u0c04\\u0c3e-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62\\u0c63\\u0c66-\\u0c6f\\u0c81-\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2\\u0ce3\\u0ce6-\\u0cef\\u0d00-\\u0d03\\u0d3b\\u0d3c\\u0d3e-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4d\\u0d57\\u0d62\\u0d63\\u0d66-\\u0d6f\\u0d81-\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0de6-\\u0def\\u0df2\\u0df3\\u0e31\\u0e34-\\u0e3a\\u0e47-\\u0e4e\\u0e50-\\u0e59\\u0eb1\\u0eb4-\\u0ebc\\u0ec8-\\u0ecd\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f3e\\u0f3f\\u0f71-\\u0f84\\u0f86\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u102b-\\u103e\\u1040-\\u1049\\u1056-\\u1059\\u105e-\\u1060\\u1062-\\u1064\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u1369-\\u1371\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17b4-\\u17d3\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u1810-\\u1819\\u18a9\\u1920-\\u192b\\u1930-\\u193b\\u1946-\\u194f\\u19d0-\\u19da\\u1a17-\\u1a1b\\u1a55-\\u1a5e\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1ab0-\\u1abd\\u1abf\\u1ac0\\u1b00-\\u1b04\\u1b34-\\u1b44\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1b80-\\u1b82\\u1ba1-\\u1bad\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c24-\\u1c37\\u1c40-\\u1c49\\u1c50-\\u1c59\\u1cd0-\\u1cd2\\u1cd4-\\u1ce8\\u1ced\\u1cf4\\u1cf7-\\u1cf9\\u1dc0-\\u1df9\\u1dfb-\\u1dff\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2cef-\\u2cf1\\u2d7f\\u2de0-\\u2dff\\u302a-\\u302f\\u3099\\u309a\\ua620-\\ua629\\ua66f\\ua674-\\ua67d\\ua69e\\ua69f\\ua6f0\\ua6f1\\ua802\\ua806\\ua80b\\ua823-\\ua827\\ua82c\\ua880\\ua881\\ua8b4-\\ua8c5\\ua8d0-\\ua8d9\\ua8e0-\\ua8f1\\ua8ff-\\ua909\\ua926-\\ua92d\\ua947-\\ua953\\ua980-\\ua983\\ua9b3-\\ua9c0\\ua9d0-\\ua9d9\\ua9e5\\ua9f0-\\ua9f9\\uaa29-\\uaa36\\uaa43\\uaa4c\\uaa4d\\uaa50-\\uaa59\\uaa7b-\\uaa7d\\uaab0\\uaab2-\\uaab4\\uaab7\\uaab8\\uaabe\\uaabf\\uaac1\\uaaeb-\\uaaef\\uaaf5\\uaaf6\\uabe3-\\uabea\\uabec\\uabed\\uabf0-\\uabf9\\ufb1e\\ufe00-\\ufe0f\\ufe20-\\ufe2f\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f\"\r\n\r\nconst nonASCIIidentifierStart = new RegExp(\"[\" + nonASCIIidentifierStartChars + \"]\")\r\nconst nonASCIIidentifier = new RegExp(\"[\" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + \"]\")\r\n\r\nnonASCIIidentifierStartChars = nonASCIIidentifierChars = null\r\n\r\n// These are a run-length and offset encoded representation of the\r\n// >0xffff code points that are a valid part of identifiers. The\r\n// offset starts at 0x10000, and each pair of numbers represents an\r\n// offset to the next range, and then a size of the range. They were\r\n// generated by bin/generate-identifier-regex.js\r\n\r\n// eslint-disable-next-line comma-spacing\r\nconst astralIdentifierStartCodes = [0,11,2,25,2,18,2,1,2,14,3,13,35,122,70,52,268,28,4,48,48,31,14,29,6,37,11,29,3,35,5,7,2,4,43,157,19,35,5,35,5,39,9,51,157,310,10,21,11,7,153,5,3,0,2,43,2,1,4,0,3,22,11,22,10,30,66,18,2,1,11,21,11,25,71,55,7,1,65,0,16,3,2,2,2,28,43,28,4,28,36,7,2,27,28,53,11,21,11,18,14,17,111,72,56,50,14,50,14,35,349,41,7,1,79,28,11,0,9,21,107,20,28,22,13,52,76,44,33,24,27,35,30,0,3,0,9,34,4,0,13,47,15,3,22,0,2,0,36,17,2,24,85,6,2,0,2,3,2,14,2,9,8,46,39,7,3,1,3,21,2,6,2,1,2,4,4,0,19,0,13,4,159,52,19,3,21,2,31,47,21,1,2,0,185,46,42,3,37,47,21,0,60,42,14,0,72,26,230,43,117,63,32,7,3,0,3,7,2,1,2,23,16,0,2,0,95,7,3,38,17,0,2,0,29,0,11,39,8,0,22,0,12,45,20,0,35,56,264,8,2,36,18,0,50,29,113,6,2,1,2,37,22,0,26,5,2,1,2,31,15,0,328,18,190,0,80,921,103,110,18,195,2749,1070,4050,582,8634,568,8,30,114,29,19,47,17,3,32,20,6,18,689,63,129,74,6,0,67,12,65,1,2,0,29,6135,9,1237,43,8,8952,286,50,2,18,3,9,395,2309,106,6,12,4,8,8,9,5991,84,2,70,2,1,3,0,3,1,3,3,2,11,2,0,2,6,2,64,2,3,3,7,2,6,2,27,2,3,2,4,2,0,4,6,2,339,3,24,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,7,2357,44,11,6,17,0,370,43,1301,196,60,67,8,0,1205,3,2,26,2,1,2,0,3,0,2,9,2,3,2,0,2,0,7,0,5,0,2,0,2,0,2,2,2,1,2,0,3,0,2,0,2,0,2,0,2,0,2,1,2,0,3,3,2,6,2,3,2,3,2,0,2,9,2,16,6,2,2,4,2,16,4421,42717,35,4148,12,221,3,5761,15,7472,3104,541,1507,4938]\r\n\r\n// eslint-disable-next-line comma-spacing\r\nconst astralIdentifierCodes = [509,0,227,0,150,4,294,9,1368,2,2,1,6,3,41,2,5,0,166,1,574,3,9,9,370,1,154,10,176,2,54,14,32,9,16,3,46,10,54,9,7,2,37,13,2,9,6,1,45,0,13,2,49,13,9,3,2,11,83,11,7,0,161,11,6,9,7,3,56,1,2,6,3,1,3,2,10,0,11,1,3,6,4,4,193,17,10,9,5,0,82,19,13,9,214,6,3,8,28,1,83,16,16,9,82,12,9,9,84,14,5,9,243,14,166,9,71,5,2,1,3,3,2,0,2,1,13,9,120,6,3,6,4,0,29,9,41,6,2,3,9,0,10,10,47,15,406,7,2,7,17,9,57,21,2,13,123,5,4,0,2,1,2,6,2,0,9,9,49,4,2,1,2,4,9,9,330,3,19306,9,135,4,60,6,26,9,1014,0,2,54,8,3,82,0,12,1,19628,1,5319,4,4,5,9,7,3,6,31,3,149,2,1418,49,513,54,5,49,9,0,15,0,23,4,2,14,1361,6,2,16,3,6,2,1,2,4,262,6,10,9,419,13,1495,6,110,6,6,9,4759,9,787719,239]\r\n\r\n// This has a complexity linear to the value of the code. The\r\n// assumption is that looking up astral identifier characters is\r\n// rare.\r\nfunction isInAstralSet(code, set) {\r\n  let pos = 0x10000\r\n  for (let i = 0; i < set.length; i += 2) {\r\n    pos += set[i]\r\n    if (pos > code) return false\r\n    pos += set[i + 1]\r\n    if (pos >= code) return true\r\n  }\r\n}\r\n\r\n// Test whether a given character code starts an identifier.\r\n\r\nfunction isIdentifierStart(code, astral) {\r\n  if (code < 65) return code === 36\r\n  if (code < 91) return true\r\n  if (code < 97) return code === 95\r\n  if (code < 123) return true\r\n  if (code <= 0xffff) return code >= 0xaa && nonASCIIidentifierStart.test(String.fromCharCode(code))\r\n  if (astral === false) return false\r\n  return isInAstralSet(code, astralIdentifierStartCodes)\r\n}\r\n\r\n// Test whether a given character is part of an identifier.\r\n\r\nfunction isIdentifierChar(code, astral) {\r\n  if (code < 48) return code === 36\r\n  if (code < 58) return true\r\n  if (code < 65) return false\r\n  if (code < 91) return true\r\n  if (code < 97) return code === 95\r\n  if (code < 123) return true\r\n  if (code <= 0xffff) return code >= 0xaa && nonASCIIidentifier.test(String.fromCharCode(code))\r\n  if (astral === false) return false\r\n  return isInAstralSet(code, astralIdentifierStartCodes) || isInAstralSet(code, astralIdentifierCodes)\r\n}\r\n\r\nfunction identifier () {\r\n  let ch = source.codePointAt(pos);\r\n  if (!isIdentifierStart(ch, true) || ch === '\\\\')\r\n    return false;\r\n  pos += codePointLen(ch);\r\n  while (ch = source.codePointAt(pos)) {\r\n    if (isIdentifierChar(ch, true)) {\r\n      pos += codePointLen(ch);\r\n    }\r\n    else if (ch === '\\\\') {\r\n      // no identifier escapes support for now\r\n      return false;\r\n    }\r\n    else {\r\n      break;\r\n    }\r\n  }\r\n  return true;\r\n}\r\n\r\nfunction codePointLen (ch) {\r\n  if (ch < 0x10000) return 1;\r\n  return 2;\r\n}\r\n\r\nfunction codePointAtLast (bPos) {\r\n  // Gives the UTF char for backtracking surrogates\r\n  const ch = source.charCodeAt(bPos);\r\n  if ((ch & 0xFC00) === 0xDC00)\r\n    return (((source.charCodeAt(bPos - 1) & 0x3FF) << 10) | (ch & 0x3FF)) + 0x10000;\r\n  return ch;\r\n}\r\n\r\nfunction esmSyntaxErr (msg) {\r\n  return Object.assign(new Error(msg), { code: 'ERR_LEXER_ESM_SYNTAX' });\r\n}\r\n\r\nfunction throwIfImportStatement () {\r\n  const startPos = pos;\r\n  pos += 6;\r\n  const ch = commentWhitespace();\r\n  switch (ch) {\r\n    // dynamic import\r\n    case 40/*(*/:\r\n      openTokenPosStack[openTokenDepth++] = startPos;\r\n      return;\r\n    // import.meta\r\n    case 46/*.*/:\r\n      throw esmSyntaxErr('Unexpected import.meta in CJS module.');\r\n\r\n    default:\r\n      // no space after \"import\" -> not an import keyword\r\n      if (pos === startPos + 6)\r\n        break;\r\n    case 34/*\"*/:\r\n    case 39/*'*/:\r\n    case 123/*{*/:\r\n    case 42/***/:\r\n      // import statement only permitted at base-level\r\n      if (openTokenDepth !== 0) {\r\n        pos--;\r\n        return;\r\n      }\r\n      // import statements are a syntax error in CommonJS\r\n      throw esmSyntaxErr('Unexpected import statement in CJS module.');\r\n  }\r\n}\r\n\r\nfunction throwIfExportStatement () {\r\n  pos += 6;\r\n  const curPos = pos;\r\n  const ch = commentWhitespace();\r\n  if (pos === curPos && !isPunctuator(ch))\r\n    return;\r\n  throw esmSyntaxErr('Unexpected export statement in CJS module.');\r\n}\r\n\r\nfunction commentWhitespace () {\r\n  let ch;\r\n  do {\r\n    ch = source.charCodeAt(pos);\r\n    if (ch === 47/*/*/) {\r\n      const next_ch = source.charCodeAt(pos + 1);\r\n      if (next_ch === 47/*/*/)\r\n        lineComment();\r\n      else if (next_ch === 42/***/)\r\n        blockComment();\r\n      else\r\n        return ch;\r\n    }\r\n    else if (!isBrOrWs(ch)) {\r\n      return ch;\r\n    }\r\n  } while (pos++ < end);\r\n  return ch;\r\n}\r\n\r\nfunction templateString () {\r\n  while (pos++ < end) {\r\n    const ch = source.charCodeAt(pos);\r\n    if (ch === 36/*$*/ && source.charCodeAt(pos + 1) === 123/*{*/) {\r\n      pos++;\r\n      templateStack[templateStackDepth++] = templateDepth;\r\n      templateDepth = ++openTokenDepth;\r\n      return;\r\n    }\r\n    if (ch === 96/*`*/)\r\n      return;\r\n    if (ch === 92/*\\*/)\r\n      pos++;\r\n  }\r\n  syntaxError();\r\n}\r\n\r\nfunction blockComment () {\r\n  pos++;\r\n  while (pos++ < end) {\r\n    const ch = source.charCodeAt(pos);\r\n    if (ch === 42/***/ && source.charCodeAt(pos + 1) === 47/*/*/) {\r\n      pos++;\r\n      return;\r\n    }\r\n  }\r\n}\r\n\r\nfunction lineComment () {\r\n  while (pos++ < end) {\r\n    const ch = source.charCodeAt(pos);\r\n    if (ch === 10/*\\n*/ || ch === 13/*\\r*/)\r\n      return;\r\n  }\r\n}\r\n\r\nfunction stringLiteral (quote) {\r\n  while (pos++ < end) {\r\n    let ch = source.charCodeAt(pos);\r\n    if (ch === quote)\r\n      return;\r\n    if (ch === 92/*\\*/) {\r\n      ch = source.charCodeAt(++pos);\r\n      if (ch === 13/*\\r*/ && source.charCodeAt(pos + 1) === 10/*\\n*/)\r\n        pos++;\r\n    }\r\n    else if (isBr(ch))\r\n      break;\r\n  }\r\n  throw new Error('Unterminated string.');\r\n}\r\n\r\nfunction regexCharacterClass () {\r\n  while (pos++ < end) {\r\n    let ch = source.charCodeAt(pos);\r\n    if (ch === 93/*]*/)\r\n      return ch;\r\n    if (ch === 92/*\\*/)\r\n      pos++;\r\n    else if (ch === 10/*\\n*/ || ch === 13/*\\r*/)\r\n      break;\r\n  }\r\n  throw new Error('Syntax error reading regular expression class.');\r\n}\r\n\r\nfunction regularExpression () {\r\n  while (pos++ < end) {\r\n    let ch = source.charCodeAt(pos);\r\n    if (ch === 47/*/*/)\r\n      return;\r\n    if (ch === 91/*[*/)\r\n      ch = regexCharacterClass();\r\n    else if (ch === 92/*\\*/)\r\n      pos++;\r\n    else if (ch === 10/*\\n*/ || ch === 13/*\\r*/)\r\n      break;\r\n  }\r\n  throw new Error('Syntax error reading regular expression.');\r\n}\r\n\r\n// Note: non-asii BR and whitespace checks omitted for perf / footprint\r\n// if there is a significant user need this can be reconsidered\r\nfunction isBr (c) {\r\n  return c === 13/*\\r*/ || c === 10/*\\n*/;\r\n}\r\n\r\nfunction isBrOrWs (c) {\r\n  return c > 8 && c < 14 || c === 32 || c === 160;\r\n}\r\n\r\nfunction isBrOrWsOrPunctuatorNotDot (c) {\r\n  return c > 8 && c < 14 || c === 32 || c === 160 || isPunctuator(c) && c !== 46/*.*/;\r\n}\r\n\r\nfunction keywordStart (pos) {\r\n  return pos === 0 || isBrOrWsOrPunctuatorNotDot(source.charCodeAt(pos - 1));\r\n}\r\n\r\nfunction readPrecedingKeyword (pos, match) {\r\n  if (pos < match.length - 1)\r\n    return false;\r\n  return source.startsWith(match, pos - match.length + 1) && (pos === 0 || isBrOrWsOrPunctuatorNotDot(source.charCodeAt(pos - match.length)));\r\n}\r\n\r\nfunction readPrecedingKeyword1 (pos, ch) {\r\n  return source.charCodeAt(pos) === ch && (pos === 0 || isBrOrWsOrPunctuatorNotDot(source.charCodeAt(pos - 1)));\r\n}\r\n\r\n// Detects one of case, debugger, delete, do, else, in, instanceof, new,\r\n//   return, throw, typeof, void, yield, await\r\nfunction isExpressionKeyword (pos) {\r\n  switch (source.charCodeAt(pos)) {\r\n    case 100/*d*/:\r\n      switch (source.charCodeAt(pos - 1)) {\r\n        case 105/*i*/:\r\n          // void\r\n          return readPrecedingKeyword(pos - 2, 'vo');\r\n        case 108/*l*/:\r\n          // yield\r\n          return readPrecedingKeyword(pos - 2, 'yie');\r\n        default:\r\n          return false;\r\n      }\r\n    case 101/*e*/:\r\n      switch (source.charCodeAt(pos - 1)) {\r\n        case 115/*s*/:\r\n          switch (source.charCodeAt(pos - 2)) {\r\n            case 108/*l*/:\r\n              // else\r\n              return readPrecedingKeyword1(pos - 3, 101/*e*/);\r\n            case 97/*a*/:\r\n              // case\r\n              return readPrecedingKeyword1(pos - 3, 99/*c*/);\r\n            default:\r\n              return false;\r\n          }\r\n        case 116/*t*/:\r\n          // delete\r\n          return readPrecedingKeyword(pos - 2, 'dele');\r\n        default:\r\n          return false;\r\n      }\r\n    case 102/*f*/:\r\n      if (source.charCodeAt(pos - 1) !== 111/*o*/ || source.charCodeAt(pos - 2) !== 101/*e*/)\r\n        return false;\r\n      switch (source.charCodeAt(pos - 3)) {\r\n        case 99/*c*/:\r\n          // instanceof\r\n          return readPrecedingKeyword(pos - 4, 'instan');\r\n        case 112/*p*/:\r\n          // typeof\r\n          return readPrecedingKeyword(pos - 4, 'ty');\r\n        default:\r\n          return false;\r\n      }\r\n    case 110/*n*/:\r\n      // in, return\r\n      return readPrecedingKeyword1(pos - 1, 105/*i*/) || readPrecedingKeyword(pos - 1, 'retur');\r\n    case 111/*o*/:\r\n      // do\r\n      return readPrecedingKeyword1(pos - 1, 100/*d*/);\r\n    case 114/*r*/:\r\n      // debugger\r\n      return readPrecedingKeyword(pos - 1, 'debugge');\r\n    case 116/*t*/:\r\n      // await\r\n      return readPrecedingKeyword(pos - 1, 'awai');\r\n    case 119/*w*/:\r\n      switch (source.charCodeAt(pos - 1)) {\r\n        case 101/*e*/:\r\n          // new\r\n          return readPrecedingKeyword1(pos - 2, 110/*n*/);\r\n        case 111/*o*/:\r\n          // throw\r\n          return readPrecedingKeyword(pos - 2, 'thr');\r\n        default:\r\n          return false;\r\n      }\r\n  }\r\n  return false;\r\n}\r\n\r\nfunction isParenKeyword (curPos) {\r\n  return source.charCodeAt(curPos) === 101/*e*/ && source.startsWith('whil', curPos - 4) ||\r\n      source.charCodeAt(curPos) === 114/*r*/ && source.startsWith('fo', curPos - 2) ||\r\n      source.charCodeAt(curPos - 1) === 105/*i*/ && source.charCodeAt(curPos) === 102/*f*/;\r\n}\r\n\r\nfunction isPunctuator (ch) {\r\n  // 23 possible punctuator endings: !%&()*+,-./:;<=>?[]^{}|~\r\n  return ch === 33/*!*/ || ch === 37/*%*/ || ch === 38/*&*/ ||\r\n    ch > 39 && ch < 48 || ch > 57 && ch < 64 ||\r\n    ch === 91/*[*/ || ch === 93/*]*/ || ch === 94/*^*/ ||\r\n    ch > 122 && ch < 127;\r\n}\r\n\r\nfunction isExpressionPunctuator (ch) {\r\n  // 20 possible expression endings: !%&(*+,-.:;<=>?[^{|~\r\n  return ch === 33/*!*/ || ch === 37/*%*/ || ch === 38/*&*/ ||\r\n    ch > 39 && ch < 47 && ch !== 41 || ch > 57 && ch < 64 ||\r\n    ch === 91/*[*/ || ch === 94/*^*/ || ch > 122 && ch < 127 && ch !== 125/*}*/;\r\n}\r\n\r\nfunction isExpressionTerminator (curPos) {\r\n  // detects:\r\n  // => ; ) finally catch else\r\n  // as all of these followed by a { will indicate a statement brace\r\n  switch (source.charCodeAt(curPos)) {\r\n    case 62/*>*/:\r\n      return source.charCodeAt(curPos - 1) === 61/*=*/;\r\n    case 59/*;*/:\r\n    case 41/*)*/:\r\n      return true;\r\n    case 104/*h*/:\r\n      return source.startsWith('catc', curPos - 4);\r\n    case 121/*y*/:\r\n      return source.startsWith('finall', curPos - 6);\r\n    case 101/*e*/:\r\n      return source.startsWith('els', curPos - 3);\r\n  }\r\n  return false;\r\n}\r\n\r\nconst initPromise = Promise.resolve();\r\n\r\nmodule.exports.init = () => initPromise;\r\nmodule.exports.parse = parseCJS;\r\n"],"mappings":"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C,EAAE,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,GAAG,EAAC,EAAE,EAAC,EAAE,EAAC,GAAG,EAAC,EAAE,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,GAAG,EAAC,EAAE,EAAC,EAAE,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,EAAE,EAAC,GAAG,EAAC,GAAG,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,CAAC,EAAC,GAAG,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,GAAG,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,GAAG,EAAC,EAAE,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,GAAG,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,GAAG,EAAC,EAAE,EAAC,EAAE,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,GAAG,EAAC,EAAE,EAAC,EAAE,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,GAAG,EAAC,EAAE,EAAC,GAAG,EAAC,EAAE,EAAC,EAAE,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,GAAG,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,GAAG,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,CAAC,EAAC,GAAG,EAAC,EAAE,EAAC,GAAG,EAAC,CAAC,EAAC,EAAE,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,EAAE,EAAC,GAAG,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,GAAG,EAAC,IAAI,EAAC,GAAG,EAAC,CAAC,EAAC,EAAE,EAAC,GAAG,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,CAAC,EAAC,EAAE,EAAC,GAAG,EAAC,EAAE,EAAC,GAAG,EAAC,EAAE,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,IAAI,EAAC,CAAC,EAAC,IAAI,EAAC,EAAE,EAAC,CAAC,EAAC,IAAI,EAAC,GAAG,EAAC,EAAE,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,CAAC,EAAC,GAAG,EAAC,IAAI,EAAC,GAAG,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,IAAI,EAAC,EAAE,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,GAAG,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,CAAC,EAAC,IAAI,EAAC,EAAE,EAAC,EAAE,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,GAAG,EAAC,EAAE,EAAC,IAAI,EAAC,GAAG,EAAC,EAAE,EAAC,EAAE,EAAC,CAAC,EAAC,CAAC,EAAC,IAAI,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,IAAI,EAAC,KAAK,EAAC,EAAE,EAAC,IAAI,EAAC,EAAE,EAAC,GAAG,EAAC,CAAC,EAAC,IAAI,EAAC,EAAE,EAAC,IAAI,EAAC,IAAI,EAAC,GAAG,EAAC,IAAI,EAAC,IAAI,CAAC;;AAE/yC;AACA,MAAMC,qBAAqB,GAAG,CAAC,GAAG,EAAC,CAAC,EAAC,GAAG,EAAC,CAAC,EAAC,GAAG,EAAC,CAAC,EAAC,GAAG,EAAC,CAAC,EAAC,IAAI,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,GAAG,EAAC,CAAC,EAAC,GAAG,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,GAAG,EAAC,CAAC,EAAC,GAAG,EAAC,EAAE,EAAC,GAAG,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,CAAC,EAAC,CAAC,EAAC,GAAG,EAAC,EAAE,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,GAAG,EAAC,EAAE,EAAC,EAAE,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,CAAC,EAAC,GAAG,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,CAAC,EAAC,CAAC,EAAC,GAAG,EAAC,EAAE,EAAC,GAAG,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,GAAG,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,GAAG,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,CAAC,EAAC,EAAE,EAAC,GAAG,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,GAAG,EAAC,CAAC,EAAC,KAAK,EAAC,CAAC,EAAC,GAAG,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,IAAI,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,KAAK,EAAC,CAAC,EAAC,IAAI,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,GAAG,EAAC,CAAC,EAAC,IAAI,EAAC,EAAE,EAAC,GAAG,EAAC,EAAE,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,IAAI,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,GAAG,EAAC,CAAC,EAAC,EAAE,EAAC,CA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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}