{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.dynamicAnchor = void 0;\nconst codegen_1 = require(\"../../compile/codegen\");\nconst names_1 = require(\"../../compile/names\");\nconst compile_1 = require(\"../../compile\");\nconst ref_1 = require(\"../core/ref\");\nconst def = {\n  keyword: \"$dynamicAnchor\",\n  schemaType: \"string\",\n  code: cxt => dynamicAnchor(cxt, cxt.schema)\n};\nfunction dynamicAnchor(cxt, anchor) {\n  const {\n    gen,\n    it\n  } = cxt;\n  it.schemaEnv.root.dynamicAnchors[anchor] = true;\n  const v = (0, codegen_1._)`${names_1.default.dynamicAnchors}${(0, codegen_1.getProperty)(anchor)}`;\n  const validate = it.errSchemaPath === \"#\" ? it.validateName : _getValidate(cxt);\n  gen.if((0, codegen_1._)`!${v}`, () => gen.assign(v, validate));\n}\nexports.dynamicAnchor = dynamicAnchor;\nfunction _getValidate(cxt) {\n  const {\n    schemaEnv,\n    schema,\n    self\n  } = cxt.it;\n  const {\n    root,\n    baseId,\n    localRefs,\n    meta\n  } = schemaEnv.root;\n  const {\n    schemaId\n  } = self.opts;\n  const sch = new compile_1.SchemaEnv({\n    schema,\n    schemaId,\n    root,\n    baseId,\n    localRefs,\n    meta\n  });\n  compile_1.compileSchema.call(self, sch);\n  return (0, ref_1.getValidate)(cxt, sch);\n}\nexports.default = def;","map":{"version":3,"names":["codegen_1","require","names_1","compile_1","ref_1","def","keyword","schemaType","code","cxt","dynamicAnchor","schema","anchor","gen","it","schemaEnv","root","dynamicAnchors","v","_","default","getProperty","validate","errSchemaPath","validateName","_getValidate","if","assign","exports","self","baseId","localRefs","meta","schemaId","opts","sch","SchemaEnv","compileSchema","call","getValidate"],"sources":["C:\\Users\\chest\\OneDrive\\Documentos\\GitHub\\HackUPC\\frontend\\node_modules\\ajv-formats\\node_modules\\ajv\\lib\\vocabularies\\dynamic\\dynamicAnchor.ts"],"sourcesContent":["import type {CodeKeywordDefinition} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, getProperty, Code} from \"../../compile/codegen\"\nimport N from \"../../compile/names\"\nimport {SchemaEnv, compileSchema} from \"../../compile\"\nimport {getValidate} from \"../core/ref\"\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"$dynamicAnchor\",\n  schemaType: \"string\",\n  code: (cxt) => dynamicAnchor(cxt, cxt.schema),\n}\n\nexport function dynamicAnchor(cxt: KeywordCxt, anchor: string): void {\n  const {gen, it} = cxt\n  it.schemaEnv.root.dynamicAnchors[anchor] = true\n  const v = _`${N.dynamicAnchors}${getProperty(anchor)}`\n  const validate = it.errSchemaPath === \"#\" ? it.validateName : _getValidate(cxt)\n  gen.if(_`!${v}`, () => gen.assign(v, validate))\n}\n\nfunction _getValidate(cxt: KeywordCxt): Code {\n  const {schemaEnv, schema, self} = cxt.it\n  const {root, baseId, localRefs, meta} = schemaEnv.root\n  const {schemaId} = self.opts\n  const sch = new SchemaEnv({schema, schemaId, root, baseId, localRefs, meta})\n  compileSchema.call(self, sch)\n  return getValidate(cxt, sch)\n}\n\nexport default def\n"],"mappings":";;;;;;AAEA,MAAAA,SAAA,GAAAC,OAAA;AACA,MAAAC,OAAA,GAAAD,OAAA;AACA,MAAAE,SAAA,GAAAF,OAAA;AACA,MAAAG,KAAA,GAAAH,OAAA;AAEA,MAAMI,GAAG,GAA0B;EACjCC,OAAO,EAAE,gBAAgB;EACzBC,UAAU,EAAE,QAAQ;EACpBC,IAAI,EAAGC,GAAG,IAAKC,aAAa,CAACD,GAAG,EAAEA,GAAG,CAACE,MAAM;CAC7C;AAED,SAAgBD,aAAaA,CAACD,GAAe,EAAEG,MAAc;EAC3D,MAAM;IAACC,GAAG;IAAEC;EAAE,CAAC,GAAGL,GAAG;EACrBK,EAAE,CAACC,SAAS,CAACC,IAAI,CAACC,cAAc,CAACL,MAAM,CAAC,GAAG,IAAI;EAC/C,MAAMM,CAAC,GAAG,IAAAlB,SAAA,CAAAmB,CAAC,IAAGjB,OAAA,CAAAkB,OAAC,CAACH,cAAc,GAAG,IAAAjB,SAAA,CAAAqB,WAAW,EAACT,MAAM,CAAC,EAAE;EACtD,MAAMU,QAAQ,GAAGR,EAAE,CAACS,aAAa,KAAK,GAAG,GAAGT,EAAE,CAACU,YAAY,GAAGC,YAAY,CAAChB,GAAG,CAAC;EAC/EI,GAAG,CAACa,EAAE,CAAC,IAAA1B,SAAA,CAAAmB,CAAC,KAAID,CAAC,EAAE,EAAE,MAAML,GAAG,CAACc,MAAM,CAACT,CAAC,EAAEI,QAAQ,CAAC,CAAC;AACjD;AANAM,OAAA,CAAAlB,aAAA,GAAAA,aAAA;AAQA,SAASe,YAAYA,CAAChB,GAAe;EACnC,MAAM;IAACM,SAAS;IAAEJ,MAAM;IAAEkB;EAAI,CAAC,GAAGpB,GAAG,CAACK,EAAE;EACxC,MAAM;IAACE,IAAI;IAAEc,MAAM;IAAEC,SAAS;IAAEC;EAAI,CAAC,GAAGjB,SAAS,CAACC,IAAI;EACtD,MAAM;IAACiB;EAAQ,CAAC,GAAGJ,IAAI,CAACK,IAAI;EAC5B,MAAMC,GAAG,GAAG,IAAIhC,SAAA,CAAAiC,SAAS,CAAC;IAACzB,MAAM;IAAEsB,QAAQ;IAAEjB,IAAI;IAAEc,MAAM;IAAEC,SAAS;IAAEC;EAAI,CAAC,CAAC;EAC5E7B,SAAA,CAAAkC,aAAa,CAACC,IAAI,CAACT,IAAI,EAAEM,GAAG,CAAC;EAC7B,OAAO,IAAA/B,KAAA,CAAAmC,WAAW,EAAC9B,GAAG,EAAE0B,GAAG,CAAC;AAC9B;AAEAP,OAAA,CAAAR,OAAA,GAAef,GAAG","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}