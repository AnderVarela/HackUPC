{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _helperPluginUtils = require(\"@babel/helper-plugin-utils\");\nvar _helperModuleImports = require(\"@babel/helper-module-imports\");\nvar _core = require(\"@babel/core\");\nvar _helpers = require(\"./helpers.js\");\nvar _index = require(\"./get-runtime-path/index.js\");\nvar _index2 = require(\"./babel-7/index.cjs\");\nvar _default = exports.default = (0, _helperPluginUtils.declare)((api, options, dirname) => {\n  api.assertVersion(7);\n  const {\n    version: runtimeVersion = \"7.0.0-beta.0\",\n    absoluteRuntime = false,\n    moduleName = null\n  } = options;\n  if (typeof absoluteRuntime !== \"boolean\" && typeof absoluteRuntime !== \"string\") {\n    throw new Error(\"The 'absoluteRuntime' option must be undefined, a boolean, or a string.\");\n  }\n  if (typeof runtimeVersion !== \"string\") {\n    throw new Error(`The 'version' option must be a version string.`);\n  }\n  if (moduleName !== null && typeof moduleName !== \"string\") {\n    throw new Error(\"The 'moduleName' option must be null or a string.\");\n  }\n  {\n    const DUAL_MODE_RUNTIME = \"7.13.0\";\n    var supportsCJSDefault = (0, _helpers.hasMinVersion)(DUAL_MODE_RUNTIME, runtimeVersion);\n  }\n  if (hasOwnProperty.call(options, \"useBuiltIns\")) {\n    if (options[\"useBuiltIns\"]) {\n      throw new Error(\"The 'useBuiltIns' option has been removed. The @babel/runtime \" + \"module now uses builtins by default.\");\n    } else {\n      throw new Error(\"The 'useBuiltIns' option has been removed. Use the 'corejs'\" + \"option to polyfill with `core-js` via @babel/runtime.\");\n    }\n  }\n  if (hasOwnProperty.call(options, \"polyfill\")) {\n    if (options[\"polyfill\"] === false) {\n      throw new Error(\"The 'polyfill' option has been removed. The @babel/runtime \" + \"module now skips polyfilling by default.\");\n    } else {\n      throw new Error(\"The 'polyfill' option has been removed. Use the 'corejs'\" + \"option to polyfill with `core-js` via @babel/runtime.\");\n    }\n  }\n  ;\n  {\n    const {\n      useESModules = false\n    } = options;\n    if (typeof useESModules !== \"boolean\" && useESModules !== \"auto\") {\n      throw new Error(\"The 'useESModules' option must be undefined, or a boolean, or 'auto'.\");\n    }\n    var esModules = useESModules === \"auto\" ? api.caller(caller => !!(caller != null && caller.supportsStaticESM)) : useESModules;\n  }\n  {\n    var {\n      helpers: useRuntimeHelpers = true\n    } = options;\n    if (typeof useRuntimeHelpers !== \"boolean\") {\n      throw new Error(\"The 'helpers' option must be undefined, or a boolean.\");\n    }\n  }\n  const HEADER_HELPERS = new Set([\"interopRequireWildcard\", \"interopRequireDefault\"]);\n  return {\n    name: \"transform-runtime\",\n    inherits: _index2.createPolyfillPlugins(options, runtimeVersion, absoluteRuntime),\n    pre(file) {\n      if (!useRuntimeHelpers) return;\n      let modulePath;\n      file.set(\"helperGenerator\", name => {\n        var _modulePath, _ref;\n        (_modulePath = modulePath) != null ? _modulePath : modulePath = (0, _index.default)((_ref = moduleName != null ? moduleName : file.get(\"runtimeHelpersModuleName\")) != null ? _ref : \"@babel/runtime\", dirname, absoluteRuntime);\n        {\n          if (!(file.availableHelper != null && file.availableHelper(name, runtimeVersion))) {\n            if (name === \"regeneratorRuntime\") {\n              return _core.types.arrowFunctionExpression([], _core.types.identifier(\"regeneratorRuntime\"));\n            }\n            return;\n          }\n        }\n        const blockHoist = HEADER_HELPERS.has(name) && !(0, _helperModuleImports.isModule)(file.path) ? 4 : undefined;\n        let helperPath = `${modulePath}/helpers/${esModules && file.path.node.sourceType === \"module\" ? \"esm/\" + name : name}`;\n        if (absoluteRuntime) helperPath = (0, _index.resolveFSPath)(helperPath);\n        return addDefaultImport(helperPath, name, blockHoist, true);\n      });\n      const cache = new Map();\n      function addDefaultImport(source, nameHint, blockHoist, isHelper = false) {\n        const cacheKey = (0, _helperModuleImports.isModule)(file.path);\n        const key = `${source}:${nameHint}:${cacheKey || \"\"}`;\n        let cached = cache.get(key);\n        if (cached) {\n          cached = _core.types.cloneNode(cached);\n        } else {\n          cached = (0, _helperModuleImports.addDefault)(file.path, source, {\n            importedInterop: isHelper && supportsCJSDefault ? \"compiled\" : \"uncompiled\",\n            nameHint,\n            blockHoist\n          });\n          cache.set(key, cached);\n        }\n        return cached;\n      }\n    }\n  };\n});","map":{"version":3,"names":["_helperPluginUtils","require","_helperModuleImports","_core","_helpers","_index","_index2","_default","exports","default","declare","api","options","dirname","assertVersion","version","runtimeVersion","absoluteRuntime","moduleName","Error","DUAL_MODE_RUNTIME","supportsCJSDefault","hasMinVersion","hasOwnProperty","call","useESModules","esModules","caller","supportsStaticESM","helpers","useRuntimeHelpers","HEADER_HELPERS","Set","name","inherits","createPolyfillPlugins","pre","file","modulePath","set","_modulePath","_ref","get","availableHelper","types","arrowFunctionExpression","identifier","blockHoist","has","isModule","path","undefined","helperPath","node","sourceType","resolveFSPath","addDefaultImport","cache","Map","source","nameHint","isHelper","cacheKey","key","cached","cloneNode","addDefault","importedInterop"],"sources":["C:\\Users\\chest\\OneDrive\\Documentos\\GitHub\\HackUPC\\frontend\\node_modules\\@babel\\plugin-transform-runtime\\src\\index.ts"],"sourcesContent":["import { declare } from \"@babel/helper-plugin-utils\";\nimport { addDefault, isModule } from \"@babel/helper-module-imports\";\nimport { types as t } from \"@babel/core\";\n\nimport { hasMinVersion } from \"./helpers.ts\";\nimport getRuntimePath, { resolveFSPath } from \"./get-runtime-path/index.ts\";\n\n// TODO(Babel 8): Remove this\nimport babel7 from \"./babel-7/index.cjs\";\n\nexport interface Options {\n  absoluteRuntime?: boolean;\n  corejs?: string | number | { version: string | number; proposals?: boolean };\n  helpers?: boolean;\n  version?: string;\n  moduleName?: null | string;\n}\n\nexport default declare((api, options: Options, dirname) => {\n  api.assertVersion(REQUIRED_VERSION(7));\n\n  const {\n    version: runtimeVersion = \"7.0.0-beta.0\",\n    absoluteRuntime = false,\n    moduleName = null,\n  } = options;\n\n  if (\n    typeof absoluteRuntime !== \"boolean\" &&\n    typeof absoluteRuntime !== \"string\"\n  ) {\n    throw new Error(\n      \"The 'absoluteRuntime' option must be undefined, a boolean, or a string.\",\n    );\n  }\n\n  if (typeof runtimeVersion !== \"string\") {\n    throw new Error(`The 'version' option must be a version string.`);\n  }\n\n  if (moduleName !== null && typeof moduleName !== \"string\") {\n    throw new Error(\"The 'moduleName' option must be null or a string.\");\n  }\n\n  if (!process.env.BABEL_8_BREAKING) {\n    // In recent @babel/runtime versions, we can use require(\"helper\").default\n    // instead of require(\"helper\") so that it has the same interface as the\n    // ESM helper, and bundlers can better exchange one format for the other.\n    const DUAL_MODE_RUNTIME = \"7.13.0\";\n    // eslint-disable-next-line no-var\n    var supportsCJSDefault = hasMinVersion(DUAL_MODE_RUNTIME, runtimeVersion);\n  }\n\n  if (Object.hasOwn(options, \"useBuiltIns\")) {\n    // @ts-expect-error deprecated options\n    if (options[\"useBuiltIns\"]) {\n      throw new Error(\n        \"The 'useBuiltIns' option has been removed. The @babel/runtime \" +\n          \"module now uses builtins by default.\",\n      );\n    } else {\n      throw new Error(\n        \"The 'useBuiltIns' option has been removed. Use the 'corejs'\" +\n          \"option to polyfill with `core-js` via @babel/runtime.\",\n      );\n    }\n  }\n\n  if (Object.hasOwn(options, \"polyfill\")) {\n    // @ts-expect-error deprecated options\n    if (options[\"polyfill\"] === false) {\n      throw new Error(\n        \"The 'polyfill' option has been removed. The @babel/runtime \" +\n          \"module now skips polyfilling by default.\",\n      );\n    } else {\n      throw new Error(\n        \"The 'polyfill' option has been removed. Use the 'corejs'\" +\n          \"option to polyfill with `core-js` via @babel/runtime.\",\n      );\n    }\n  }\n\n  if (process.env.BABEL_8_BREAKING) {\n    if (Object.hasOwn(options, \"regenerator\")) {\n      throw new Error(\n        \"The 'regenerator' option has been removed. The generators transform \" +\n          \"no longers relies on a 'regeneratorRuntime' global. \" +\n          \"If you still need to replace imports to the 'regeneratorRuntime' \" +\n          \"global, you can use babel-plugin-polyfill-regenerator.\",\n      );\n    }\n  }\n\n  if (process.env.BABEL_8_BREAKING) {\n    if (Object.hasOwn(options, \"useESModules\")) {\n      throw new Error(\n        \"The 'useESModules' option has been removed. @babel/runtime now uses \" +\n          \"package.json#exports to support both CommonJS and ESM helpers.\",\n      );\n    }\n  } else {\n    // @ts-expect-error(Babel 7 vs Babel 8)\n    const { useESModules = false } = options;\n    if (typeof useESModules !== \"boolean\" && useESModules !== \"auto\") {\n      throw new Error(\n        \"The 'useESModules' option must be undefined, or a boolean, or 'auto'.\",\n      );\n    }\n\n    // eslint-disable-next-line no-var\n    var esModules =\n      useESModules === \"auto\"\n        ? api.caller(\n            // @ts-expect-error CallerMetadata does not define supportsStaticESM\n            caller => !!caller?.supportsStaticESM,\n          )\n        : useESModules;\n  }\n\n  if (process.env.BABEL_8_BREAKING) {\n    if (Object.hasOwn(options, \"helpers\")) {\n      throw new Error(\n        \"The 'helpers' option has been removed. \" +\n          \"Remove the plugin from your config if \" +\n          \"you want to disable helpers import injection.\",\n      );\n    }\n  } else {\n    // eslint-disable-next-line no-var\n    var { helpers: useRuntimeHelpers = true } = options;\n\n    if (typeof useRuntimeHelpers !== \"boolean\") {\n      throw new Error(\"The 'helpers' option must be undefined, or a boolean.\");\n    }\n  }\n\n  const HEADER_HELPERS = new Set([\n    \"interopRequireWildcard\",\n    \"interopRequireDefault\",\n  ]);\n\n  return {\n    name: \"transform-runtime\",\n\n    inherits: process.env.BABEL_8_BREAKING\n      ? undefined\n      : babel7.createPolyfillPlugins(options, runtimeVersion, absoluteRuntime),\n\n    pre(file) {\n      if (!process.env.BABEL_8_BREAKING && !useRuntimeHelpers) return;\n\n      let modulePath: string;\n\n      file.set(\"helperGenerator\", (name: string) => {\n        modulePath ??= getRuntimePath(\n          moduleName ??\n            file.get(\"runtimeHelpersModuleName\") ??\n            \"@babel/runtime\",\n          dirname,\n          absoluteRuntime,\n        );\n\n        // If the helper didn't exist yet at the version given, we bail\n        // out and let Babel either insert it directly, or throw an error\n        // so that plugins can handle that case properly.\n        if (!process.env.BABEL_8_BREAKING) {\n          if (!file.availableHelper?.(name, runtimeVersion)) {\n            if (name === \"regeneratorRuntime\") {\n              // For regeneratorRuntime, we can fallback to the old behavior of\n              // relying on the regeneratorRuntime global. If the 'regenerator'\n              // option is not disabled, babel-plugin-polyfill-regenerator will\n              // then replace it with a @babel/helpers/regenerator import.\n              //\n              // We must wrap it in a function, because built-in Babel helpers\n              // are functions.\n              return t.arrowFunctionExpression(\n                [],\n                t.identifier(\"regeneratorRuntime\"),\n              );\n            }\n            return;\n          }\n        } else {\n          if (!file.availableHelper(name, runtimeVersion)) return;\n        }\n\n        // Explicitly set the CommonJS interop helpers to their reserve\n        // blockHoist of 4 so they are guaranteed to exist\n        // when other things used them to import.\n        const blockHoist =\n          HEADER_HELPERS.has(name) && !isModule(file.path) ? 4 : undefined;\n\n        let helperPath = `${modulePath}/helpers/${\n          !process.env.BABEL_8_BREAKING &&\n          esModules &&\n          file.path.node.sourceType === \"module\"\n            ? \"esm/\" + name\n            : name\n        }`;\n        if (absoluteRuntime) helperPath = resolveFSPath(helperPath);\n\n        return addDefaultImport(helperPath, name, blockHoist, true);\n      });\n\n      const cache = new Map();\n\n      function addDefaultImport(\n        source: string,\n        nameHint: string,\n        blockHoist: number,\n        isHelper = false,\n      ) {\n        // If something on the page adds a helper when the file is an ES6\n        // file, we can't reused the cached helper name after things have been\n        // transformed because it has almost certainly been renamed.\n        const cacheKey = isModule(file.path);\n        const key = `${source}:${nameHint}:${cacheKey || \"\"}`;\n\n        let cached = cache.get(key);\n        if (cached) {\n          cached = t.cloneNode(cached);\n        } else {\n          cached = addDefault(file.path, source, {\n            importedInterop: (\n              process.env.BABEL_8_BREAKING\n                ? isHelper\n                : isHelper && supportsCJSDefault\n            )\n              ? \"compiled\"\n              : \"uncompiled\",\n            nameHint,\n            blockHoist,\n          });\n\n          cache.set(key, cached);\n        }\n        return cached;\n      }\n    },\n  };\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}