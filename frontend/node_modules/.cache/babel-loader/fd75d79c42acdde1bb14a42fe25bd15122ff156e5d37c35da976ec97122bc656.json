{"ast":null,"code":"/** internal\n * class ActionContainer\n *\n * Action container. Parent for [[ArgumentParser]] and [[ArgumentGroup]]\n **/\n\n'use strict';\n\nvar format = require('util').format;\n\n// Constants\nvar c = require('./const');\nvar $$ = require('./utils');\n\n//Actions\nvar ActionHelp = require('./action/help');\nvar ActionAppend = require('./action/append');\nvar ActionAppendConstant = require('./action/append/constant');\nvar ActionCount = require('./action/count');\nvar ActionStore = require('./action/store');\nvar ActionStoreConstant = require('./action/store/constant');\nvar ActionStoreTrue = require('./action/store/true');\nvar ActionStoreFalse = require('./action/store/false');\nvar ActionVersion = require('./action/version');\nvar ActionSubparsers = require('./action/subparsers');\n\n// Errors\nvar argumentErrorHelper = require('./argument/error');\n\n/**\n * new ActionContainer(options)\n *\n * Action container. Parent for [[ArgumentParser]] and [[ArgumentGroup]]\n *\n * ##### Options:\n *\n * - `description` -- A description of what the program does\n * - `prefixChars`  -- Characters that prefix optional arguments\n * - `argumentDefault`  -- The default value for all arguments\n * - `conflictHandler` -- The conflict handler to use for duplicate arguments\n **/\nvar ActionContainer = module.exports = function ActionContainer(options) {\n  options = options || {};\n  this.description = options.description;\n  this.argumentDefault = options.argumentDefault;\n  this.prefixChars = options.prefixChars || '';\n  this.conflictHandler = options.conflictHandler;\n\n  // set up registries\n  this._registries = {};\n\n  // register actions\n  this.register('action', null, ActionStore);\n  this.register('action', 'store', ActionStore);\n  this.register('action', 'storeConst', ActionStoreConstant);\n  this.register('action', 'storeTrue', ActionStoreTrue);\n  this.register('action', 'storeFalse', ActionStoreFalse);\n  this.register('action', 'append', ActionAppend);\n  this.register('action', 'appendConst', ActionAppendConstant);\n  this.register('action', 'count', ActionCount);\n  this.register('action', 'help', ActionHelp);\n  this.register('action', 'version', ActionVersion);\n  this.register('action', 'parsers', ActionSubparsers);\n\n  // raise an exception if the conflict handler is invalid\n  this._getHandler();\n\n  // action storage\n  this._actions = [];\n  this._optionStringActions = {};\n\n  // groups\n  this._actionGroups = [];\n  this._mutuallyExclusiveGroups = [];\n\n  // defaults storage\n  this._defaults = {};\n\n  // determines whether an \"option\" looks like a negative number\n  // -1, -1.5 -5e+4\n  this._regexpNegativeNumber = new RegExp('^[-]?[0-9]*\\\\.?[0-9]+([eE][-+]?[0-9]+)?$');\n\n  // whether or not there are any optionals that look like negative\n  // numbers -- uses a list so it can be shared and edited\n  this._hasNegativeNumberOptionals = [];\n};\n\n// Groups must be required, then ActionContainer already defined\nvar ArgumentGroup = require('./argument/group');\nvar MutuallyExclusiveGroup = require('./argument/exclusive');\n\n//\n// Registration methods\n//\n\n/**\n * ActionContainer#register(registryName, value, object) -> Void\n * - registryName (String) : object type action|type\n * - value (string) : keyword\n * - object (Object|Function) : handler\n *\n *  Register handlers\n **/\nActionContainer.prototype.register = function (registryName, value, object) {\n  this._registries[registryName] = this._registries[registryName] || {};\n  this._registries[registryName][value] = object;\n};\nActionContainer.prototype._registryGet = function (registryName, value, defaultValue) {\n  if (arguments.length < 3) {\n    defaultValue = null;\n  }\n  return this._registries[registryName][value] || defaultValue;\n};\n\n//\n// Namespace default accessor methods\n//\n\n/**\n * ActionContainer#setDefaults(options) -> Void\n * - options (object):hash of options see [[Action.new]]\n *\n * Set defaults\n **/\nActionContainer.prototype.setDefaults = function (options) {\n  options = options || {};\n  for (var property in options) {\n    if ($$.has(options, property)) {\n      this._defaults[property] = options[property];\n    }\n  }\n\n  // if these defaults match any existing arguments, replace the previous\n  // default on the object with the new one\n  this._actions.forEach(function (action) {\n    if ($$.has(options, action.dest)) {\n      action.defaultValue = options[action.dest];\n    }\n  });\n};\n\n/**\n * ActionContainer#getDefault(dest) -> Mixed\n * - dest (string): action destination\n *\n * Return action default value\n **/\nActionContainer.prototype.getDefault = function (dest) {\n  var result = $$.has(this._defaults, dest) ? this._defaults[dest] : null;\n  this._actions.forEach(function (action) {\n    if (action.dest === dest && $$.has(action, 'defaultValue')) {\n      result = action.defaultValue;\n    }\n  });\n  return result;\n};\n//\n// Adding argument actions\n//\n\n/**\n * ActionContainer#addArgument(args, options) -> Object\n * - args (String|Array): argument key, or array of argument keys\n * - options (Object): action objects see [[Action.new]]\n *\n * #### Examples\n * - addArgument([ '-f', '--foo' ], { action: 'store', defaultValue: 1, ... })\n * - addArgument([ 'bar' ], { action: 'store', nargs: 1, ... })\n * - addArgument('--baz', { action: 'store', nargs: 1, ... })\n **/\nActionContainer.prototype.addArgument = function (args, options) {\n  args = args;\n  options = options || {};\n  if (typeof args === 'string') {\n    args = [args];\n  }\n  if (!Array.isArray(args)) {\n    throw new TypeError('addArgument first argument should be a string or an array');\n  }\n  if (typeof options !== 'object' || Array.isArray(options)) {\n    throw new TypeError('addArgument second argument should be a hash');\n  }\n\n  // if no positional args are supplied or only one is supplied and\n  // it doesn't look like an option string, parse a positional argument\n  if (!args || args.length === 1 && this.prefixChars.indexOf(args[0][0]) < 0) {\n    if (args && !!options.dest) {\n      throw new Error('dest supplied twice for positional argument');\n    }\n    options = this._getPositional(args, options);\n\n    // otherwise, we're adding an optional argument\n  } else {\n    options = this._getOptional(args, options);\n  }\n\n  // if no default was supplied, use the parser-level default\n  if (typeof options.defaultValue === 'undefined') {\n    var dest = options.dest;\n    if ($$.has(this._defaults, dest)) {\n      options.defaultValue = this._defaults[dest];\n    } else if (typeof this.argumentDefault !== 'undefined') {\n      options.defaultValue = this.argumentDefault;\n    }\n  }\n\n  // create the action object, and add it to the parser\n  var ActionClass = this._popActionClass(options);\n  if (typeof ActionClass !== 'function') {\n    throw new Error(format('Unknown action \"%s\".', ActionClass));\n  }\n  var action = new ActionClass(options);\n\n  // throw an error if the action type is not callable\n  var typeFunction = this._registryGet('type', action.type, action.type);\n  if (typeof typeFunction !== 'function') {\n    throw new Error(format('\"%s\" is not callable', typeFunction));\n  }\n  return this._addAction(action);\n};\n\n/**\n * ActionContainer#addArgumentGroup(options) -> ArgumentGroup\n * - options (Object): hash of options see [[ArgumentGroup.new]]\n *\n * Create new arguments groups\n **/\nActionContainer.prototype.addArgumentGroup = function (options) {\n  var group = new ArgumentGroup(this, options);\n  this._actionGroups.push(group);\n  return group;\n};\n\n/**\n * ActionContainer#addMutuallyExclusiveGroup(options) -> ArgumentGroup\n * - options (Object): {required: false}\n *\n * Create new mutual exclusive groups\n **/\nActionContainer.prototype.addMutuallyExclusiveGroup = function (options) {\n  var group = new MutuallyExclusiveGroup(this, options);\n  this._mutuallyExclusiveGroups.push(group);\n  return group;\n};\nActionContainer.prototype._addAction = function (action) {\n  var self = this;\n\n  // resolve any conflicts\n  this._checkConflict(action);\n\n  // add to actions list\n  this._actions.push(action);\n  action.container = this;\n\n  // index the action by any option strings it has\n  action.optionStrings.forEach(function (optionString) {\n    self._optionStringActions[optionString] = action;\n  });\n\n  // set the flag if any option strings look like negative numbers\n  action.optionStrings.forEach(function (optionString) {\n    if (optionString.match(self._regexpNegativeNumber)) {\n      if (!self._hasNegativeNumberOptionals.some(Boolean)) {\n        self._hasNegativeNumberOptionals.push(true);\n      }\n    }\n  });\n\n  // return the created action\n  return action;\n};\nActionContainer.prototype._removeAction = function (action) {\n  var actionIndex = this._actions.indexOf(action);\n  if (actionIndex >= 0) {\n    this._actions.splice(actionIndex, 1);\n  }\n};\nActionContainer.prototype._addContainerActions = function (container) {\n  // collect groups by titles\n  var titleGroupMap = {};\n  this._actionGroups.forEach(function (group) {\n    if (titleGroupMap[group.title]) {\n      throw new Error(format('Cannot merge actions - two groups are named \"%s\".', group.title));\n    }\n    titleGroupMap[group.title] = group;\n  });\n\n  // map each action to its group\n  var groupMap = {};\n  function actionHash(action) {\n    // unique (hopefully?) string suitable as dictionary key\n    return action.getName();\n  }\n  container._actionGroups.forEach(function (group) {\n    // if a group with the title exists, use that, otherwise\n    // create a new group matching the container's group\n    if (!titleGroupMap[group.title]) {\n      titleGroupMap[group.title] = this.addArgumentGroup({\n        title: group.title,\n        description: group.description\n      });\n    }\n\n    // map the actions to their new group\n    group._groupActions.forEach(function (action) {\n      groupMap[actionHash(action)] = titleGroupMap[group.title];\n    });\n  }, this);\n\n  // add container's mutually exclusive groups\n  // NOTE: if add_mutually_exclusive_group ever gains title= and\n  // description= then this code will need to be expanded as above\n  var mutexGroup;\n  container._mutuallyExclusiveGroups.forEach(function (group) {\n    mutexGroup = this.addMutuallyExclusiveGroup({\n      required: group.required\n    });\n    // map the actions to their new mutex group\n    group._groupActions.forEach(function (action) {\n      groupMap[actionHash(action)] = mutexGroup;\n    });\n  }, this); // forEach takes a 'this' argument\n\n  // add all actions to this container or their group\n  container._actions.forEach(function (action) {\n    var key = actionHash(action);\n    if (groupMap[key]) {\n      groupMap[key]._addAction(action);\n    } else {\n      this._addAction(action);\n    }\n  });\n};\nActionContainer.prototype._getPositional = function (dest, options) {\n  if (Array.isArray(dest)) {\n    dest = dest[0];\n  }\n  // make sure required is not specified\n  if (options.required) {\n    throw new Error('\"required\" is an invalid argument for positionals.');\n  }\n\n  // mark positional arguments as required if at least one is\n  // always required\n  if (options.nargs !== c.OPTIONAL && options.nargs !== c.ZERO_OR_MORE) {\n    options.required = true;\n  }\n  if (options.nargs === c.ZERO_OR_MORE && typeof options.defaultValue === 'undefined') {\n    options.required = true;\n  }\n\n  // return the keyword arguments with no option strings\n  options.dest = dest;\n  options.optionStrings = [];\n  return options;\n};\nActionContainer.prototype._getOptional = function (args, options) {\n  var prefixChars = this.prefixChars;\n  var optionStrings = [];\n  var optionStringsLong = [];\n\n  // determine short and long option strings\n  args.forEach(function (optionString) {\n    // error on strings that don't start with an appropriate prefix\n    if (prefixChars.indexOf(optionString[0]) < 0) {\n      throw new Error(format('Invalid option string \"%s\": must start with a \"%s\".', optionString, prefixChars));\n    }\n\n    // strings starting with two prefix characters are long options\n    optionStrings.push(optionString);\n    if (optionString.length > 1 && prefixChars.indexOf(optionString[1]) >= 0) {\n      optionStringsLong.push(optionString);\n    }\n  });\n\n  // infer dest, '--foo-bar' -> 'foo_bar' and '-x' -> 'x'\n  var dest = options.dest || null;\n  delete options.dest;\n  if (!dest) {\n    var optionStringDest = optionStringsLong.length ? optionStringsLong[0] : optionStrings[0];\n    dest = $$.trimChars(optionStringDest, this.prefixChars);\n    if (dest.length === 0) {\n      throw new Error(format('dest= is required for options like \"%s\"', optionStrings.join(', ')));\n    }\n    dest = dest.replace(/-/g, '_');\n  }\n\n  // return the updated keyword arguments\n  options.dest = dest;\n  options.optionStrings = optionStrings;\n  return options;\n};\nActionContainer.prototype._popActionClass = function (options, defaultValue) {\n  defaultValue = defaultValue || null;\n  var action = options.action || defaultValue;\n  delete options.action;\n  var actionClass = this._registryGet('action', action, action);\n  return actionClass;\n};\nActionContainer.prototype._getHandler = function () {\n  var handlerString = this.conflictHandler;\n  var handlerFuncName = '_handleConflict' + $$.capitalize(handlerString);\n  var func = this[handlerFuncName];\n  if (typeof func === 'undefined') {\n    var msg = 'invalid conflict resolution value: ' + handlerString;\n    throw new Error(msg);\n  } else {\n    return func;\n  }\n};\nActionContainer.prototype._checkConflict = function (action) {\n  var optionStringActions = this._optionStringActions;\n  var conflictOptionals = [];\n\n  // find all options that conflict with this option\n  // collect pairs, the string, and an existing action that it conflicts with\n  action.optionStrings.forEach(function (optionString) {\n    var conflOptional = optionStringActions[optionString];\n    if (typeof conflOptional !== 'undefined') {\n      conflictOptionals.push([optionString, conflOptional]);\n    }\n  });\n  if (conflictOptionals.length > 0) {\n    var conflictHandler = this._getHandler();\n    conflictHandler.call(this, action, conflictOptionals);\n  }\n};\nActionContainer.prototype._handleConflictError = function (action, conflOptionals) {\n  var conflicts = conflOptionals.map(function (pair) {\n    return pair[0];\n  });\n  conflicts = conflicts.join(', ');\n  throw argumentErrorHelper(action, format('Conflicting option string(s): %s', conflicts));\n};\nActionContainer.prototype._handleConflictResolve = function (action, conflOptionals) {\n  // remove all conflicting options\n  var self = this;\n  conflOptionals.forEach(function (pair) {\n    var optionString = pair[0];\n    var conflictingAction = pair[1];\n    // remove the conflicting option string\n    var i = conflictingAction.optionStrings.indexOf(optionString);\n    if (i >= 0) {\n      conflictingAction.optionStrings.splice(i, 1);\n    }\n    delete self._optionStringActions[optionString];\n    // if the option now has no option string, remove it from the\n    // container holding it\n    if (conflictingAction.optionStrings.length === 0) {\n      conflictingAction.container._removeAction(conflictingAction);\n    }\n  });\n};","map":{"version":3,"names":["format","require","c","$$","ActionHelp","ActionAppend","ActionAppendConstant","ActionCount","ActionStore","ActionStoreConstant","ActionStoreTrue","ActionStoreFalse","ActionVersion","ActionSubparsers","argumentErrorHelper","ActionContainer","module","exports","options","description","argumentDefault","prefixChars","conflictHandler","_registries","register","_getHandler","_actions","_optionStringActions","_actionGroups","_mutuallyExclusiveGroups","_defaults","_regexpNegativeNumber","RegExp","_hasNegativeNumberOptionals","ArgumentGroup","MutuallyExclusiveGroup","prototype","registryName","value","object","_registryGet","defaultValue","arguments","length","setDefaults","property","has","forEach","action","dest","getDefault","result","addArgument","args","Array","isArray","TypeError","indexOf","Error","_getPositional","_getOptional","ActionClass","_popActionClass","typeFunction","type","_addAction","addArgumentGroup","group","push","addMutuallyExclusiveGroup","self","_checkConflict","container","optionStrings","optionString","match","some","Boolean","_removeAction","actionIndex","splice","_addContainerActions","titleGroupMap","title","groupMap","actionHash","getName","_groupActions","mutexGroup","required","key","nargs","OPTIONAL","ZERO_OR_MORE","optionStringsLong","optionStringDest","trimChars","join","replace","actionClass","handlerString","handlerFuncName","capitalize","func","msg","optionStringActions","conflictOptionals","conflOptional","call","_handleConflictError","conflOptionals","conflicts","map","pair","_handleConflictResolve","conflictingAction","i"],"sources":["C:/Users/chest/OneDrive/Documentos/GitHub/HackUPC/frontend/node_modules/argparse/lib/action_container.js"],"sourcesContent":["/** internal\n * class ActionContainer\n *\n * Action container. Parent for [[ArgumentParser]] and [[ArgumentGroup]]\n **/\n\n'use strict';\n\nvar format = require('util').format;\n\n// Constants\nvar c = require('./const');\n\nvar $$ = require('./utils');\n\n//Actions\nvar ActionHelp = require('./action/help');\nvar ActionAppend = require('./action/append');\nvar ActionAppendConstant = require('./action/append/constant');\nvar ActionCount = require('./action/count');\nvar ActionStore = require('./action/store');\nvar ActionStoreConstant = require('./action/store/constant');\nvar ActionStoreTrue = require('./action/store/true');\nvar ActionStoreFalse = require('./action/store/false');\nvar ActionVersion = require('./action/version');\nvar ActionSubparsers = require('./action/subparsers');\n\n// Errors\nvar argumentErrorHelper = require('./argument/error');\n\n/**\n * new ActionContainer(options)\n *\n * Action container. Parent for [[ArgumentParser]] and [[ArgumentGroup]]\n *\n * ##### Options:\n *\n * - `description` -- A description of what the program does\n * - `prefixChars`  -- Characters that prefix optional arguments\n * - `argumentDefault`  -- The default value for all arguments\n * - `conflictHandler` -- The conflict handler to use for duplicate arguments\n **/\nvar ActionContainer = module.exports = function ActionContainer(options) {\n  options = options || {};\n\n  this.description = options.description;\n  this.argumentDefault = options.argumentDefault;\n  this.prefixChars = options.prefixChars || '';\n  this.conflictHandler = options.conflictHandler;\n\n  // set up registries\n  this._registries = {};\n\n  // register actions\n  this.register('action', null, ActionStore);\n  this.register('action', 'store', ActionStore);\n  this.register('action', 'storeConst', ActionStoreConstant);\n  this.register('action', 'storeTrue', ActionStoreTrue);\n  this.register('action', 'storeFalse', ActionStoreFalse);\n  this.register('action', 'append', ActionAppend);\n  this.register('action', 'appendConst', ActionAppendConstant);\n  this.register('action', 'count', ActionCount);\n  this.register('action', 'help', ActionHelp);\n  this.register('action', 'version', ActionVersion);\n  this.register('action', 'parsers', ActionSubparsers);\n\n  // raise an exception if the conflict handler is invalid\n  this._getHandler();\n\n  // action storage\n  this._actions = [];\n  this._optionStringActions = {};\n\n  // groups\n  this._actionGroups = [];\n  this._mutuallyExclusiveGroups = [];\n\n  // defaults storage\n  this._defaults = {};\n\n  // determines whether an \"option\" looks like a negative number\n  // -1, -1.5 -5e+4\n  this._regexpNegativeNumber = new RegExp('^[-]?[0-9]*\\\\.?[0-9]+([eE][-+]?[0-9]+)?$');\n\n  // whether or not there are any optionals that look like negative\n  // numbers -- uses a list so it can be shared and edited\n  this._hasNegativeNumberOptionals = [];\n};\n\n// Groups must be required, then ActionContainer already defined\nvar ArgumentGroup = require('./argument/group');\nvar MutuallyExclusiveGroup = require('./argument/exclusive');\n\n//\n// Registration methods\n//\n\n/**\n * ActionContainer#register(registryName, value, object) -> Void\n * - registryName (String) : object type action|type\n * - value (string) : keyword\n * - object (Object|Function) : handler\n *\n *  Register handlers\n **/\nActionContainer.prototype.register = function (registryName, value, object) {\n  this._registries[registryName] = this._registries[registryName] || {};\n  this._registries[registryName][value] = object;\n};\n\nActionContainer.prototype._registryGet = function (registryName, value, defaultValue) {\n  if (arguments.length < 3) {\n    defaultValue = null;\n  }\n  return this._registries[registryName][value] || defaultValue;\n};\n\n//\n// Namespace default accessor methods\n//\n\n/**\n * ActionContainer#setDefaults(options) -> Void\n * - options (object):hash of options see [[Action.new]]\n *\n * Set defaults\n **/\nActionContainer.prototype.setDefaults = function (options) {\n  options = options || {};\n  for (var property in options) {\n    if ($$.has(options, property)) {\n      this._defaults[property] = options[property];\n    }\n  }\n\n  // if these defaults match any existing arguments, replace the previous\n  // default on the object with the new one\n  this._actions.forEach(function (action) {\n    if ($$.has(options, action.dest)) {\n      action.defaultValue = options[action.dest];\n    }\n  });\n};\n\n/**\n * ActionContainer#getDefault(dest) -> Mixed\n * - dest (string): action destination\n *\n * Return action default value\n **/\nActionContainer.prototype.getDefault = function (dest) {\n  var result = $$.has(this._defaults, dest) ? this._defaults[dest] : null;\n\n  this._actions.forEach(function (action) {\n    if (action.dest === dest && $$.has(action, 'defaultValue')) {\n      result = action.defaultValue;\n    }\n  });\n\n  return result;\n};\n//\n// Adding argument actions\n//\n\n/**\n * ActionContainer#addArgument(args, options) -> Object\n * - args (String|Array): argument key, or array of argument keys\n * - options (Object): action objects see [[Action.new]]\n *\n * #### Examples\n * - addArgument([ '-f', '--foo' ], { action: 'store', defaultValue: 1, ... })\n * - addArgument([ 'bar' ], { action: 'store', nargs: 1, ... })\n * - addArgument('--baz', { action: 'store', nargs: 1, ... })\n **/\nActionContainer.prototype.addArgument = function (args, options) {\n  args = args;\n  options = options || {};\n\n  if (typeof args === 'string') {\n    args = [ args ];\n  }\n  if (!Array.isArray(args)) {\n    throw new TypeError('addArgument first argument should be a string or an array');\n  }\n  if (typeof options !== 'object' || Array.isArray(options)) {\n    throw new TypeError('addArgument second argument should be a hash');\n  }\n\n  // if no positional args are supplied or only one is supplied and\n  // it doesn't look like an option string, parse a positional argument\n  if (!args || args.length === 1 && this.prefixChars.indexOf(args[0][0]) < 0) {\n    if (args && !!options.dest) {\n      throw new Error('dest supplied twice for positional argument');\n    }\n    options = this._getPositional(args, options);\n\n    // otherwise, we're adding an optional argument\n  } else {\n    options = this._getOptional(args, options);\n  }\n\n  // if no default was supplied, use the parser-level default\n  if (typeof options.defaultValue === 'undefined') {\n    var dest = options.dest;\n    if ($$.has(this._defaults, dest)) {\n      options.defaultValue = this._defaults[dest];\n    } else if (typeof this.argumentDefault !== 'undefined') {\n      options.defaultValue = this.argumentDefault;\n    }\n  }\n\n  // create the action object, and add it to the parser\n  var ActionClass = this._popActionClass(options);\n  if (typeof ActionClass !== 'function') {\n    throw new Error(format('Unknown action \"%s\".', ActionClass));\n  }\n  var action = new ActionClass(options);\n\n  // throw an error if the action type is not callable\n  var typeFunction = this._registryGet('type', action.type, action.type);\n  if (typeof typeFunction !== 'function') {\n    throw new Error(format('\"%s\" is not callable', typeFunction));\n  }\n\n  return this._addAction(action);\n};\n\n/**\n * ActionContainer#addArgumentGroup(options) -> ArgumentGroup\n * - options (Object): hash of options see [[ArgumentGroup.new]]\n *\n * Create new arguments groups\n **/\nActionContainer.prototype.addArgumentGroup = function (options) {\n  var group = new ArgumentGroup(this, options);\n  this._actionGroups.push(group);\n  return group;\n};\n\n/**\n * ActionContainer#addMutuallyExclusiveGroup(options) -> ArgumentGroup\n * - options (Object): {required: false}\n *\n * Create new mutual exclusive groups\n **/\nActionContainer.prototype.addMutuallyExclusiveGroup = function (options) {\n  var group = new MutuallyExclusiveGroup(this, options);\n  this._mutuallyExclusiveGroups.push(group);\n  return group;\n};\n\nActionContainer.prototype._addAction = function (action) {\n  var self = this;\n\n  // resolve any conflicts\n  this._checkConflict(action);\n\n  // add to actions list\n  this._actions.push(action);\n  action.container = this;\n\n  // index the action by any option strings it has\n  action.optionStrings.forEach(function (optionString) {\n    self._optionStringActions[optionString] = action;\n  });\n\n  // set the flag if any option strings look like negative numbers\n  action.optionStrings.forEach(function (optionString) {\n    if (optionString.match(self._regexpNegativeNumber)) {\n      if (!self._hasNegativeNumberOptionals.some(Boolean)) {\n        self._hasNegativeNumberOptionals.push(true);\n      }\n    }\n  });\n\n  // return the created action\n  return action;\n};\n\nActionContainer.prototype._removeAction = function (action) {\n  var actionIndex = this._actions.indexOf(action);\n  if (actionIndex >= 0) {\n    this._actions.splice(actionIndex, 1);\n  }\n};\n\nActionContainer.prototype._addContainerActions = function (container) {\n  // collect groups by titles\n  var titleGroupMap = {};\n  this._actionGroups.forEach(function (group) {\n    if (titleGroupMap[group.title]) {\n      throw new Error(format('Cannot merge actions - two groups are named \"%s\".', group.title));\n    }\n    titleGroupMap[group.title] = group;\n  });\n\n  // map each action to its group\n  var groupMap = {};\n  function actionHash(action) {\n    // unique (hopefully?) string suitable as dictionary key\n    return action.getName();\n  }\n  container._actionGroups.forEach(function (group) {\n    // if a group with the title exists, use that, otherwise\n    // create a new group matching the container's group\n    if (!titleGroupMap[group.title]) {\n      titleGroupMap[group.title] = this.addArgumentGroup({\n        title: group.title,\n        description: group.description\n      });\n    }\n\n    // map the actions to their new group\n    group._groupActions.forEach(function (action) {\n      groupMap[actionHash(action)] = titleGroupMap[group.title];\n    });\n  }, this);\n\n  // add container's mutually exclusive groups\n  // NOTE: if add_mutually_exclusive_group ever gains title= and\n  // description= then this code will need to be expanded as above\n  var mutexGroup;\n  container._mutuallyExclusiveGroups.forEach(function (group) {\n    mutexGroup = this.addMutuallyExclusiveGroup({\n      required: group.required\n    });\n    // map the actions to their new mutex group\n    group._groupActions.forEach(function (action) {\n      groupMap[actionHash(action)] = mutexGroup;\n    });\n  }, this);  // forEach takes a 'this' argument\n\n  // add all actions to this container or their group\n  container._actions.forEach(function (action) {\n    var key = actionHash(action);\n    if (groupMap[key]) {\n      groupMap[key]._addAction(action);\n    } else {\n      this._addAction(action);\n    }\n  });\n};\n\nActionContainer.prototype._getPositional = function (dest, options) {\n  if (Array.isArray(dest)) {\n    dest = dest[0];\n  }\n  // make sure required is not specified\n  if (options.required) {\n    throw new Error('\"required\" is an invalid argument for positionals.');\n  }\n\n  // mark positional arguments as required if at least one is\n  // always required\n  if (options.nargs !== c.OPTIONAL && options.nargs !== c.ZERO_OR_MORE) {\n    options.required = true;\n  }\n  if (options.nargs === c.ZERO_OR_MORE && typeof options.defaultValue === 'undefined') {\n    options.required = true;\n  }\n\n  // return the keyword arguments with no option strings\n  options.dest = dest;\n  options.optionStrings = [];\n  return options;\n};\n\nActionContainer.prototype._getOptional = function (args, options) {\n  var prefixChars = this.prefixChars;\n  var optionStrings = [];\n  var optionStringsLong = [];\n\n  // determine short and long option strings\n  args.forEach(function (optionString) {\n    // error on strings that don't start with an appropriate prefix\n    if (prefixChars.indexOf(optionString[0]) < 0) {\n      throw new Error(format('Invalid option string \"%s\": must start with a \"%s\".',\n        optionString,\n        prefixChars\n      ));\n    }\n\n    // strings starting with two prefix characters are long options\n    optionStrings.push(optionString);\n    if (optionString.length > 1 && prefixChars.indexOf(optionString[1]) >= 0) {\n      optionStringsLong.push(optionString);\n    }\n  });\n\n  // infer dest, '--foo-bar' -> 'foo_bar' and '-x' -> 'x'\n  var dest = options.dest || null;\n  delete options.dest;\n\n  if (!dest) {\n    var optionStringDest = optionStringsLong.length ? optionStringsLong[0] : optionStrings[0];\n    dest = $$.trimChars(optionStringDest, this.prefixChars);\n\n    if (dest.length === 0) {\n      throw new Error(\n        format('dest= is required for options like \"%s\"', optionStrings.join(', '))\n      );\n    }\n    dest = dest.replace(/-/g, '_');\n  }\n\n  // return the updated keyword arguments\n  options.dest = dest;\n  options.optionStrings = optionStrings;\n\n  return options;\n};\n\nActionContainer.prototype._popActionClass = function (options, defaultValue) {\n  defaultValue = defaultValue || null;\n\n  var action = (options.action || defaultValue);\n  delete options.action;\n\n  var actionClass = this._registryGet('action', action, action);\n  return actionClass;\n};\n\nActionContainer.prototype._getHandler = function () {\n  var handlerString = this.conflictHandler;\n  var handlerFuncName = '_handleConflict' + $$.capitalize(handlerString);\n  var func = this[handlerFuncName];\n  if (typeof func === 'undefined') {\n    var msg = 'invalid conflict resolution value: ' + handlerString;\n    throw new Error(msg);\n  } else {\n    return func;\n  }\n};\n\nActionContainer.prototype._checkConflict = function (action) {\n  var optionStringActions = this._optionStringActions;\n  var conflictOptionals = [];\n\n  // find all options that conflict with this option\n  // collect pairs, the string, and an existing action that it conflicts with\n  action.optionStrings.forEach(function (optionString) {\n    var conflOptional = optionStringActions[optionString];\n    if (typeof conflOptional !== 'undefined') {\n      conflictOptionals.push([ optionString, conflOptional ]);\n    }\n  });\n\n  if (conflictOptionals.length > 0) {\n    var conflictHandler = this._getHandler();\n    conflictHandler.call(this, action, conflictOptionals);\n  }\n};\n\nActionContainer.prototype._handleConflictError = function (action, conflOptionals) {\n  var conflicts = conflOptionals.map(function (pair) { return pair[0]; });\n  conflicts = conflicts.join(', ');\n  throw argumentErrorHelper(\n    action,\n    format('Conflicting option string(s): %s', conflicts)\n  );\n};\n\nActionContainer.prototype._handleConflictResolve = function (action, conflOptionals) {\n  // remove all conflicting options\n  var self = this;\n  conflOptionals.forEach(function (pair) {\n    var optionString = pair[0];\n    var conflictingAction = pair[1];\n    // remove the conflicting option string\n    var i = conflictingAction.optionStrings.indexOf(optionString);\n    if (i >= 0) {\n      conflictingAction.optionStrings.splice(i, 1);\n    }\n    delete self._optionStringActions[optionString];\n    // if the option now has no option string, remove it from the\n    // container holding it\n    if (conflictingAction.optionStrings.length === 0) {\n      conflictingAction.container._removeAction(conflictingAction);\n    }\n  });\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}