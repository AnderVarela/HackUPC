{"ast":null,"code":"'use strict';\n\nconst {\n  compare,\n  filterOutStabilizedProposals,\n  has,\n  intersection\n} = require('./helpers');\nconst data = require('./data');\nconst entries = require('./entries');\nconst getModulesListForTargetVersion = require('./get-modules-list-for-target-version');\nconst allModules = require('./modules');\nconst targetsParser = require('./targets-parser');\nfunction throwInvalidFilter(filter) {\n  throw new TypeError(`Specified invalid module name or pattern: ${filter}`);\n}\nfunction atLeastSomeModules(modules, filter) {\n  if (!modules.length) throwInvalidFilter(filter);\n  return modules;\n}\nfunction getModules(filter) {\n  if (typeof filter == 'string') {\n    if (has(entries, filter)) return entries[filter];\n    return atLeastSomeModules(allModules.filter(it => it.startsWith(filter)), filter);\n  } else if (filter instanceof RegExp) return atLeastSomeModules(allModules.filter(it => filter.test(it)), filter);\n  throwInvalidFilter(filter);\n}\nfunction normalizeModules(option) {\n  // TODO: use `.flatMap` in core-js@4\n  return new Set(Array.isArray(option) ? [].concat(...option.map(getModules)) : getModules(option));\n}\nfunction checkModule(name, targets) {\n  const result = {\n    required: !targets,\n    targets: {}\n  };\n  if (!targets) return result;\n  const requirements = data[name];\n  for (const [engine, version] of targets) {\n    if (!has(requirements, engine) || compare(version, '<', requirements[engine])) {\n      result.required = true;\n      result.targets[engine] = version;\n    }\n  }\n  return result;\n}\nmodule.exports = function ({\n  filter = null,\n  // TODO: Obsolete, remove from `core-js@4`\n  modules = null,\n  exclude = [],\n  targets = null,\n  version = null,\n  inverse = false\n} = {}) {\n  if (modules === null || modules === undefined) modules = filter;\n  inverse = !!inverse;\n  const parsedTargets = targets ? targetsParser(targets) : null;\n  const result = {\n    list: [],\n    targets: {}\n  };\n  exclude = normalizeModules(exclude);\n  modules = modules ? [...normalizeModules(modules)] : allModules;\n  if (exclude.size) modules = modules.filter(it => !exclude.has(it));\n  modules = intersection(modules, version ? getModulesListForTargetVersion(version) : allModules);\n  if (!inverse) modules = filterOutStabilizedProposals(modules);\n  for (const key of modules) {\n    const check = checkModule(key, parsedTargets);\n    if (check.required ^ inverse) {\n      result.list.push(key);\n      result.targets[key] = check.targets;\n    }\n  }\n  return result;\n};","map":{"version":3,"names":["compare","filterOutStabilizedProposals","has","intersection","require","data","entries","getModulesListForTargetVersion","allModules","targetsParser","throwInvalidFilter","filter","TypeError","atLeastSomeModules","modules","length","getModules","it","startsWith","RegExp","test","normalizeModules","option","Set","Array","isArray","concat","map","checkModule","name","targets","result","required","requirements","engine","version","module","exports","exclude","inverse","undefined","parsedTargets","list","size","key","check","push"],"sources":["C:/Users/chest/OneDrive/Documentos/GitHub/HackUPC/frontend/node_modules/core-js-compat/compat.js"],"sourcesContent":["'use strict';\nconst { compare, filterOutStabilizedProposals, has, intersection } = require('./helpers');\nconst data = require('./data');\nconst entries = require('./entries');\nconst getModulesListForTargetVersion = require('./get-modules-list-for-target-version');\nconst allModules = require('./modules');\nconst targetsParser = require('./targets-parser');\n\nfunction throwInvalidFilter(filter) {\n  throw new TypeError(`Specified invalid module name or pattern: ${ filter }`);\n}\n\nfunction atLeastSomeModules(modules, filter) {\n  if (!modules.length) throwInvalidFilter(filter);\n  return modules;\n}\n\nfunction getModules(filter) {\n  if (typeof filter == 'string') {\n    if (has(entries, filter)) return entries[filter];\n    return atLeastSomeModules(allModules.filter(it => it.startsWith(filter)), filter);\n  } else if (filter instanceof RegExp) return atLeastSomeModules(allModules.filter(it => filter.test(it)), filter);\n  throwInvalidFilter(filter);\n}\n\nfunction normalizeModules(option) {\n  // TODO: use `.flatMap` in core-js@4\n  return new Set(Array.isArray(option) ? [].concat(...option.map(getModules)) : getModules(option));\n}\n\nfunction checkModule(name, targets) {\n  const result = {\n    required: !targets,\n    targets: {},\n  };\n\n  if (!targets) return result;\n\n  const requirements = data[name];\n\n  for (const [engine, version] of targets) {\n    if (!has(requirements, engine) || compare(version, '<', requirements[engine])) {\n      result.required = true;\n      result.targets[engine] = version;\n    }\n  }\n\n  return result;\n}\n\nmodule.exports = function ({\n  filter = null, // TODO: Obsolete, remove from `core-js@4`\n  modules = null,\n  exclude = [],\n  targets = null,\n  version = null,\n  inverse = false,\n} = {}) {\n  if (modules === null || modules === undefined) modules = filter;\n  inverse = !!inverse;\n\n  const parsedTargets = targets ? targetsParser(targets) : null;\n\n  const result = {\n    list: [],\n    targets: {},\n  };\n\n  exclude = normalizeModules(exclude);\n\n  modules = modules ? [...normalizeModules(modules)] : allModules;\n\n  if (exclude.size) modules = modules.filter(it => !exclude.has(it));\n\n  modules = intersection(modules, version ? getModulesListForTargetVersion(version) : allModules);\n\n  if (!inverse) modules = filterOutStabilizedProposals(modules);\n\n  for (const key of modules) {\n    const check = checkModule(key, parsedTargets);\n\n    if (check.required ^ inverse) {\n      result.list.push(key);\n      result.targets[key] = check.targets;\n    }\n  }\n\n  return result;\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}