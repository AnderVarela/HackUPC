{"ast":null,"code":"import { DefaultNumberOption } from '../DefaultNumberOption';\nimport { GetNumberOption } from '../GetNumberOption';\nimport { GetOption } from '../GetOption';\n/**\n * https://tc39.es/ecma402/#sec-setnfdigitoptions\n */\nexport function SetNumberFormatDigitOptions(internalSlots, opts, mnfdDefault, mxfdDefault, notation) {\n  var mnid = GetNumberOption(opts, 'minimumIntegerDigits', 1, 21, 1);\n  var mnfd = opts.minimumFractionDigits;\n  var mxfd = opts.maximumFractionDigits;\n  var mnsd = opts.minimumSignificantDigits;\n  var mxsd = opts.maximumSignificantDigits;\n  internalSlots.minimumIntegerDigits = mnid;\n  var roundingPriority = GetOption(opts, 'roundingPriority', 'string', ['auto', 'morePrecision', 'lessPrecision'], 'auto');\n  var hasSd = mnsd !== undefined || mxsd !== undefined;\n  var hasFd = mnfd !== undefined || mxfd !== undefined;\n  var needSd = true;\n  var needFd = true;\n  if (roundingPriority === 'auto') {\n    needSd = hasSd;\n    if (hasSd || !hasFd && notation === 'compact') {\n      needFd = false;\n    }\n  }\n  if (needSd) {\n    if (hasSd) {\n      mnsd = DefaultNumberOption(mnsd, 1, 21, 1);\n      mxsd = DefaultNumberOption(mxsd, mnsd, 21, 21);\n      internalSlots.minimumSignificantDigits = mnsd;\n      internalSlots.maximumSignificantDigits = mxsd;\n    } else {\n      internalSlots.minimumSignificantDigits = 1;\n      internalSlots.maximumSignificantDigits = 21;\n    }\n  }\n  if (needFd) {\n    if (hasFd) {\n      mnfd = DefaultNumberOption(mnfd, 0, 20, undefined);\n      mxfd = DefaultNumberOption(mxfd, 0, 20, undefined);\n      if (mnfd === undefined) {\n        // @ts-expect-error\n        mnfd = Math.min(mnfdDefault, mxfd);\n      } else if (mxfd === undefined) {\n        mxfd = Math.max(mxfdDefault, mnfd);\n      } else if (mnfd > mxfd) {\n        throw new RangeError(\"Invalid range, \".concat(mnfd, \" > \").concat(mxfd));\n      }\n      internalSlots.minimumFractionDigits = mnfd;\n      internalSlots.maximumFractionDigits = mxfd;\n    } else {\n      internalSlots.minimumFractionDigits = mnfdDefault;\n      internalSlots.maximumFractionDigits = mxfdDefault;\n    }\n  }\n  if (needSd || needFd) {\n    if (roundingPriority === 'morePrecision') {\n      internalSlots.roundingType = 'morePrecision';\n    } else if (roundingPriority === 'lessPrecision') {\n      internalSlots.roundingType = 'lessPrecision';\n    } else if (hasSd) {\n      internalSlots.roundingType = 'significantDigits';\n    } else {\n      internalSlots.roundingType = 'fractionDigits';\n    }\n  } else {\n    internalSlots.roundingType = 'morePrecision';\n    internalSlots.minimumFractionDigits = 0;\n    internalSlots.maximumFractionDigits = 0;\n    internalSlots.minimumSignificantDigits = 1;\n    internalSlots.maximumSignificantDigits = 2;\n  }\n}","map":{"version":3,"names":["DefaultNumberOption","GetNumberOption","GetOption","SetNumberFormatDigitOptions","internalSlots","opts","mnfdDefault","mxfdDefault","notation","mnid","mnfd","minimumFractionDigits","mxfd","maximumFractionDigits","mnsd","minimumSignificantDigits","mxsd","maximumSignificantDigits","minimumIntegerDigits","roundingPriority","hasSd","undefined","hasFd","needSd","needFd","Math","min","max","RangeError","concat","roundingType"],"sources":["C:/Users/chest/OneDrive/Documentos/GitHub/HackUPC/frontend/node_modules/@formatjs/ecma402-abstract/lib/NumberFormat/SetNumberFormatDigitOptions.js"],"sourcesContent":["import { DefaultNumberOption } from '../DefaultNumberOption';\nimport { GetNumberOption } from '../GetNumberOption';\nimport { GetOption } from '../GetOption';\n/**\n * https://tc39.es/ecma402/#sec-setnfdigitoptions\n */\nexport function SetNumberFormatDigitOptions(internalSlots, opts, mnfdDefault, mxfdDefault, notation) {\n    var mnid = GetNumberOption(opts, 'minimumIntegerDigits', 1, 21, 1);\n    var mnfd = opts.minimumFractionDigits;\n    var mxfd = opts.maximumFractionDigits;\n    var mnsd = opts.minimumSignificantDigits;\n    var mxsd = opts.maximumSignificantDigits;\n    internalSlots.minimumIntegerDigits = mnid;\n    var roundingPriority = GetOption(opts, 'roundingPriority', 'string', ['auto', 'morePrecision', 'lessPrecision'], 'auto');\n    var hasSd = mnsd !== undefined || mxsd !== undefined;\n    var hasFd = mnfd !== undefined || mxfd !== undefined;\n    var needSd = true;\n    var needFd = true;\n    if (roundingPriority === 'auto') {\n        needSd = hasSd;\n        if (hasSd || (!hasFd && notation === 'compact')) {\n            needFd = false;\n        }\n    }\n    if (needSd) {\n        if (hasSd) {\n            mnsd = DefaultNumberOption(mnsd, 1, 21, 1);\n            mxsd = DefaultNumberOption(mxsd, mnsd, 21, 21);\n            internalSlots.minimumSignificantDigits = mnsd;\n            internalSlots.maximumSignificantDigits = mxsd;\n        }\n        else {\n            internalSlots.minimumSignificantDigits = 1;\n            internalSlots.maximumSignificantDigits = 21;\n        }\n    }\n    if (needFd) {\n        if (hasFd) {\n            mnfd = DefaultNumberOption(mnfd, 0, 20, undefined);\n            mxfd = DefaultNumberOption(mxfd, 0, 20, undefined);\n            if (mnfd === undefined) {\n                // @ts-expect-error\n                mnfd = Math.min(mnfdDefault, mxfd);\n            }\n            else if (mxfd === undefined) {\n                mxfd = Math.max(mxfdDefault, mnfd);\n            }\n            else if (mnfd > mxfd) {\n                throw new RangeError(\"Invalid range, \".concat(mnfd, \" > \").concat(mxfd));\n            }\n            internalSlots.minimumFractionDigits = mnfd;\n            internalSlots.maximumFractionDigits = mxfd;\n        }\n        else {\n            internalSlots.minimumFractionDigits = mnfdDefault;\n            internalSlots.maximumFractionDigits = mxfdDefault;\n        }\n    }\n    if (needSd || needFd) {\n        if (roundingPriority === 'morePrecision') {\n            internalSlots.roundingType = 'morePrecision';\n        }\n        else if (roundingPriority === 'lessPrecision') {\n            internalSlots.roundingType = 'lessPrecision';\n        }\n        else if (hasSd) {\n            internalSlots.roundingType = 'significantDigits';\n        }\n        else {\n            internalSlots.roundingType = 'fractionDigits';\n        }\n    }\n    else {\n        internalSlots.roundingType = 'morePrecision';\n        internalSlots.minimumFractionDigits = 0;\n        internalSlots.maximumFractionDigits = 0;\n        internalSlots.minimumSignificantDigits = 1;\n        internalSlots.maximumSignificantDigits = 2;\n    }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}