{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DEFAULT_EXTENSIONS = void 0;\nObject.defineProperty(exports, \"File\", {\n  enumerable: true,\n  get: function () {\n    return _file.default;\n  }\n});\nObject.defineProperty(exports, \"buildExternalHelpers\", {\n  enumerable: true,\n  get: function () {\n    return _buildExternalHelpers.default;\n  }\n});\nObject.defineProperty(exports, \"createConfigItem\", {\n  enumerable: true,\n  get: function () {\n    return _index2.createConfigItem;\n  }\n});\nObject.defineProperty(exports, \"createConfigItemAsync\", {\n  enumerable: true,\n  get: function () {\n    return _index2.createConfigItemAsync;\n  }\n});\nObject.defineProperty(exports, \"createConfigItemSync\", {\n  enumerable: true,\n  get: function () {\n    return _index2.createConfigItemSync;\n  }\n});\nObject.defineProperty(exports, \"getEnv\", {\n  enumerable: true,\n  get: function () {\n    return _environment.getEnv;\n  }\n});\nObject.defineProperty(exports, \"loadOptions\", {\n  enumerable: true,\n  get: function () {\n    return _index2.loadOptions;\n  }\n});\nObject.defineProperty(exports, \"loadOptionsAsync\", {\n  enumerable: true,\n  get: function () {\n    return _index2.loadOptionsAsync;\n  }\n});\nObject.defineProperty(exports, \"loadOptionsSync\", {\n  enumerable: true,\n  get: function () {\n    return _index2.loadOptionsSync;\n  }\n});\nObject.defineProperty(exports, \"loadPartialConfig\", {\n  enumerable: true,\n  get: function () {\n    return _index2.loadPartialConfig;\n  }\n});\nObject.defineProperty(exports, \"loadPartialConfigAsync\", {\n  enumerable: true,\n  get: function () {\n    return _index2.loadPartialConfigAsync;\n  }\n});\nObject.defineProperty(exports, \"loadPartialConfigSync\", {\n  enumerable: true,\n  get: function () {\n    return _index2.loadPartialConfigSync;\n  }\n});\nObject.defineProperty(exports, \"parse\", {\n  enumerable: true,\n  get: function () {\n    return _parse.parse;\n  }\n});\nObject.defineProperty(exports, \"parseAsync\", {\n  enumerable: true,\n  get: function () {\n    return _parse.parseAsync;\n  }\n});\nObject.defineProperty(exports, \"parseSync\", {\n  enumerable: true,\n  get: function () {\n    return _parse.parseSync;\n  }\n});\nObject.defineProperty(exports, \"resolvePlugin\", {\n  enumerable: true,\n  get: function () {\n    return _index.resolvePlugin;\n  }\n});\nObject.defineProperty(exports, \"resolvePreset\", {\n  enumerable: true,\n  get: function () {\n    return _index.resolvePreset;\n  }\n});\nObject.defineProperty((0, exports), \"template\", {\n  enumerable: true,\n  get: function () {\n    return _template().default;\n  }\n});\nObject.defineProperty((0, exports), \"tokTypes\", {\n  enumerable: true,\n  get: function () {\n    return _parser().tokTypes;\n  }\n});\nObject.defineProperty(exports, \"transform\", {\n  enumerable: true,\n  get: function () {\n    return _transform.transform;\n  }\n});\nObject.defineProperty(exports, \"transformAsync\", {\n  enumerable: true,\n  get: function () {\n    return _transform.transformAsync;\n  }\n});\nObject.defineProperty(exports, \"transformFile\", {\n  enumerable: true,\n  get: function () {\n    return _transformFile.transformFile;\n  }\n});\nObject.defineProperty(exports, \"transformFileAsync\", {\n  enumerable: true,\n  get: function () {\n    return _transformFile.transformFileAsync;\n  }\n});\nObject.defineProperty(exports, \"transformFileSync\", {\n  enumerable: true,\n  get: function () {\n    return _transformFile.transformFileSync;\n  }\n});\nObject.defineProperty(exports, \"transformFromAst\", {\n  enumerable: true,\n  get: function () {\n    return _transformAst.transformFromAst;\n  }\n});\nObject.defineProperty(exports, \"transformFromAstAsync\", {\n  enumerable: true,\n  get: function () {\n    return _transformAst.transformFromAstAsync;\n  }\n});\nObject.defineProperty(exports, \"transformFromAstSync\", {\n  enumerable: true,\n  get: function () {\n    return _transformAst.transformFromAstSync;\n  }\n});\nObject.defineProperty(exports, \"transformSync\", {\n  enumerable: true,\n  get: function () {\n    return _transform.transformSync;\n  }\n});\nObject.defineProperty((0, exports), \"traverse\", {\n  enumerable: true,\n  get: function () {\n    return _traverse().default;\n  }\n});\nexports.version = exports.types = void 0;\nvar _file = require(\"./transformation/file/file.js\");\nvar _buildExternalHelpers = require(\"./tools/build-external-helpers.js\");\nvar _index = require(\"./config/files/index.js\");\nvar _environment = require(\"./config/helpers/environment.js\");\nfunction _types() {\n  const data = require(\"@babel/types\");\n  _types = function () {\n    return data;\n  };\n  return data;\n}\nObject.defineProperty((0, exports), \"types\", {\n  enumerable: true,\n  get: function () {\n    return _types();\n  }\n});\nfunction _parser() {\n  const data = require(\"@babel/parser\");\n  _parser = function () {\n    return data;\n  };\n  return data;\n}\nfunction _traverse() {\n  const data = require(\"@babel/traverse\");\n  _traverse = function () {\n    return data;\n  };\n  return data;\n}\nfunction _template() {\n  const data = require(\"@babel/template\");\n  _template = function () {\n    return data;\n  };\n  return data;\n}\nvar _index2 = require(\"./config/index.js\");\nvar _transform = require(\"./transform.js\");\nvar _transformFile = require(\"./transform-file.js\");\nvar _transformAst = require(\"./transform-ast.js\");\nvar _parse = require(\"./parse.js\");\nvar thisFile = require(\"./index.js\");\n;\nconst version = exports.version = \"7.24.5\";\nconst DEFAULT_EXTENSIONS = exports.DEFAULT_EXTENSIONS = Object.freeze([\".js\", \".jsx\", \".es6\", \".es\", \".mjs\", \".cjs\"]);\n;\n{\n  exports.OptionManager = class OptionManager {\n    init(opts) {\n      return (0, _index2.loadOptionsSync)(opts);\n    }\n  };\n  exports.Plugin = function Plugin(alias) {\n    throw new Error(`The (${alias}) Babel 5 plugin is being run with an unsupported Babel version.`);\n  };\n}\n0 && (exports.types = exports.traverse = exports.tokTypes = exports.template = 0);","map":{"version":3,"names":["_file","require","_buildExternalHelpers","_index","_environment","_types","data","Object","defineProperty","exports","enumerable","get","_parser","_traverse","_template","_index2","_transform","_transformFile","_transformAst","_parse","thisFile","version","DEFAULT_EXTENSIONS","freeze","OptionManager","init","opts","loadOptionsSync","Plugin","alias","Error","types","traverse","tokTypes","template"],"sources":["C:\\Users\\chest\\OneDrive\\Documentos\\GitHub\\HackUPC\\frontend\\node_modules\\@babel\\core\\src\\index.ts"],"sourcesContent":["if (!process.env.IS_PUBLISH && !USE_ESM && process.env.BABEL_8_BREAKING) {\n  throw new Error(\n    \"BABEL_8_BREAKING is only supported in ESM. Please run `make use-esm`.\",\n  );\n}\n\nexport const version = PACKAGE_JSON.version;\n\nexport { default as File } from \"./transformation/file/file.ts\";\nexport type { default as PluginPass } from \"./transformation/plugin-pass.ts\";\nexport { default as buildExternalHelpers } from \"./tools/build-external-helpers.ts\";\nexport { resolvePlugin, resolvePreset } from \"./config/files/index.ts\";\n\nexport { getEnv } from \"./config/helpers/environment.ts\";\n\n// NOTE: Lazy re-exports aren't detected by the Node.js CJS-ESM interop.\n// These are handled by pluginInjectNodeReexportsHints in our babel.config.js\n// so that they can work well.\nexport * as types from \"@babel/types\";\nexport { tokTypes } from \"@babel/parser\";\nexport { default as traverse } from \"@babel/traverse\";\nexport { default as template } from \"@babel/template\";\n\nexport {\n  createConfigItem,\n  createConfigItemSync,\n  createConfigItemAsync,\n} from \"./config/index.ts\";\n\nexport {\n  loadPartialConfig,\n  loadPartialConfigSync,\n  loadPartialConfigAsync,\n  loadOptions,\n  loadOptionsAsync,\n} from \"./config/index.ts\";\nimport { loadOptionsSync } from \"./config/index.ts\";\nexport { loadOptionsSync };\n\nexport type {\n  CallerMetadata,\n  InputOptions,\n  PluginAPI,\n  PluginObject,\n  PresetAPI,\n  PresetObject,\n  ConfigItem,\n} from \"./config/index.ts\";\n\nexport {\n  transform,\n  transformSync,\n  transformAsync,\n  type FileResult,\n} from \"./transform.ts\";\nexport {\n  transformFile,\n  transformFileSync,\n  transformFileAsync,\n} from \"./transform-file.ts\";\nexport {\n  transformFromAst,\n  transformFromAstSync,\n  transformFromAstAsync,\n} from \"./transform-ast.ts\";\nexport { parse, parseSync, parseAsync } from \"./parse.ts\";\n\n/**\n * Recommended set of compilable extensions. Not used in @babel/core directly, but meant as\n * as an easy source for tooling making use of @babel/core.\n */\nexport const DEFAULT_EXTENSIONS = Object.freeze([\n  \".js\",\n  \".jsx\",\n  \".es6\",\n  \".es\",\n  \".mjs\",\n  \".cjs\",\n] as const);\n\nimport Module from \"module\";\nimport * as thisFile from \"./index.ts\";\nif (USE_ESM && !IS_STANDALONE) {\n  // Pass this module to the CJS proxy, so that it can be synchronously accessed.\n  const cjsProxy = Module.createRequire(import.meta.url)(\"../cjs-proxy.cjs\");\n  cjsProxy[\"__ initialize @babel/core cjs proxy __\"] = thisFile;\n}\n\nif (!process.env.BABEL_8_BREAKING && !USE_ESM) {\n  // For easier backward-compatibility, provide an API like the one we exposed in Babel 6.\n  // eslint-disable-next-line no-restricted-globals\n  exports.OptionManager = class OptionManager {\n    init(opts: {}) {\n      return loadOptionsSync(opts);\n    }\n  };\n\n  // eslint-disable-next-line no-restricted-globals\n  exports.Plugin = function Plugin(alias: string) {\n    throw new Error(\n      `The (${alias}) Babel 5 plugin is being run with an unsupported Babel version.`,\n    );\n  };\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQA,IAAAA,KAAA,GAAAC,OAAA;AAEA,IAAAC,qBAAA,GAAAD,OAAA;AACA,IAAAE,MAAA,GAAAF,OAAA;AAEA,IAAAG,YAAA,GAAAH,OAAA;AAAyD,SAAAI,OAAA;EAAA,MAAAC,IAAA,GAAAL,OAAA;EAAAI,MAAA,YAAAA,CAAA;IAAA,OAAAC,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AAAAC,MAAA,CAAAC,cAAA,KAAAC,OAAA;EAAAC,UAAA;EAAAC,GAAA,WAAAA,CAAA;IAAA,OAAAN,MAAA;EAAA;AAAA;AAMzD,SAAAO,QAAA;EAAA,MAAAN,IAAA,GAAAL,OAAA;EAAAW,OAAA,YAAAA,CAAA;IAAA,OAAAN,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AACA,SAAAO,UAAA;EAAA,MAAAP,IAAA,GAAAL,OAAA;EAAAY,SAAA,YAAAA,CAAA;IAAA,OAAAP,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AACA,SAAAQ,UAAA;EAAA,MAAAR,IAAA,GAAAL,OAAA;EAAAa,SAAA,YAAAA,CAAA;IAAA,OAAAR,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AAEA,IAAAS,OAAA,GAAAd,OAAA;AA0BA,IAAAe,UAAA,GAAAf,OAAA;AAMA,IAAAgB,cAAA,GAAAhB,OAAA;AAKA,IAAAiB,aAAA,GAAAjB,OAAA;AAKA,IAAAkB,MAAA,GAAAlB,OAAA;AAgBA,IAAAmB,QAAA,GAAAnB,OAAA;AAAuC;AA3EhC,MAAMoB,OAAO,GAAAZ,OAAA,CAAAY,OAAA,WAAuB;AAiEpC,MAAMC,kBAAkB,GAAAb,OAAA,CAAAa,kBAAA,GAAGf,MAAM,CAACgB,MAAM,CAAC,CAC9C,KAAK,EACL,MAAM,EACN,MAAM,EACN,KAAK,EACL,MAAM,EACN,MAAM,CACE,CAAC;AAAC;AAUmC;EAG7Cd,OAAO,CAACe,aAAa,GAAG,MAAMA,aAAa,CAAC;IAC1CC,IAAIA,CAACC,IAAQ,EAAE;MACb,OAAO,IAAAX,OAAA,CAAAY,eAAe,EAACD,IAAI,CAAC;IAC9B;EACF,CAAC;EAGDjB,OAAO,CAACmB,MAAM,GAAG,SAASA,MAAMA,CAACC,KAAa,EAAE;IAC9C,MAAM,IAAIC,KAAK,CACZ,QAAOD,KAAM,kEAChB,CAAC;EACH,CAAC;AACH;AAAC,MAAApB,OAAA,CAAAsB,KAAA,GAAAtB,OAAA,CAAAuB,QAAA,GAAAvB,OAAA,CAAAwB,QAAA,GAAAxB,OAAA,CAAAyB,QAAA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}