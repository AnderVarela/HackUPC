{"ast":null,"code":"\"use strict\";\n\nvar Buffer = require(\"buffer\").Buffer,\n  Transform = require(\"stream\").Transform;\n\n// == Exports ==================================================================\nmodule.exports = function (iconv) {\n  // Additional Public API.\n  iconv.encodeStream = function encodeStream(encoding, options) {\n    return new IconvLiteEncoderStream(iconv.getEncoder(encoding, options), options);\n  };\n  iconv.decodeStream = function decodeStream(encoding, options) {\n    return new IconvLiteDecoderStream(iconv.getDecoder(encoding, options), options);\n  };\n  iconv.supportsStreams = true;\n\n  // Not published yet.\n  iconv.IconvLiteEncoderStream = IconvLiteEncoderStream;\n  iconv.IconvLiteDecoderStream = IconvLiteDecoderStream;\n  iconv._collect = IconvLiteDecoderStream.prototype.collect;\n};\n\n// == Encoder stream =======================================================\nfunction IconvLiteEncoderStream(conv, options) {\n  this.conv = conv;\n  options = options || {};\n  options.decodeStrings = false; // We accept only strings, so we don't need to decode them.\n  Transform.call(this, options);\n}\nIconvLiteEncoderStream.prototype = Object.create(Transform.prototype, {\n  constructor: {\n    value: IconvLiteEncoderStream\n  }\n});\nIconvLiteEncoderStream.prototype._transform = function (chunk, encoding, done) {\n  if (typeof chunk != 'string') return done(new Error(\"Iconv encoding stream needs strings as its input.\"));\n  try {\n    var res = this.conv.write(chunk);\n    if (res && res.length) this.push(res);\n    done();\n  } catch (e) {\n    done(e);\n  }\n};\nIconvLiteEncoderStream.prototype._flush = function (done) {\n  try {\n    var res = this.conv.end();\n    if (res && res.length) this.push(res);\n    done();\n  } catch (e) {\n    done(e);\n  }\n};\nIconvLiteEncoderStream.prototype.collect = function (cb) {\n  var chunks = [];\n  this.on('error', cb);\n  this.on('data', function (chunk) {\n    chunks.push(chunk);\n  });\n  this.on('end', function () {\n    cb(null, Buffer.concat(chunks));\n  });\n  return this;\n};\n\n// == Decoder stream =======================================================\nfunction IconvLiteDecoderStream(conv, options) {\n  this.conv = conv;\n  options = options || {};\n  options.encoding = this.encoding = 'utf8'; // We output strings.\n  Transform.call(this, options);\n}\nIconvLiteDecoderStream.prototype = Object.create(Transform.prototype, {\n  constructor: {\n    value: IconvLiteDecoderStream\n  }\n});\nIconvLiteDecoderStream.prototype._transform = function (chunk, encoding, done) {\n  if (!Buffer.isBuffer(chunk)) return done(new Error(\"Iconv decoding stream needs buffers as its input.\"));\n  try {\n    var res = this.conv.write(chunk);\n    if (res && res.length) this.push(res, this.encoding);\n    done();\n  } catch (e) {\n    done(e);\n  }\n};\nIconvLiteDecoderStream.prototype._flush = function (done) {\n  try {\n    var res = this.conv.end();\n    if (res && res.length) this.push(res, this.encoding);\n    done();\n  } catch (e) {\n    done(e);\n  }\n};\nIconvLiteDecoderStream.prototype.collect = function (cb) {\n  var res = '';\n  this.on('error', cb);\n  this.on('data', function (chunk) {\n    res += chunk;\n  });\n  this.on('end', function () {\n    cb(null, res);\n  });\n  return this;\n};","map":{"version":3,"names":["Buffer","require","Transform","module","exports","iconv","encodeStream","encoding","options","IconvLiteEncoderStream","getEncoder","decodeStream","IconvLiteDecoderStream","getDecoder","supportsStreams","_collect","prototype","collect","conv","decodeStrings","call","Object","create","constructor","value","_transform","chunk","done","Error","res","write","length","push","e","_flush","end","cb","chunks","on","concat","isBuffer"],"sources":["C:/Users/chest/OneDrive/Documentos/GitHub/HackUPC/frontend/node_modules/body-parser/node_modules/iconv-lite/lib/streams.js"],"sourcesContent":["\"use strict\";\n\nvar Buffer = require(\"buffer\").Buffer,\n    Transform = require(\"stream\").Transform;\n\n\n// == Exports ==================================================================\nmodule.exports = function(iconv) {\n    \n    // Additional Public API.\n    iconv.encodeStream = function encodeStream(encoding, options) {\n        return new IconvLiteEncoderStream(iconv.getEncoder(encoding, options), options);\n    }\n\n    iconv.decodeStream = function decodeStream(encoding, options) {\n        return new IconvLiteDecoderStream(iconv.getDecoder(encoding, options), options);\n    }\n\n    iconv.supportsStreams = true;\n\n\n    // Not published yet.\n    iconv.IconvLiteEncoderStream = IconvLiteEncoderStream;\n    iconv.IconvLiteDecoderStream = IconvLiteDecoderStream;\n    iconv._collect = IconvLiteDecoderStream.prototype.collect;\n};\n\n\n// == Encoder stream =======================================================\nfunction IconvLiteEncoderStream(conv, options) {\n    this.conv = conv;\n    options = options || {};\n    options.decodeStrings = false; // We accept only strings, so we don't need to decode them.\n    Transform.call(this, options);\n}\n\nIconvLiteEncoderStream.prototype = Object.create(Transform.prototype, {\n    constructor: { value: IconvLiteEncoderStream }\n});\n\nIconvLiteEncoderStream.prototype._transform = function(chunk, encoding, done) {\n    if (typeof chunk != 'string')\n        return done(new Error(\"Iconv encoding stream needs strings as its input.\"));\n    try {\n        var res = this.conv.write(chunk);\n        if (res && res.length) this.push(res);\n        done();\n    }\n    catch (e) {\n        done(e);\n    }\n}\n\nIconvLiteEncoderStream.prototype._flush = function(done) {\n    try {\n        var res = this.conv.end();\n        if (res && res.length) this.push(res);\n        done();\n    }\n    catch (e) {\n        done(e);\n    }\n}\n\nIconvLiteEncoderStream.prototype.collect = function(cb) {\n    var chunks = [];\n    this.on('error', cb);\n    this.on('data', function(chunk) { chunks.push(chunk); });\n    this.on('end', function() {\n        cb(null, Buffer.concat(chunks));\n    });\n    return this;\n}\n\n\n// == Decoder stream =======================================================\nfunction IconvLiteDecoderStream(conv, options) {\n    this.conv = conv;\n    options = options || {};\n    options.encoding = this.encoding = 'utf8'; // We output strings.\n    Transform.call(this, options);\n}\n\nIconvLiteDecoderStream.prototype = Object.create(Transform.prototype, {\n    constructor: { value: IconvLiteDecoderStream }\n});\n\nIconvLiteDecoderStream.prototype._transform = function(chunk, encoding, done) {\n    if (!Buffer.isBuffer(chunk))\n        return done(new Error(\"Iconv decoding stream needs buffers as its input.\"));\n    try {\n        var res = this.conv.write(chunk);\n        if (res && res.length) this.push(res, this.encoding);\n        done();\n    }\n    catch (e) {\n        done(e);\n    }\n}\n\nIconvLiteDecoderStream.prototype._flush = function(done) {\n    try {\n        var res = this.conv.end();\n        if (res && res.length) this.push(res, this.encoding);                \n        done();\n    }\n    catch (e) {\n        done(e);\n    }\n}\n\nIconvLiteDecoderStream.prototype.collect = function(cb) {\n    var res = '';\n    this.on('error', cb);\n    this.on('data', function(chunk) { res += chunk; });\n    this.on('end', function() {\n        cb(null, res);\n    });\n    return this;\n}\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}