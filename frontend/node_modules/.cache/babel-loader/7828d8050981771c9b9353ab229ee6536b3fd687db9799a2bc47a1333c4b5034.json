{"ast":null,"code":"/* global __webpack_dev_server_client__ */\n\nconst getSocketUrlParts = require('./utils/getSocketUrlParts.js');\nconst getUrlFromParts = require('./utils/getUrlFromParts');\nconst getWDSMetadata = require('./utils/getWDSMetadata');\n\n/**\n * Initializes a socket server for HMR for webpack-dev-server.\n * @param {function(*): void} messageHandler A handler to consume Webpack compilation messages.\n * @param {string} [resourceQuery] Webpack's `__resourceQuery` string.\n * @returns {void}\n */\nfunction initWDSSocket(messageHandler, resourceQuery) {\n  if (typeof __webpack_dev_server_client__ !== 'undefined') {\n    let SocketClient = __webpack_dev_server_client__;\n    if (typeof __webpack_dev_server_client__.default !== 'undefined') {\n      SocketClient = __webpack_dev_server_client__.default;\n    }\n    const wdsMeta = getWDSMetadata(SocketClient);\n    const urlParts = getSocketUrlParts(resourceQuery, wdsMeta);\n    const connection = new SocketClient(getUrlFromParts(urlParts, wdsMeta));\n    connection.onMessage(function onSocketMessage(data) {\n      const message = JSON.parse(data);\n      messageHandler(message);\n    });\n  }\n}\nmodule.exports = {\n  init: initWDSSocket\n};","map":{"version":3,"names":["getSocketUrlParts","require","getUrlFromParts","getWDSMetadata","initWDSSocket","messageHandler","resourceQuery","__webpack_dev_server_client__","SocketClient","default","wdsMeta","urlParts","connection","onMessage","onSocketMessage","data","message","JSON","parse","module","exports","init"],"sources":["C:/Users/chest/OneDrive/Documentos/GitHub/HackUPC/frontend/node_modules/@pmmmwh/react-refresh-webpack-plugin/sockets/WDSSocket.js"],"sourcesContent":["/* global __webpack_dev_server_client__ */\n\nconst getSocketUrlParts = require('./utils/getSocketUrlParts.js');\nconst getUrlFromParts = require('./utils/getUrlFromParts');\nconst getWDSMetadata = require('./utils/getWDSMetadata');\n\n/**\n * Initializes a socket server for HMR for webpack-dev-server.\n * @param {function(*): void} messageHandler A handler to consume Webpack compilation messages.\n * @param {string} [resourceQuery] Webpack's `__resourceQuery` string.\n * @returns {void}\n */\nfunction initWDSSocket(messageHandler, resourceQuery) {\n  if (typeof __webpack_dev_server_client__ !== 'undefined') {\n    let SocketClient = __webpack_dev_server_client__;\n    if (typeof __webpack_dev_server_client__.default !== 'undefined') {\n      SocketClient = __webpack_dev_server_client__.default;\n    }\n\n    const wdsMeta = getWDSMetadata(SocketClient);\n    const urlParts = getSocketUrlParts(resourceQuery, wdsMeta);\n\n    const connection = new SocketClient(getUrlFromParts(urlParts, wdsMeta));\n\n    connection.onMessage(function onSocketMessage(data) {\n      const message = JSON.parse(data);\n      messageHandler(message);\n    });\n  }\n}\n\nmodule.exports = { init: initWDSSocket };\n"],"mappings":"AAAA;;AAEA,MAAMA,iBAAiB,GAAGC,OAAO,CAAC,8BAA8B,CAAC;AACjE,MAAMC,eAAe,GAAGD,OAAO,CAAC,yBAAyB,CAAC;AAC1D,MAAME,cAAc,GAAGF,OAAO,CAAC,wBAAwB,CAAC;;AAExD;AACA;AACA;AACA;AACA;AACA;AACA,SAASG,aAAaA,CAACC,cAAc,EAAEC,aAAa,EAAE;EACpD,IAAI,OAAOC,6BAA6B,KAAK,WAAW,EAAE;IACxD,IAAIC,YAAY,GAAGD,6BAA6B;IAChD,IAAI,OAAOA,6BAA6B,CAACE,OAAO,KAAK,WAAW,EAAE;MAChED,YAAY,GAAGD,6BAA6B,CAACE,OAAO;IACtD;IAEA,MAAMC,OAAO,GAAGP,cAAc,CAACK,YAAY,CAAC;IAC5C,MAAMG,QAAQ,GAAGX,iBAAiB,CAACM,aAAa,EAAEI,OAAO,CAAC;IAE1D,MAAME,UAAU,GAAG,IAAIJ,YAAY,CAACN,eAAe,CAACS,QAAQ,EAAED,OAAO,CAAC,CAAC;IAEvEE,UAAU,CAACC,SAAS,CAAC,SAASC,eAAeA,CAACC,IAAI,EAAE;MAClD,MAAMC,OAAO,GAAGC,IAAI,CAACC,KAAK,CAACH,IAAI,CAAC;MAChCV,cAAc,CAACW,OAAO,CAAC;IACzB,CAAC,CAAC;EACJ;AACF;AAEAG,MAAM,CAACC,OAAO,GAAG;EAAEC,IAAI,EAAEjB;AAAc,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}