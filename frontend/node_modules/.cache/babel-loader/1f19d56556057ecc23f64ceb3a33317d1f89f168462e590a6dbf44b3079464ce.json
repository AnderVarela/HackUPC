{"ast":null,"code":"\"use strict\";\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n  return _typeof(obj);\n}\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.encodeVersion = encodeVersion;\nexports.encodeHeader = encodeHeader;\nexports.encodeU32 = encodeU32;\nexports.encodeI32 = encodeI32;\nexports.encodeI64 = encodeI64;\nexports.encodeVec = encodeVec;\nexports.encodeValtype = encodeValtype;\nexports.encodeMutability = encodeMutability;\nexports.encodeUTF8Vec = encodeUTF8Vec;\nexports.encodeLimits = encodeLimits;\nexports.encodeModuleImport = encodeModuleImport;\nexports.encodeSectionMetadata = encodeSectionMetadata;\nexports.encodeCallInstruction = encodeCallInstruction;\nexports.encodeCallIndirectInstruction = encodeCallIndirectInstruction;\nexports.encodeModuleExport = encodeModuleExport;\nexports.encodeTypeInstruction = encodeTypeInstruction;\nexports.encodeInstr = encodeInstr;\nexports.encodeStringLiteral = encodeStringLiteral;\nexports.encodeGlobal = encodeGlobal;\nexports.encodeFuncBody = encodeFuncBody;\nexports.encodeIndexInFuncSection = encodeIndexInFuncSection;\nexports.encodeElem = encodeElem;\nvar leb = _interopRequireWildcard(require(\"@webassemblyjs/leb128\"));\nvar ieee754 = _interopRequireWildcard(require(\"@webassemblyjs/ieee754\"));\nvar utf8 = _interopRequireWildcard(require(\"@webassemblyjs/utf8\"));\nvar _helperWasmBytecode = _interopRequireDefault(require(\"@webassemblyjs/helper-wasm-bytecode\"));\nvar _index = require(\"../index\");\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\nfunction _getRequireWildcardCache(nodeInterop) {\n  if (typeof WeakMap !== \"function\") return null;\n  var cacheBabelInterop = new WeakMap();\n  var cacheNodeInterop = new WeakMap();\n  return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n  })(nodeInterop);\n}\nfunction _interopRequireWildcard(obj, nodeInterop) {\n  if (!nodeInterop && obj && obj.__esModule) {\n    return obj;\n  }\n  if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") {\n    return {\n      \"default\": obj\n    };\n  }\n  var cache = _getRequireWildcardCache(nodeInterop);\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n  for (var key in obj) {\n    if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n  newObj[\"default\"] = obj;\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n  return newObj;\n}\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n  return arr2;\n}\nfunction assertNotIdentifierNode(n) {\n  if (n.type === \"Identifier\") {\n    throw new Error(\"Unsupported node Identifier\");\n  }\n}\nfunction encodeVersion(v) {\n  var bytes = _helperWasmBytecode[\"default\"].moduleVersion;\n  bytes[0] = v;\n  return bytes;\n}\nfunction encodeHeader() {\n  return _helperWasmBytecode[\"default\"].magicModuleHeader;\n}\nfunction encodeU32(v) {\n  var uint8view = new Uint8Array(leb.encodeU32(v));\n  var array = _toConsumableArray(uint8view);\n  return array;\n}\nfunction encodeI32(v) {\n  var uint8view = new Uint8Array(leb.encodeI32(v));\n  var array = _toConsumableArray(uint8view);\n  return array;\n}\nfunction encodeI64(v) {\n  var uint8view = new Uint8Array(leb.encodeI64(v));\n  var array = _toConsumableArray(uint8view);\n  return array;\n}\nfunction encodeVec(elements) {\n  var size = encodeU32(elements.length);\n  return [].concat(_toConsumableArray(size), _toConsumableArray(elements));\n}\nfunction encodeValtype(v) {\n  var _byte = _helperWasmBytecode[\"default\"].valtypesByString[v];\n  if (typeof _byte === \"undefined\") {\n    throw new Error(\"Unknown valtype: \" + v);\n  }\n  return parseInt(_byte, 10);\n}\nfunction encodeMutability(v) {\n  var _byte2 = _helperWasmBytecode[\"default\"].globalTypesByString[v];\n  if (typeof _byte2 === \"undefined\") {\n    throw new Error(\"Unknown mutability: \" + v);\n  }\n  return parseInt(_byte2, 10);\n}\nfunction encodeUTF8Vec(str) {\n  return encodeVec(utf8.encode(str));\n}\nfunction encodeLimits(n) {\n  var out = [];\n  if (typeof n.max === \"number\") {\n    out.push(0x01);\n    out.push.apply(out, _toConsumableArray(encodeU32(n.min))); // $FlowIgnore: ensured by the typeof\n\n    out.push.apply(out, _toConsumableArray(encodeU32(n.max)));\n  } else {\n    out.push(0x00);\n    out.push.apply(out, _toConsumableArray(encodeU32(n.min)));\n  }\n  return out;\n}\nfunction encodeModuleImport(n) {\n  var out = [];\n  out.push.apply(out, _toConsumableArray(encodeUTF8Vec(n.module)));\n  out.push.apply(out, _toConsumableArray(encodeUTF8Vec(n.name)));\n  switch (n.descr.type) {\n    case \"GlobalType\":\n      {\n        out.push(0x03); // $FlowIgnore: GlobalType ensure that these props exists\n\n        out.push(encodeValtype(n.descr.valtype)); // $FlowIgnore: GlobalType ensure that these props exists\n\n        out.push(encodeMutability(n.descr.mutability));\n        break;\n      }\n    case \"Memory\":\n      {\n        out.push(0x02); // $FlowIgnore\n\n        out.push.apply(out, _toConsumableArray(encodeLimits(n.descr.limits)));\n        break;\n      }\n    case \"Table\":\n      {\n        out.push(0x01);\n        out.push(0x70); // element type\n        // $FlowIgnore\n\n        out.push.apply(out, _toConsumableArray(encodeLimits(n.descr.limits)));\n        break;\n      }\n    case \"FuncImportDescr\":\n      {\n        out.push(0x00); // $FlowIgnore\n\n        assertNotIdentifierNode(n.descr.id); // $FlowIgnore\n\n        out.push.apply(out, _toConsumableArray(encodeU32(n.descr.id.value)));\n        break;\n      }\n    default:\n      throw new Error(\"Unsupport operation: encode module import of type: \" + n.descr.type);\n  }\n  return out;\n}\nfunction encodeSectionMetadata(n) {\n  var out = [];\n  var sectionId = _helperWasmBytecode[\"default\"].sections[n.section];\n  if (typeof sectionId === \"undefined\") {\n    throw new Error(\"Unknown section: \" + n.section);\n  }\n  if (n.section === \"start\") {\n    /**\n     * This is not implemented yet because it's a special case which\n     * doesn't have a vector in its section.\n     */\n    throw new Error(\"Unsupported section encoding of type start\");\n  }\n  out.push(sectionId);\n  out.push.apply(out, _toConsumableArray(encodeU32(n.size.value)));\n  out.push.apply(out, _toConsumableArray(encodeU32(n.vectorOfSize.value)));\n  return out;\n}\nfunction encodeCallInstruction(n) {\n  var out = [];\n  assertNotIdentifierNode(n.index);\n  out.push(0x10); // $FlowIgnore\n\n  out.push.apply(out, _toConsumableArray(encodeU32(n.index.value)));\n  return out;\n}\nfunction encodeCallIndirectInstruction(n) {\n  var out = []; // $FlowIgnore\n\n  assertNotIdentifierNode(n.index);\n  out.push(0x11); // $FlowIgnore\n\n  out.push.apply(out, _toConsumableArray(encodeU32(n.index.value))); // add a reserved byte\n\n  out.push(0x00);\n  return out;\n}\nfunction encodeModuleExport(n) {\n  var out = [];\n  assertNotIdentifierNode(n.descr.id);\n  var exportTypeByteString = _helperWasmBytecode[\"default\"].exportTypesByName[n.descr.exportType];\n  if (typeof exportTypeByteString === \"undefined\") {\n    throw new Error(\"Unknown export of type: \" + n.descr.exportType);\n  }\n  var exportTypeByte = parseInt(exportTypeByteString, 10);\n  out.push.apply(out, _toConsumableArray(encodeUTF8Vec(n.name)));\n  out.push(exportTypeByte); // $FlowIgnore\n\n  out.push.apply(out, _toConsumableArray(encodeU32(n.descr.id.value)));\n  return out;\n}\nfunction encodeTypeInstruction(n) {\n  var out = [0x60];\n  var params = n.functype.params.map(function (x) {\n    return x.valtype;\n  }).map(encodeValtype);\n  var results = n.functype.results.map(encodeValtype);\n  out.push.apply(out, _toConsumableArray(encodeVec(params)));\n  out.push.apply(out, _toConsumableArray(encodeVec(results)));\n  return out;\n}\nfunction encodeInstr(n) {\n  var out = [];\n  var instructionName = n.id;\n  if (typeof n.object === \"string\") {\n    instructionName = \"\".concat(n.object, \".\").concat(String(n.id));\n  }\n  var byteString = _helperWasmBytecode[\"default\"].symbolsByName[instructionName];\n  if (typeof byteString === \"undefined\") {\n    throw new Error(\"encodeInstr: unknown instruction \" + JSON.stringify(instructionName));\n  }\n  var _byte3 = parseInt(byteString, 10);\n  out.push(_byte3);\n  if (n.args) {\n    n.args.forEach(function (arg) {\n      var encoder = encodeU32; // find correct encoder\n\n      if (n.object === \"i32\") {\n        encoder = encodeI32;\n      }\n      if (n.object === \"i64\") {\n        encoder = encodeI64;\n      }\n      if (n.object === \"f32\") {\n        encoder = ieee754.encodeF32;\n      }\n      if (n.object === \"f64\") {\n        encoder = ieee754.encodeF64;\n      }\n      if (arg.type === \"NumberLiteral\" || arg.type === \"FloatLiteral\" || arg.type === \"LongNumberLiteral\") {\n        // $FlowIgnore\n        out.push.apply(out, _toConsumableArray(encoder(arg.value)));\n      } else {\n        throw new Error(\"Unsupported instruction argument encoding \" + JSON.stringify(arg.type));\n      }\n    });\n  }\n  return out;\n}\nfunction encodeExpr(instrs) {\n  var out = [];\n  instrs.forEach(function (instr) {\n    // $FlowIgnore\n    var n = (0, _index.encodeNode)(instr);\n    out.push.apply(out, _toConsumableArray(n));\n  });\n  return out;\n}\nfunction encodeStringLiteral(n) {\n  return encodeUTF8Vec(n.value);\n}\nfunction encodeGlobal(n) {\n  var out = [];\n  var _n$globalType = n.globalType,\n    valtype = _n$globalType.valtype,\n    mutability = _n$globalType.mutability;\n  out.push(encodeValtype(valtype));\n  out.push(encodeMutability(mutability));\n  out.push.apply(out, _toConsumableArray(encodeExpr(n.init)));\n  return out;\n}\nfunction encodeFuncBody(n) {\n  var out = [];\n  out.push(-1); // temporary function body size\n  // FIXME(sven): get the func locals?\n\n  var localBytes = encodeVec([]);\n  out.push.apply(out, _toConsumableArray(localBytes));\n  var funcBodyBytes = encodeExpr(n.body);\n  out[0] = funcBodyBytes.length + localBytes.length;\n  out.push.apply(out, _toConsumableArray(funcBodyBytes));\n  return out;\n}\nfunction encodeIndexInFuncSection(n) {\n  assertNotIdentifierNode(n.index); // $FlowIgnore\n\n  return encodeU32(n.index.value);\n}\nfunction encodeElem(n) {\n  var out = [];\n  assertNotIdentifierNode(n.table); // $FlowIgnore\n\n  out.push.apply(out, _toConsumableArray(encodeU32(n.table.value)));\n  out.push.apply(out, _toConsumableArray(encodeExpr(n.offset))); // $FlowIgnore\n\n  var funcs = n.funcs.reduce(function (acc, x) {\n    return [].concat(_toConsumableArray(acc), _toConsumableArray(encodeU32(x.value)));\n  }, []);\n  out.push.apply(out, _toConsumableArray(encodeVec(funcs)));\n  return out;\n}","map":{"version":3,"names":["_typeof","obj","Symbol","iterator","constructor","prototype","Object","defineProperty","exports","value","encodeVersion","encodeHeader","encodeU32","encodeI32","encodeI64","encodeVec","encodeValtype","encodeMutability","encodeUTF8Vec","encodeLimits","encodeModuleImport","encodeSectionMetadata","encodeCallInstruction","encodeCallIndirectInstruction","encodeModuleExport","encodeTypeInstruction","encodeInstr","encodeStringLiteral","encodeGlobal","encodeFuncBody","encodeIndexInFuncSection","encodeElem","leb","_interopRequireWildcard","require","ieee754","utf8","_helperWasmBytecode","_interopRequireDefault","_index","__esModule","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","cache","has","get","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","key","hasOwnProperty","call","desc","set","_toConsumableArray","arr","_arrayWithoutHoles","_iterableToArray","_unsupportedIterableToArray","_nonIterableSpread","TypeError","o","minLen","_arrayLikeToArray","n","toString","slice","name","Array","from","test","iter","isArray","len","length","i","arr2","assertNotIdentifierNode","type","Error","v","bytes","moduleVersion","magicModuleHeader","uint8view","Uint8Array","array","elements","size","concat","_byte","valtypesByString","parseInt","_byte2","globalTypesByString","str","encode","out","max","push","apply","min","module","descr","valtype","mutability","limits","id","sectionId","sections","section","vectorOfSize","index","exportTypeByteString","exportTypesByName","exportType","exportTypeByte","params","functype","map","x","results","instructionName","object","String","byteString","symbolsByName","JSON","stringify","_byte3","args","forEach","arg","encoder","encodeF32","encodeF64","encodeExpr","instrs","instr","encodeNode","_n$globalType","globalType","init","localBytes","funcBodyBytes","body","table","offset","funcs","reduce","acc"],"sources":["C:/Users/chest/OneDrive/Documentos/GitHub/HackUPC/frontend/node_modules/@webassemblyjs/wasm-gen/lib/encoder/index.js"],"sourcesContent":["\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.encodeVersion = encodeVersion;\nexports.encodeHeader = encodeHeader;\nexports.encodeU32 = encodeU32;\nexports.encodeI32 = encodeI32;\nexports.encodeI64 = encodeI64;\nexports.encodeVec = encodeVec;\nexports.encodeValtype = encodeValtype;\nexports.encodeMutability = encodeMutability;\nexports.encodeUTF8Vec = encodeUTF8Vec;\nexports.encodeLimits = encodeLimits;\nexports.encodeModuleImport = encodeModuleImport;\nexports.encodeSectionMetadata = encodeSectionMetadata;\nexports.encodeCallInstruction = encodeCallInstruction;\nexports.encodeCallIndirectInstruction = encodeCallIndirectInstruction;\nexports.encodeModuleExport = encodeModuleExport;\nexports.encodeTypeInstruction = encodeTypeInstruction;\nexports.encodeInstr = encodeInstr;\nexports.encodeStringLiteral = encodeStringLiteral;\nexports.encodeGlobal = encodeGlobal;\nexports.encodeFuncBody = encodeFuncBody;\nexports.encodeIndexInFuncSection = encodeIndexInFuncSection;\nexports.encodeElem = encodeElem;\n\nvar leb = _interopRequireWildcard(require(\"@webassemblyjs/leb128\"));\n\nvar ieee754 = _interopRequireWildcard(require(\"@webassemblyjs/ieee754\"));\n\nvar utf8 = _interopRequireWildcard(require(\"@webassemblyjs/utf8\"));\n\nvar _helperWasmBytecode = _interopRequireDefault(require(\"@webassemblyjs/helper-wasm-bytecode\"));\n\nvar _index = require(\"../index\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction assertNotIdentifierNode(n) {\n  if (n.type === \"Identifier\") {\n    throw new Error(\"Unsupported node Identifier\");\n  }\n}\n\nfunction encodeVersion(v) {\n  var bytes = _helperWasmBytecode[\"default\"].moduleVersion;\n  bytes[0] = v;\n  return bytes;\n}\n\nfunction encodeHeader() {\n  return _helperWasmBytecode[\"default\"].magicModuleHeader;\n}\n\nfunction encodeU32(v) {\n  var uint8view = new Uint8Array(leb.encodeU32(v));\n\n  var array = _toConsumableArray(uint8view);\n\n  return array;\n}\n\nfunction encodeI32(v) {\n  var uint8view = new Uint8Array(leb.encodeI32(v));\n\n  var array = _toConsumableArray(uint8view);\n\n  return array;\n}\n\nfunction encodeI64(v) {\n  var uint8view = new Uint8Array(leb.encodeI64(v));\n\n  var array = _toConsumableArray(uint8view);\n\n  return array;\n}\n\nfunction encodeVec(elements) {\n  var size = encodeU32(elements.length);\n  return [].concat(_toConsumableArray(size), _toConsumableArray(elements));\n}\n\nfunction encodeValtype(v) {\n  var _byte = _helperWasmBytecode[\"default\"].valtypesByString[v];\n\n  if (typeof _byte === \"undefined\") {\n    throw new Error(\"Unknown valtype: \" + v);\n  }\n\n  return parseInt(_byte, 10);\n}\n\nfunction encodeMutability(v) {\n  var _byte2 = _helperWasmBytecode[\"default\"].globalTypesByString[v];\n\n  if (typeof _byte2 === \"undefined\") {\n    throw new Error(\"Unknown mutability: \" + v);\n  }\n\n  return parseInt(_byte2, 10);\n}\n\nfunction encodeUTF8Vec(str) {\n  return encodeVec(utf8.encode(str));\n}\n\nfunction encodeLimits(n) {\n  var out = [];\n\n  if (typeof n.max === \"number\") {\n    out.push(0x01);\n    out.push.apply(out, _toConsumableArray(encodeU32(n.min))); // $FlowIgnore: ensured by the typeof\n\n    out.push.apply(out, _toConsumableArray(encodeU32(n.max)));\n  } else {\n    out.push(0x00);\n    out.push.apply(out, _toConsumableArray(encodeU32(n.min)));\n  }\n\n  return out;\n}\n\nfunction encodeModuleImport(n) {\n  var out = [];\n  out.push.apply(out, _toConsumableArray(encodeUTF8Vec(n.module)));\n  out.push.apply(out, _toConsumableArray(encodeUTF8Vec(n.name)));\n\n  switch (n.descr.type) {\n    case \"GlobalType\":\n      {\n        out.push(0x03); // $FlowIgnore: GlobalType ensure that these props exists\n\n        out.push(encodeValtype(n.descr.valtype)); // $FlowIgnore: GlobalType ensure that these props exists\n\n        out.push(encodeMutability(n.descr.mutability));\n        break;\n      }\n\n    case \"Memory\":\n      {\n        out.push(0x02); // $FlowIgnore\n\n        out.push.apply(out, _toConsumableArray(encodeLimits(n.descr.limits)));\n        break;\n      }\n\n    case \"Table\":\n      {\n        out.push(0x01);\n        out.push(0x70); // element type\n        // $FlowIgnore\n\n        out.push.apply(out, _toConsumableArray(encodeLimits(n.descr.limits)));\n        break;\n      }\n\n    case \"FuncImportDescr\":\n      {\n        out.push(0x00); // $FlowIgnore\n\n        assertNotIdentifierNode(n.descr.id); // $FlowIgnore\n\n        out.push.apply(out, _toConsumableArray(encodeU32(n.descr.id.value)));\n        break;\n      }\n\n    default:\n      throw new Error(\"Unsupport operation: encode module import of type: \" + n.descr.type);\n  }\n\n  return out;\n}\n\nfunction encodeSectionMetadata(n) {\n  var out = [];\n  var sectionId = _helperWasmBytecode[\"default\"].sections[n.section];\n\n  if (typeof sectionId === \"undefined\") {\n    throw new Error(\"Unknown section: \" + n.section);\n  }\n\n  if (n.section === \"start\") {\n    /**\n     * This is not implemented yet because it's a special case which\n     * doesn't have a vector in its section.\n     */\n    throw new Error(\"Unsupported section encoding of type start\");\n  }\n\n  out.push(sectionId);\n  out.push.apply(out, _toConsumableArray(encodeU32(n.size.value)));\n  out.push.apply(out, _toConsumableArray(encodeU32(n.vectorOfSize.value)));\n  return out;\n}\n\nfunction encodeCallInstruction(n) {\n  var out = [];\n  assertNotIdentifierNode(n.index);\n  out.push(0x10); // $FlowIgnore\n\n  out.push.apply(out, _toConsumableArray(encodeU32(n.index.value)));\n  return out;\n}\n\nfunction encodeCallIndirectInstruction(n) {\n  var out = []; // $FlowIgnore\n\n  assertNotIdentifierNode(n.index);\n  out.push(0x11); // $FlowIgnore\n\n  out.push.apply(out, _toConsumableArray(encodeU32(n.index.value))); // add a reserved byte\n\n  out.push(0x00);\n  return out;\n}\n\nfunction encodeModuleExport(n) {\n  var out = [];\n  assertNotIdentifierNode(n.descr.id);\n  var exportTypeByteString = _helperWasmBytecode[\"default\"].exportTypesByName[n.descr.exportType];\n\n  if (typeof exportTypeByteString === \"undefined\") {\n    throw new Error(\"Unknown export of type: \" + n.descr.exportType);\n  }\n\n  var exportTypeByte = parseInt(exportTypeByteString, 10);\n  out.push.apply(out, _toConsumableArray(encodeUTF8Vec(n.name)));\n  out.push(exportTypeByte); // $FlowIgnore\n\n  out.push.apply(out, _toConsumableArray(encodeU32(n.descr.id.value)));\n  return out;\n}\n\nfunction encodeTypeInstruction(n) {\n  var out = [0x60];\n  var params = n.functype.params.map(function (x) {\n    return x.valtype;\n  }).map(encodeValtype);\n  var results = n.functype.results.map(encodeValtype);\n  out.push.apply(out, _toConsumableArray(encodeVec(params)));\n  out.push.apply(out, _toConsumableArray(encodeVec(results)));\n  return out;\n}\n\nfunction encodeInstr(n) {\n  var out = [];\n  var instructionName = n.id;\n\n  if (typeof n.object === \"string\") {\n    instructionName = \"\".concat(n.object, \".\").concat(String(n.id));\n  }\n\n  var byteString = _helperWasmBytecode[\"default\"].symbolsByName[instructionName];\n\n  if (typeof byteString === \"undefined\") {\n    throw new Error(\"encodeInstr: unknown instruction \" + JSON.stringify(instructionName));\n  }\n\n  var _byte3 = parseInt(byteString, 10);\n\n  out.push(_byte3);\n\n  if (n.args) {\n    n.args.forEach(function (arg) {\n      var encoder = encodeU32; // find correct encoder\n\n      if (n.object === \"i32\") {\n        encoder = encodeI32;\n      }\n\n      if (n.object === \"i64\") {\n        encoder = encodeI64;\n      }\n\n      if (n.object === \"f32\") {\n        encoder = ieee754.encodeF32;\n      }\n\n      if (n.object === \"f64\") {\n        encoder = ieee754.encodeF64;\n      }\n\n      if (arg.type === \"NumberLiteral\" || arg.type === \"FloatLiteral\" || arg.type === \"LongNumberLiteral\") {\n        // $FlowIgnore\n        out.push.apply(out, _toConsumableArray(encoder(arg.value)));\n      } else {\n        throw new Error(\"Unsupported instruction argument encoding \" + JSON.stringify(arg.type));\n      }\n    });\n  }\n\n  return out;\n}\n\nfunction encodeExpr(instrs) {\n  var out = [];\n  instrs.forEach(function (instr) {\n    // $FlowIgnore\n    var n = (0, _index.encodeNode)(instr);\n    out.push.apply(out, _toConsumableArray(n));\n  });\n  return out;\n}\n\nfunction encodeStringLiteral(n) {\n  return encodeUTF8Vec(n.value);\n}\n\nfunction encodeGlobal(n) {\n  var out = [];\n  var _n$globalType = n.globalType,\n      valtype = _n$globalType.valtype,\n      mutability = _n$globalType.mutability;\n  out.push(encodeValtype(valtype));\n  out.push(encodeMutability(mutability));\n  out.push.apply(out, _toConsumableArray(encodeExpr(n.init)));\n  return out;\n}\n\nfunction encodeFuncBody(n) {\n  var out = [];\n  out.push(-1); // temporary function body size\n  // FIXME(sven): get the func locals?\n\n  var localBytes = encodeVec([]);\n  out.push.apply(out, _toConsumableArray(localBytes));\n  var funcBodyBytes = encodeExpr(n.body);\n  out[0] = funcBodyBytes.length + localBytes.length;\n  out.push.apply(out, _toConsumableArray(funcBodyBytes));\n  return out;\n}\n\nfunction encodeIndexInFuncSection(n) {\n  assertNotIdentifierNode(n.index); // $FlowIgnore\n\n  return encodeU32(n.index.value);\n}\n\nfunction encodeElem(n) {\n  var out = [];\n  assertNotIdentifierNode(n.table); // $FlowIgnore\n\n  out.push.apply(out, _toConsumableArray(encodeU32(n.table.value)));\n  out.push.apply(out, _toConsumableArray(encodeExpr(n.offset))); // $FlowIgnore\n\n  var funcs = n.funcs.reduce(function (acc, x) {\n    return [].concat(_toConsumableArray(acc), _toConsumableArray(encodeU32(x.value)));\n  }, []);\n  out.push.apply(out, _toConsumableArray(encodeVec(funcs)));\n  return out;\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}