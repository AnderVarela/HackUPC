{"ast":null,"code":"/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar base64VLQ = require('./base64-vlq');\nvar util = require('./util');\nvar ArraySet = require('./array-set').ArraySet;\nvar MappingList = require('./mapping-list').MappingList;\n\n/**\n * An instance of the SourceMapGenerator represents a source map which is\n * being built incrementally. You may pass an object with the following\n * properties:\n *\n *   - file: The filename of the generated source.\n *   - sourceRoot: A root for all relative URLs in this source map.\n */\nfunction SourceMapGenerator(aArgs) {\n  if (!aArgs) {\n    aArgs = {};\n  }\n  this._file = util.getArg(aArgs, 'file', null);\n  this._sourceRoot = util.getArg(aArgs, 'sourceRoot', null);\n  this._skipValidation = util.getArg(aArgs, 'skipValidation', false);\n  this._sources = new ArraySet();\n  this._names = new ArraySet();\n  this._mappings = new MappingList();\n  this._sourcesContents = null;\n}\nSourceMapGenerator.prototype._version = 3;\n\n/**\n * Creates a new SourceMapGenerator based on a SourceMapConsumer\n *\n * @param aSourceMapConsumer The SourceMap.\n */\nSourceMapGenerator.fromSourceMap = function SourceMapGenerator_fromSourceMap(aSourceMapConsumer) {\n  var sourceRoot = aSourceMapConsumer.sourceRoot;\n  var generator = new SourceMapGenerator({\n    file: aSourceMapConsumer.file,\n    sourceRoot: sourceRoot\n  });\n  aSourceMapConsumer.eachMapping(function (mapping) {\n    var newMapping = {\n      generated: {\n        line: mapping.generatedLine,\n        column: mapping.generatedColumn\n      }\n    };\n    if (mapping.source != null) {\n      newMapping.source = mapping.source;\n      if (sourceRoot != null) {\n        newMapping.source = util.relative(sourceRoot, newMapping.source);\n      }\n      newMapping.original = {\n        line: mapping.originalLine,\n        column: mapping.originalColumn\n      };\n      if (mapping.name != null) {\n        newMapping.name = mapping.name;\n      }\n    }\n    generator.addMapping(newMapping);\n  });\n  aSourceMapConsumer.sources.forEach(function (sourceFile) {\n    var sourceRelative = sourceFile;\n    if (sourceRoot !== null) {\n      sourceRelative = util.relative(sourceRoot, sourceFile);\n    }\n    if (!generator._sources.has(sourceRelative)) {\n      generator._sources.add(sourceRelative);\n    }\n    var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n    if (content != null) {\n      generator.setSourceContent(sourceFile, content);\n    }\n  });\n  return generator;\n};\n\n/**\n * Add a single mapping from original source line and column to the generated\n * source's line and column for this source map being created. The mapping\n * object should have the following properties:\n *\n *   - generated: An object with the generated line and column positions.\n *   - original: An object with the original line and column positions.\n *   - source: The original source file (relative to the sourceRoot).\n *   - name: An optional original token name for this mapping.\n */\nSourceMapGenerator.prototype.addMapping = function SourceMapGenerator_addMapping(aArgs) {\n  var generated = util.getArg(aArgs, 'generated');\n  var original = util.getArg(aArgs, 'original', null);\n  var source = util.getArg(aArgs, 'source', null);\n  var name = util.getArg(aArgs, 'name', null);\n  if (!this._skipValidation) {\n    this._validateMapping(generated, original, source, name);\n  }\n  if (source != null) {\n    source = String(source);\n    if (!this._sources.has(source)) {\n      this._sources.add(source);\n    }\n  }\n  if (name != null) {\n    name = String(name);\n    if (!this._names.has(name)) {\n      this._names.add(name);\n    }\n  }\n  this._mappings.add({\n    generatedLine: generated.line,\n    generatedColumn: generated.column,\n    originalLine: original != null && original.line,\n    originalColumn: original != null && original.column,\n    source: source,\n    name: name\n  });\n};\n\n/**\n * Set the source content for a source file.\n */\nSourceMapGenerator.prototype.setSourceContent = function SourceMapGenerator_setSourceContent(aSourceFile, aSourceContent) {\n  var source = aSourceFile;\n  if (this._sourceRoot != null) {\n    source = util.relative(this._sourceRoot, source);\n  }\n  if (aSourceContent != null) {\n    // Add the source content to the _sourcesContents map.\n    // Create a new _sourcesContents map if the property is null.\n    if (!this._sourcesContents) {\n      this._sourcesContents = Object.create(null);\n    }\n    this._sourcesContents[util.toSetString(source)] = aSourceContent;\n  } else if (this._sourcesContents) {\n    // Remove the source file from the _sourcesContents map.\n    // If the _sourcesContents map is empty, set the property to null.\n    delete this._sourcesContents[util.toSetString(source)];\n    if (Object.keys(this._sourcesContents).length === 0) {\n      this._sourcesContents = null;\n    }\n  }\n};\n\n/**\n * Applies the mappings of a sub-source-map for a specific source file to the\n * source map being generated. Each mapping to the supplied source file is\n * rewritten using the supplied source map. Note: The resolution for the\n * resulting mappings is the minimium of this map and the supplied map.\n *\n * @param aSourceMapConsumer The source map to be applied.\n * @param aSourceFile Optional. The filename of the source file.\n *        If omitted, SourceMapConsumer's file property will be used.\n * @param aSourceMapPath Optional. The dirname of the path to the source map\n *        to be applied. If relative, it is relative to the SourceMapConsumer.\n *        This parameter is needed when the two source maps aren't in the same\n *        directory, and the source map to be applied contains relative source\n *        paths. If so, those relative source paths need to be rewritten\n *        relative to the SourceMapGenerator.\n */\nSourceMapGenerator.prototype.applySourceMap = function SourceMapGenerator_applySourceMap(aSourceMapConsumer, aSourceFile, aSourceMapPath) {\n  var sourceFile = aSourceFile;\n  // If aSourceFile is omitted, we will use the file property of the SourceMap\n  if (aSourceFile == null) {\n    if (aSourceMapConsumer.file == null) {\n      throw new Error('SourceMapGenerator.prototype.applySourceMap requires either an explicit source file, ' + 'or the source map\\'s \"file\" property. Both were omitted.');\n    }\n    sourceFile = aSourceMapConsumer.file;\n  }\n  var sourceRoot = this._sourceRoot;\n  // Make \"sourceFile\" relative if an absolute Url is passed.\n  if (sourceRoot != null) {\n    sourceFile = util.relative(sourceRoot, sourceFile);\n  }\n  // Applying the SourceMap can add and remove items from the sources and\n  // the names array.\n  var newSources = new ArraySet();\n  var newNames = new ArraySet();\n\n  // Find mappings for the \"sourceFile\"\n  this._mappings.unsortedForEach(function (mapping) {\n    if (mapping.source === sourceFile && mapping.originalLine != null) {\n      // Check if it can be mapped by the source map, then update the mapping.\n      var original = aSourceMapConsumer.originalPositionFor({\n        line: mapping.originalLine,\n        column: mapping.originalColumn\n      });\n      if (original.source != null) {\n        // Copy mapping\n        mapping.source = original.source;\n        if (aSourceMapPath != null) {\n          mapping.source = util.join(aSourceMapPath, mapping.source);\n        }\n        if (sourceRoot != null) {\n          mapping.source = util.relative(sourceRoot, mapping.source);\n        }\n        mapping.originalLine = original.line;\n        mapping.originalColumn = original.column;\n        if (original.name != null) {\n          mapping.name = original.name;\n        }\n      }\n    }\n    var source = mapping.source;\n    if (source != null && !newSources.has(source)) {\n      newSources.add(source);\n    }\n    var name = mapping.name;\n    if (name != null && !newNames.has(name)) {\n      newNames.add(name);\n    }\n  }, this);\n  this._sources = newSources;\n  this._names = newNames;\n\n  // Copy sourcesContents of applied map.\n  aSourceMapConsumer.sources.forEach(function (sourceFile) {\n    var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n    if (content != null) {\n      if (aSourceMapPath != null) {\n        sourceFile = util.join(aSourceMapPath, sourceFile);\n      }\n      if (sourceRoot != null) {\n        sourceFile = util.relative(sourceRoot, sourceFile);\n      }\n      this.setSourceContent(sourceFile, content);\n    }\n  }, this);\n};\n\n/**\n * A mapping can have one of the three levels of data:\n *\n *   1. Just the generated position.\n *   2. The Generated position, original position, and original source.\n *   3. Generated and original position, original source, as well as a name\n *      token.\n *\n * To maintain consistency, we validate that any new mapping being added falls\n * in to one of these categories.\n */\nSourceMapGenerator.prototype._validateMapping = function SourceMapGenerator_validateMapping(aGenerated, aOriginal, aSource, aName) {\n  // When aOriginal is truthy but has empty values for .line and .column,\n  // it is most likely a programmer error. In this case we throw a very\n  // specific error message to try to guide them the right way.\n  // For example: https://github.com/Polymer/polymer-bundler/pull/519\n  if (aOriginal && typeof aOriginal.line !== 'number' && typeof aOriginal.column !== 'number') {\n    throw new Error('original.line and original.column are not numbers -- you probably meant to omit ' + 'the original mapping entirely and only map the generated position. If so, pass ' + 'null for the original mapping instead of an object with empty or null values.');\n  }\n  if (aGenerated && 'line' in aGenerated && 'column' in aGenerated && aGenerated.line > 0 && aGenerated.column >= 0 && !aOriginal && !aSource && !aName) {\n    // Case 1.\n    return;\n  } else if (aGenerated && 'line' in aGenerated && 'column' in aGenerated && aOriginal && 'line' in aOriginal && 'column' in aOriginal && aGenerated.line > 0 && aGenerated.column >= 0 && aOriginal.line > 0 && aOriginal.column >= 0 && aSource) {\n    // Cases 2 and 3.\n    return;\n  } else {\n    throw new Error('Invalid mapping: ' + JSON.stringify({\n      generated: aGenerated,\n      source: aSource,\n      original: aOriginal,\n      name: aName\n    }));\n  }\n};\n\n/**\n * Serialize the accumulated mappings in to the stream of base 64 VLQs\n * specified by the source map format.\n */\nSourceMapGenerator.prototype._serializeMappings = function SourceMapGenerator_serializeMappings() {\n  var previousGeneratedColumn = 0;\n  var previousGeneratedLine = 1;\n  var previousOriginalColumn = 0;\n  var previousOriginalLine = 0;\n  var previousName = 0;\n  var previousSource = 0;\n  var result = '';\n  var next;\n  var mapping;\n  var nameIdx;\n  var sourceIdx;\n  var mappings = this._mappings.toArray();\n  for (var i = 0, len = mappings.length; i < len; i++) {\n    mapping = mappings[i];\n    next = '';\n    if (mapping.generatedLine !== previousGeneratedLine) {\n      previousGeneratedColumn = 0;\n      while (mapping.generatedLine !== previousGeneratedLine) {\n        next += ';';\n        previousGeneratedLine++;\n      }\n    } else {\n      if (i > 0) {\n        if (!util.compareByGeneratedPositionsInflated(mapping, mappings[i - 1])) {\n          continue;\n        }\n        next += ',';\n      }\n    }\n    next += base64VLQ.encode(mapping.generatedColumn - previousGeneratedColumn);\n    previousGeneratedColumn = mapping.generatedColumn;\n    if (mapping.source != null) {\n      sourceIdx = this._sources.indexOf(mapping.source);\n      next += base64VLQ.encode(sourceIdx - previousSource);\n      previousSource = sourceIdx;\n\n      // lines are stored 0-based in SourceMap spec version 3\n      next += base64VLQ.encode(mapping.originalLine - 1 - previousOriginalLine);\n      previousOriginalLine = mapping.originalLine - 1;\n      next += base64VLQ.encode(mapping.originalColumn - previousOriginalColumn);\n      previousOriginalColumn = mapping.originalColumn;\n      if (mapping.name != null) {\n        nameIdx = this._names.indexOf(mapping.name);\n        next += base64VLQ.encode(nameIdx - previousName);\n        previousName = nameIdx;\n      }\n    }\n    result += next;\n  }\n  return result;\n};\nSourceMapGenerator.prototype._generateSourcesContent = function SourceMapGenerator_generateSourcesContent(aSources, aSourceRoot) {\n  return aSources.map(function (source) {\n    if (!this._sourcesContents) {\n      return null;\n    }\n    if (aSourceRoot != null) {\n      source = util.relative(aSourceRoot, source);\n    }\n    var key = util.toSetString(source);\n    return Object.prototype.hasOwnProperty.call(this._sourcesContents, key) ? this._sourcesContents[key] : null;\n  }, this);\n};\n\n/**\n * Externalize the source map.\n */\nSourceMapGenerator.prototype.toJSON = function SourceMapGenerator_toJSON() {\n  var map = {\n    version: this._version,\n    sources: this._sources.toArray(),\n    names: this._names.toArray(),\n    mappings: this._serializeMappings()\n  };\n  if (this._file != null) {\n    map.file = this._file;\n  }\n  if (this._sourceRoot != null) {\n    map.sourceRoot = this._sourceRoot;\n  }\n  if (this._sourcesContents) {\n    map.sourcesContent = this._generateSourcesContent(map.sources, map.sourceRoot);\n  }\n  return map;\n};\n\n/**\n * Render the source map being generated to a string.\n */\nSourceMapGenerator.prototype.toString = function SourceMapGenerator_toString() {\n  return JSON.stringify(this.toJSON());\n};\nexports.SourceMapGenerator = SourceMapGenerator;","map":{"version":3,"names":["base64VLQ","require","util","ArraySet","MappingList","SourceMapGenerator","aArgs","_file","getArg","_sourceRoot","_skipValidation","_sources","_names","_mappings","_sourcesContents","prototype","_version","fromSourceMap","SourceMapGenerator_fromSourceMap","aSourceMapConsumer","sourceRoot","generator","file","eachMapping","mapping","newMapping","generated","line","generatedLine","column","generatedColumn","source","relative","original","originalLine","originalColumn","name","addMapping","sources","forEach","sourceFile","sourceRelative","has","add","content","sourceContentFor","setSourceContent","SourceMapGenerator_addMapping","_validateMapping","String","SourceMapGenerator_setSourceContent","aSourceFile","aSourceContent","Object","create","toSetString","keys","length","applySourceMap","SourceMapGenerator_applySourceMap","aSourceMapPath","Error","newSources","newNames","unsortedForEach","originalPositionFor","join","SourceMapGenerator_validateMapping","aGenerated","aOriginal","aSource","aName","JSON","stringify","_serializeMappings","SourceMapGenerator_serializeMappings","previousGeneratedColumn","previousGeneratedLine","previousOriginalColumn","previousOriginalLine","previousName","previousSource","result","next","nameIdx","sourceIdx","mappings","toArray","i","len","compareByGeneratedPositionsInflated","encode","indexOf","_generateSourcesContent","SourceMapGenerator_generateSourcesContent","aSources","aSourceRoot","map","key","hasOwnProperty","call","toJSON","SourceMapGenerator_toJSON","version","names","sourcesContent","toString","SourceMapGenerator_toString","exports"],"sources":["C:/Users/chest/OneDrive/Documentos/GitHub/HackUPC/frontend/node_modules/@jest/transform/node_modules/source-map/lib/source-map-generator.js"],"sourcesContent":["/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar base64VLQ = require('./base64-vlq');\nvar util = require('./util');\nvar ArraySet = require('./array-set').ArraySet;\nvar MappingList = require('./mapping-list').MappingList;\n\n/**\n * An instance of the SourceMapGenerator represents a source map which is\n * being built incrementally. You may pass an object with the following\n * properties:\n *\n *   - file: The filename of the generated source.\n *   - sourceRoot: A root for all relative URLs in this source map.\n */\nfunction SourceMapGenerator(aArgs) {\n  if (!aArgs) {\n    aArgs = {};\n  }\n  this._file = util.getArg(aArgs, 'file', null);\n  this._sourceRoot = util.getArg(aArgs, 'sourceRoot', null);\n  this._skipValidation = util.getArg(aArgs, 'skipValidation', false);\n  this._sources = new ArraySet();\n  this._names = new ArraySet();\n  this._mappings = new MappingList();\n  this._sourcesContents = null;\n}\n\nSourceMapGenerator.prototype._version = 3;\n\n/**\n * Creates a new SourceMapGenerator based on a SourceMapConsumer\n *\n * @param aSourceMapConsumer The SourceMap.\n */\nSourceMapGenerator.fromSourceMap =\n  function SourceMapGenerator_fromSourceMap(aSourceMapConsumer) {\n    var sourceRoot = aSourceMapConsumer.sourceRoot;\n    var generator = new SourceMapGenerator({\n      file: aSourceMapConsumer.file,\n      sourceRoot: sourceRoot\n    });\n    aSourceMapConsumer.eachMapping(function (mapping) {\n      var newMapping = {\n        generated: {\n          line: mapping.generatedLine,\n          column: mapping.generatedColumn\n        }\n      };\n\n      if (mapping.source != null) {\n        newMapping.source = mapping.source;\n        if (sourceRoot != null) {\n          newMapping.source = util.relative(sourceRoot, newMapping.source);\n        }\n\n        newMapping.original = {\n          line: mapping.originalLine,\n          column: mapping.originalColumn\n        };\n\n        if (mapping.name != null) {\n          newMapping.name = mapping.name;\n        }\n      }\n\n      generator.addMapping(newMapping);\n    });\n    aSourceMapConsumer.sources.forEach(function (sourceFile) {\n      var sourceRelative = sourceFile;\n      if (sourceRoot !== null) {\n        sourceRelative = util.relative(sourceRoot, sourceFile);\n      }\n\n      if (!generator._sources.has(sourceRelative)) {\n        generator._sources.add(sourceRelative);\n      }\n\n      var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n      if (content != null) {\n        generator.setSourceContent(sourceFile, content);\n      }\n    });\n    return generator;\n  };\n\n/**\n * Add a single mapping from original source line and column to the generated\n * source's line and column for this source map being created. The mapping\n * object should have the following properties:\n *\n *   - generated: An object with the generated line and column positions.\n *   - original: An object with the original line and column positions.\n *   - source: The original source file (relative to the sourceRoot).\n *   - name: An optional original token name for this mapping.\n */\nSourceMapGenerator.prototype.addMapping =\n  function SourceMapGenerator_addMapping(aArgs) {\n    var generated = util.getArg(aArgs, 'generated');\n    var original = util.getArg(aArgs, 'original', null);\n    var source = util.getArg(aArgs, 'source', null);\n    var name = util.getArg(aArgs, 'name', null);\n\n    if (!this._skipValidation) {\n      this._validateMapping(generated, original, source, name);\n    }\n\n    if (source != null) {\n      source = String(source);\n      if (!this._sources.has(source)) {\n        this._sources.add(source);\n      }\n    }\n\n    if (name != null) {\n      name = String(name);\n      if (!this._names.has(name)) {\n        this._names.add(name);\n      }\n    }\n\n    this._mappings.add({\n      generatedLine: generated.line,\n      generatedColumn: generated.column,\n      originalLine: original != null && original.line,\n      originalColumn: original != null && original.column,\n      source: source,\n      name: name\n    });\n  };\n\n/**\n * Set the source content for a source file.\n */\nSourceMapGenerator.prototype.setSourceContent =\n  function SourceMapGenerator_setSourceContent(aSourceFile, aSourceContent) {\n    var source = aSourceFile;\n    if (this._sourceRoot != null) {\n      source = util.relative(this._sourceRoot, source);\n    }\n\n    if (aSourceContent != null) {\n      // Add the source content to the _sourcesContents map.\n      // Create a new _sourcesContents map if the property is null.\n      if (!this._sourcesContents) {\n        this._sourcesContents = Object.create(null);\n      }\n      this._sourcesContents[util.toSetString(source)] = aSourceContent;\n    } else if (this._sourcesContents) {\n      // Remove the source file from the _sourcesContents map.\n      // If the _sourcesContents map is empty, set the property to null.\n      delete this._sourcesContents[util.toSetString(source)];\n      if (Object.keys(this._sourcesContents).length === 0) {\n        this._sourcesContents = null;\n      }\n    }\n  };\n\n/**\n * Applies the mappings of a sub-source-map for a specific source file to the\n * source map being generated. Each mapping to the supplied source file is\n * rewritten using the supplied source map. Note: The resolution for the\n * resulting mappings is the minimium of this map and the supplied map.\n *\n * @param aSourceMapConsumer The source map to be applied.\n * @param aSourceFile Optional. The filename of the source file.\n *        If omitted, SourceMapConsumer's file property will be used.\n * @param aSourceMapPath Optional. The dirname of the path to the source map\n *        to be applied. If relative, it is relative to the SourceMapConsumer.\n *        This parameter is needed when the two source maps aren't in the same\n *        directory, and the source map to be applied contains relative source\n *        paths. If so, those relative source paths need to be rewritten\n *        relative to the SourceMapGenerator.\n */\nSourceMapGenerator.prototype.applySourceMap =\n  function SourceMapGenerator_applySourceMap(aSourceMapConsumer, aSourceFile, aSourceMapPath) {\n    var sourceFile = aSourceFile;\n    // If aSourceFile is omitted, we will use the file property of the SourceMap\n    if (aSourceFile == null) {\n      if (aSourceMapConsumer.file == null) {\n        throw new Error(\n          'SourceMapGenerator.prototype.applySourceMap requires either an explicit source file, ' +\n          'or the source map\\'s \"file\" property. Both were omitted.'\n        );\n      }\n      sourceFile = aSourceMapConsumer.file;\n    }\n    var sourceRoot = this._sourceRoot;\n    // Make \"sourceFile\" relative if an absolute Url is passed.\n    if (sourceRoot != null) {\n      sourceFile = util.relative(sourceRoot, sourceFile);\n    }\n    // Applying the SourceMap can add and remove items from the sources and\n    // the names array.\n    var newSources = new ArraySet();\n    var newNames = new ArraySet();\n\n    // Find mappings for the \"sourceFile\"\n    this._mappings.unsortedForEach(function (mapping) {\n      if (mapping.source === sourceFile && mapping.originalLine != null) {\n        // Check if it can be mapped by the source map, then update the mapping.\n        var original = aSourceMapConsumer.originalPositionFor({\n          line: mapping.originalLine,\n          column: mapping.originalColumn\n        });\n        if (original.source != null) {\n          // Copy mapping\n          mapping.source = original.source;\n          if (aSourceMapPath != null) {\n            mapping.source = util.join(aSourceMapPath, mapping.source)\n          }\n          if (sourceRoot != null) {\n            mapping.source = util.relative(sourceRoot, mapping.source);\n          }\n          mapping.originalLine = original.line;\n          mapping.originalColumn = original.column;\n          if (original.name != null) {\n            mapping.name = original.name;\n          }\n        }\n      }\n\n      var source = mapping.source;\n      if (source != null && !newSources.has(source)) {\n        newSources.add(source);\n      }\n\n      var name = mapping.name;\n      if (name != null && !newNames.has(name)) {\n        newNames.add(name);\n      }\n\n    }, this);\n    this._sources = newSources;\n    this._names = newNames;\n\n    // Copy sourcesContents of applied map.\n    aSourceMapConsumer.sources.forEach(function (sourceFile) {\n      var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n      if (content != null) {\n        if (aSourceMapPath != null) {\n          sourceFile = util.join(aSourceMapPath, sourceFile);\n        }\n        if (sourceRoot != null) {\n          sourceFile = util.relative(sourceRoot, sourceFile);\n        }\n        this.setSourceContent(sourceFile, content);\n      }\n    }, this);\n  };\n\n/**\n * A mapping can have one of the three levels of data:\n *\n *   1. Just the generated position.\n *   2. The Generated position, original position, and original source.\n *   3. Generated and original position, original source, as well as a name\n *      token.\n *\n * To maintain consistency, we validate that any new mapping being added falls\n * in to one of these categories.\n */\nSourceMapGenerator.prototype._validateMapping =\n  function SourceMapGenerator_validateMapping(aGenerated, aOriginal, aSource,\n                                              aName) {\n    // When aOriginal is truthy but has empty values for .line and .column,\n    // it is most likely a programmer error. In this case we throw a very\n    // specific error message to try to guide them the right way.\n    // For example: https://github.com/Polymer/polymer-bundler/pull/519\n    if (aOriginal && typeof aOriginal.line !== 'number' && typeof aOriginal.column !== 'number') {\n        throw new Error(\n            'original.line and original.column are not numbers -- you probably meant to omit ' +\n            'the original mapping entirely and only map the generated position. If so, pass ' +\n            'null for the original mapping instead of an object with empty or null values.'\n        );\n    }\n\n    if (aGenerated && 'line' in aGenerated && 'column' in aGenerated\n        && aGenerated.line > 0 && aGenerated.column >= 0\n        && !aOriginal && !aSource && !aName) {\n      // Case 1.\n      return;\n    }\n    else if (aGenerated && 'line' in aGenerated && 'column' in aGenerated\n             && aOriginal && 'line' in aOriginal && 'column' in aOriginal\n             && aGenerated.line > 0 && aGenerated.column >= 0\n             && aOriginal.line > 0 && aOriginal.column >= 0\n             && aSource) {\n      // Cases 2 and 3.\n      return;\n    }\n    else {\n      throw new Error('Invalid mapping: ' + JSON.stringify({\n        generated: aGenerated,\n        source: aSource,\n        original: aOriginal,\n        name: aName\n      }));\n    }\n  };\n\n/**\n * Serialize the accumulated mappings in to the stream of base 64 VLQs\n * specified by the source map format.\n */\nSourceMapGenerator.prototype._serializeMappings =\n  function SourceMapGenerator_serializeMappings() {\n    var previousGeneratedColumn = 0;\n    var previousGeneratedLine = 1;\n    var previousOriginalColumn = 0;\n    var previousOriginalLine = 0;\n    var previousName = 0;\n    var previousSource = 0;\n    var result = '';\n    var next;\n    var mapping;\n    var nameIdx;\n    var sourceIdx;\n\n    var mappings = this._mappings.toArray();\n    for (var i = 0, len = mappings.length; i < len; i++) {\n      mapping = mappings[i];\n      next = ''\n\n      if (mapping.generatedLine !== previousGeneratedLine) {\n        previousGeneratedColumn = 0;\n        while (mapping.generatedLine !== previousGeneratedLine) {\n          next += ';';\n          previousGeneratedLine++;\n        }\n      }\n      else {\n        if (i > 0) {\n          if (!util.compareByGeneratedPositionsInflated(mapping, mappings[i - 1])) {\n            continue;\n          }\n          next += ',';\n        }\n      }\n\n      next += base64VLQ.encode(mapping.generatedColumn\n                                 - previousGeneratedColumn);\n      previousGeneratedColumn = mapping.generatedColumn;\n\n      if (mapping.source != null) {\n        sourceIdx = this._sources.indexOf(mapping.source);\n        next += base64VLQ.encode(sourceIdx - previousSource);\n        previousSource = sourceIdx;\n\n        // lines are stored 0-based in SourceMap spec version 3\n        next += base64VLQ.encode(mapping.originalLine - 1\n                                   - previousOriginalLine);\n        previousOriginalLine = mapping.originalLine - 1;\n\n        next += base64VLQ.encode(mapping.originalColumn\n                                   - previousOriginalColumn);\n        previousOriginalColumn = mapping.originalColumn;\n\n        if (mapping.name != null) {\n          nameIdx = this._names.indexOf(mapping.name);\n          next += base64VLQ.encode(nameIdx - previousName);\n          previousName = nameIdx;\n        }\n      }\n\n      result += next;\n    }\n\n    return result;\n  };\n\nSourceMapGenerator.prototype._generateSourcesContent =\n  function SourceMapGenerator_generateSourcesContent(aSources, aSourceRoot) {\n    return aSources.map(function (source) {\n      if (!this._sourcesContents) {\n        return null;\n      }\n      if (aSourceRoot != null) {\n        source = util.relative(aSourceRoot, source);\n      }\n      var key = util.toSetString(source);\n      return Object.prototype.hasOwnProperty.call(this._sourcesContents, key)\n        ? this._sourcesContents[key]\n        : null;\n    }, this);\n  };\n\n/**\n * Externalize the source map.\n */\nSourceMapGenerator.prototype.toJSON =\n  function SourceMapGenerator_toJSON() {\n    var map = {\n      version: this._version,\n      sources: this._sources.toArray(),\n      names: this._names.toArray(),\n      mappings: this._serializeMappings()\n    };\n    if (this._file != null) {\n      map.file = this._file;\n    }\n    if (this._sourceRoot != null) {\n      map.sourceRoot = this._sourceRoot;\n    }\n    if (this._sourcesContents) {\n      map.sourcesContent = this._generateSourcesContent(map.sources, map.sourceRoot);\n    }\n\n    return map;\n  };\n\n/**\n * Render the source map being generated to a string.\n */\nSourceMapGenerator.prototype.toString =\n  function SourceMapGenerator_toString() {\n    return JSON.stringify(this.toJSON());\n  };\n\nexports.SourceMapGenerator = SourceMapGenerator;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}