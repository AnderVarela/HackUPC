{"ast":null,"code":"var streamify = require('./streamify.js'),\n  defer = require('./defer.js');\n\n// API\nmodule.exports = ReadableAsyncKit;\n\n/**\n * Base constructor for all streams\n * used to hold properties/methods\n */\nfunction ReadableAsyncKit() {\n  ReadableAsyncKit.super_.apply(this, arguments);\n\n  // list of active jobs\n  this.jobs = {};\n\n  // add stream methods\n  this.destroy = destroy;\n  this._start = _start;\n  this._read = _read;\n}\n\n/**\n * Destroys readable stream,\n * by aborting outstanding jobs\n *\n * @returns {void}\n */\nfunction destroy() {\n  if (this.destroyed) {\n    return;\n  }\n  this.destroyed = true;\n  if (typeof this.terminator == 'function') {\n    this.terminator();\n  }\n}\n\n/**\n * Starts provided jobs in async manner\n *\n * @private\n */\nfunction _start() {\n  // first argument – runner function\n  var runner = arguments[0]\n    // take away first argument\n    ,\n    args = Array.prototype.slice.call(arguments, 1)\n    // second argument - input data\n    ,\n    input = args[0]\n    // last argument - result callback\n    ,\n    endCb = streamify.callback.call(this, args[args.length - 1]);\n  args[args.length - 1] = endCb;\n  // third argument - iterator\n  args[1] = streamify.iterator.call(this, args[1]);\n\n  // allow time for proper setup\n  defer(function () {\n    if (!this.destroyed) {\n      this.terminator = runner.apply(null, args);\n    } else {\n      endCb(null, Array.isArray(input) ? [] : {});\n    }\n  }.bind(this));\n}\n\n/**\n * Implement _read to comply with Readable streams\n * Doesn't really make sense for flowing object mode\n *\n * @private\n */\nfunction _read() {}","map":{"version":3,"names":["streamify","require","defer","module","exports","ReadableAsyncKit","super_","apply","arguments","jobs","destroy","_start","_read","destroyed","terminator","runner","args","Array","prototype","slice","call","input","endCb","callback","length","iterator","isArray","bind"],"sources":["C:/Users/chest/OneDrive/Documentos/GitHub/HackUPC/frontend/node_modules/asynckit/lib/readable_asynckit.js"],"sourcesContent":["var streamify = require('./streamify.js')\n  , defer     = require('./defer.js')\n  ;\n\n// API\nmodule.exports = ReadableAsyncKit;\n\n/**\n * Base constructor for all streams\n * used to hold properties/methods\n */\nfunction ReadableAsyncKit()\n{\n  ReadableAsyncKit.super_.apply(this, arguments);\n\n  // list of active jobs\n  this.jobs = {};\n\n  // add stream methods\n  this.destroy = destroy;\n  this._start  = _start;\n  this._read   = _read;\n}\n\n/**\n * Destroys readable stream,\n * by aborting outstanding jobs\n *\n * @returns {void}\n */\nfunction destroy()\n{\n  if (this.destroyed)\n  {\n    return;\n  }\n\n  this.destroyed = true;\n\n  if (typeof this.terminator == 'function')\n  {\n    this.terminator();\n  }\n}\n\n/**\n * Starts provided jobs in async manner\n *\n * @private\n */\nfunction _start()\n{\n  // first argument – runner function\n  var runner = arguments[0]\n    // take away first argument\n    , args   = Array.prototype.slice.call(arguments, 1)\n      // second argument - input data\n    , input  = args[0]\n      // last argument - result callback\n    , endCb  = streamify.callback.call(this, args[args.length - 1])\n    ;\n\n  args[args.length - 1] = endCb;\n  // third argument - iterator\n  args[1] = streamify.iterator.call(this, args[1]);\n\n  // allow time for proper setup\n  defer(function()\n  {\n    if (!this.destroyed)\n    {\n      this.terminator = runner.apply(null, args);\n    }\n    else\n    {\n      endCb(null, Array.isArray(input) ? [] : {});\n    }\n  }.bind(this));\n}\n\n\n/**\n * Implement _read to comply with Readable streams\n * Doesn't really make sense for flowing object mode\n *\n * @private\n */\nfunction _read()\n{\n\n}\n"],"mappings":"AAAA,IAAIA,SAAS,GAAGC,OAAO,CAAC,gBAAgB,CAAC;EACrCC,KAAK,GAAOD,OAAO,CAAC,YAAY,CAAC;;AAGrC;AACAE,MAAM,CAACC,OAAO,GAAGC,gBAAgB;;AAEjC;AACA;AACA;AACA;AACA,SAASA,gBAAgBA,CAAA,EACzB;EACEA,gBAAgB,CAACC,MAAM,CAACC,KAAK,CAAC,IAAI,EAAEC,SAAS,CAAC;;EAE9C;EACA,IAAI,CAACC,IAAI,GAAG,CAAC,CAAC;;EAEd;EACA,IAAI,CAACC,OAAO,GAAGA,OAAO;EACtB,IAAI,CAACC,MAAM,GAAIA,MAAM;EACrB,IAAI,CAACC,KAAK,GAAKA,KAAK;AACtB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAASF,OAAOA,CAAA,EAChB;EACE,IAAI,IAAI,CAACG,SAAS,EAClB;IACE;EACF;EAEA,IAAI,CAACA,SAAS,GAAG,IAAI;EAErB,IAAI,OAAO,IAAI,CAACC,UAAU,IAAI,UAAU,EACxC;IACE,IAAI,CAACA,UAAU,CAAC,CAAC;EACnB;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA,SAASH,MAAMA,CAAA,EACf;EACE;EACA,IAAII,MAAM,GAAGP,SAAS,CAAC,CAAC;IACtB;IAAA;IACEQ,IAAI,GAAKC,KAAK,CAACC,SAAS,CAACC,KAAK,CAACC,IAAI,CAACZ,SAAS,EAAE,CAAC;IAChD;IAAA;IACAa,KAAK,GAAIL,IAAI,CAAC,CAAC;IACf;IAAA;IACAM,KAAK,GAAItB,SAAS,CAACuB,QAAQ,CAACH,IAAI,CAAC,IAAI,EAAEJ,IAAI,CAACA,IAAI,CAACQ,MAAM,GAAG,CAAC,CAAC,CAAC;EAGjER,IAAI,CAACA,IAAI,CAACQ,MAAM,GAAG,CAAC,CAAC,GAAGF,KAAK;EAC7B;EACAN,IAAI,CAAC,CAAC,CAAC,GAAGhB,SAAS,CAACyB,QAAQ,CAACL,IAAI,CAAC,IAAI,EAAEJ,IAAI,CAAC,CAAC,CAAC,CAAC;;EAEhD;EACAd,KAAK,CAAC,YACN;IACE,IAAI,CAAC,IAAI,CAACW,SAAS,EACnB;MACE,IAAI,CAACC,UAAU,GAAGC,MAAM,CAACR,KAAK,CAAC,IAAI,EAAES,IAAI,CAAC;IAC5C,CAAC,MAED;MACEM,KAAK,CAAC,IAAI,EAAEL,KAAK,CAACS,OAAO,CAACL,KAAK,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;IAC7C;EACF,CAAC,CAACM,IAAI,CAAC,IAAI,CAAC,CAAC;AACf;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,SAASf,KAAKA,CAAA,EACd,CAEA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}