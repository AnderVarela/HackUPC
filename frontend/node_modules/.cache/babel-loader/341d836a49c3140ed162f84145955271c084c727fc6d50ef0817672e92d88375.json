{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst utils_1 = require(\"@typescript-eslint/utils\");\nconst util_1 = require(\"../util\");\nexports.default = (0, util_1.createRule)({\n  name: 'default-param-last',\n  meta: {\n    type: 'suggestion',\n    docs: {\n      description: 'Enforce default parameters to be last',\n      recommended: false,\n      extendsBaseRule: true\n    },\n    schema: [],\n    messages: {\n      shouldBeLast: 'Default parameters should be last.'\n    }\n  },\n  defaultOptions: [],\n  create(context) {\n    /**\n     * checks if node is optional parameter\n     * @param node the node to be evaluated\n     * @private\n     */\n    function isOptionalParam(node) {\n      return 'optional' in node && node.optional === true;\n    }\n    /**\n     * checks if node is plain parameter\n     * @param node the node to be evaluated\n     * @private\n     */\n    function isPlainParam(node) {\n      return !(node.type === utils_1.AST_NODE_TYPES.AssignmentPattern || node.type === utils_1.AST_NODE_TYPES.RestElement || isOptionalParam(node));\n    }\n    function checkDefaultParamLast(node) {\n      let hasSeenPlainParam = false;\n      for (let i = node.params.length - 1; i >= 0; i--) {\n        const current = node.params[i];\n        const param = current.type === utils_1.AST_NODE_TYPES.TSParameterProperty ? current.parameter : current;\n        if (isPlainParam(param)) {\n          hasSeenPlainParam = true;\n          continue;\n        }\n        if (hasSeenPlainParam && (isOptionalParam(param) || param.type === utils_1.AST_NODE_TYPES.AssignmentPattern)) {\n          context.report({\n            node: current,\n            messageId: 'shouldBeLast'\n          });\n        }\n      }\n    }\n    return {\n      ArrowFunctionExpression: checkDefaultParamLast,\n      FunctionDeclaration: checkDefaultParamLast,\n      FunctionExpression: checkDefaultParamLast\n    };\n  }\n});","map":{"version":3,"names":["utils_1","require","util_1","exports","default","createRule","name","meta","type","docs","description","recommended","extendsBaseRule","schema","messages","shouldBeLast","defaultOptions","create","context","isOptionalParam","node","optional","isPlainParam","AST_NODE_TYPES","AssignmentPattern","RestElement","checkDefaultParamLast","hasSeenPlainParam","i","params","length","current","param","TSParameterProperty","parameter","report","messageId","ArrowFunctionExpression","FunctionDeclaration","FunctionExpression"],"sources":["../../src/rules/default-param-last.ts"],"sourcesContent":[null],"mappings":";;;;;AACA,MAAAA,OAAA,GAAAC,OAAA;AAEA,MAAAC,MAAA,GAAAD,OAAA;AAEAE,OAAA,CAAAC,OAAA,GAAe,IAAAF,MAAA,CAAAG,UAAU,EAAC;EACxBC,IAAI,EAAE,oBAAoB;EAC1BC,IAAI,EAAE;IACJC,IAAI,EAAE,YAAY;IAClBC,IAAI,EAAE;MACJC,WAAW,EAAE,uCAAuC;MACpDC,WAAW,EAAE,KAAK;MAClBC,eAAe,EAAE;KAClB;IACDC,MAAM,EAAE,EAAE;IACVC,QAAQ,EAAE;MACRC,YAAY,EAAE;;GAEjB;EACDC,cAAc,EAAE,EAAE;EAClBC,MAAMA,CAACC,OAAO;IACZ;;;;;IAKA,SAASC,eAAeA,CAACC,IAAwB;MAC/C,OAAO,UAAU,IAAIA,IAAI,IAAIA,IAAI,CAACC,QAAQ,KAAK,IAAI;IACrD;IAEA;;;;;IAKA,SAASC,YAAYA,CAACF,IAAwB;MAC5C,OAAO,EACLA,IAAI,CAACZ,IAAI,KAAKR,OAAA,CAAAuB,cAAc,CAACC,iBAAiB,IAC9CJ,IAAI,CAACZ,IAAI,KAAKR,OAAA,CAAAuB,cAAc,CAACE,WAAW,IACxCN,eAAe,CAACC,IAAI,CAAC,CACtB;IACH;IAEA,SAASM,qBAAqBA,CAC5BN,IAG+B;MAE/B,IAAIO,iBAAiB,GAAG,KAAK;MAC7B,KAAK,IAAIC,CAAC,GAAGR,IAAI,CAACS,MAAM,CAACC,MAAM,GAAG,CAAC,EAAEF,CAAC,IAAI,CAAC,EAAEA,CAAC,EAAE,EAAE;QAChD,MAAMG,OAAO,GAAGX,IAAI,CAACS,MAAM,CAACD,CAAC,CAAC;QAC9B,MAAMI,KAAK,GACTD,OAAO,CAACvB,IAAI,KAAKR,OAAA,CAAAuB,cAAc,CAACU,mBAAmB,GAC/CF,OAAO,CAACG,SAAS,GACjBH,OAAO;QAEb,IAAIT,YAAY,CAACU,KAAK,CAAC,EAAE;UACvBL,iBAAiB,GAAG,IAAI;UACxB;;QAGF,IACEA,iBAAiB,KAChBR,eAAe,CAACa,KAAK,CAAC,IACrBA,KAAK,CAACxB,IAAI,KAAKR,OAAA,CAAAuB,cAAc,CAACC,iBAAiB,CAAC,EAClD;UACAN,OAAO,CAACiB,MAAM,CAAC;YAAEf,IAAI,EAAEW,OAAO;YAAEK,SAAS,EAAE;UAAc,CAAE,CAAC;;;IAGlE;IAEA,OAAO;MACLC,uBAAuB,EAAEX,qBAAqB;MAC9CY,mBAAmB,EAAEZ,qBAAqB;MAC1Ca,kBAAkB,EAAEb;KACrB;EACH;CACD,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}