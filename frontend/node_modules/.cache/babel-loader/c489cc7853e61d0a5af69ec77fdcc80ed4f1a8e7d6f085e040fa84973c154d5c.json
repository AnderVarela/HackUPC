{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\nexports.getExport = exports.getImport = exports.getInterface = exports.getProps = void 0;\nfunction typeAnnotation(typeAnnotation) {\n  return {\n    type: 'TypeAnnotation',\n    typeAnnotation\n  };\n}\nfunction genericTypeAnnotation(id, typeParameters = null) {\n  return {\n    type: 'GenericTypeAnnotation',\n    id,\n    typeParameters\n  };\n}\nfunction typeParameters(params) {\n  return {\n    type: 'TypeParameterInstantiation',\n    params\n  };\n}\nfunction qualifiedTypeIdentifier(qualification, id) {\n  return {\n    type: 'QualifiedTypeIdentifier',\n    qualification,\n    id\n  };\n}\nfunction intersectionTypeAnnotation(types) {\n  return {\n    type: 'IntersectionTypeAnnotation',\n    types\n  };\n}\nfunction interfaceDeclaration(id, body) {\n  return {\n    type: 'InterfaceDeclaration',\n    id,\n    typeParameters: null,\n    extends: [],\n    implements: [],\n    mixins: [],\n    body\n  };\n}\nfunction objectTypeAnnotation(properties) {\n  return {\n    type: 'ObjectTypeAnnotation',\n    properties\n  };\n}\nfunction objectTypeProperty(key, value, optional = false) {\n  return {\n    type: 'ObjectTypeProperty',\n    key,\n    static: false,\n    proto: false,\n    kind: 'init',\n    method: false,\n    value,\n    variance: null,\n    optional\n  };\n}\nfunction addTypeAnotation(obj, typeAnnotation, opts) {\n  if (!opts.typescript) return obj;\n  return {\n    ...obj,\n    typeAnnotation\n  };\n}\nfunction getSvgPropsTypeAnnotation(t, opts) {\n  if (opts.native) {\n    return t.genericTypeAnnotation(t.identifier('SvgProps'));\n  }\n  return genericTypeAnnotation(qualifiedTypeIdentifier(t.identifier('React'), t.identifier('SVGProps')), typeParameters([genericTypeAnnotation(t.identifier('SVGSVGElement'))]));\n}\nconst getProps = ({\n  types: t\n}, opts) => {\n  const props = [];\n  if (opts.titleProp) {\n    props.push(t.objectProperty(t.identifier('title'), t.identifier('title'), false, true));\n    props.push(t.objectProperty(t.identifier('titleId'), t.identifier('titleId'), false, true));\n  }\n  if (opts.expandProps && props.length > 0) {\n    props.push(t.restElement(t.identifier('props')));\n  }\n  const propsArgument = props.length > 0 ? t.objectPattern(props) : t.identifier('props');\n  let propsTypeAnnotation;\n  if (props.length > 0) {\n    propsTypeAnnotation = genericTypeAnnotation(t.identifier('SVGRProps'));\n    if (opts.expandProps) {\n      propsTypeAnnotation = intersectionTypeAnnotation([getSvgPropsTypeAnnotation(t, opts), propsTypeAnnotation]);\n    }\n  } else {\n    propsTypeAnnotation = opts.expandProps ? getSvgPropsTypeAnnotation(t, opts) : t.objectPattern([]);\n  }\n  const typedPropsArgument = addTypeAnotation(propsArgument, typeAnnotation(propsTypeAnnotation), opts);\n  const args = [];\n  if (opts.expandProps || props.length > 0 || opts.ref) args.push(typedPropsArgument);\n  if (opts.ref) {\n    const refArgument = t.identifier(opts.typescript ? 'svgRef?' : 'svgRef');\n    const typedRefArgument = addTypeAnotation(refArgument, typeAnnotation(genericTypeAnnotation(qualifiedTypeIdentifier(t.identifier('React'), t.identifier('Ref')), typeParameters([opts.native ? genericTypeAnnotation(qualifiedTypeIdentifier(t.identifier('React'), t.identifier('Component')), typeParameters([genericTypeAnnotation(t.identifier('SvgProps'))])) : genericTypeAnnotation(t.identifier('SVGSVGElement'))]))), opts);\n    args.push(typedRefArgument);\n  }\n  return args;\n};\nexports.getProps = getProps;\nconst getInterface = ({\n  types: t\n}, opts) => {\n  if (!opts.typescript) return null;\n  const properties = [];\n  if (opts.titleProp) {\n    properties.push(objectTypeProperty(t.identifier('title'), t.identifier('string'), true));\n    properties.push(objectTypeProperty(t.identifier('titleId'), t.identifier('string'), true));\n  }\n  if (properties.length === 0) return null;\n  return interfaceDeclaration(t.identifier('SVGRProps'), objectTypeAnnotation(properties));\n};\nexports.getInterface = getInterface;\nconst getImport = ({\n  types: t\n}, opts) => {\n  const importDeclarations = [t.importDeclaration([t.importNamespaceSpecifier(t.identifier('React'))], t.stringLiteral('react'))];\n  if (opts.native) {\n    if (opts.native.expo) {\n      importDeclarations.push(t.importDeclaration([], t.stringLiteral('expo')));\n    } else {\n      const imports = [t.importDefaultSpecifier(t.identifier('Svg'))];\n      if (opts.typescript && opts.expandProps) {\n        imports.push(t.importSpecifier(t.identifier('SvgProps'), t.identifier('SvgProps')));\n      }\n      importDeclarations.push(t.importDeclaration(imports, t.stringLiteral('react-native-svg')));\n    }\n  }\n  return importDeclarations;\n};\nexports.getImport = getImport;\nconst getExport = ({\n  template\n}, opts) => {\n  let result = '';\n  let exportName = opts.state.componentName;\n  const plugins = ['jsx'];\n  if (opts.typescript) {\n    plugins.push('typescript');\n  }\n  if (opts.ref) {\n    const nextExportName = `ForwardRef`;\n    result += `const ${nextExportName} = React.forwardRef(${exportName})\\n\\n`;\n    exportName = nextExportName;\n  }\n  if (opts.memo) {\n    const nextExportName = `Memo${exportName}`;\n    result += `const ${nextExportName} = React.memo(${exportName})\\n\\n`;\n    exportName = nextExportName;\n  }\n  if (opts.state.caller && opts.state.caller.previousExport) {\n    result += `${opts.state.caller.previousExport}\\n`;\n    result += `export { ${exportName} as ${opts.namedExport} }`;\n    return template.ast(result, {\n      plugins\n    });\n  }\n  result += `export default ${exportName}`;\n  return template.ast(result, {\n    plugins\n  });\n};\nexports.getExport = getExport;","map":{"version":3,"names":["exports","__esModule","getExport","getImport","getInterface","getProps","typeAnnotation","type","genericTypeAnnotation","id","typeParameters","params","qualifiedTypeIdentifier","qualification","intersectionTypeAnnotation","types","interfaceDeclaration","body","extends","implements","mixins","objectTypeAnnotation","properties","objectTypeProperty","key","value","optional","static","proto","kind","method","variance","addTypeAnotation","obj","opts","typescript","getSvgPropsTypeAnnotation","t","native","identifier","props","titleProp","push","objectProperty","expandProps","length","restElement","propsArgument","objectPattern","propsTypeAnnotation","typedPropsArgument","args","ref","refArgument","typedRefArgument","importDeclarations","importDeclaration","importNamespaceSpecifier","stringLiteral","expo","imports","importDefaultSpecifier","importSpecifier","template","result","exportName","state","componentName","plugins","nextExportName","memo","caller","previousExport","namedExport","ast"],"sources":["C:/Users/chest/OneDrive/Documentos/GitHub/HackUPC/frontend/node_modules/@svgr/babel-plugin-transform-svg-component/lib/util.js"],"sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports.getExport = exports.getImport = exports.getInterface = exports.getProps = void 0;\n\nfunction typeAnnotation(typeAnnotation) {\n  return {\n    type: 'TypeAnnotation',\n    typeAnnotation\n  };\n}\n\nfunction genericTypeAnnotation(id, typeParameters = null) {\n  return {\n    type: 'GenericTypeAnnotation',\n    id,\n    typeParameters\n  };\n}\n\nfunction typeParameters(params) {\n  return {\n    type: 'TypeParameterInstantiation',\n    params\n  };\n}\n\nfunction qualifiedTypeIdentifier(qualification, id) {\n  return {\n    type: 'QualifiedTypeIdentifier',\n    qualification,\n    id\n  };\n}\n\nfunction intersectionTypeAnnotation(types) {\n  return {\n    type: 'IntersectionTypeAnnotation',\n    types\n  };\n}\n\nfunction interfaceDeclaration(id, body) {\n  return {\n    type: 'InterfaceDeclaration',\n    id,\n    typeParameters: null,\n    extends: [],\n    implements: [],\n    mixins: [],\n    body\n  };\n}\n\nfunction objectTypeAnnotation(properties) {\n  return {\n    type: 'ObjectTypeAnnotation',\n    properties\n  };\n}\n\nfunction objectTypeProperty(key, value, optional = false) {\n  return {\n    type: 'ObjectTypeProperty',\n    key,\n    static: false,\n    proto: false,\n    kind: 'init',\n    method: false,\n    value,\n    variance: null,\n    optional\n  };\n}\n\nfunction addTypeAnotation(obj, typeAnnotation, opts) {\n  if (!opts.typescript) return obj;\n  return { ...obj,\n    typeAnnotation\n  };\n}\n\nfunction getSvgPropsTypeAnnotation(t, opts) {\n  if (opts.native) {\n    return t.genericTypeAnnotation(t.identifier('SvgProps'));\n  }\n\n  return genericTypeAnnotation(qualifiedTypeIdentifier(t.identifier('React'), t.identifier('SVGProps')), typeParameters([genericTypeAnnotation(t.identifier('SVGSVGElement'))]));\n}\n\nconst getProps = ({\n  types: t\n}, opts) => {\n  const props = [];\n\n  if (opts.titleProp) {\n    props.push(t.objectProperty(t.identifier('title'), t.identifier('title'), false, true));\n    props.push(t.objectProperty(t.identifier('titleId'), t.identifier('titleId'), false, true));\n  }\n\n  if (opts.expandProps && props.length > 0) {\n    props.push(t.restElement(t.identifier('props')));\n  }\n\n  const propsArgument = props.length > 0 ? t.objectPattern(props) : t.identifier('props');\n  let propsTypeAnnotation;\n\n  if (props.length > 0) {\n    propsTypeAnnotation = genericTypeAnnotation(t.identifier('SVGRProps'));\n\n    if (opts.expandProps) {\n      propsTypeAnnotation = intersectionTypeAnnotation([getSvgPropsTypeAnnotation(t, opts), propsTypeAnnotation]);\n    }\n  } else {\n    propsTypeAnnotation = opts.expandProps ? getSvgPropsTypeAnnotation(t, opts) : t.objectPattern([]);\n  }\n\n  const typedPropsArgument = addTypeAnotation(propsArgument, typeAnnotation(propsTypeAnnotation), opts);\n  const args = [];\n  if (opts.expandProps || props.length > 0 || opts.ref) args.push(typedPropsArgument);\n\n  if (opts.ref) {\n    const refArgument = t.identifier(opts.typescript ? 'svgRef?' : 'svgRef');\n    const typedRefArgument = addTypeAnotation(refArgument, typeAnnotation(genericTypeAnnotation(qualifiedTypeIdentifier(t.identifier('React'), t.identifier('Ref')), typeParameters([opts.native ? genericTypeAnnotation(qualifiedTypeIdentifier(t.identifier('React'), t.identifier('Component')), typeParameters([genericTypeAnnotation(t.identifier('SvgProps'))])) : genericTypeAnnotation(t.identifier('SVGSVGElement'))]))), opts);\n    args.push(typedRefArgument);\n  }\n\n  return args;\n};\n\nexports.getProps = getProps;\n\nconst getInterface = ({\n  types: t\n}, opts) => {\n  if (!opts.typescript) return null;\n  const properties = [];\n\n  if (opts.titleProp) {\n    properties.push(objectTypeProperty(t.identifier('title'), t.identifier('string'), true));\n    properties.push(objectTypeProperty(t.identifier('titleId'), t.identifier('string'), true));\n  }\n\n  if (properties.length === 0) return null;\n  return interfaceDeclaration(t.identifier('SVGRProps'), objectTypeAnnotation(properties));\n};\n\nexports.getInterface = getInterface;\n\nconst getImport = ({\n  types: t\n}, opts) => {\n  const importDeclarations = [t.importDeclaration([t.importNamespaceSpecifier(t.identifier('React'))], t.stringLiteral('react'))];\n\n  if (opts.native) {\n    if (opts.native.expo) {\n      importDeclarations.push(t.importDeclaration([], t.stringLiteral('expo')));\n    } else {\n      const imports = [t.importDefaultSpecifier(t.identifier('Svg'))];\n\n      if (opts.typescript && opts.expandProps) {\n        imports.push(t.importSpecifier(t.identifier('SvgProps'), t.identifier('SvgProps')));\n      }\n\n      importDeclarations.push(t.importDeclaration(imports, t.stringLiteral('react-native-svg')));\n    }\n  }\n\n  return importDeclarations;\n};\n\nexports.getImport = getImport;\n\nconst getExport = ({\n  template\n}, opts) => {\n  let result = '';\n  let exportName = opts.state.componentName;\n  const plugins = ['jsx'];\n\n  if (opts.typescript) {\n    plugins.push('typescript');\n  }\n\n  if (opts.ref) {\n    const nextExportName = `ForwardRef`;\n    result += `const ${nextExportName} = React.forwardRef(${exportName})\\n\\n`;\n    exportName = nextExportName;\n  }\n\n  if (opts.memo) {\n    const nextExportName = `Memo${exportName}`;\n    result += `const ${nextExportName} = React.memo(${exportName})\\n\\n`;\n    exportName = nextExportName;\n  }\n\n  if (opts.state.caller && opts.state.caller.previousExport) {\n    result += `${opts.state.caller.previousExport}\\n`;\n    result += `export { ${exportName} as ${opts.namedExport} }`;\n    return template.ast(result, {\n      plugins\n    });\n  }\n\n  result += `export default ${exportName}`;\n  return template.ast(result, {\n    plugins\n  });\n};\n\nexports.getExport = getExport;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}