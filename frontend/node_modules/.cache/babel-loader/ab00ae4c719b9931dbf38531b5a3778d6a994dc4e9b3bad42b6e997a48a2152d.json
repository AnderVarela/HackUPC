{"ast":null,"code":"var iterate = require('./lib/iterate.js'),\n  initState = require('./lib/state.js'),\n  terminator = require('./lib/terminator.js');\n\n// Public API\nmodule.exports = serialOrdered;\n// sorting helpers\nmodule.exports.ascending = ascending;\nmodule.exports.descending = descending;\n\n/**\n * Runs iterator over provided sorted array elements in series\n *\n * @param   {array|object} list - array or object (named list) to iterate over\n * @param   {function} iterator - iterator to run\n * @param   {function} sortMethod - custom sort function\n * @param   {function} callback - invoked when all elements processed\n * @returns {function} - jobs terminator\n */\nfunction serialOrdered(list, iterator, sortMethod, callback) {\n  var state = initState(list, sortMethod);\n  iterate(list, iterator, state, function iteratorHandler(error, result) {\n    if (error) {\n      callback(error, result);\n      return;\n    }\n    state.index++;\n\n    // are we there yet?\n    if (state.index < (state['keyedList'] || list).length) {\n      iterate(list, iterator, state, iteratorHandler);\n      return;\n    }\n\n    // done here\n    callback(null, state.results);\n  });\n  return terminator.bind(state, callback);\n}\n\n/*\n * -- Sort methods\n */\n\n/**\n * sort helper to sort array elements in ascending order\n *\n * @param   {mixed} a - an item to compare\n * @param   {mixed} b - an item to compare\n * @returns {number} - comparison result\n */\nfunction ascending(a, b) {\n  return a < b ? -1 : a > b ? 1 : 0;\n}\n\n/**\n * sort helper to sort array elements in descending order\n *\n * @param   {mixed} a - an item to compare\n * @param   {mixed} b - an item to compare\n * @returns {number} - comparison result\n */\nfunction descending(a, b) {\n  return -1 * ascending(a, b);\n}","map":{"version":3,"names":["iterate","require","initState","terminator","module","exports","serialOrdered","ascending","descending","list","iterator","sortMethod","callback","state","iteratorHandler","error","result","index","length","results","bind","a","b"],"sources":["C:/Users/chest/OneDrive/Documentos/GitHub/HackUPC/frontend/node_modules/asynckit/serialOrdered.js"],"sourcesContent":["var iterate    = require('./lib/iterate.js')\n  , initState  = require('./lib/state.js')\n  , terminator = require('./lib/terminator.js')\n  ;\n\n// Public API\nmodule.exports = serialOrdered;\n// sorting helpers\nmodule.exports.ascending  = ascending;\nmodule.exports.descending = descending;\n\n/**\n * Runs iterator over provided sorted array elements in series\n *\n * @param   {array|object} list - array or object (named list) to iterate over\n * @param   {function} iterator - iterator to run\n * @param   {function} sortMethod - custom sort function\n * @param   {function} callback - invoked when all elements processed\n * @returns {function} - jobs terminator\n */\nfunction serialOrdered(list, iterator, sortMethod, callback)\n{\n  var state = initState(list, sortMethod);\n\n  iterate(list, iterator, state, function iteratorHandler(error, result)\n  {\n    if (error)\n    {\n      callback(error, result);\n      return;\n    }\n\n    state.index++;\n\n    // are we there yet?\n    if (state.index < (state['keyedList'] || list).length)\n    {\n      iterate(list, iterator, state, iteratorHandler);\n      return;\n    }\n\n    // done here\n    callback(null, state.results);\n  });\n\n  return terminator.bind(state, callback);\n}\n\n/*\n * -- Sort methods\n */\n\n/**\n * sort helper to sort array elements in ascending order\n *\n * @param   {mixed} a - an item to compare\n * @param   {mixed} b - an item to compare\n * @returns {number} - comparison result\n */\nfunction ascending(a, b)\n{\n  return a < b ? -1 : a > b ? 1 : 0;\n}\n\n/**\n * sort helper to sort array elements in descending order\n *\n * @param   {mixed} a - an item to compare\n * @param   {mixed} b - an item to compare\n * @returns {number} - comparison result\n */\nfunction descending(a, b)\n{\n  return -1 * ascending(a, b);\n}\n"],"mappings":"AAAA,IAAIA,OAAO,GAAMC,OAAO,CAAC,kBAAkB,CAAC;EACxCC,SAAS,GAAID,OAAO,CAAC,gBAAgB,CAAC;EACtCE,UAAU,GAAGF,OAAO,CAAC,qBAAqB,CAAC;;AAG/C;AACAG,MAAM,CAACC,OAAO,GAAGC,aAAa;AAC9B;AACAF,MAAM,CAACC,OAAO,CAACE,SAAS,GAAIA,SAAS;AACrCH,MAAM,CAACC,OAAO,CAACG,UAAU,GAAGA,UAAU;;AAEtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASF,aAAaA,CAACG,IAAI,EAAEC,QAAQ,EAAEC,UAAU,EAAEC,QAAQ,EAC3D;EACE,IAAIC,KAAK,GAAGX,SAAS,CAACO,IAAI,EAAEE,UAAU,CAAC;EAEvCX,OAAO,CAACS,IAAI,EAAEC,QAAQ,EAAEG,KAAK,EAAE,SAASC,eAAeA,CAACC,KAAK,EAAEC,MAAM,EACrE;IACE,IAAID,KAAK,EACT;MACEH,QAAQ,CAACG,KAAK,EAAEC,MAAM,CAAC;MACvB;IACF;IAEAH,KAAK,CAACI,KAAK,EAAE;;IAEb;IACA,IAAIJ,KAAK,CAACI,KAAK,GAAG,CAACJ,KAAK,CAAC,WAAW,CAAC,IAAIJ,IAAI,EAAES,MAAM,EACrD;MACElB,OAAO,CAACS,IAAI,EAAEC,QAAQ,EAAEG,KAAK,EAAEC,eAAe,CAAC;MAC/C;IACF;;IAEA;IACAF,QAAQ,CAAC,IAAI,EAAEC,KAAK,CAACM,OAAO,CAAC;EAC/B,CAAC,CAAC;EAEF,OAAOhB,UAAU,CAACiB,IAAI,CAACP,KAAK,EAAED,QAAQ,CAAC;AACzC;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASL,SAASA,CAACc,CAAC,EAAEC,CAAC,EACvB;EACE,OAAOD,CAAC,GAAGC,CAAC,GAAG,CAAC,CAAC,GAAGD,CAAC,GAAGC,CAAC,GAAG,CAAC,GAAG,CAAC;AACnC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASd,UAAUA,CAACa,CAAC,EAAEC,CAAC,EACxB;EACE,OAAO,CAAC,CAAC,GAAGf,SAAS,CAACc,CAAC,EAAEC,CAAC,CAAC;AAC7B","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}