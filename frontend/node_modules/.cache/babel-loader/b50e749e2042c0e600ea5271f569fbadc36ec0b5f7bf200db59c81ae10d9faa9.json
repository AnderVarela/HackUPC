{"ast":null,"code":"\"use strict\";\n\nconst os = require(\"os\");\nconst {\n  SourceMapConsumer\n} = require(\"source-map\");\nconst {\n  validate\n} = require(\"schema-utils\");\nconst serialize = require(\"serialize-javascript\");\nconst {\n  Worker\n} = require(\"jest-worker\");\nconst {\n  throttleAll,\n  cssnanoMinify,\n  cssoMinify,\n  cleanCssMinify,\n  esbuildMinify,\n  parcelCssMinify\n} = require(\"./utils\");\nconst schema = require(\"./options.json\");\nconst {\n  minify\n} = require(\"./minify\");\n/** @typedef {import(\"schema-utils/declarations/validate\").Schema} Schema */\n\n/** @typedef {import(\"webpack\").Compiler} Compiler */\n\n/** @typedef {import(\"webpack\").Compilation} Compilation */\n\n/** @typedef {import(\"webpack\").WebpackError} WebpackError */\n\n/** @typedef {import(\"jest-worker\").Worker} JestWorker */\n\n/** @typedef {import(\"source-map\").RawSourceMap} RawSourceMap */\n\n/** @typedef {import(\"webpack\").Asset} Asset */\n\n/** @typedef {import(\"postcss\").ProcessOptions} ProcessOptions */\n\n/** @typedef {import(\"postcss\").Syntax} Syntax */\n\n/** @typedef {import(\"postcss\").Parser} Parser */\n\n/** @typedef {import(\"postcss\").Stringifier} Stringifier */\n\n/**\n * @typedef {Object} CssNanoOptions\n * @property {string} [configFile]\n * @property {[string, object] | string | undefined} [preset]\n */\n\n/** @typedef {Error & { plugin?: string, text?: string, source?: string } | string} Warning */\n\n/**\n * @typedef {Object} WarningObject\n * @property {string} message\n * @property {string} [plugin]\n * @property {string} [text]\n * @property {number} [line]\n * @property {number} [column]\n */\n\n/**\n * @typedef {Object} ErrorObject\n * @property {string} message\n * @property {number} [line]\n * @property {number} [column]\n * @property {string} [stack]\n */\n\n/**\n * @typedef {Object} MinimizedResult\n * @property {string} code\n * @property {RawSourceMap} [map]\n * @property {Array<Error | ErrorObject| string>} [errors]\n * @property {Array<Warning | WarningObject | string>} [warnings]\n */\n\n/**\n * @typedef {{ [file: string]: string }} Input\n */\n\n/**\n * @typedef {{ [key: string]: any }} CustomOptions\n */\n\n/**\n * @template T\n * @typedef {T extends infer U ? U : CustomOptions} InferDefaultType\n */\n\n/**\n * @template T\n * @callback BasicMinimizerImplementation\n * @param {Input} input\n * @param {RawSourceMap | undefined} sourceMap\n * @param {InferDefaultType<T>} minifyOptions\n * @returns {Promise<MinimizedResult>}\n */\n\n/**\n * @template T\n * @typedef {T extends any[] ? { [P in keyof T]: BasicMinimizerImplementation<T[P]>; } : BasicMinimizerImplementation<T>} MinimizerImplementation\n */\n\n/**\n * @template T\n * @typedef {T extends any[] ? { [P in keyof T]?: InferDefaultType<T[P]> } : InferDefaultType<T>} MinimizerOptions\n */\n\n/**\n * @template T\n * @typedef {Object} InternalOptions\n * @property {string} name\n * @property {string} input\n * @property {RawSourceMap | undefined} inputSourceMap\n * @property {{ implementation: MinimizerImplementation<T>, options: MinimizerOptions<T> }} minimizer\n */\n\n/**\n * @typedef InternalResult\n * @property {Array<{ code: string, map: RawSourceMap | undefined }>} outputs\n * @property {Array<Warning | WarningObject | string>} warnings\n * @property {Array<Error | ErrorObject | string>} errors\n */\n\n/** @typedef {undefined | boolean | number} Parallel */\n\n/** @typedef {RegExp | string} Rule */\n\n/** @typedef {Rule[] | Rule} Rules */\n\n/** @typedef {(warning: Warning | WarningObject | string, file: string, source?: string) => boolean} WarningsFilter */\n\n/**\n * @typedef {Object} BasePluginOptions\n * @property {Rules} [test]\n * @property {Rules} [include]\n * @property {Rules} [exclude]\n * @property {WarningsFilter} [warningsFilter]\n * @property {Parallel} [parallel]\n */\n\n/**\n * @template T\n * @typedef {JestWorker & { transform: (options: string) => InternalResult, minify: (options: InternalOptions<T>) => InternalResult }} MinimizerWorker\n */\n\n/**\n * @typedef{ProcessOptions | { from?: string,  to?: string, parser?: string | Syntax | Parser, stringifier?: string | Syntax | Stringifier, syntax?: string | Syntax } } ProcessOptionsExtender\n */\n\n/**\n * @typedef {CssNanoOptions & { processorOptions?: ProcessOptionsExtender }} CssNanoOptionsExtended\n */\n\n/**\n * @template T\n * @typedef {T extends CssNanoOptionsExtended ? { minify?: MinimizerImplementation<T> | undefined, minimizerOptions?: MinimizerOptions<T> | undefined } : { minify: MinimizerImplementation<T>, minimizerOptions?: MinimizerOptions<T> | undefined }} DefinedDefaultMinimizerAndOptions\n */\n\n/**\n * @template T\n * @typedef {BasePluginOptions & { minimizer: { implementation: MinimizerImplementation<T>, options: MinimizerOptions<T> } }} InternalPluginOptions\n */\n\nconst warningRegex = /\\s.+:+([0-9]+):+([0-9]+)/;\n/**\n * @template [T=CssNanoOptionsExtended]\n */\n\nclass CssMinimizerPlugin {\n  /**\n   * @param {BasePluginOptions & DefinedDefaultMinimizerAndOptions<T>} [options]\n   */\n  constructor(options) {\n    validate( /** @type {Schema} */\n    schema, options || {}, {\n      name: \"Css Minimizer Plugin\",\n      baseDataPath: \"options\"\n    });\n    const {\n      minify = /** @type {BasicMinimizerImplementation<T>} */\n      cssnanoMinify,\n      minimizerOptions = /** @type {MinimizerOptions<T>} */\n      {},\n      test = /\\.css(\\?.*)?$/i,\n      warningsFilter = () => true,\n      parallel = true,\n      include,\n      exclude\n    } = options || {};\n    /**\n     * @private\n     * @type {InternalPluginOptions<T>}\n     */\n\n    this.options = {\n      test,\n      warningsFilter,\n      parallel,\n      include,\n      exclude,\n      minimizer: {\n        implementation: /** @type {MinimizerImplementation<T>} */\n        minify,\n        options: minimizerOptions\n      }\n    };\n  }\n  /**\n   * @private\n   * @param {any} input\n   * @returns {boolean}\n   */\n\n  static isSourceMap(input) {\n    // All required options for `new SourceMapConsumer(...options)`\n    // https://github.com/mozilla/source-map#new-sourcemapconsumerrawsourcemap\n    return Boolean(input && input.version && input.sources && Array.isArray(input.sources) && typeof input.mappings === \"string\");\n  }\n  /**\n   * @private\n   * @param {Warning | WarningObject | string} warning\n   * @param {string} file\n   * @param {WarningsFilter} [warningsFilter]\n   * @param {SourceMapConsumer} [sourceMap]\n   * @param {Compilation[\"requestShortener\"]} [requestShortener]\n   * @returns {Error & { hideStack?: boolean, file?: string } | undefined}\n   */\n\n  static buildWarning(warning, file, warningsFilter, sourceMap, requestShortener) {\n    let warningMessage = typeof warning === \"string\" ? warning : `${warning.plugin ? `[${warning.plugin}] ` : \"\"}${warning.text || warning.message}`;\n    let locationMessage = \"\";\n    let source;\n    if (sourceMap) {\n      let line;\n      let column;\n      if (typeof warning === \"string\") {\n        const match = warningRegex.exec(warning);\n        if (match) {\n          line = +match[1];\n          column = +match[2];\n        }\n      } else {\n        ({\n          line,\n          column\n        } = /** @type {WarningObject} */\n        warning);\n      }\n      if (line && column) {\n        const original = sourceMap.originalPositionFor({\n          line,\n          column\n        });\n        if (original && original.source && original.source !== file && requestShortener) {\n          ({\n            source\n          } = original);\n          warningMessage = `${warningMessage.replace(warningRegex, \"\")}`;\n          locationMessage = `${requestShortener.shorten(original.source)}:${original.line}:${original.column}`;\n        }\n      }\n    }\n    if (warningsFilter && !warningsFilter(warning, file, source)) {\n      return;\n    }\n    /**\n     * @type {Error & { hideStack?: boolean, file?: string }}\n     */\n\n    const builtWarning = new Error(`${file} from Css Minimizer plugin\\n${warningMessage}${locationMessage ? ` ${locationMessage}` : \"\"}`);\n    builtWarning.name = \"Warning\";\n    builtWarning.hideStack = true;\n    builtWarning.file = file; // eslint-disable-next-line consistent-return\n\n    return builtWarning;\n  }\n  /**\n   * @private\n   * @param {Error | ErrorObject | string} error\n   * @param {string} file\n   * @param {SourceMapConsumer} [sourceMap]\n   * @param {Compilation[\"requestShortener\"]} [requestShortener]\n   * @returns {Error}\n   */\n\n  static buildError(error, file, sourceMap, requestShortener) {\n    /**\n     * @type {Error & { file?: string }}\n     */\n    let builtError;\n    if (typeof error === \"string\") {\n      builtError = new Error(`${file} from Css Minimizer plugin\\n${error}`);\n      builtError.file = file;\n      return builtError;\n    }\n    if ( /** @type {ErrorObject} */\n    error.line && /** @type {ErrorObject} */\n    error.column) {\n      const {\n        line,\n        column\n      } = /** @type {ErrorObject & { line: number, column: number }} */\n      error;\n      const original = sourceMap && sourceMap.originalPositionFor({\n        line,\n        column\n      });\n      if (original && original.source && requestShortener) {\n        builtError = new Error(`${file} from Css Minimizer plugin\\n${error.message} [${requestShortener.shorten(original.source)}:${original.line},${original.column}][${file}:${line},${column}]${error.stack ? `\\n${error.stack.split(\"\\n\").slice(1).join(\"\\n\")}` : \"\"}`);\n        builtError.file = file;\n        return builtError;\n      }\n      builtError = new Error(`${file} from Css Minimizer plugin\\n${error.message} [${file}:${line},${column}]${error.stack ? `\\n${error.stack.split(\"\\n\").slice(1).join(\"\\n\")}` : \"\"}`);\n      builtError.file = file;\n      return builtError;\n    }\n    if (error.stack) {\n      builtError = new Error(`${file} from Css Minimizer plugin\\n${error.stack}`);\n      builtError.file = file;\n      return builtError;\n    }\n    builtError = new Error(`${file} from Css Minimizer plugin\\n${error.message}`);\n    builtError.file = file;\n    return builtError;\n  }\n  /**\n   * @private\n   * @param {Parallel} parallel\n   * @returns {number}\n   */\n\n  static getAvailableNumberOfCores(parallel) {\n    // In some cases cpus() returns undefined\n    // https://github.com/nodejs/node/issues/19022\n    const cpus = os.cpus() || {\n      length: 1\n    };\n    return parallel === true ? cpus.length - 1 : Math.min(Number(parallel) || 0, cpus.length - 1);\n  }\n  /**\n   * @private\n   * @param {Compiler} compiler\n   * @param {Compilation} compilation\n   * @param {Record<string, import(\"webpack\").sources.Source>} assets\n   * @param {{availableNumberOfCores: number}} optimizeOptions\n   * @returns {Promise<void>}\n   */\n\n  async optimize(compiler, compilation, assets, optimizeOptions) {\n    const cache = compilation.getCache(\"CssMinimizerWebpackPlugin\");\n    let numberOfAssetsForMinify = 0;\n    const assetsForMinify = await Promise.all(Object.keys(typeof assets === \"undefined\" ? compilation.assets : assets).filter(name => {\n      const {\n        info\n      } = /** @type {Asset} */\n      compilation.getAsset(name);\n      if (\n      // Skip double minimize assets from child compilation\n      info.minimized) {\n        return false;\n      }\n      if (!compiler.webpack.ModuleFilenameHelpers.matchObject.bind(\n      // eslint-disable-next-line no-undefined\n      undefined, this.options)(name)) {\n        return false;\n      }\n      return true;\n    }).map(async name => {\n      const {\n        info,\n        source\n      } = /** @type {Asset} */\n      compilation.getAsset(name);\n      const eTag = cache.getLazyHashedEtag(source);\n      const cacheItem = cache.getItemCache(name, eTag);\n      const output = await cacheItem.getPromise();\n      if (!output) {\n        numberOfAssetsForMinify += 1;\n      }\n      return {\n        name,\n        info,\n        inputSource: source,\n        output,\n        cacheItem\n      };\n    }));\n    if (assetsForMinify.length === 0) {\n      return;\n    }\n    /** @type {undefined | (() => MinimizerWorker<T>)} */\n\n    let getWorker;\n    /** @type {undefined | MinimizerWorker<T>} */\n\n    let initializedWorker;\n    /** @type {undefined | number} */\n\n    let numberOfWorkers;\n    if (optimizeOptions.availableNumberOfCores > 0) {\n      // Do not create unnecessary workers when the number of files is less than the available cores, it saves memory\n      numberOfWorkers = Math.min(numberOfAssetsForMinify, optimizeOptions.availableNumberOfCores);\n      getWorker = () => {\n        if (initializedWorker) {\n          return initializedWorker;\n        }\n        initializedWorker = /** @type {MinimizerWorker<T>} */\n        new Worker(require.resolve(\"./minify\"), {\n          numWorkers: numberOfWorkers,\n          enableWorkerThreads: true\n        }); // https://github.com/facebook/jest/issues/8872#issuecomment-524822081\n\n        const workerStdout = initializedWorker.getStdout();\n        if (workerStdout) {\n          workerStdout.on(\"data\", chunk => process.stdout.write(chunk));\n        }\n        const workerStderr = initializedWorker.getStderr();\n        if (workerStderr) {\n          workerStderr.on(\"data\", chunk => process.stderr.write(chunk));\n        }\n        return initializedWorker;\n      };\n    }\n    const {\n      SourceMapSource,\n      RawSource\n    } = compiler.webpack.sources;\n    const scheduledTasks = [];\n    for (const asset of assetsForMinify) {\n      scheduledTasks.push(async () => {\n        const {\n          name,\n          inputSource,\n          cacheItem\n        } = asset;\n        let {\n          output\n        } = asset;\n        if (!output) {\n          let input;\n          /** @type {RawSourceMap | undefined} */\n\n          let inputSourceMap;\n          const {\n            source: sourceFromInputSource,\n            map\n          } = inputSource.sourceAndMap();\n          input = sourceFromInputSource;\n          if (map) {\n            if (!CssMinimizerPlugin.isSourceMap(map)) {\n              compilation.warnings.push( /** @type {WebpackError} */\n              new Error(`${name} contains invalid source map`));\n            } else {\n              inputSourceMap = /** @type {RawSourceMap} */\n              map;\n            }\n          }\n          if (Buffer.isBuffer(input)) {\n            input = input.toString();\n          }\n          /**\n           * @type {InternalOptions<T>}\n           */\n\n          const options = {\n            name,\n            input,\n            inputSourceMap,\n            minimizer: {\n              implementation: this.options.minimizer.implementation,\n              options: this.options.minimizer.options\n            }\n          };\n          let result;\n          try {\n            result = await (getWorker ? getWorker().transform(serialize(options)) : minify(options));\n          } catch (error) {\n            const hasSourceMap = inputSourceMap && CssMinimizerPlugin.isSourceMap(inputSourceMap);\n            compilation.errors.push( /** @type {WebpackError} */\n            CssMinimizerPlugin.buildError( /** @type {any} */\n            error, name, hasSourceMap ? new SourceMapConsumer( /** @type {RawSourceMap} */\n            inputSourceMap) :\n            // eslint-disable-next-line no-undefined\n            undefined,\n            // eslint-disable-next-line no-undefined\n            hasSourceMap ? compilation.requestShortener : undefined));\n            return;\n          }\n          output = {\n            warnings: [],\n            errors: []\n          };\n          for (const item of result.outputs) {\n            if (item.map) {\n              let originalSource;\n              let innerSourceMap;\n              if (output.source) {\n                ({\n                  source: originalSource,\n                  map: innerSourceMap\n                } = output.source.sourceAndMap());\n              } else {\n                originalSource = input;\n                innerSourceMap = inputSourceMap;\n              } // TODO need API for merging source maps in `webpack-source`\n\n              output.source = new SourceMapSource(item.code, name, item.map, originalSource, innerSourceMap, true);\n            } else {\n              output.source = new RawSource(item.code);\n            }\n          }\n          if (result.errors && result.errors.length > 0) {\n            const hasSourceMap = inputSourceMap && CssMinimizerPlugin.isSourceMap(inputSourceMap);\n            for (const error of result.errors) {\n              output.warnings.push(CssMinimizerPlugin.buildError(error, name, hasSourceMap ? new SourceMapConsumer( /** @type {RawSourceMap} */\n              inputSourceMap) :\n              // eslint-disable-next-line no-undefined\n              undefined,\n              // eslint-disable-next-line no-undefined\n              hasSourceMap ? compilation.requestShortener : undefined));\n            }\n          }\n          if (result.warnings && result.warnings.length > 0) {\n            const hasSourceMap = inputSourceMap && CssMinimizerPlugin.isSourceMap(inputSourceMap);\n            for (const warning of result.warnings) {\n              const buildWarning = CssMinimizerPlugin.buildWarning(warning, name, this.options.warningsFilter, hasSourceMap ? new SourceMapConsumer( /** @type {RawSourceMap} */\n              inputSourceMap) :\n              // eslint-disable-next-line no-undefined\n              undefined,\n              // eslint-disable-next-line no-undefined\n              hasSourceMap ? compilation.requestShortener : undefined);\n              if (buildWarning) {\n                output.warnings.push(buildWarning);\n              }\n            }\n          }\n          await cacheItem.storePromise({\n            source: output.source,\n            warnings: output.warnings,\n            errors: output.errors\n          });\n        }\n        if (output.warnings && output.warnings.length > 0) {\n          for (const warning of output.warnings) {\n            compilation.warnings.push(warning);\n          }\n        }\n        if (output.errors && output.errors.length > 0) {\n          for (const error of output.errors) {\n            compilation.errors.push(error);\n          }\n        }\n        const newInfo = {\n          minimized: true\n        };\n        const {\n          source\n        } = output;\n        compilation.updateAsset(name, source, newInfo);\n      });\n    }\n    const limit = getWorker && numberOfAssetsForMinify > 0 ? /** @type {number} */\n    numberOfWorkers : scheduledTasks.length;\n    await throttleAll(limit, scheduledTasks);\n    if (initializedWorker) {\n      await initializedWorker.end();\n    }\n  }\n  /**\n   * @param {Compiler} compiler\n   * @returns {void}\n   */\n\n  apply(compiler) {\n    const pluginName = this.constructor.name;\n    const availableNumberOfCores = CssMinimizerPlugin.getAvailableNumberOfCores(this.options.parallel);\n    compiler.hooks.compilation.tap(pluginName, compilation => {\n      compilation.hooks.processAssets.tapPromise({\n        name: pluginName,\n        stage: compiler.webpack.Compilation.PROCESS_ASSETS_STAGE_OPTIMIZE_SIZE,\n        additionalAssets: true\n      }, assets => this.optimize(compiler, compilation, assets, {\n        availableNumberOfCores\n      }));\n      compilation.hooks.statsPrinter.tap(pluginName, stats => {\n        stats.hooks.print.for(\"asset.info.minimized\").tap(\"css-minimizer-webpack-plugin\", (minimized, {\n          green,\n          formatFlag\n        }) =>\n        // eslint-disable-next-line no-undefined\n        minimized ? /** @type {Function} */\n        green( /** @type {Function} */\n        formatFlag(\"minimized\")) : \"\");\n      });\n    });\n  }\n}\nCssMinimizerPlugin.cssnanoMinify = cssnanoMinify;\nCssMinimizerPlugin.cssoMinify = cssoMinify;\nCssMinimizerPlugin.cleanCssMinify = cleanCssMinify;\nCssMinimizerPlugin.esbuildMinify = esbuildMinify;\nCssMinimizerPlugin.parcelCssMinify = parcelCssMinify;\nmodule.exports = CssMinimizerPlugin;","map":{"version":3,"names":["os","require","SourceMapConsumer","validate","serialize","Worker","throttleAll","cssnanoMinify","cssoMinify","cleanCssMinify","esbuildMinify","parcelCssMinify","schema","minify","warningRegex","CssMinimizerPlugin","constructor","options","name","baseDataPath","minimizerOptions","test","warningsFilter","parallel","include","exclude","minimizer","implementation","isSourceMap","input","Boolean","version","sources","Array","isArray","mappings","buildWarning","warning","file","sourceMap","requestShortener","warningMessage","plugin","text","message","locationMessage","source","line","column","match","exec","original","originalPositionFor","replace","shorten","builtWarning","Error","hideStack","buildError","error","builtError","stack","split","slice","join","getAvailableNumberOfCores","cpus","length","Math","min","Number","optimize","compiler","compilation","assets","optimizeOptions","cache","getCache","numberOfAssetsForMinify","assetsForMinify","Promise","all","Object","keys","filter","info","getAsset","minimized","webpack","ModuleFilenameHelpers","matchObject","bind","undefined","map","eTag","getLazyHashedEtag","cacheItem","getItemCache","output","getPromise","inputSource","getWorker","initializedWorker","numberOfWorkers","availableNumberOfCores","resolve","numWorkers","enableWorkerThreads","workerStdout","getStdout","on","chunk","process","stdout","write","workerStderr","getStderr","stderr","SourceMapSource","RawSource","scheduledTasks","asset","push","inputSourceMap","sourceFromInputSource","sourceAndMap","warnings","Buffer","isBuffer","toString","result","transform","hasSourceMap","errors","item","outputs","originalSource","innerSourceMap","code","storePromise","newInfo","updateAsset","limit","end","apply","pluginName","hooks","tap","processAssets","tapPromise","stage","Compilation","PROCESS_ASSETS_STAGE_OPTIMIZE_SIZE","additionalAssets","statsPrinter","stats","print","for","green","formatFlag","module","exports"],"sources":["C:/Users/chest/OneDrive/Documentos/GitHub/HackUPC/frontend/node_modules/css-minimizer-webpack-plugin/dist/index.js"],"sourcesContent":["\"use strict\";\n\nconst os = require(\"os\");\n\nconst {\n  SourceMapConsumer\n} = require(\"source-map\");\n\nconst {\n  validate\n} = require(\"schema-utils\");\n\nconst serialize = require(\"serialize-javascript\");\n\nconst {\n  Worker\n} = require(\"jest-worker\");\n\nconst {\n  throttleAll,\n  cssnanoMinify,\n  cssoMinify,\n  cleanCssMinify,\n  esbuildMinify,\n  parcelCssMinify\n} = require(\"./utils\");\n\nconst schema = require(\"./options.json\");\n\nconst {\n  minify\n} = require(\"./minify\");\n/** @typedef {import(\"schema-utils/declarations/validate\").Schema} Schema */\n\n/** @typedef {import(\"webpack\").Compiler} Compiler */\n\n/** @typedef {import(\"webpack\").Compilation} Compilation */\n\n/** @typedef {import(\"webpack\").WebpackError} WebpackError */\n\n/** @typedef {import(\"jest-worker\").Worker} JestWorker */\n\n/** @typedef {import(\"source-map\").RawSourceMap} RawSourceMap */\n\n/** @typedef {import(\"webpack\").Asset} Asset */\n\n/** @typedef {import(\"postcss\").ProcessOptions} ProcessOptions */\n\n/** @typedef {import(\"postcss\").Syntax} Syntax */\n\n/** @typedef {import(\"postcss\").Parser} Parser */\n\n/** @typedef {import(\"postcss\").Stringifier} Stringifier */\n\n/**\n * @typedef {Object} CssNanoOptions\n * @property {string} [configFile]\n * @property {[string, object] | string | undefined} [preset]\n */\n\n/** @typedef {Error & { plugin?: string, text?: string, source?: string } | string} Warning */\n\n/**\n * @typedef {Object} WarningObject\n * @property {string} message\n * @property {string} [plugin]\n * @property {string} [text]\n * @property {number} [line]\n * @property {number} [column]\n */\n\n/**\n * @typedef {Object} ErrorObject\n * @property {string} message\n * @property {number} [line]\n * @property {number} [column]\n * @property {string} [stack]\n */\n\n/**\n * @typedef {Object} MinimizedResult\n * @property {string} code\n * @property {RawSourceMap} [map]\n * @property {Array<Error | ErrorObject| string>} [errors]\n * @property {Array<Warning | WarningObject | string>} [warnings]\n */\n\n/**\n * @typedef {{ [file: string]: string }} Input\n */\n\n/**\n * @typedef {{ [key: string]: any }} CustomOptions\n */\n\n/**\n * @template T\n * @typedef {T extends infer U ? U : CustomOptions} InferDefaultType\n */\n\n/**\n * @template T\n * @callback BasicMinimizerImplementation\n * @param {Input} input\n * @param {RawSourceMap | undefined} sourceMap\n * @param {InferDefaultType<T>} minifyOptions\n * @returns {Promise<MinimizedResult>}\n */\n\n/**\n * @template T\n * @typedef {T extends any[] ? { [P in keyof T]: BasicMinimizerImplementation<T[P]>; } : BasicMinimizerImplementation<T>} MinimizerImplementation\n */\n\n/**\n * @template T\n * @typedef {T extends any[] ? { [P in keyof T]?: InferDefaultType<T[P]> } : InferDefaultType<T>} MinimizerOptions\n */\n\n/**\n * @template T\n * @typedef {Object} InternalOptions\n * @property {string} name\n * @property {string} input\n * @property {RawSourceMap | undefined} inputSourceMap\n * @property {{ implementation: MinimizerImplementation<T>, options: MinimizerOptions<T> }} minimizer\n */\n\n/**\n * @typedef InternalResult\n * @property {Array<{ code: string, map: RawSourceMap | undefined }>} outputs\n * @property {Array<Warning | WarningObject | string>} warnings\n * @property {Array<Error | ErrorObject | string>} errors\n */\n\n/** @typedef {undefined | boolean | number} Parallel */\n\n/** @typedef {RegExp | string} Rule */\n\n/** @typedef {Rule[] | Rule} Rules */\n\n/** @typedef {(warning: Warning | WarningObject | string, file: string, source?: string) => boolean} WarningsFilter */\n\n/**\n * @typedef {Object} BasePluginOptions\n * @property {Rules} [test]\n * @property {Rules} [include]\n * @property {Rules} [exclude]\n * @property {WarningsFilter} [warningsFilter]\n * @property {Parallel} [parallel]\n */\n\n/**\n * @template T\n * @typedef {JestWorker & { transform: (options: string) => InternalResult, minify: (options: InternalOptions<T>) => InternalResult }} MinimizerWorker\n */\n\n/**\n * @typedef{ProcessOptions | { from?: string,  to?: string, parser?: string | Syntax | Parser, stringifier?: string | Syntax | Stringifier, syntax?: string | Syntax } } ProcessOptionsExtender\n */\n\n/**\n * @typedef {CssNanoOptions & { processorOptions?: ProcessOptionsExtender }} CssNanoOptionsExtended\n */\n\n/**\n * @template T\n * @typedef {T extends CssNanoOptionsExtended ? { minify?: MinimizerImplementation<T> | undefined, minimizerOptions?: MinimizerOptions<T> | undefined } : { minify: MinimizerImplementation<T>, minimizerOptions?: MinimizerOptions<T> | undefined }} DefinedDefaultMinimizerAndOptions\n */\n\n/**\n * @template T\n * @typedef {BasePluginOptions & { minimizer: { implementation: MinimizerImplementation<T>, options: MinimizerOptions<T> } }} InternalPluginOptions\n */\n\n\nconst warningRegex = /\\s.+:+([0-9]+):+([0-9]+)/;\n/**\n * @template [T=CssNanoOptionsExtended]\n */\n\nclass CssMinimizerPlugin {\n  /**\n   * @param {BasePluginOptions & DefinedDefaultMinimizerAndOptions<T>} [options]\n   */\n  constructor(options) {\n    validate(\n    /** @type {Schema} */\n    schema, options || {}, {\n      name: \"Css Minimizer Plugin\",\n      baseDataPath: \"options\"\n    });\n    const {\n      minify =\n      /** @type {BasicMinimizerImplementation<T>} */\n      cssnanoMinify,\n      minimizerOptions =\n      /** @type {MinimizerOptions<T>} */\n      {},\n      test = /\\.css(\\?.*)?$/i,\n      warningsFilter = () => true,\n      parallel = true,\n      include,\n      exclude\n    } = options || {};\n    /**\n     * @private\n     * @type {InternalPluginOptions<T>}\n     */\n\n    this.options = {\n      test,\n      warningsFilter,\n      parallel,\n      include,\n      exclude,\n      minimizer: {\n        implementation:\n        /** @type {MinimizerImplementation<T>} */\n        minify,\n        options: minimizerOptions\n      }\n    };\n  }\n  /**\n   * @private\n   * @param {any} input\n   * @returns {boolean}\n   */\n\n\n  static isSourceMap(input) {\n    // All required options for `new SourceMapConsumer(...options)`\n    // https://github.com/mozilla/source-map#new-sourcemapconsumerrawsourcemap\n    return Boolean(input && input.version && input.sources && Array.isArray(input.sources) && typeof input.mappings === \"string\");\n  }\n  /**\n   * @private\n   * @param {Warning | WarningObject | string} warning\n   * @param {string} file\n   * @param {WarningsFilter} [warningsFilter]\n   * @param {SourceMapConsumer} [sourceMap]\n   * @param {Compilation[\"requestShortener\"]} [requestShortener]\n   * @returns {Error & { hideStack?: boolean, file?: string } | undefined}\n   */\n\n\n  static buildWarning(warning, file, warningsFilter, sourceMap, requestShortener) {\n    let warningMessage = typeof warning === \"string\" ? warning : `${warning.plugin ? `[${warning.plugin}] ` : \"\"}${warning.text || warning.message}`;\n    let locationMessage = \"\";\n    let source;\n\n    if (sourceMap) {\n      let line;\n      let column;\n\n      if (typeof warning === \"string\") {\n        const match = warningRegex.exec(warning);\n\n        if (match) {\n          line = +match[1];\n          column = +match[2];\n        }\n      } else {\n        ({\n          line,\n          column\n        } =\n        /** @type {WarningObject} */\n        warning);\n      }\n\n      if (line && column) {\n        const original = sourceMap.originalPositionFor({\n          line,\n          column\n        });\n\n        if (original && original.source && original.source !== file && requestShortener) {\n          ({\n            source\n          } = original);\n          warningMessage = `${warningMessage.replace(warningRegex, \"\")}`;\n          locationMessage = `${requestShortener.shorten(original.source)}:${original.line}:${original.column}`;\n        }\n      }\n    }\n\n    if (warningsFilter && !warningsFilter(warning, file, source)) {\n      return;\n    }\n    /**\n     * @type {Error & { hideStack?: boolean, file?: string }}\n     */\n\n\n    const builtWarning = new Error(`${file} from Css Minimizer plugin\\n${warningMessage}${locationMessage ? ` ${locationMessage}` : \"\"}`);\n    builtWarning.name = \"Warning\";\n    builtWarning.hideStack = true;\n    builtWarning.file = file; // eslint-disable-next-line consistent-return\n\n    return builtWarning;\n  }\n  /**\n   * @private\n   * @param {Error | ErrorObject | string} error\n   * @param {string} file\n   * @param {SourceMapConsumer} [sourceMap]\n   * @param {Compilation[\"requestShortener\"]} [requestShortener]\n   * @returns {Error}\n   */\n\n\n  static buildError(error, file, sourceMap, requestShortener) {\n    /**\n     * @type {Error & { file?: string }}\n     */\n    let builtError;\n\n    if (typeof error === \"string\") {\n      builtError = new Error(`${file} from Css Minimizer plugin\\n${error}`);\n      builtError.file = file;\n      return builtError;\n    }\n\n    if (\n    /** @type {ErrorObject} */\n    error.line &&\n    /** @type {ErrorObject} */\n    error.column) {\n      const {\n        line,\n        column\n      } =\n      /** @type {ErrorObject & { line: number, column: number }} */\n      error;\n      const original = sourceMap && sourceMap.originalPositionFor({\n        line,\n        column\n      });\n\n      if (original && original.source && requestShortener) {\n        builtError = new Error(`${file} from Css Minimizer plugin\\n${error.message} [${requestShortener.shorten(original.source)}:${original.line},${original.column}][${file}:${line},${column}]${error.stack ? `\\n${error.stack.split(\"\\n\").slice(1).join(\"\\n\")}` : \"\"}`);\n        builtError.file = file;\n        return builtError;\n      }\n\n      builtError = new Error(`${file} from Css Minimizer plugin\\n${error.message} [${file}:${line},${column}]${error.stack ? `\\n${error.stack.split(\"\\n\").slice(1).join(\"\\n\")}` : \"\"}`);\n      builtError.file = file;\n      return builtError;\n    }\n\n    if (error.stack) {\n      builtError = new Error(`${file} from Css Minimizer plugin\\n${error.stack}`);\n      builtError.file = file;\n      return builtError;\n    }\n\n    builtError = new Error(`${file} from Css Minimizer plugin\\n${error.message}`);\n    builtError.file = file;\n    return builtError;\n  }\n  /**\n   * @private\n   * @param {Parallel} parallel\n   * @returns {number}\n   */\n\n\n  static getAvailableNumberOfCores(parallel) {\n    // In some cases cpus() returns undefined\n    // https://github.com/nodejs/node/issues/19022\n    const cpus = os.cpus() || {\n      length: 1\n    };\n    return parallel === true ? cpus.length - 1 : Math.min(Number(parallel) || 0, cpus.length - 1);\n  }\n  /**\n   * @private\n   * @param {Compiler} compiler\n   * @param {Compilation} compilation\n   * @param {Record<string, import(\"webpack\").sources.Source>} assets\n   * @param {{availableNumberOfCores: number}} optimizeOptions\n   * @returns {Promise<void>}\n   */\n\n\n  async optimize(compiler, compilation, assets, optimizeOptions) {\n    const cache = compilation.getCache(\"CssMinimizerWebpackPlugin\");\n    let numberOfAssetsForMinify = 0;\n    const assetsForMinify = await Promise.all(Object.keys(typeof assets === \"undefined\" ? compilation.assets : assets).filter(name => {\n      const {\n        info\n      } =\n      /** @type {Asset} */\n      compilation.getAsset(name);\n\n      if ( // Skip double minimize assets from child compilation\n      info.minimized) {\n        return false;\n      }\n\n      if (!compiler.webpack.ModuleFilenameHelpers.matchObject.bind( // eslint-disable-next-line no-undefined\n      undefined, this.options)(name)) {\n        return false;\n      }\n\n      return true;\n    }).map(async name => {\n      const {\n        info,\n        source\n      } =\n      /** @type {Asset} */\n      compilation.getAsset(name);\n      const eTag = cache.getLazyHashedEtag(source);\n      const cacheItem = cache.getItemCache(name, eTag);\n      const output = await cacheItem.getPromise();\n\n      if (!output) {\n        numberOfAssetsForMinify += 1;\n      }\n\n      return {\n        name,\n        info,\n        inputSource: source,\n        output,\n        cacheItem\n      };\n    }));\n\n    if (assetsForMinify.length === 0) {\n      return;\n    }\n    /** @type {undefined | (() => MinimizerWorker<T>)} */\n\n\n    let getWorker;\n    /** @type {undefined | MinimizerWorker<T>} */\n\n    let initializedWorker;\n    /** @type {undefined | number} */\n\n    let numberOfWorkers;\n\n    if (optimizeOptions.availableNumberOfCores > 0) {\n      // Do not create unnecessary workers when the number of files is less than the available cores, it saves memory\n      numberOfWorkers = Math.min(numberOfAssetsForMinify, optimizeOptions.availableNumberOfCores);\n\n      getWorker = () => {\n        if (initializedWorker) {\n          return initializedWorker;\n        }\n\n        initializedWorker =\n        /** @type {MinimizerWorker<T>} */\n        new Worker(require.resolve(\"./minify\"), {\n          numWorkers: numberOfWorkers,\n          enableWorkerThreads: true\n        }); // https://github.com/facebook/jest/issues/8872#issuecomment-524822081\n\n        const workerStdout = initializedWorker.getStdout();\n\n        if (workerStdout) {\n          workerStdout.on(\"data\", chunk => process.stdout.write(chunk));\n        }\n\n        const workerStderr = initializedWorker.getStderr();\n\n        if (workerStderr) {\n          workerStderr.on(\"data\", chunk => process.stderr.write(chunk));\n        }\n\n        return initializedWorker;\n      };\n    }\n\n    const {\n      SourceMapSource,\n      RawSource\n    } = compiler.webpack.sources;\n    const scheduledTasks = [];\n\n    for (const asset of assetsForMinify) {\n      scheduledTasks.push(async () => {\n        const {\n          name,\n          inputSource,\n          cacheItem\n        } = asset;\n        let {\n          output\n        } = asset;\n\n        if (!output) {\n          let input;\n          /** @type {RawSourceMap | undefined} */\n\n          let inputSourceMap;\n          const {\n            source: sourceFromInputSource,\n            map\n          } = inputSource.sourceAndMap();\n          input = sourceFromInputSource;\n\n          if (map) {\n            if (!CssMinimizerPlugin.isSourceMap(map)) {\n              compilation.warnings.push(\n              /** @type {WebpackError} */\n              new Error(`${name} contains invalid source map`));\n            } else {\n              inputSourceMap =\n              /** @type {RawSourceMap} */\n              map;\n            }\n          }\n\n          if (Buffer.isBuffer(input)) {\n            input = input.toString();\n          }\n          /**\n           * @type {InternalOptions<T>}\n           */\n\n\n          const options = {\n            name,\n            input,\n            inputSourceMap,\n            minimizer: {\n              implementation: this.options.minimizer.implementation,\n              options: this.options.minimizer.options\n            }\n          };\n          let result;\n\n          try {\n            result = await (getWorker ? getWorker().transform(serialize(options)) : minify(options));\n          } catch (error) {\n            const hasSourceMap = inputSourceMap && CssMinimizerPlugin.isSourceMap(inputSourceMap);\n            compilation.errors.push(\n            /** @type {WebpackError} */\n            CssMinimizerPlugin.buildError(\n            /** @type {any} */\n            error, name, hasSourceMap ? new SourceMapConsumer(\n            /** @type {RawSourceMap} */\n            inputSourceMap) : // eslint-disable-next-line no-undefined\n            undefined, // eslint-disable-next-line no-undefined\n            hasSourceMap ? compilation.requestShortener : undefined));\n            return;\n          }\n\n          output = {\n            warnings: [],\n            errors: []\n          };\n\n          for (const item of result.outputs) {\n            if (item.map) {\n              let originalSource;\n              let innerSourceMap;\n\n              if (output.source) {\n                ({\n                  source: originalSource,\n                  map: innerSourceMap\n                } = output.source.sourceAndMap());\n              } else {\n                originalSource = input;\n                innerSourceMap = inputSourceMap;\n              } // TODO need API for merging source maps in `webpack-source`\n\n\n              output.source = new SourceMapSource(item.code, name, item.map, originalSource, innerSourceMap, true);\n            } else {\n              output.source = new RawSource(item.code);\n            }\n          }\n\n          if (result.errors && result.errors.length > 0) {\n            const hasSourceMap = inputSourceMap && CssMinimizerPlugin.isSourceMap(inputSourceMap);\n\n            for (const error of result.errors) {\n              output.warnings.push(CssMinimizerPlugin.buildError(error, name, hasSourceMap ? new SourceMapConsumer(\n              /** @type {RawSourceMap} */\n              inputSourceMap) : // eslint-disable-next-line no-undefined\n              undefined, // eslint-disable-next-line no-undefined\n              hasSourceMap ? compilation.requestShortener : undefined));\n            }\n          }\n\n          if (result.warnings && result.warnings.length > 0) {\n            const hasSourceMap = inputSourceMap && CssMinimizerPlugin.isSourceMap(inputSourceMap);\n\n            for (const warning of result.warnings) {\n              const buildWarning = CssMinimizerPlugin.buildWarning(warning, name, this.options.warningsFilter, hasSourceMap ? new SourceMapConsumer(\n              /** @type {RawSourceMap} */\n              inputSourceMap) : // eslint-disable-next-line no-undefined\n              undefined, // eslint-disable-next-line no-undefined\n              hasSourceMap ? compilation.requestShortener : undefined);\n\n              if (buildWarning) {\n                output.warnings.push(buildWarning);\n              }\n            }\n          }\n\n          await cacheItem.storePromise({\n            source: output.source,\n            warnings: output.warnings,\n            errors: output.errors\n          });\n        }\n\n        if (output.warnings && output.warnings.length > 0) {\n          for (const warning of output.warnings) {\n            compilation.warnings.push(warning);\n          }\n        }\n\n        if (output.errors && output.errors.length > 0) {\n          for (const error of output.errors) {\n            compilation.errors.push(error);\n          }\n        }\n\n        const newInfo = {\n          minimized: true\n        };\n        const {\n          source\n        } = output;\n        compilation.updateAsset(name, source, newInfo);\n      });\n    }\n\n    const limit = getWorker && numberOfAssetsForMinify > 0 ?\n    /** @type {number} */\n    numberOfWorkers : scheduledTasks.length;\n    await throttleAll(limit, scheduledTasks);\n\n    if (initializedWorker) {\n      await initializedWorker.end();\n    }\n  }\n  /**\n   * @param {Compiler} compiler\n   * @returns {void}\n   */\n\n\n  apply(compiler) {\n    const pluginName = this.constructor.name;\n    const availableNumberOfCores = CssMinimizerPlugin.getAvailableNumberOfCores(this.options.parallel);\n    compiler.hooks.compilation.tap(pluginName, compilation => {\n      compilation.hooks.processAssets.tapPromise({\n        name: pluginName,\n        stage: compiler.webpack.Compilation.PROCESS_ASSETS_STAGE_OPTIMIZE_SIZE,\n        additionalAssets: true\n      }, assets => this.optimize(compiler, compilation, assets, {\n        availableNumberOfCores\n      }));\n      compilation.hooks.statsPrinter.tap(pluginName, stats => {\n        stats.hooks.print.for(\"asset.info.minimized\").tap(\"css-minimizer-webpack-plugin\", (minimized, {\n          green,\n          formatFlag\n        }) => // eslint-disable-next-line no-undefined\n        minimized ?\n        /** @type {Function} */\n        green(\n        /** @type {Function} */\n        formatFlag(\"minimized\")) : \"\");\n      });\n    });\n  }\n\n}\n\nCssMinimizerPlugin.cssnanoMinify = cssnanoMinify;\nCssMinimizerPlugin.cssoMinify = cssoMinify;\nCssMinimizerPlugin.cleanCssMinify = cleanCssMinify;\nCssMinimizerPlugin.esbuildMinify = esbuildMinify;\nCssMinimizerPlugin.parcelCssMinify = parcelCssMinify;\nmodule.exports = CssMinimizerPlugin;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}