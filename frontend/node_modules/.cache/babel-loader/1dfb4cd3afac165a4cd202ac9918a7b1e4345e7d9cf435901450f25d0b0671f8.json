{"ast":null,"code":"const {\n  d,\n  n\n} = require('../../options');\n\n/**\n * Normalizes the options for the loader.\n * @param {import('../types').ReactRefreshLoaderOptions} options Non-normalized loader options.\n * @returns {import('../types').NormalizedLoaderOptions} Normalized loader options.\n */\nconst normalizeOptions = options => {\n  d(options, 'const', false);\n  n(options, 'esModule', esModule => {\n    if (typeof esModule === 'boolean' || typeof esModule === 'undefined') {\n      return esModule;\n    }\n    d(esModule, 'include');\n    d(esModule, 'exclude');\n    return esModule;\n  });\n  return options;\n};\nmodule.exports = normalizeOptions;","map":{"version":3,"names":["d","n","require","normalizeOptions","options","esModule","module","exports"],"sources":["C:/Users/chest/OneDrive/Documentos/GitHub/HackUPC/frontend/node_modules/@pmmmwh/react-refresh-webpack-plugin/loader/utils/normalizeOptions.js"],"sourcesContent":["const { d, n } = require('../../options');\n\n/**\n * Normalizes the options for the loader.\n * @param {import('../types').ReactRefreshLoaderOptions} options Non-normalized loader options.\n * @returns {import('../types').NormalizedLoaderOptions} Normalized loader options.\n */\nconst normalizeOptions = (options) => {\n  d(options, 'const', false);\n\n  n(options, 'esModule', (esModule) => {\n    if (typeof esModule === 'boolean' || typeof esModule === 'undefined') {\n      return esModule;\n    }\n\n    d(esModule, 'include');\n    d(esModule, 'exclude');\n\n    return esModule;\n  });\n\n  return options;\n};\n\nmodule.exports = normalizeOptions;\n"],"mappings":"AAAA,MAAM;EAAEA,CAAC;EAAEC;AAAE,CAAC,GAAGC,OAAO,CAAC,eAAe,CAAC;;AAEzC;AACA;AACA;AACA;AACA;AACA,MAAMC,gBAAgB,GAAIC,OAAO,IAAK;EACpCJ,CAAC,CAACI,OAAO,EAAE,OAAO,EAAE,KAAK,CAAC;EAE1BH,CAAC,CAACG,OAAO,EAAE,UAAU,EAAGC,QAAQ,IAAK;IACnC,IAAI,OAAOA,QAAQ,KAAK,SAAS,IAAI,OAAOA,QAAQ,KAAK,WAAW,EAAE;MACpE,OAAOA,QAAQ;IACjB;IAEAL,CAAC,CAACK,QAAQ,EAAE,SAAS,CAAC;IACtBL,CAAC,CAACK,QAAQ,EAAE,SAAS,CAAC;IAEtB,OAAOA,QAAQ;EACjB,CAAC,CAAC;EAEF,OAAOD,OAAO;AAChB,CAAC;AAEDE,MAAM,CAACC,OAAO,GAAGJ,gBAAgB","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}