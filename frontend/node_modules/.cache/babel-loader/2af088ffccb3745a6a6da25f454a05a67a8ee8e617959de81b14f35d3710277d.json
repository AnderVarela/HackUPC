{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst ts = __importStar(require(\"typescript\"));\nconst util = __importStar(require(\"../util\"));\nexports.default = util.createRule({\n  name: 'no-for-in-array',\n  meta: {\n    docs: {\n      description: 'Disallow iterating over an array with a for-in loop',\n      recommended: 'error',\n      requiresTypeChecking: true\n    },\n    messages: {\n      forInViolation: 'For-in loops over arrays are forbidden. Use for-of or array.forEach instead.'\n    },\n    schema: [],\n    type: 'problem'\n  },\n  defaultOptions: [],\n  create(context) {\n    return {\n      ForInStatement(node) {\n        const parserServices = util.getParserServices(context);\n        const checker = parserServices.program.getTypeChecker();\n        const originalNode = parserServices.esTreeNodeToTSNodeMap.get(node);\n        const type = util.getConstrainedTypeAtLocation(checker, originalNode.expression);\n        if (util.isTypeArrayTypeOrUnionOfArrayTypes(type, checker) || (type.flags & ts.TypeFlags.StringLike) !== 0) {\n          context.report({\n            node,\n            messageId: 'forInViolation'\n          });\n        }\n      }\n    };\n  }\n});","map":{"version":3,"names":["ts","__importStar","require","util","exports","default","createRule","name","meta","docs","description","recommended","requiresTypeChecking","messages","forInViolation","schema","type","defaultOptions","create","context","ForInStatement","node","parserServices","getParserServices","checker","program","getTypeChecker","originalNode","esTreeNodeToTSNodeMap","get","getConstrainedTypeAtLocation","expression","isTypeArrayTypeOrUnionOfArrayTypes","flags","TypeFlags","StringLike","report","messageId"],"sources":["../../src/rules/no-for-in-array.ts"],"sourcesContent":[null],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,MAAAA,EAAA,GAAAC,YAAA,CAAAC,OAAA;AAEA,MAAAC,IAAA,GAAAF,YAAA,CAAAC,OAAA;AAEAE,OAAA,CAAAC,OAAA,GAAeF,IAAI,CAACG,UAAU,CAAC;EAC7BC,IAAI,EAAE,iBAAiB;EACvBC,IAAI,EAAE;IACJC,IAAI,EAAE;MACJC,WAAW,EAAE,qDAAqD;MAClEC,WAAW,EAAE,OAAO;MACpBC,oBAAoB,EAAE;KACvB;IACDC,QAAQ,EAAE;MACRC,cAAc,EACZ;KACH;IACDC,MAAM,EAAE,EAAE;IACVC,IAAI,EAAE;GACP;EACDC,cAAc,EAAE,EAAE;EAClBC,MAAMA,CAACC,OAAO;IACZ,OAAO;MACLC,cAAcA,CAACC,IAAI;QACjB,MAAMC,cAAc,GAAGnB,IAAI,CAACoB,iBAAiB,CAACJ,OAAO,CAAC;QACtD,MAAMK,OAAO,GAAGF,cAAc,CAACG,OAAO,CAACC,cAAc,EAAE;QACvD,MAAMC,YAAY,GAAGL,cAAc,CAACM,qBAAqB,CAACC,GAAG,CAACR,IAAI,CAAC;QAEnE,MAAML,IAAI,GAAGb,IAAI,CAAC2B,4BAA4B,CAC5CN,OAAO,EACPG,YAAY,CAACI,UAAU,CACxB;QAED,IACE5B,IAAI,CAAC6B,kCAAkC,CAAChB,IAAI,EAAEQ,OAAO,CAAC,IACtD,CAACR,IAAI,CAACiB,KAAK,GAAGjC,EAAE,CAACkC,SAAS,CAACC,UAAU,MAAM,CAAC,EAC5C;UACAhB,OAAO,CAACiB,MAAM,CAAC;YACbf,IAAI;YACJgB,SAAS,EAAE;WACZ,CAAC;;MAEN;KACD;EACH;CACD,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}