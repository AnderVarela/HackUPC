{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst utils_1 = require(\"@typescript-eslint/utils\");\nconst util = __importStar(require(\"../util\"));\nexports.default = util.createRule({\n  name: 'prefer-for-of',\n  meta: {\n    type: 'suggestion',\n    docs: {\n      description: 'Enforce the use of `for-of` loop over the standard `for` loop where possible',\n      recommended: 'strict'\n    },\n    messages: {\n      preferForOf: 'Expected a `for-of` loop instead of a `for` loop with this simple iteration.'\n    },\n    schema: []\n  },\n  defaultOptions: [],\n  create(context) {\n    function isSingleVariableDeclaration(node) {\n      return (node === null || node === void 0 ? void 0 : node.type) === utils_1.AST_NODE_TYPES.VariableDeclaration && node.kind !== 'const' && node.declarations.length === 1;\n    }\n    function isLiteral(node, value) {\n      return node.type === utils_1.AST_NODE_TYPES.Literal && node.value === value;\n    }\n    function isZeroInitialized(node) {\n      return node.init != null && isLiteral(node.init, 0);\n    }\n    function isMatchingIdentifier(node, name) {\n      return node.type === utils_1.AST_NODE_TYPES.Identifier && node.name === name;\n    }\n    function isLessThanLengthExpression(node, name) {\n      if ((node === null || node === void 0 ? void 0 : node.type) === utils_1.AST_NODE_TYPES.BinaryExpression && node.operator === '<' && isMatchingIdentifier(node.left, name) && node.right.type === utils_1.AST_NODE_TYPES.MemberExpression && isMatchingIdentifier(node.right.property, 'length')) {\n        return node.right.object;\n      }\n      return null;\n    }\n    function isIncrement(node, name) {\n      if (!node) {\n        return false;\n      }\n      switch (node.type) {\n        case utils_1.AST_NODE_TYPES.UpdateExpression:\n          // x++ or ++x\n          return node.operator === '++' && isMatchingIdentifier(node.argument, name);\n        case utils_1.AST_NODE_TYPES.AssignmentExpression:\n          if (isMatchingIdentifier(node.left, name)) {\n            if (node.operator === '+=') {\n              // x += 1\n              return isLiteral(node.right, 1);\n            } else if (node.operator === '=') {\n              // x = x + 1 or x = 1 + x\n              const expr = node.right;\n              return expr.type === utils_1.AST_NODE_TYPES.BinaryExpression && expr.operator === '+' && (isMatchingIdentifier(expr.left, name) && isLiteral(expr.right, 1) || isLiteral(expr.left, 1) && isMatchingIdentifier(expr.right, name));\n            }\n          }\n      }\n      return false;\n    }\n    function contains(outer, inner) {\n      return outer.range[0] <= inner.range[0] && outer.range[1] >= inner.range[1];\n    }\n    function isAssignee(node) {\n      var _a;\n      const parent = node.parent;\n      if (!parent) {\n        return false;\n      }\n      // a[i] = 1, a[i] += 1, etc.\n      if (parent.type === utils_1.AST_NODE_TYPES.AssignmentExpression && parent.left === node) {\n        return true;\n      }\n      // delete a[i]\n      if (parent.type === utils_1.AST_NODE_TYPES.UnaryExpression && parent.operator === 'delete' && parent.argument === node) {\n        return true;\n      }\n      // a[i]++, --a[i], etc.\n      if (parent.type === utils_1.AST_NODE_TYPES.UpdateExpression && parent.argument === node) {\n        return true;\n      }\n      // [a[i]] = [0]\n      if (parent.type === utils_1.AST_NODE_TYPES.ArrayPattern) {\n        return true;\n      }\n      // [...a[i]] = [0]\n      if (parent.type === utils_1.AST_NODE_TYPES.RestElement) {\n        return true;\n      }\n      // ({ foo: a[i] }) = { foo: 0 }\n      if (parent.type === utils_1.AST_NODE_TYPES.Property && parent.value === node && ((_a = parent.parent) === null || _a === void 0 ? void 0 : _a.type) === utils_1.AST_NODE_TYPES.ObjectExpression && isAssignee(parent.parent)) {\n        return true;\n      }\n      return false;\n    }\n    function isIndexOnlyUsedWithArray(body, indexVar, arrayExpression) {\n      const sourceCode = context.getSourceCode();\n      const arrayText = sourceCode.getText(arrayExpression);\n      return indexVar.references.every(reference => {\n        const id = reference.identifier;\n        const node = id.parent;\n        return !contains(body, id) || node !== undefined && node.type === utils_1.AST_NODE_TYPES.MemberExpression && node.object.type !== utils_1.AST_NODE_TYPES.ThisExpression && node.property === id && sourceCode.getText(node.object) === arrayText && !isAssignee(node);\n      });\n    }\n    return {\n      'ForStatement:exit'(node) {\n        if (!isSingleVariableDeclaration(node.init)) {\n          return;\n        }\n        const declarator = node.init.declarations[0];\n        if (!declarator || !isZeroInitialized(declarator) || declarator.id.type !== utils_1.AST_NODE_TYPES.Identifier) {\n          return;\n        }\n        const indexName = declarator.id.name;\n        const arrayExpression = isLessThanLengthExpression(node.test, indexName);\n        if (!arrayExpression) {\n          return;\n        }\n        const [indexVar] = context.getDeclaredVariables(node.init);\n        if (isIncrement(node.update, indexName) && isIndexOnlyUsedWithArray(node.body, indexVar, arrayExpression)) {\n          context.report({\n            node,\n            messageId: 'preferForOf'\n          });\n        }\n      }\n    };\n  }\n});","map":{"version":3,"names":["utils_1","require","util","__importStar","exports","default","createRule","name","meta","type","docs","description","recommended","messages","preferForOf","schema","defaultOptions","create","context","isSingleVariableDeclaration","node","AST_NODE_TYPES","VariableDeclaration","kind","declarations","length","isLiteral","value","Literal","isZeroInitialized","init","isMatchingIdentifier","Identifier","isLessThanLengthExpression","BinaryExpression","operator","left","right","MemberExpression","property","object","isIncrement","UpdateExpression","argument","AssignmentExpression","expr","contains","outer","inner","range","isAssignee","parent","UnaryExpression","ArrayPattern","RestElement","Property","_a","ObjectExpression","isIndexOnlyUsedWithArray","body","indexVar","arrayExpression","sourceCode","getSourceCode","arrayText","getText","references","every","reference","id","identifier","undefined","ThisExpression","ForStatement:exit","declarator","indexName","test","getDeclaredVariables","update","report","messageId"],"sources":["../../src/rules/prefer-for-of.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}