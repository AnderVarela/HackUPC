{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst utils_1 = require(\"@typescript-eslint/utils\");\nconst ts = __importStar(require(\"typescript\"));\nconst util = __importStar(require(\"../util\"));\nexports.default = util.createRule({\n  name: 'restrict-template-expressions',\n  meta: {\n    type: 'problem',\n    docs: {\n      description: 'Enforce template literal expressions to be of `string` type',\n      recommended: 'error',\n      requiresTypeChecking: true\n    },\n    messages: {\n      invalidType: 'Invalid type \"{{type}}\" of template literal expression.'\n    },\n    schema: [{\n      type: 'object',\n      properties: {\n        allowAny: {\n          description: 'Whether to allow `any` typed values in template expressions.',\n          type: 'boolean'\n        },\n        allowBoolean: {\n          description: 'Whether to allow `boolean` typed values in template expressions.',\n          type: 'boolean'\n        },\n        allowNullish: {\n          description: 'Whether to allow `nullish` typed values in template expressions.',\n          type: 'boolean'\n        },\n        allowNumber: {\n          description: 'Whether to allow `number` typed values in template expressions.',\n          type: 'boolean'\n        },\n        allowRegExp: {\n          description: 'Whether to allow `regexp` typed values in template expressions.',\n          type: 'boolean'\n        },\n        allowNever: {\n          description: 'Whether to allow `never` typed values in template expressions.',\n          type: 'boolean'\n        }\n      }\n    }]\n  },\n  defaultOptions: [{\n    allowNumber: true\n  }],\n  create(context, [options]) {\n    const service = util.getParserServices(context);\n    const typeChecker = service.program.getTypeChecker();\n    function isUnderlyingTypePrimitive(type) {\n      if (util.isTypeFlagSet(type, ts.TypeFlags.StringLike)) {\n        return true;\n      }\n      if (options.allowNumber && util.isTypeFlagSet(type, ts.TypeFlags.NumberLike | ts.TypeFlags.BigIntLike)) {\n        return true;\n      }\n      if (options.allowBoolean && util.isTypeFlagSet(type, ts.TypeFlags.BooleanLike)) {\n        return true;\n      }\n      if (options.allowAny && util.isTypeAnyType(type)) {\n        return true;\n      }\n      if (options.allowRegExp && util.getTypeName(typeChecker, type) === 'RegExp') {\n        return true;\n      }\n      if (options.allowNullish && util.isTypeFlagSet(type, ts.TypeFlags.Null | ts.TypeFlags.Undefined)) {\n        return true;\n      }\n      if (options.allowNever && util.isTypeNeverType(type)) {\n        return true;\n      }\n      return false;\n    }\n    return {\n      TemplateLiteral(node) {\n        // don't check tagged template literals\n        if (node.parent.type === utils_1.AST_NODE_TYPES.TaggedTemplateExpression) {\n          return;\n        }\n        for (const expression of node.expressions) {\n          const expressionType = util.getConstrainedTypeAtLocation(typeChecker, service.esTreeNodeToTSNodeMap.get(expression));\n          if (!isInnerUnionOrIntersectionConformingTo(expressionType, isUnderlyingTypePrimitive)) {\n            context.report({\n              node: expression,\n              messageId: 'invalidType',\n              data: {\n                type: typeChecker.typeToString(expressionType)\n              }\n            });\n          }\n        }\n      }\n    };\n    function isInnerUnionOrIntersectionConformingTo(type, predicate) {\n      return rec(type);\n      function rec(innerType) {\n        if (innerType.isUnion()) {\n          return innerType.types.every(rec);\n        }\n        if (innerType.isIntersection()) {\n          return innerType.types.some(rec);\n        }\n        return predicate(innerType);\n      }\n    }\n  }\n});","map":{"version":3,"names":["utils_1","require","ts","__importStar","util","exports","default","createRule","name","meta","type","docs","description","recommended","requiresTypeChecking","messages","invalidType","schema","properties","allowAny","allowBoolean","allowNullish","allowNumber","allowRegExp","allowNever","defaultOptions","create","context","options","service","getParserServices","typeChecker","program","getTypeChecker","isUnderlyingTypePrimitive","isTypeFlagSet","TypeFlags","StringLike","NumberLike","BigIntLike","BooleanLike","isTypeAnyType","getTypeName","Null","Undefined","isTypeNeverType","TemplateLiteral","node","parent","AST_NODE_TYPES","TaggedTemplateExpression","expression","expressions","expressionType","getConstrainedTypeAtLocation","esTreeNodeToTSNodeMap","get","isInnerUnionOrIntersectionConformingTo","report","messageId","data","typeToString","predicate","rec","innerType","isUnion","types","every","isIntersection","some"],"sources":["../../src/rules/restrict-template-expressions.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}