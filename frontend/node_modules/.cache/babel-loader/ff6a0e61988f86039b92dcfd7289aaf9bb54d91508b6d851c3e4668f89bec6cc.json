{"ast":null,"code":"/**\n * Debounce a function to delay invoking until wait (ms) have elapsed since the last invocation.\n * @param {function(...*): *} fn The function to be debounced.\n * @param {number} wait Milliseconds to wait before invoking again.\n * @return {function(...*): void} The debounced function.\n */\nfunction debounce(fn, wait) {\n  /**\n   * A cached setTimeout handler.\n   * @type {number | undefined}\n   */\n  let timer;\n\n  /**\n   * @returns {void}\n   */\n  function debounced() {\n    const context = this;\n    const args = arguments;\n    clearTimeout(timer);\n    timer = setTimeout(function () {\n      return fn.apply(context, args);\n    }, wait);\n  }\n  return debounced;\n}\n\n/**\n * Prettify a filename from error stacks into the desired format.\n * @param {string} filename The filename to be formatted.\n * @returns {string} The formatted filename.\n */\nfunction formatFilename(filename) {\n  // Strip away protocol and domain for compiled files\n  const htmlMatch = /^https?:\\/\\/(.*)\\/(.*)/.exec(filename);\n  if (htmlMatch && htmlMatch[1] && htmlMatch[2]) {\n    return htmlMatch[2];\n  }\n\n  // Strip everything before the first directory for source files\n  const sourceMatch = /\\/.*?([^./]+[/|\\\\].*)$/.exec(filename);\n  if (sourceMatch && sourceMatch[1]) {\n    return sourceMatch[1].replace(/\\?$/, '');\n  }\n\n  // Unknown filename type, use it as is\n  return filename;\n}\n\n/**\n * Remove all children of an element.\n * @param {HTMLElement} element A valid HTML element.\n * @param {number} [skip] Number of elements to skip removing.\n * @returns {void}\n */\nfunction removeAllChildren(element, skip) {\n  /** @type {Node[]} */\n  const childList = Array.prototype.slice.call(element.childNodes, typeof skip !== 'undefined' ? skip : 0);\n  for (let i = 0; i < childList.length; i += 1) {\n    element.removeChild(childList[i]);\n  }\n}\nmodule.exports = {\n  debounce: debounce,\n  formatFilename: formatFilename,\n  removeAllChildren: removeAllChildren\n};","map":{"version":3,"names":["debounce","fn","wait","timer","debounced","context","args","arguments","clearTimeout","setTimeout","apply","formatFilename","filename","htmlMatch","exec","sourceMatch","replace","removeAllChildren","element","skip","childList","Array","prototype","slice","call","childNodes","i","length","removeChild","module","exports"],"sources":["C:/Users/chest/OneDrive/Documentos/GitHub/HackUPC/frontend/node_modules/@pmmmwh/react-refresh-webpack-plugin/overlay/utils.js"],"sourcesContent":["/**\n * Debounce a function to delay invoking until wait (ms) have elapsed since the last invocation.\n * @param {function(...*): *} fn The function to be debounced.\n * @param {number} wait Milliseconds to wait before invoking again.\n * @return {function(...*): void} The debounced function.\n */\nfunction debounce(fn, wait) {\n  /**\n   * A cached setTimeout handler.\n   * @type {number | undefined}\n   */\n  let timer;\n\n  /**\n   * @returns {void}\n   */\n  function debounced() {\n    const context = this;\n    const args = arguments;\n\n    clearTimeout(timer);\n    timer = setTimeout(function () {\n      return fn.apply(context, args);\n    }, wait);\n  }\n\n  return debounced;\n}\n\n/**\n * Prettify a filename from error stacks into the desired format.\n * @param {string} filename The filename to be formatted.\n * @returns {string} The formatted filename.\n */\nfunction formatFilename(filename) {\n  // Strip away protocol and domain for compiled files\n  const htmlMatch = /^https?:\\/\\/(.*)\\/(.*)/.exec(filename);\n  if (htmlMatch && htmlMatch[1] && htmlMatch[2]) {\n    return htmlMatch[2];\n  }\n\n  // Strip everything before the first directory for source files\n  const sourceMatch = /\\/.*?([^./]+[/|\\\\].*)$/.exec(filename);\n  if (sourceMatch && sourceMatch[1]) {\n    return sourceMatch[1].replace(/\\?$/, '');\n  }\n\n  // Unknown filename type, use it as is\n  return filename;\n}\n\n/**\n * Remove all children of an element.\n * @param {HTMLElement} element A valid HTML element.\n * @param {number} [skip] Number of elements to skip removing.\n * @returns {void}\n */\nfunction removeAllChildren(element, skip) {\n  /** @type {Node[]} */\n  const childList = Array.prototype.slice.call(\n    element.childNodes,\n    typeof skip !== 'undefined' ? skip : 0\n  );\n\n  for (let i = 0; i < childList.length; i += 1) {\n    element.removeChild(childList[i]);\n  }\n}\n\nmodule.exports = {\n  debounce: debounce,\n  formatFilename: formatFilename,\n  removeAllChildren: removeAllChildren,\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,QAAQA,CAACC,EAAE,EAAEC,IAAI,EAAE;EAC1B;AACF;AACA;AACA;EACE,IAAIC,KAAK;;EAET;AACF;AACA;EACE,SAASC,SAASA,CAAA,EAAG;IACnB,MAAMC,OAAO,GAAG,IAAI;IACpB,MAAMC,IAAI,GAAGC,SAAS;IAEtBC,YAAY,CAACL,KAAK,CAAC;IACnBA,KAAK,GAAGM,UAAU,CAAC,YAAY;MAC7B,OAAOR,EAAE,CAACS,KAAK,CAACL,OAAO,EAAEC,IAAI,CAAC;IAChC,CAAC,EAAEJ,IAAI,CAAC;EACV;EAEA,OAAOE,SAAS;AAClB;;AAEA;AACA;AACA;AACA;AACA;AACA,SAASO,cAAcA,CAACC,QAAQ,EAAE;EAChC;EACA,MAAMC,SAAS,GAAG,wBAAwB,CAACC,IAAI,CAACF,QAAQ,CAAC;EACzD,IAAIC,SAAS,IAAIA,SAAS,CAAC,CAAC,CAAC,IAAIA,SAAS,CAAC,CAAC,CAAC,EAAE;IAC7C,OAAOA,SAAS,CAAC,CAAC,CAAC;EACrB;;EAEA;EACA,MAAME,WAAW,GAAG,wBAAwB,CAACD,IAAI,CAACF,QAAQ,CAAC;EAC3D,IAAIG,WAAW,IAAIA,WAAW,CAAC,CAAC,CAAC,EAAE;IACjC,OAAOA,WAAW,CAAC,CAAC,CAAC,CAACC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC;EAC1C;;EAEA;EACA,OAAOJ,QAAQ;AACjB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAASK,iBAAiBA,CAACC,OAAO,EAAEC,IAAI,EAAE;EACxC;EACA,MAAMC,SAAS,GAAGC,KAAK,CAACC,SAAS,CAACC,KAAK,CAACC,IAAI,CAC1CN,OAAO,CAACO,UAAU,EAClB,OAAON,IAAI,KAAK,WAAW,GAAGA,IAAI,GAAG,CACvC,CAAC;EAED,KAAK,IAAIO,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGN,SAAS,CAACO,MAAM,EAAED,CAAC,IAAI,CAAC,EAAE;IAC5CR,OAAO,CAACU,WAAW,CAACR,SAAS,CAACM,CAAC,CAAC,CAAC;EACnC;AACF;AAEAG,MAAM,CAACC,OAAO,GAAG;EACf9B,QAAQ,EAAEA,QAAQ;EAClBW,cAAc,EAAEA,cAAc;EAC9BM,iBAAiB,EAAEA;AACrB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}