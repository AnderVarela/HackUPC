{"ast":null,"code":"'use strict';\n\nvar call = require('../internals/function-call');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar fixRegExpWellKnownSymbolLogic = require('../internals/fix-regexp-well-known-symbol-logic');\nvar anObject = require('../internals/an-object');\nvar isNullOrUndefined = require('../internals/is-null-or-undefined');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar speciesConstructor = require('../internals/species-constructor');\nvar advanceStringIndex = require('../internals/advance-string-index');\nvar toLength = require('../internals/to-length');\nvar toString = require('../internals/to-string');\nvar getMethod = require('../internals/get-method');\nvar regExpExec = require('../internals/regexp-exec-abstract');\nvar stickyHelpers = require('../internals/regexp-sticky-helpers');\nvar fails = require('../internals/fails');\nvar UNSUPPORTED_Y = stickyHelpers.UNSUPPORTED_Y;\nvar MAX_UINT32 = 0xFFFFFFFF;\nvar min = Math.min;\nvar push = uncurryThis([].push);\nvar stringSlice = uncurryThis(''.slice);\n\n// Chrome 51 has a buggy \"split\" implementation when RegExp#exec !== nativeExec\n// Weex JS has frozen built-in prototypes, so use try / catch wrapper\nvar SPLIT_WORKS_WITH_OVERWRITTEN_EXEC = !fails(function () {\n  // eslint-disable-next-line regexp/no-empty-group -- required for testing\n  var re = /(?:)/;\n  var originalExec = re.exec;\n  re.exec = function () {\n    return originalExec.apply(this, arguments);\n  };\n  var result = 'ab'.split(re);\n  return result.length !== 2 || result[0] !== 'a' || result[1] !== 'b';\n});\nvar BUGGY = 'abbc'.split(/(b)*/)[1] === 'c' ||\n// eslint-disable-next-line regexp/no-empty-group -- required for testing\n'test'.split(/(?:)/, -1).length !== 4 || 'ab'.split(/(?:ab)*/).length !== 2 || '.'.split(/(.?)(.?)/).length !== 4 ||\n// eslint-disable-next-line regexp/no-empty-capturing-group, regexp/no-empty-group -- required for testing\n'.'.split(/()()/).length > 1 || ''.split(/.?/).length;\n\n// @@split logic\nfixRegExpWellKnownSymbolLogic('split', function (SPLIT, nativeSplit, maybeCallNative) {\n  var internalSplit = '0'.split(undefined, 0).length ? function (separator, limit) {\n    return separator === undefined && limit === 0 ? [] : call(nativeSplit, this, separator, limit);\n  } : nativeSplit;\n  return [\n  // `String.prototype.split` method\n  // https://tc39.es/ecma262/#sec-string.prototype.split\n  function split(separator, limit) {\n    var O = requireObjectCoercible(this);\n    var splitter = isNullOrUndefined(separator) ? undefined : getMethod(separator, SPLIT);\n    return splitter ? call(splitter, separator, O, limit) : call(internalSplit, toString(O), separator, limit);\n  },\n  // `RegExp.prototype[@@split]` method\n  // https://tc39.es/ecma262/#sec-regexp.prototype-@@split\n  //\n  // NOTE: This cannot be properly polyfilled in engines that don't support\n  // the 'y' flag.\n  function (string, limit) {\n    var rx = anObject(this);\n    var S = toString(string);\n    if (!BUGGY) {\n      var res = maybeCallNative(internalSplit, rx, S, limit, internalSplit !== nativeSplit);\n      if (res.done) return res.value;\n    }\n    var C = speciesConstructor(rx, RegExp);\n    var unicodeMatching = rx.unicode;\n    var flags = (rx.ignoreCase ? 'i' : '') + (rx.multiline ? 'm' : '') + (rx.unicode ? 'u' : '') + (UNSUPPORTED_Y ? 'g' : 'y');\n    // ^(? + rx + ) is needed, in combination with some S slicing, to\n    // simulate the 'y' flag.\n    var splitter = new C(UNSUPPORTED_Y ? '^(?:' + rx.source + ')' : rx, flags);\n    var lim = limit === undefined ? MAX_UINT32 : limit >>> 0;\n    if (lim === 0) return [];\n    if (S.length === 0) return regExpExec(splitter, S) === null ? [S] : [];\n    var p = 0;\n    var q = 0;\n    var A = [];\n    while (q < S.length) {\n      splitter.lastIndex = UNSUPPORTED_Y ? 0 : q;\n      var z = regExpExec(splitter, UNSUPPORTED_Y ? stringSlice(S, q) : S);\n      var e;\n      if (z === null || (e = min(toLength(splitter.lastIndex + (UNSUPPORTED_Y ? q : 0)), S.length)) === p) {\n        q = advanceStringIndex(S, q, unicodeMatching);\n      } else {\n        push(A, stringSlice(S, p, q));\n        if (A.length === lim) return A;\n        for (var i = 1; i <= z.length - 1; i++) {\n          push(A, z[i]);\n          if (A.length === lim) return A;\n        }\n        q = p = e;\n      }\n    }\n    push(A, stringSlice(S, p));\n    return A;\n  }];\n}, BUGGY || !SPLIT_WORKS_WITH_OVERWRITTEN_EXEC, UNSUPPORTED_Y);","map":{"version":3,"names":["call","require","uncurryThis","fixRegExpWellKnownSymbolLogic","anObject","isNullOrUndefined","requireObjectCoercible","speciesConstructor","advanceStringIndex","toLength","toString","getMethod","regExpExec","stickyHelpers","fails","UNSUPPORTED_Y","MAX_UINT32","min","Math","push","stringSlice","slice","SPLIT_WORKS_WITH_OVERWRITTEN_EXEC","re","originalExec","exec","apply","arguments","result","split","length","BUGGY","SPLIT","nativeSplit","maybeCallNative","internalSplit","undefined","separator","limit","O","splitter","string","rx","S","res","done","value","C","RegExp","unicodeMatching","unicode","flags","ignoreCase","multiline","source","lim","p","q","A","lastIndex","z","e","i"],"sources":["C:/Users/chest/OneDrive/Documentos/GitHub/HackUPC/frontend/node_modules/core-js/modules/es.string.split.js"],"sourcesContent":["'use strict';\nvar call = require('../internals/function-call');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar fixRegExpWellKnownSymbolLogic = require('../internals/fix-regexp-well-known-symbol-logic');\nvar anObject = require('../internals/an-object');\nvar isNullOrUndefined = require('../internals/is-null-or-undefined');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar speciesConstructor = require('../internals/species-constructor');\nvar advanceStringIndex = require('../internals/advance-string-index');\nvar toLength = require('../internals/to-length');\nvar toString = require('../internals/to-string');\nvar getMethod = require('../internals/get-method');\nvar regExpExec = require('../internals/regexp-exec-abstract');\nvar stickyHelpers = require('../internals/regexp-sticky-helpers');\nvar fails = require('../internals/fails');\n\nvar UNSUPPORTED_Y = stickyHelpers.UNSUPPORTED_Y;\nvar MAX_UINT32 = 0xFFFFFFFF;\nvar min = Math.min;\nvar push = uncurryThis([].push);\nvar stringSlice = uncurryThis(''.slice);\n\n// Chrome 51 has a buggy \"split\" implementation when RegExp#exec !== nativeExec\n// Weex JS has frozen built-in prototypes, so use try / catch wrapper\nvar SPLIT_WORKS_WITH_OVERWRITTEN_EXEC = !fails(function () {\n  // eslint-disable-next-line regexp/no-empty-group -- required for testing\n  var re = /(?:)/;\n  var originalExec = re.exec;\n  re.exec = function () { return originalExec.apply(this, arguments); };\n  var result = 'ab'.split(re);\n  return result.length !== 2 || result[0] !== 'a' || result[1] !== 'b';\n});\n\nvar BUGGY = 'abbc'.split(/(b)*/)[1] === 'c' ||\n  // eslint-disable-next-line regexp/no-empty-group -- required for testing\n  'test'.split(/(?:)/, -1).length !== 4 ||\n  'ab'.split(/(?:ab)*/).length !== 2 ||\n  '.'.split(/(.?)(.?)/).length !== 4 ||\n  // eslint-disable-next-line regexp/no-empty-capturing-group, regexp/no-empty-group -- required for testing\n  '.'.split(/()()/).length > 1 ||\n  ''.split(/.?/).length;\n\n// @@split logic\nfixRegExpWellKnownSymbolLogic('split', function (SPLIT, nativeSplit, maybeCallNative) {\n  var internalSplit = '0'.split(undefined, 0).length ? function (separator, limit) {\n    return separator === undefined && limit === 0 ? [] : call(nativeSplit, this, separator, limit);\n  } : nativeSplit;\n\n  return [\n    // `String.prototype.split` method\n    // https://tc39.es/ecma262/#sec-string.prototype.split\n    function split(separator, limit) {\n      var O = requireObjectCoercible(this);\n      var splitter = isNullOrUndefined(separator) ? undefined : getMethod(separator, SPLIT);\n      return splitter\n        ? call(splitter, separator, O, limit)\n        : call(internalSplit, toString(O), separator, limit);\n    },\n    // `RegExp.prototype[@@split]` method\n    // https://tc39.es/ecma262/#sec-regexp.prototype-@@split\n    //\n    // NOTE: This cannot be properly polyfilled in engines that don't support\n    // the 'y' flag.\n    function (string, limit) {\n      var rx = anObject(this);\n      var S = toString(string);\n\n      if (!BUGGY) {\n        var res = maybeCallNative(internalSplit, rx, S, limit, internalSplit !== nativeSplit);\n        if (res.done) return res.value;\n      }\n\n      var C = speciesConstructor(rx, RegExp);\n      var unicodeMatching = rx.unicode;\n      var flags = (rx.ignoreCase ? 'i' : '') +\n                  (rx.multiline ? 'm' : '') +\n                  (rx.unicode ? 'u' : '') +\n                  (UNSUPPORTED_Y ? 'g' : 'y');\n      // ^(? + rx + ) is needed, in combination with some S slicing, to\n      // simulate the 'y' flag.\n      var splitter = new C(UNSUPPORTED_Y ? '^(?:' + rx.source + ')' : rx, flags);\n      var lim = limit === undefined ? MAX_UINT32 : limit >>> 0;\n      if (lim === 0) return [];\n      if (S.length === 0) return regExpExec(splitter, S) === null ? [S] : [];\n      var p = 0;\n      var q = 0;\n      var A = [];\n      while (q < S.length) {\n        splitter.lastIndex = UNSUPPORTED_Y ? 0 : q;\n        var z = regExpExec(splitter, UNSUPPORTED_Y ? stringSlice(S, q) : S);\n        var e;\n        if (\n          z === null ||\n          (e = min(toLength(splitter.lastIndex + (UNSUPPORTED_Y ? q : 0)), S.length)) === p\n        ) {\n          q = advanceStringIndex(S, q, unicodeMatching);\n        } else {\n          push(A, stringSlice(S, p, q));\n          if (A.length === lim) return A;\n          for (var i = 1; i <= z.length - 1; i++) {\n            push(A, z[i]);\n            if (A.length === lim) return A;\n          }\n          q = p = e;\n        }\n      }\n      push(A, stringSlice(S, p));\n      return A;\n    }\n  ];\n}, BUGGY || !SPLIT_WORKS_WITH_OVERWRITTEN_EXEC, UNSUPPORTED_Y);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}