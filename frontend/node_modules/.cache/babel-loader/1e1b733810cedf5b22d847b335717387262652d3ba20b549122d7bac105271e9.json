{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.queryByAltText = exports.queryAllByAltText = exports.getByAltText = exports.getAllByAltText = exports.findByAltText = exports.findAllByAltText = void 0;\nvar _queryHelpers = require(\"../query-helpers\");\nvar _helpers = require(\"../helpers\");\nvar _allUtils = require(\"./all-utils\");\n// Valid tags are img, input, area and custom elements\nconst VALID_TAG_REGEXP = /^(img|input|area|.+-.+)$/i;\nconst queryAllByAltText = (container, alt, options = {}) => {\n  (0, _helpers.checkContainerType)(container);\n  return (0, _queryHelpers.queryAllByAttribute)('alt', container, alt, options).filter(node => VALID_TAG_REGEXP.test(node.tagName));\n};\nconst getMultipleError = (c, alt) => `Found multiple elements with the alt text: ${alt}`;\nconst getMissingError = (c, alt) => `Unable to find an element with the alt text: ${alt}`;\nconst queryAllByAltTextWithSuggestions = exports.queryAllByAltText = (0, _queryHelpers.wrapAllByQueryWithSuggestion)(queryAllByAltText, queryAllByAltText.name, 'queryAll');\nconst [queryByAltText, getAllByAltText, getByAltText, findAllByAltText, findByAltText] = (0, _allUtils.buildQueries)(queryAllByAltText, getMultipleError, getMissingError);\nexports.findByAltText = findByAltText;\nexports.findAllByAltText = findAllByAltText;\nexports.getByAltText = getByAltText;\nexports.getAllByAltText = getAllByAltText;\nexports.queryByAltText = queryByAltText;","map":{"version":3,"names":["Object","defineProperty","exports","value","queryByAltText","queryAllByAltText","getByAltText","getAllByAltText","findByAltText","findAllByAltText","_queryHelpers","require","_helpers","_allUtils","VALID_TAG_REGEXP","container","alt","options","checkContainerType","queryAllByAttribute","filter","node","test","tagName","getMultipleError","c","getMissingError","queryAllByAltTextWithSuggestions","wrapAllByQueryWithSuggestion","name","buildQueries"],"sources":["C:/Users/chest/OneDrive/Documentos/GitHub/HackUPC/frontend/node_modules/@testing-library/dom/dist/queries/alt-text.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.queryByAltText = exports.queryAllByAltText = exports.getByAltText = exports.getAllByAltText = exports.findByAltText = exports.findAllByAltText = void 0;\nvar _queryHelpers = require(\"../query-helpers\");\nvar _helpers = require(\"../helpers\");\nvar _allUtils = require(\"./all-utils\");\n// Valid tags are img, input, area and custom elements\nconst VALID_TAG_REGEXP = /^(img|input|area|.+-.+)$/i;\nconst queryAllByAltText = (container, alt, options = {}) => {\n  (0, _helpers.checkContainerType)(container);\n  return (0, _queryHelpers.queryAllByAttribute)('alt', container, alt, options).filter(node => VALID_TAG_REGEXP.test(node.tagName));\n};\nconst getMultipleError = (c, alt) => `Found multiple elements with the alt text: ${alt}`;\nconst getMissingError = (c, alt) => `Unable to find an element with the alt text: ${alt}`;\nconst queryAllByAltTextWithSuggestions = exports.queryAllByAltText = (0, _queryHelpers.wrapAllByQueryWithSuggestion)(queryAllByAltText, queryAllByAltText.name, 'queryAll');\nconst [queryByAltText, getAllByAltText, getByAltText, findAllByAltText, findByAltText] = (0, _allUtils.buildQueries)(queryAllByAltText, getMultipleError, getMissingError);\nexports.findByAltText = findByAltText;\nexports.findAllByAltText = findAllByAltText;\nexports.getByAltText = getByAltText;\nexports.getAllByAltText = getAllByAltText;\nexports.queryByAltText = queryByAltText;"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAC3CC,KAAK,EAAE;AACT,CAAC,CAAC;AACFD,OAAO,CAACE,cAAc,GAAGF,OAAO,CAACG,iBAAiB,GAAGH,OAAO,CAACI,YAAY,GAAGJ,OAAO,CAACK,eAAe,GAAGL,OAAO,CAACM,aAAa,GAAGN,OAAO,CAACO,gBAAgB,GAAG,KAAK,CAAC;AAC/J,IAAIC,aAAa,GAAGC,OAAO,CAAC,kBAAkB,CAAC;AAC/C,IAAIC,QAAQ,GAAGD,OAAO,CAAC,YAAY,CAAC;AACpC,IAAIE,SAAS,GAAGF,OAAO,CAAC,aAAa,CAAC;AACtC;AACA,MAAMG,gBAAgB,GAAG,2BAA2B;AACpD,MAAMT,iBAAiB,GAAGA,CAACU,SAAS,EAAEC,GAAG,EAAEC,OAAO,GAAG,CAAC,CAAC,KAAK;EAC1D,CAAC,CAAC,EAAEL,QAAQ,CAACM,kBAAkB,EAAEH,SAAS,CAAC;EAC3C,OAAO,CAAC,CAAC,EAAEL,aAAa,CAACS,mBAAmB,EAAE,KAAK,EAAEJ,SAAS,EAAEC,GAAG,EAAEC,OAAO,CAAC,CAACG,MAAM,CAACC,IAAI,IAAIP,gBAAgB,CAACQ,IAAI,CAACD,IAAI,CAACE,OAAO,CAAC,CAAC;AACnI,CAAC;AACD,MAAMC,gBAAgB,GAAGA,CAACC,CAAC,EAAET,GAAG,KAAM,8CAA6CA,GAAI,EAAC;AACxF,MAAMU,eAAe,GAAGA,CAACD,CAAC,EAAET,GAAG,KAAM,gDAA+CA,GAAI,EAAC;AACzF,MAAMW,gCAAgC,GAAGzB,OAAO,CAACG,iBAAiB,GAAG,CAAC,CAAC,EAAEK,aAAa,CAACkB,4BAA4B,EAAEvB,iBAAiB,EAAEA,iBAAiB,CAACwB,IAAI,EAAE,UAAU,CAAC;AAC3K,MAAM,CAACzB,cAAc,EAAEG,eAAe,EAAED,YAAY,EAAEG,gBAAgB,EAAED,aAAa,CAAC,GAAG,CAAC,CAAC,EAAEK,SAAS,CAACiB,YAAY,EAAEzB,iBAAiB,EAAEmB,gBAAgB,EAAEE,eAAe,CAAC;AAC1KxB,OAAO,CAACM,aAAa,GAAGA,aAAa;AACrCN,OAAO,CAACO,gBAAgB,GAAGA,gBAAgB;AAC3CP,OAAO,CAACI,YAAY,GAAGA,YAAY;AACnCJ,OAAO,CAACK,eAAe,GAAGA,eAAe;AACzCL,OAAO,CAACE,cAAc,GAAGA,cAAc","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}