{"ast":null,"code":"import e from \"postcss-selector-parser\";\nfunction compare(e, s) {\n  return e.a === s.a ? e.b === s.b ? e.c - s.c : e.b - s.b : e.a - s.a;\n}\nfunction selectorSpecificity(s) {\n  if (!s) return {\n    a: 0,\n    b: 0,\n    c: 0\n  };\n  let t = 0,\n    c = 0,\n    i = 0;\n  if (\"universal\" == s.type) return {\n    a: 0,\n    b: 0,\n    c: 0\n  };\n  if (\"id\" === s.type) t += 1;else if (\"tag\" === s.type) i += 1;else if (\"class\" === s.type) c += 1;else if (\"attribute\" === s.type) c += 1;else if (isPseudoElement(s)) switch (s.value.toLowerCase()) {\n    case \"::slotted\":\n      if (i += 1, s.nodes && s.nodes.length > 0) {\n        const e = specificityOfMostSpecificListItem(s.nodes);\n        t += e.a, c += e.b, i += e.c;\n      }\n      break;\n    case \"::view-transition-group\":\n    case \"::view-transition-image-pair\":\n    case \"::view-transition-old\":\n    case \"::view-transition-new\":\n      if (s.nodes && 1 === s.nodes.length && \"selector\" === s.nodes[0].type && selectorNodeContainsOnlyUniversal(s.nodes[0])) return {\n        a: 0,\n        b: 0,\n        c: 0\n      };\n      i += 1;\n      break;\n    default:\n      i += 1;\n  } else if (e.isPseudoClass(s)) switch (s.value.toLowerCase()) {\n    case \":-moz-any\":\n    case \":-webkit-any\":\n    case \":any\":\n    case \":has\":\n    case \":is\":\n    case \":matches\":\n    case \":not\":\n      if (s.nodes && s.nodes.length > 0) {\n        const e = specificityOfMostSpecificListItem(s.nodes);\n        t += e.a, c += e.b, i += e.c;\n      }\n      break;\n    case \":where\":\n      break;\n    case \":nth-child\":\n    case \":nth-last-child\":\n      if (c += 1, s.nodes && s.nodes.length > 0) {\n        const n = s.nodes[0].nodes.findIndex(e => \"tag\" === e.type && \"of\" === e.value.toLowerCase());\n        if (n > -1) {\n          const o = [e.selector({\n            nodes: s.nodes[0].nodes.slice(n + 1),\n            value: \"\"\n          })];\n          s.nodes.length > 1 && o.push(...s.nodes.slice(1));\n          const a = specificityOfMostSpecificListItem(o);\n          t += a.a, c += a.b, i += a.c;\n        }\n      }\n      break;\n    case \":local\":\n    case \":global\":\n      s.nodes && s.nodes.length > 0 && s.nodes.forEach(e => {\n        const s = selectorSpecificity(e);\n        t += s.a, c += s.b, i += s.c;\n      });\n      break;\n    case \":host\":\n    case \":host-context\":\n      if (c += 1, s.nodes && s.nodes.length > 0) {\n        const e = specificityOfMostSpecificListItem(s.nodes);\n        t += e.a, c += e.b, i += e.c;\n      }\n      break;\n    default:\n      c += 1;\n  } else e.isContainer(s) && s.nodes.length > 0 && s.nodes.forEach(e => {\n    const s = selectorSpecificity(e);\n    t += s.a, c += s.b, i += s.c;\n  });\n  return {\n    a: t,\n    b: c,\n    c: i\n  };\n}\nfunction specificityOfMostSpecificListItem(e) {\n  let s = {\n    a: 0,\n    b: 0,\n    c: 0\n  };\n  return e.forEach(e => {\n    const t = selectorSpecificity(e);\n    t.a > s.a ? s = t : t.a < s.a || (t.b > s.b ? s = t : t.b < s.b || t.c > s.c && (s = t));\n  }), s;\n}\nfunction isPseudoElement(s) {\n  return e.isPseudoElement(s);\n}\nfunction selectorNodeContainsOnlyUniversal(e) {\n  if (!e) return !1;\n  if (!e.nodes) return !1;\n  const s = e.nodes.filter(e => \"comment\" !== e.type);\n  return 1 === s.length && \"universal\" === s[0].type;\n}\nexport { compare, selectorSpecificity };","map":{"version":3,"names":["e","compare","s","a","b","c","selectorSpecificity","t","i","type","isPseudoElement","value","toLowerCase","nodes","length","specificityOfMostSpecificListItem","selectorNodeContainsOnlyUniversal","isPseudoClass","n","findIndex","o","selector","slice","push","forEach","isContainer","filter"],"sources":["C:/Users/chest/OneDrive/Documentos/GitHub/HackUPC/frontend/node_modules/@csstools/selector-specificity/dist/index.mjs"],"sourcesContent":["import e from\"postcss-selector-parser\";function compare(e,s){return e.a===s.a?e.b===s.b?e.c-s.c:e.b-s.b:e.a-s.a}function selectorSpecificity(s){if(!s)return{a:0,b:0,c:0};let t=0,c=0,i=0;if(\"universal\"==s.type)return{a:0,b:0,c:0};if(\"id\"===s.type)t+=1;else if(\"tag\"===s.type)i+=1;else if(\"class\"===s.type)c+=1;else if(\"attribute\"===s.type)c+=1;else if(isPseudoElement(s))switch(s.value.toLowerCase()){case\"::slotted\":if(i+=1,s.nodes&&s.nodes.length>0){const e=specificityOfMostSpecificListItem(s.nodes);t+=e.a,c+=e.b,i+=e.c}break;case\"::view-transition-group\":case\"::view-transition-image-pair\":case\"::view-transition-old\":case\"::view-transition-new\":if(s.nodes&&1===s.nodes.length&&\"selector\"===s.nodes[0].type&&selectorNodeContainsOnlyUniversal(s.nodes[0]))return{a:0,b:0,c:0};i+=1;break;default:i+=1}else if(e.isPseudoClass(s))switch(s.value.toLowerCase()){case\":-moz-any\":case\":-webkit-any\":case\":any\":case\":has\":case\":is\":case\":matches\":case\":not\":if(s.nodes&&s.nodes.length>0){const e=specificityOfMostSpecificListItem(s.nodes);t+=e.a,c+=e.b,i+=e.c}break;case\":where\":break;case\":nth-child\":case\":nth-last-child\":if(c+=1,s.nodes&&s.nodes.length>0){const n=s.nodes[0].nodes.findIndex((e=>\"tag\"===e.type&&\"of\"===e.value.toLowerCase()));if(n>-1){const o=[e.selector({nodes:s.nodes[0].nodes.slice(n+1),value:\"\"})];s.nodes.length>1&&o.push(...s.nodes.slice(1));const a=specificityOfMostSpecificListItem(o);t+=a.a,c+=a.b,i+=a.c}}break;case\":local\":case\":global\":s.nodes&&s.nodes.length>0&&s.nodes.forEach((e=>{const s=selectorSpecificity(e);t+=s.a,c+=s.b,i+=s.c}));break;case\":host\":case\":host-context\":if(c+=1,s.nodes&&s.nodes.length>0){const e=specificityOfMostSpecificListItem(s.nodes);t+=e.a,c+=e.b,i+=e.c}break;default:c+=1}else e.isContainer(s)&&s.nodes.length>0&&s.nodes.forEach((e=>{const s=selectorSpecificity(e);t+=s.a,c+=s.b,i+=s.c}));return{a:t,b:c,c:i}}function specificityOfMostSpecificListItem(e){let s={a:0,b:0,c:0};return e.forEach((e=>{const t=selectorSpecificity(e);t.a>s.a?s=t:t.a<s.a||(t.b>s.b?s=t:t.b<s.b||t.c>s.c&&(s=t))})),s}function isPseudoElement(s){return e.isPseudoElement(s)}function selectorNodeContainsOnlyUniversal(e){if(!e)return!1;if(!e.nodes)return!1;const s=e.nodes.filter((e=>\"comment\"!==e.type));return 1===s.length&&\"universal\"===s[0].type}export{compare,selectorSpecificity};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}