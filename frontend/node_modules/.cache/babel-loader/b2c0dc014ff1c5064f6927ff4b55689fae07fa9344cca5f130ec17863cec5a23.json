{"ast":null,"code":"/*\r\nexport default async function uploadImage(imageBase64) {\r\n    try {\r\n        const response = await fetch(\"http://localhost:8000/uploadfile/\", {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({filename: \"a.jpg\", filedata: imageBase64 })\r\n        });\r\n\r\n        if (!response.ok) {\r\n            console.log(\"Error al enviar la imagen\")\r\n            return null;\r\n        }\r\n\r\n        const data = await response.json();\r\n        return data;\r\n    } catch (error) {\r\n        console.error(\"Error al subir la imagen:\", error.message);\r\n        return null;\r\n    }\r\n}\r\n*/\nexport default async function uploadImage(imageBase64, filename = \"prueba.jpg\") {\n  const base64Data = imageBase64.replace(/^data:image\\/[a-z]+;base64,/, \"\");\n  const formData = new FormData();\n  formData.append('filename', filename);\n  formData.append('filedata', base64Data);\n  try {\n    const response = await fetch(\"http://localhost:8000/uploadfile/\", {\n      method: \"POST\",\n      body: formData\n    });\n    if (!response.ok) {\n      console.log(\"Error al enviar la imagen\");\n      return null;\n    }\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error(\"Error al subir la imagen:\", error.message);\n    return null;\n  }\n}","map":{"version":3,"names":["uploadImage","imageBase64","filename","base64Data","replace","formData","FormData","append","response","fetch","method","body","ok","console","log","data","json","error","message"],"sources":["C:/Users/chest/OneDrive/Documentos/GitHub/HackUPC/frontend/src/backend/index.js"],"sourcesContent":["/*\r\nexport default async function uploadImage(imageBase64) {\r\n    try {\r\n        const response = await fetch(\"http://localhost:8000/uploadfile/\", {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({filename: \"a.jpg\", filedata: imageBase64 })\r\n        });\r\n\r\n        if (!response.ok) {\r\n            console.log(\"Error al enviar la imagen\")\r\n            return null;\r\n        }\r\n\r\n        const data = await response.json();\r\n        return data;\r\n    } catch (error) {\r\n        console.error(\"Error al subir la imagen:\", error.message);\r\n        return null;\r\n    }\r\n}\r\n*/\r\nexport default async function uploadImage(imageBase64, filename = \"prueba.jpg\") {\r\n    const base64Data = imageBase64.replace(/^data:image\\/[a-z]+;base64,/, \"\");\r\n    const formData = new FormData();\r\n    formData.append('filename', filename);\r\n    formData.append('filedata', base64Data);\r\n\r\n    try {\r\n        const response = await fetch(\"http://localhost:8000/uploadfile/\", {\r\n            method: \"POST\",\r\n            body: formData\r\n        });\r\n\r\n        if (!response.ok) {\r\n            console.log(\"Error al enviar la imagen\");\r\n            return null;\r\n        }\r\n\r\n        const data = await response.json();\r\n        return data;\r\n    } catch (error) {\r\n        console.error(\"Error al subir la imagen:\", error.message);\r\n        return null;\r\n    }\r\n}\r\n\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,eAAeA,WAAWA,CAACC,WAAW,EAAEC,QAAQ,GAAG,YAAY,EAAE;EAC5E,MAAMC,UAAU,GAAGF,WAAW,CAACG,OAAO,CAAC,6BAA6B,EAAE,EAAE,CAAC;EACzE,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;EAC/BD,QAAQ,CAACE,MAAM,CAAC,UAAU,EAAEL,QAAQ,CAAC;EACrCG,QAAQ,CAACE,MAAM,CAAC,UAAU,EAAEJ,UAAU,CAAC;EAEvC,IAAI;IACA,MAAMK,QAAQ,GAAG,MAAMC,KAAK,CAAC,mCAAmC,EAAE;MAC9DC,MAAM,EAAE,MAAM;MACdC,IAAI,EAAEN;IACV,CAAC,CAAC;IAEF,IAAI,CAACG,QAAQ,CAACI,EAAE,EAAE;MACdC,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC;MACxC,OAAO,IAAI;IACf;IAEA,MAAMC,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;IAClC,OAAOD,IAAI;EACf,CAAC,CAAC,OAAOE,KAAK,EAAE;IACZJ,OAAO,CAACI,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAACC,OAAO,CAAC;IACzD,OAAO,IAAI;EACf;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}