{"ast":null,"code":"'use strict';\n\nmodule.exports = function (includes, t) {\n  var sparseish = {\n    length: 5,\n    0: 'a',\n    1: 'b'\n  };\n  var overfullarrayish = {\n    length: 2,\n    0: 'a',\n    1: 'b',\n    2: 'c'\n  };\n  var thrower = {\n    valueOf: function () {\n      throw new RangeError('whoa');\n    }\n  };\n  var numberish = {\n    valueOf: function () {\n      return 2;\n    }\n  };\n  t.test('simple examples', function (st) {\n    st.equal(true, includes([1, 2, 3], 1), '[1, 2, 3] includes 1');\n    st.equal(false, includes([1, 2, 3], 4), '[1, 2, 3] does not include 4');\n    st.equal(true, includes([NaN], NaN), '[NaN] includes NaN');\n    st.end();\n  });\n  t.test('does not skip holes', function (st) {\n    st.equal(true, includes(Array(1)), 'Array(1) includes undefined');\n    st.end();\n  });\n  t.test('exceptions', function (et) {\n    et.test('fromIndex conversion', function (st) {\n      st['throws'](function () {\n        includes([0], 0, thrower);\n      }, RangeError, 'fromIndex conversion throws');\n      st.end();\n    });\n    et.test('ToLength', function (st) {\n      st['throws'](function () {\n        includes({\n          length: thrower,\n          0: true\n        }, true);\n      }, RangeError, 'ToLength conversion throws');\n      st.end();\n    });\n    et.end();\n  });\n  t.test('arraylike', function (st) {\n    st.equal(true, includes(sparseish, 'a'), 'sparse array-like object includes \"a\"');\n    st.equal(false, includes(sparseish, 'c'), 'sparse array-like object does not include \"c\"');\n    st.equal(true, includes(overfullarrayish, 'b'), 'sparse array-like object includes \"b\"');\n    st.equal(false, includes(overfullarrayish, 'c'), 'sparse array-like object does not include \"c\"');\n    st.end();\n  });\n  t.test('fromIndex', function (ft) {\n    ft.equal(true, includes([1], 1, NaN), 'NaN fromIndex -> 0 fromIndex');\n    ft.equal(true, includes([0, 1, 2], 1, 0), 'starting from 0 finds index 1');\n    ft.equal(true, includes([0, 1, 2], 1, 1), 'starting from 1 finds index 1');\n    ft.equal(false, includes([0, 1, 2], 1, 2), 'starting from 2 does not find index 1');\n    ft.test('number coercion', function (st) {\n      st.equal(false, includes(['a', 'b', 'c'], 'a', numberish), 'does not find \"a\" with object fromIndex coercing to 2');\n      st.equal(false, includes(['a', 'b', 'c'], 'a', '2'), 'does not find \"a\" with string fromIndex coercing to 2');\n      st.equal(true, includes(['a', 'b', 'c'], 'c', numberish), 'finds \"c\" with object fromIndex coercing to 2');\n      st.equal(true, includes(['a', 'b', 'c'], 'c', '2'), 'finds \"c\" with string fromIndex coercing to 2');\n      st.end();\n    });\n    ft.test('fromIndex greater than length', function (st) {\n      st.equal(false, includes([1], 1, 2), 'array of length 1 is not searched if fromIndex is > 1');\n      st.equal(false, includes([1], 1, 1), 'array of length 1 is not searched if fromIndex is >= 1');\n      st.equal(false, includes([1], 1, 1.1), 'array of length 1 is not searched if fromIndex is 1.1');\n      st.equal(false, includes([1], 1, Infinity), 'array of length 1 is not searched if fromIndex is Infinity');\n      st.end();\n    });\n    ft.test('negative fromIndex', function (st) {\n      st.equal(true, includes([1, 3], 1, -4), 'computed length would be negative; fromIndex is thus 0');\n      st.equal(true, includes([1, 3], 3, -4), 'computed length would be negative; fromIndex is thus 0');\n      st.equal(true, includes([1, 3], 1, -Infinity), 'computed length would be negative; fromIndex is thus 0');\n      st.equal(true, includes([12, 13], 13, -1), 'finds -1st item with -1 fromIndex');\n      st.equal(false, includes([12, 13], 12, -1), 'does not find -2nd item with -1 fromIndex');\n      st.equal(true, includes([12, 13], 13, -2), 'finds -2nd item with -2 fromIndex');\n      st.equal(true, includes(sparseish, 'b', -4), 'finds -4th item with -4 fromIndex');\n      st.equal(false, includes(sparseish, 'a', -4), 'does not find -5th item with -4 fromIndex');\n      st.equal(true, includes(sparseish, 'a', -5), 'finds -5th item with -5 fromIndex');\n      st.end();\n    });\n    ft.end();\n  });\n  t.test('strings', function (st) {\n    st.equal(true, includes('abc', 'c'), 'string includes one of its chars');\n    st.equal(false, includes('abc', 'd'), 'string does not include a char it should not');\n    st.equal(true, includes(Object('abc'), 'c'), 'boxed string includes one of its chars');\n    st.equal(false, includes(Object('abc'), 'd'), 'boxed string does not include a char it should not');\n    st.end();\n  });\n};","map":{"version":3,"names":["module","exports","includes","t","sparseish","length","overfullarrayish","thrower","valueOf","RangeError","numberish","test","st","equal","NaN","end","Array","et","ft","Infinity","Object"],"sources":["C:/Users/chest/OneDrive/Documentos/GitHub/HackUPC/frontend/node_modules/array-includes/test/tests.js"],"sourcesContent":["'use strict';\n\nmodule.exports = function (includes, t) {\n\tvar sparseish = { length: 5, 0: 'a', 1: 'b' };\n\tvar overfullarrayish = { length: 2, 0: 'a', 1: 'b', 2: 'c' };\n\tvar thrower = { valueOf: function () { throw new RangeError('whoa'); } };\n\tvar numberish = { valueOf: function () { return 2; } };\n\n\tt.test('simple examples', function (st) {\n\t\tst.equal(true, includes([1, 2, 3], 1), '[1, 2, 3] includes 1');\n\t\tst.equal(false, includes([1, 2, 3], 4), '[1, 2, 3] does not include 4');\n\t\tst.equal(true, includes([NaN], NaN), '[NaN] includes NaN');\n\t\tst.end();\n\t});\n\n\tt.test('does not skip holes', function (st) {\n\t\tst.equal(true, includes(Array(1)), 'Array(1) includes undefined');\n\t\tst.end();\n\t});\n\n\tt.test('exceptions', function (et) {\n\t\tet.test('fromIndex conversion', function (st) {\n\t\t\tst['throws'](function () { includes([0], 0, thrower); }, RangeError, 'fromIndex conversion throws');\n\t\t\tst.end();\n\t\t});\n\n\t\tet.test('ToLength', function (st) {\n\t\t\tst['throws'](function () { includes({ length: thrower, 0: true }, true); }, RangeError, 'ToLength conversion throws');\n\t\t\tst.end();\n\t\t});\n\n\t\tet.end();\n\t});\n\n\tt.test('arraylike', function (st) {\n\t\tst.equal(true, includes(sparseish, 'a'), 'sparse array-like object includes \"a\"');\n\t\tst.equal(false, includes(sparseish, 'c'), 'sparse array-like object does not include \"c\"');\n\n\t\tst.equal(true, includes(overfullarrayish, 'b'), 'sparse array-like object includes \"b\"');\n\t\tst.equal(false, includes(overfullarrayish, 'c'), 'sparse array-like object does not include \"c\"');\n\t\tst.end();\n\t});\n\n\tt.test('fromIndex', function (ft) {\n\t\tft.equal(true, includes([1], 1, NaN), 'NaN fromIndex -> 0 fromIndex');\n\n\t\tft.equal(true, includes([0, 1, 2], 1, 0), 'starting from 0 finds index 1');\n\t\tft.equal(true, includes([0, 1, 2], 1, 1), 'starting from 1 finds index 1');\n\t\tft.equal(false, includes([0, 1, 2], 1, 2), 'starting from 2 does not find index 1');\n\n\t\tft.test('number coercion', function (st) {\n\t\t\tst.equal(false, includes(['a', 'b', 'c'], 'a', numberish), 'does not find \"a\" with object fromIndex coercing to 2');\n\t\t\tst.equal(false, includes(['a', 'b', 'c'], 'a', '2'), 'does not find \"a\" with string fromIndex coercing to 2');\n\t\t\tst.equal(true, includes(['a', 'b', 'c'], 'c', numberish), 'finds \"c\" with object fromIndex coercing to 2');\n\t\t\tst.equal(true, includes(['a', 'b', 'c'], 'c', '2'), 'finds \"c\" with string fromIndex coercing to 2');\n\t\t\tst.end();\n\t\t});\n\n\t\tft.test('fromIndex greater than length', function (st) {\n\t\t\tst.equal(false, includes([1], 1, 2), 'array of length 1 is not searched if fromIndex is > 1');\n\t\t\tst.equal(false, includes([1], 1, 1), 'array of length 1 is not searched if fromIndex is >= 1');\n\t\t\tst.equal(false, includes([1], 1, 1.1), 'array of length 1 is not searched if fromIndex is 1.1');\n\t\t\tst.equal(false, includes([1], 1, Infinity), 'array of length 1 is not searched if fromIndex is Infinity');\n\t\t\tst.end();\n\t\t});\n\n\t\tft.test('negative fromIndex', function (st) {\n\t\t\tst.equal(true, includes([1, 3], 1, -4), 'computed length would be negative; fromIndex is thus 0');\n\t\t\tst.equal(true, includes([1, 3], 3, -4), 'computed length would be negative; fromIndex is thus 0');\n\t\t\tst.equal(true, includes([1, 3], 1, -Infinity), 'computed length would be negative; fromIndex is thus 0');\n\n\t\t\tst.equal(true, includes([12, 13], 13, -1), 'finds -1st item with -1 fromIndex');\n\t\t\tst.equal(false, includes([12, 13], 12, -1), 'does not find -2nd item with -1 fromIndex');\n\t\t\tst.equal(true, includes([12, 13], 13, -2), 'finds -2nd item with -2 fromIndex');\n\n\t\t\tst.equal(true, includes(sparseish, 'b', -4), 'finds -4th item with -4 fromIndex');\n\t\t\tst.equal(false, includes(sparseish, 'a', -4), 'does not find -5th item with -4 fromIndex');\n\t\t\tst.equal(true, includes(sparseish, 'a', -5), 'finds -5th item with -5 fromIndex');\n\t\t\tst.end();\n\t\t});\n\n\t\tft.end();\n\t});\n\n\tt.test('strings', function (st) {\n\t\tst.equal(true, includes('abc', 'c'), 'string includes one of its chars');\n\t\tst.equal(false, includes('abc', 'd'), 'string does not include a char it should not');\n\n\t\tst.equal(true, includes(Object('abc'), 'c'), 'boxed string includes one of its chars');\n\t\tst.equal(false, includes(Object('abc'), 'd'), 'boxed string does not include a char it should not');\n\n\t\tst.end();\n\t});\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}