{"ast":null,"code":"/*! js-yaml 4.1.0 https://github.com/nodeca/js-yaml @license MIT */\nfunction isNothing(subject) {\n  return typeof subject === 'undefined' || subject === null;\n}\nfunction isObject(subject) {\n  return typeof subject === 'object' && subject !== null;\n}\nfunction toArray(sequence) {\n  if (Array.isArray(sequence)) return sequence;else if (isNothing(sequence)) return [];\n  return [sequence];\n}\nfunction extend(target, source) {\n  var index, length, key, sourceKeys;\n  if (source) {\n    sourceKeys = Object.keys(source);\n    for (index = 0, length = sourceKeys.length; index < length; index += 1) {\n      key = sourceKeys[index];\n      target[key] = source[key];\n    }\n  }\n  return target;\n}\nfunction repeat(string, count) {\n  var result = '',\n    cycle;\n  for (cycle = 0; cycle < count; cycle += 1) {\n    result += string;\n  }\n  return result;\n}\nfunction isNegativeZero(number) {\n  return number === 0 && Number.NEGATIVE_INFINITY === 1 / number;\n}\nvar isNothing_1 = isNothing;\nvar isObject_1 = isObject;\nvar toArray_1 = toArray;\nvar repeat_1 = repeat;\nvar isNegativeZero_1 = isNegativeZero;\nvar extend_1 = extend;\nvar common = {\n  isNothing: isNothing_1,\n  isObject: isObject_1,\n  toArray: toArray_1,\n  repeat: repeat_1,\n  isNegativeZero: isNegativeZero_1,\n  extend: extend_1\n};\n\n// YAML error class. http://stackoverflow.com/questions/8458984\n\nfunction formatError(exception, compact) {\n  var where = '',\n    message = exception.reason || '(unknown reason)';\n  if (!exception.mark) return message;\n  if (exception.mark.name) {\n    where += 'in \"' + exception.mark.name + '\" ';\n  }\n  where += '(' + (exception.mark.line + 1) + ':' + (exception.mark.column + 1) + ')';\n  if (!compact && exception.mark.snippet) {\n    where += '\\n\\n' + exception.mark.snippet;\n  }\n  return message + ' ' + where;\n}\nfunction YAMLException$1(reason, mark) {\n  // Super constructor\n  Error.call(this);\n  this.name = 'YAMLException';\n  this.reason = reason;\n  this.mark = mark;\n  this.message = formatError(this, false);\n\n  // Include stack trace in error object\n  if (Error.captureStackTrace) {\n    // Chrome and NodeJS\n    Error.captureStackTrace(this, this.constructor);\n  } else {\n    // FF, IE 10+ and Safari 6+. Fallback for others\n    this.stack = new Error().stack || '';\n  }\n}\n\n// Inherit from Error\nYAMLException$1.prototype = Object.create(Error.prototype);\nYAMLException$1.prototype.constructor = YAMLException$1;\nYAMLException$1.prototype.toString = function toString(compact) {\n  return this.name + ': ' + formatError(this, compact);\n};\nvar exception = YAMLException$1;\n\n// get snippet for a single line, respecting maxLength\nfunction getLine(buffer, lineStart, lineEnd, position, maxLineLength) {\n  var head = '';\n  var tail = '';\n  var maxHalfLength = Math.floor(maxLineLength / 2) - 1;\n  if (position - lineStart > maxHalfLength) {\n    head = ' ... ';\n    lineStart = position - maxHalfLength + head.length;\n  }\n  if (lineEnd - position > maxHalfLength) {\n    tail = ' ...';\n    lineEnd = position + maxHalfLength - tail.length;\n  }\n  return {\n    str: head + buffer.slice(lineStart, lineEnd).replace(/\\t/g, '→') + tail,\n    pos: position - lineStart + head.length // relative position\n  };\n}\nfunction padStart(string, max) {\n  return common.repeat(' ', max - string.length) + string;\n}\nfunction makeSnippet(mark, options) {\n  options = Object.create(options || null);\n  if (!mark.buffer) return null;\n  if (!options.maxLength) options.maxLength = 79;\n  if (typeof options.indent !== 'number') options.indent = 1;\n  if (typeof options.linesBefore !== 'number') options.linesBefore = 3;\n  if (typeof options.linesAfter !== 'number') options.linesAfter = 2;\n  var re = /\\r?\\n|\\r|\\0/g;\n  var lineStarts = [0];\n  var lineEnds = [];\n  var match;\n  var foundLineNo = -1;\n  while (match = re.exec(mark.buffer)) {\n    lineEnds.push(match.index);\n    lineStarts.push(match.index + match[0].length);\n    if (mark.position <= match.index && foundLineNo < 0) {\n      foundLineNo = lineStarts.length - 2;\n    }\n  }\n  if (foundLineNo < 0) foundLineNo = lineStarts.length - 1;\n  var result = '',\n    i,\n    line;\n  var lineNoLength = Math.min(mark.line + options.linesAfter, lineEnds.length).toString().length;\n  var maxLineLength = options.maxLength - (options.indent + lineNoLength + 3);\n  for (i = 1; i <= options.linesBefore; i++) {\n    if (foundLineNo - i < 0) break;\n    line = getLine(mark.buffer, lineStarts[foundLineNo - i], lineEnds[foundLineNo - i], mark.position - (lineStarts[foundLineNo] - lineStarts[foundLineNo - i]), maxLineLength);\n    result = common.repeat(' ', options.indent) + padStart((mark.line - i + 1).toString(), lineNoLength) + ' | ' + line.str + '\\n' + result;\n  }\n  line = getLine(mark.buffer, lineStarts[foundLineNo], lineEnds[foundLineNo], mark.position, maxLineLength);\n  result += common.repeat(' ', options.indent) + padStart((mark.line + 1).toString(), lineNoLength) + ' | ' + line.str + '\\n';\n  result += common.repeat('-', options.indent + lineNoLength + 3 + line.pos) + '^' + '\\n';\n  for (i = 1; i <= options.linesAfter; i++) {\n    if (foundLineNo + i >= lineEnds.length) break;\n    line = getLine(mark.buffer, lineStarts[foundLineNo + i], lineEnds[foundLineNo + i], mark.position - (lineStarts[foundLineNo] - lineStarts[foundLineNo + i]), maxLineLength);\n    result += common.repeat(' ', options.indent) + padStart((mark.line + i + 1).toString(), lineNoLength) + ' | ' + line.str + '\\n';\n  }\n  return result.replace(/\\n$/, '');\n}\nvar snippet = makeSnippet;\nvar TYPE_CONSTRUCTOR_OPTIONS = ['kind', 'multi', 'resolve', 'construct', 'instanceOf', 'predicate', 'represent', 'representName', 'defaultStyle', 'styleAliases'];\nvar YAML_NODE_KINDS = ['scalar', 'sequence', 'mapping'];\nfunction compileStyleAliases(map) {\n  var result = {};\n  if (map !== null) {\n    Object.keys(map).forEach(function (style) {\n      map[style].forEach(function (alias) {\n        result[String(alias)] = style;\n      });\n    });\n  }\n  return result;\n}\nfunction Type$1(tag, options) {\n  options = options || {};\n  Object.keys(options).forEach(function (name) {\n    if (TYPE_CONSTRUCTOR_OPTIONS.indexOf(name) === -1) {\n      throw new exception('Unknown option \"' + name + '\" is met in definition of \"' + tag + '\" YAML type.');\n    }\n  });\n\n  // TODO: Add tag format check.\n  this.options = options; // keep original options in case user wants to extend this type later\n  this.tag = tag;\n  this.kind = options['kind'] || null;\n  this.resolve = options['resolve'] || function () {\n    return true;\n  };\n  this.construct = options['construct'] || function (data) {\n    return data;\n  };\n  this.instanceOf = options['instanceOf'] || null;\n  this.predicate = options['predicate'] || null;\n  this.represent = options['represent'] || null;\n  this.representName = options['representName'] || null;\n  this.defaultStyle = options['defaultStyle'] || null;\n  this.multi = options['multi'] || false;\n  this.styleAliases = compileStyleAliases(options['styleAliases'] || null);\n  if (YAML_NODE_KINDS.indexOf(this.kind) === -1) {\n    throw new exception('Unknown kind \"' + this.kind + '\" is specified for \"' + tag + '\" YAML type.');\n  }\n}\nvar type = Type$1;\n\n/*eslint-disable max-len*/\n\nfunction compileList(schema, name) {\n  var result = [];\n  schema[name].forEach(function (currentType) {\n    var newIndex = result.length;\n    result.forEach(function (previousType, previousIndex) {\n      if (previousType.tag === currentType.tag && previousType.kind === currentType.kind && previousType.multi === currentType.multi) {\n        newIndex = previousIndex;\n      }\n    });\n    result[newIndex] = currentType;\n  });\n  return result;\n}\nfunction compileMap( /* lists... */\n) {\n  var result = {\n      scalar: {},\n      sequence: {},\n      mapping: {},\n      fallback: {},\n      multi: {\n        scalar: [],\n        sequence: [],\n        mapping: [],\n        fallback: []\n      }\n    },\n    index,\n    length;\n  function collectType(type) {\n    if (type.multi) {\n      result.multi[type.kind].push(type);\n      result.multi['fallback'].push(type);\n    } else {\n      result[type.kind][type.tag] = result['fallback'][type.tag] = type;\n    }\n  }\n  for (index = 0, length = arguments.length; index < length; index += 1) {\n    arguments[index].forEach(collectType);\n  }\n  return result;\n}\nfunction Schema$1(definition) {\n  return this.extend(definition);\n}\nSchema$1.prototype.extend = function extend(definition) {\n  var implicit = [];\n  var explicit = [];\n  if (definition instanceof type) {\n    // Schema.extend(type)\n    explicit.push(definition);\n  } else if (Array.isArray(definition)) {\n    // Schema.extend([ type1, type2, ... ])\n    explicit = explicit.concat(definition);\n  } else if (definition && (Array.isArray(definition.implicit) || Array.isArray(definition.explicit))) {\n    // Schema.extend({ explicit: [ type1, type2, ... ], implicit: [ type1, type2, ... ] })\n    if (definition.implicit) implicit = implicit.concat(definition.implicit);\n    if (definition.explicit) explicit = explicit.concat(definition.explicit);\n  } else {\n    throw new exception('Schema.extend argument should be a Type, [ Type ], ' + 'or a schema definition ({ implicit: [...], explicit: [...] })');\n  }\n  implicit.forEach(function (type$1) {\n    if (!(type$1 instanceof type)) {\n      throw new exception('Specified list of YAML types (or a single Type object) contains a non-Type object.');\n    }\n    if (type$1.loadKind && type$1.loadKind !== 'scalar') {\n      throw new exception('There is a non-scalar type in the implicit list of a schema. Implicit resolving of such types is not supported.');\n    }\n    if (type$1.multi) {\n      throw new exception('There is a multi type in the implicit list of a schema. Multi tags can only be listed as explicit.');\n    }\n  });\n  explicit.forEach(function (type$1) {\n    if (!(type$1 instanceof type)) {\n      throw new exception('Specified list of YAML types (or a single Type object) contains a non-Type object.');\n    }\n  });\n  var result = Object.create(Schema$1.prototype);\n  result.implicit = (this.implicit || []).concat(implicit);\n  result.explicit = (this.explicit || []).concat(explicit);\n  result.compiledImplicit = compileList(result, 'implicit');\n  result.compiledExplicit = compileList(result, 'explicit');\n  result.compiledTypeMap = compileMap(result.compiledImplicit, result.compiledExplicit);\n  return result;\n};\nvar schema = Schema$1;\nvar str = new type('tag:yaml.org,2002:str', {\n  kind: 'scalar',\n  construct: function (data) {\n    return data !== null ? data : '';\n  }\n});\nvar seq = new type('tag:yaml.org,2002:seq', {\n  kind: 'sequence',\n  construct: function (data) {\n    return data !== null ? data : [];\n  }\n});\nvar map = new type('tag:yaml.org,2002:map', {\n  kind: 'mapping',\n  construct: function (data) {\n    return data !== null ? data : {};\n  }\n});\nvar failsafe = new schema({\n  explicit: [str, seq, map]\n});\nfunction resolveYamlNull(data) {\n  if (data === null) return true;\n  var max = data.length;\n  return max === 1 && data === '~' || max === 4 && (data === 'null' || data === 'Null' || data === 'NULL');\n}\nfunction constructYamlNull() {\n  return null;\n}\nfunction isNull(object) {\n  return object === null;\n}\nvar _null = new type('tag:yaml.org,2002:null', {\n  kind: 'scalar',\n  resolve: resolveYamlNull,\n  construct: constructYamlNull,\n  predicate: isNull,\n  represent: {\n    canonical: function () {\n      return '~';\n    },\n    lowercase: function () {\n      return 'null';\n    },\n    uppercase: function () {\n      return 'NULL';\n    },\n    camelcase: function () {\n      return 'Null';\n    },\n    empty: function () {\n      return '';\n    }\n  },\n  defaultStyle: 'lowercase'\n});\nfunction resolveYamlBoolean(data) {\n  if (data === null) return false;\n  var max = data.length;\n  return max === 4 && (data === 'true' || data === 'True' || data === 'TRUE') || max === 5 && (data === 'false' || data === 'False' || data === 'FALSE');\n}\nfunction constructYamlBoolean(data) {\n  return data === 'true' || data === 'True' || data === 'TRUE';\n}\nfunction isBoolean(object) {\n  return Object.prototype.toString.call(object) === '[object Boolean]';\n}\nvar bool = new type('tag:yaml.org,2002:bool', {\n  kind: 'scalar',\n  resolve: resolveYamlBoolean,\n  construct: constructYamlBoolean,\n  predicate: isBoolean,\n  represent: {\n    lowercase: function (object) {\n      return object ? 'true' : 'false';\n    },\n    uppercase: function (object) {\n      return object ? 'TRUE' : 'FALSE';\n    },\n    camelcase: function (object) {\n      return object ? 'True' : 'False';\n    }\n  },\n  defaultStyle: 'lowercase'\n});\nfunction isHexCode(c) {\n  return 0x30 /* 0 */ <= c && c <= 0x39 /* 9 */ || 0x41 /* A */ <= c && c <= 0x46 /* F */ || 0x61 /* a */ <= c && c <= 0x66 /* f */;\n}\nfunction isOctCode(c) {\n  return 0x30 /* 0 */ <= c && c <= 0x37 /* 7 */;\n}\nfunction isDecCode(c) {\n  return 0x30 /* 0 */ <= c && c <= 0x39 /* 9 */;\n}\nfunction resolveYamlInteger(data) {\n  if (data === null) return false;\n  var max = data.length,\n    index = 0,\n    hasDigits = false,\n    ch;\n  if (!max) return false;\n  ch = data[index];\n\n  // sign\n  if (ch === '-' || ch === '+') {\n    ch = data[++index];\n  }\n  if (ch === '0') {\n    // 0\n    if (index + 1 === max) return true;\n    ch = data[++index];\n\n    // base 2, base 8, base 16\n\n    if (ch === 'b') {\n      // base 2\n      index++;\n      for (; index < max; index++) {\n        ch = data[index];\n        if (ch === '_') continue;\n        if (ch !== '0' && ch !== '1') return false;\n        hasDigits = true;\n      }\n      return hasDigits && ch !== '_';\n    }\n    if (ch === 'x') {\n      // base 16\n      index++;\n      for (; index < max; index++) {\n        ch = data[index];\n        if (ch === '_') continue;\n        if (!isHexCode(data.charCodeAt(index))) return false;\n        hasDigits = true;\n      }\n      return hasDigits && ch !== '_';\n    }\n    if (ch === 'o') {\n      // base 8\n      index++;\n      for (; index < max; index++) {\n        ch = data[index];\n        if (ch === '_') continue;\n        if (!isOctCode(data.charCodeAt(index))) return false;\n        hasDigits = true;\n      }\n      return hasDigits && ch !== '_';\n    }\n  }\n\n  // base 10 (except 0)\n\n  // value should not start with `_`;\n  if (ch === '_') return false;\n  for (; index < max; index++) {\n    ch = data[index];\n    if (ch === '_') continue;\n    if (!isDecCode(data.charCodeAt(index))) {\n      return false;\n    }\n    hasDigits = true;\n  }\n\n  // Should have digits and should not end with `_`\n  if (!hasDigits || ch === '_') return false;\n  return true;\n}\nfunction constructYamlInteger(data) {\n  var value = data,\n    sign = 1,\n    ch;\n  if (value.indexOf('_') !== -1) {\n    value = value.replace(/_/g, '');\n  }\n  ch = value[0];\n  if (ch === '-' || ch === '+') {\n    if (ch === '-') sign = -1;\n    value = value.slice(1);\n    ch = value[0];\n  }\n  if (value === '0') return 0;\n  if (ch === '0') {\n    if (value[1] === 'b') return sign * parseInt(value.slice(2), 2);\n    if (value[1] === 'x') return sign * parseInt(value.slice(2), 16);\n    if (value[1] === 'o') return sign * parseInt(value.slice(2), 8);\n  }\n  return sign * parseInt(value, 10);\n}\nfunction isInteger(object) {\n  return Object.prototype.toString.call(object) === '[object Number]' && object % 1 === 0 && !common.isNegativeZero(object);\n}\nvar int = new type('tag:yaml.org,2002:int', {\n  kind: 'scalar',\n  resolve: resolveYamlInteger,\n  construct: constructYamlInteger,\n  predicate: isInteger,\n  represent: {\n    binary: function (obj) {\n      return obj >= 0 ? '0b' + obj.toString(2) : '-0b' + obj.toString(2).slice(1);\n    },\n    octal: function (obj) {\n      return obj >= 0 ? '0o' + obj.toString(8) : '-0o' + obj.toString(8).slice(1);\n    },\n    decimal: function (obj) {\n      return obj.toString(10);\n    },\n    /* eslint-disable max-len */\n    hexadecimal: function (obj) {\n      return obj >= 0 ? '0x' + obj.toString(16).toUpperCase() : '-0x' + obj.toString(16).toUpperCase().slice(1);\n    }\n  },\n  defaultStyle: 'decimal',\n  styleAliases: {\n    binary: [2, 'bin'],\n    octal: [8, 'oct'],\n    decimal: [10, 'dec'],\n    hexadecimal: [16, 'hex']\n  }\n});\nvar YAML_FLOAT_PATTERN = new RegExp(\n// 2.5e4, 2.5 and integers\n'^(?:[-+]?(?:[0-9][0-9_]*)(?:\\\\.[0-9_]*)?(?:[eE][-+]?[0-9]+)?' +\n// .2e4, .2\n// special case, seems not from spec\n'|\\\\.[0-9_]+(?:[eE][-+]?[0-9]+)?' +\n// .inf\n'|[-+]?\\\\.(?:inf|Inf|INF)' +\n// .nan\n'|\\\\.(?:nan|NaN|NAN))$');\nfunction resolveYamlFloat(data) {\n  if (data === null) return false;\n  if (!YAML_FLOAT_PATTERN.test(data) ||\n  // Quick hack to not allow integers end with `_`\n  // Probably should update regexp & check speed\n  data[data.length - 1] === '_') {\n    return false;\n  }\n  return true;\n}\nfunction constructYamlFloat(data) {\n  var value, sign;\n  value = data.replace(/_/g, '').toLowerCase();\n  sign = value[0] === '-' ? -1 : 1;\n  if ('+-'.indexOf(value[0]) >= 0) {\n    value = value.slice(1);\n  }\n  if (value === '.inf') {\n    return sign === 1 ? Number.POSITIVE_INFINITY : Number.NEGATIVE_INFINITY;\n  } else if (value === '.nan') {\n    return NaN;\n  }\n  return sign * parseFloat(value, 10);\n}\nvar SCIENTIFIC_WITHOUT_DOT = /^[-+]?[0-9]+e/;\nfunction representYamlFloat(object, style) {\n  var res;\n  if (isNaN(object)) {\n    switch (style) {\n      case 'lowercase':\n        return '.nan';\n      case 'uppercase':\n        return '.NAN';\n      case 'camelcase':\n        return '.NaN';\n    }\n  } else if (Number.POSITIVE_INFINITY === object) {\n    switch (style) {\n      case 'lowercase':\n        return '.inf';\n      case 'uppercase':\n        return '.INF';\n      case 'camelcase':\n        return '.Inf';\n    }\n  } else if (Number.NEGATIVE_INFINITY === object) {\n    switch (style) {\n      case 'lowercase':\n        return '-.inf';\n      case 'uppercase':\n        return '-.INF';\n      case 'camelcase':\n        return '-.Inf';\n    }\n  } else if (common.isNegativeZero(object)) {\n    return '-0.0';\n  }\n  res = object.toString(10);\n\n  // JS stringifier can build scientific format without dots: 5e-100,\n  // while YAML requres dot: 5.e-100. Fix it with simple hack\n\n  return SCIENTIFIC_WITHOUT_DOT.test(res) ? res.replace('e', '.e') : res;\n}\nfunction isFloat(object) {\n  return Object.prototype.toString.call(object) === '[object Number]' && (object % 1 !== 0 || common.isNegativeZero(object));\n}\nvar float = new type('tag:yaml.org,2002:float', {\n  kind: 'scalar',\n  resolve: resolveYamlFloat,\n  construct: constructYamlFloat,\n  predicate: isFloat,\n  represent: representYamlFloat,\n  defaultStyle: 'lowercase'\n});\nvar json = failsafe.extend({\n  implicit: [_null, bool, int, float]\n});\nvar core = json;\nvar YAML_DATE_REGEXP = new RegExp('^([0-9][0-9][0-9][0-9])' +\n// [1] year\n'-([0-9][0-9])' +\n// [2] month\n'-([0-9][0-9])$'); // [3] day\n\nvar YAML_TIMESTAMP_REGEXP = new RegExp('^([0-9][0-9][0-9][0-9])' +\n// [1] year\n'-([0-9][0-9]?)' +\n// [2] month\n'-([0-9][0-9]?)' +\n// [3] day\n'(?:[Tt]|[ \\\\t]+)' +\n// ...\n'([0-9][0-9]?)' +\n// [4] hour\n':([0-9][0-9])' +\n// [5] minute\n':([0-9][0-9])' +\n// [6] second\n'(?:\\\\.([0-9]*))?' +\n// [7] fraction\n'(?:[ \\\\t]*(Z|([-+])([0-9][0-9]?)' +\n// [8] tz [9] tz_sign [10] tz_hour\n'(?::([0-9][0-9]))?))?$'); // [11] tz_minute\n\nfunction resolveYamlTimestamp(data) {\n  if (data === null) return false;\n  if (YAML_DATE_REGEXP.exec(data) !== null) return true;\n  if (YAML_TIMESTAMP_REGEXP.exec(data) !== null) return true;\n  return false;\n}\nfunction constructYamlTimestamp(data) {\n  var match,\n    year,\n    month,\n    day,\n    hour,\n    minute,\n    second,\n    fraction = 0,\n    delta = null,\n    tz_hour,\n    tz_minute,\n    date;\n  match = YAML_DATE_REGEXP.exec(data);\n  if (match === null) match = YAML_TIMESTAMP_REGEXP.exec(data);\n  if (match === null) throw new Error('Date resolve error');\n\n  // match: [1] year [2] month [3] day\n\n  year = +match[1];\n  month = +match[2] - 1; // JS month starts with 0\n  day = +match[3];\n  if (!match[4]) {\n    // no hour\n    return new Date(Date.UTC(year, month, day));\n  }\n\n  // match: [4] hour [5] minute [6] second [7] fraction\n\n  hour = +match[4];\n  minute = +match[5];\n  second = +match[6];\n  if (match[7]) {\n    fraction = match[7].slice(0, 3);\n    while (fraction.length < 3) {\n      // milli-seconds\n      fraction += '0';\n    }\n    fraction = +fraction;\n  }\n\n  // match: [8] tz [9] tz_sign [10] tz_hour [11] tz_minute\n\n  if (match[9]) {\n    tz_hour = +match[10];\n    tz_minute = +(match[11] || 0);\n    delta = (tz_hour * 60 + tz_minute) * 60000; // delta in mili-seconds\n    if (match[9] === '-') delta = -delta;\n  }\n  date = new Date(Date.UTC(year, month, day, hour, minute, second, fraction));\n  if (delta) date.setTime(date.getTime() - delta);\n  return date;\n}\nfunction representYamlTimestamp(object /*, style*/) {\n  return object.toISOString();\n}\nvar timestamp = new type('tag:yaml.org,2002:timestamp', {\n  kind: 'scalar',\n  resolve: resolveYamlTimestamp,\n  construct: constructYamlTimestamp,\n  instanceOf: Date,\n  represent: representYamlTimestamp\n});\nfunction resolveYamlMerge(data) {\n  return data === '<<' || data === null;\n}\nvar merge = new type('tag:yaml.org,2002:merge', {\n  kind: 'scalar',\n  resolve: resolveYamlMerge\n});\n\n/*eslint-disable no-bitwise*/\n\n// [ 64, 65, 66 ] -> [ padding, CR, LF ]\nvar BASE64_MAP = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\\n\\r';\nfunction resolveYamlBinary(data) {\n  if (data === null) return false;\n  var code,\n    idx,\n    bitlen = 0,\n    max = data.length,\n    map = BASE64_MAP;\n\n  // Convert one by one.\n  for (idx = 0; idx < max; idx++) {\n    code = map.indexOf(data.charAt(idx));\n\n    // Skip CR/LF\n    if (code > 64) continue;\n\n    // Fail on illegal characters\n    if (code < 0) return false;\n    bitlen += 6;\n  }\n\n  // If there are any bits left, source was corrupted\n  return bitlen % 8 === 0;\n}\nfunction constructYamlBinary(data) {\n  var idx,\n    tailbits,\n    input = data.replace(/[\\r\\n=]/g, ''),\n    // remove CR/LF & padding to simplify scan\n    max = input.length,\n    map = BASE64_MAP,\n    bits = 0,\n    result = [];\n\n  // Collect by 6*4 bits (3 bytes)\n\n  for (idx = 0; idx < max; idx++) {\n    if (idx % 4 === 0 && idx) {\n      result.push(bits >> 16 & 0xFF);\n      result.push(bits >> 8 & 0xFF);\n      result.push(bits & 0xFF);\n    }\n    bits = bits << 6 | map.indexOf(input.charAt(idx));\n  }\n\n  // Dump tail\n\n  tailbits = max % 4 * 6;\n  if (tailbits === 0) {\n    result.push(bits >> 16 & 0xFF);\n    result.push(bits >> 8 & 0xFF);\n    result.push(bits & 0xFF);\n  } else if (tailbits === 18) {\n    result.push(bits >> 10 & 0xFF);\n    result.push(bits >> 2 & 0xFF);\n  } else if (tailbits === 12) {\n    result.push(bits >> 4 & 0xFF);\n  }\n  return new Uint8Array(result);\n}\nfunction representYamlBinary(object /*, style*/) {\n  var result = '',\n    bits = 0,\n    idx,\n    tail,\n    max = object.length,\n    map = BASE64_MAP;\n\n  // Convert every three bytes to 4 ASCII characters.\n\n  for (idx = 0; idx < max; idx++) {\n    if (idx % 3 === 0 && idx) {\n      result += map[bits >> 18 & 0x3F];\n      result += map[bits >> 12 & 0x3F];\n      result += map[bits >> 6 & 0x3F];\n      result += map[bits & 0x3F];\n    }\n    bits = (bits << 8) + object[idx];\n  }\n\n  // Dump tail\n\n  tail = max % 3;\n  if (tail === 0) {\n    result += map[bits >> 18 & 0x3F];\n    result += map[bits >> 12 & 0x3F];\n    result += map[bits >> 6 & 0x3F];\n    result += map[bits & 0x3F];\n  } else if (tail === 2) {\n    result += map[bits >> 10 & 0x3F];\n    result += map[bits >> 4 & 0x3F];\n    result += map[bits << 2 & 0x3F];\n    result += map[64];\n  } else if (tail === 1) {\n    result += map[bits >> 2 & 0x3F];\n    result += map[bits << 4 & 0x3F];\n    result += map[64];\n    result += map[64];\n  }\n  return result;\n}\nfunction isBinary(obj) {\n  return Object.prototype.toString.call(obj) === '[object Uint8Array]';\n}\nvar binary = new type('tag:yaml.org,2002:binary', {\n  kind: 'scalar',\n  resolve: resolveYamlBinary,\n  construct: constructYamlBinary,\n  predicate: isBinary,\n  represent: representYamlBinary\n});\nvar _hasOwnProperty$3 = Object.prototype.hasOwnProperty;\nvar _toString$2 = Object.prototype.toString;\nfunction resolveYamlOmap(data) {\n  if (data === null) return true;\n  var objectKeys = [],\n    index,\n    length,\n    pair,\n    pairKey,\n    pairHasKey,\n    object = data;\n  for (index = 0, length = object.length; index < length; index += 1) {\n    pair = object[index];\n    pairHasKey = false;\n    if (_toString$2.call(pair) !== '[object Object]') return false;\n    for (pairKey in pair) {\n      if (_hasOwnProperty$3.call(pair, pairKey)) {\n        if (!pairHasKey) pairHasKey = true;else return false;\n      }\n    }\n    if (!pairHasKey) return false;\n    if (objectKeys.indexOf(pairKey) === -1) objectKeys.push(pairKey);else return false;\n  }\n  return true;\n}\nfunction constructYamlOmap(data) {\n  return data !== null ? data : [];\n}\nvar omap = new type('tag:yaml.org,2002:omap', {\n  kind: 'sequence',\n  resolve: resolveYamlOmap,\n  construct: constructYamlOmap\n});\nvar _toString$1 = Object.prototype.toString;\nfunction resolveYamlPairs(data) {\n  if (data === null) return true;\n  var index,\n    length,\n    pair,\n    keys,\n    result,\n    object = data;\n  result = new Array(object.length);\n  for (index = 0, length = object.length; index < length; index += 1) {\n    pair = object[index];\n    if (_toString$1.call(pair) !== '[object Object]') return false;\n    keys = Object.keys(pair);\n    if (keys.length !== 1) return false;\n    result[index] = [keys[0], pair[keys[0]]];\n  }\n  return true;\n}\nfunction constructYamlPairs(data) {\n  if (data === null) return [];\n  var index,\n    length,\n    pair,\n    keys,\n    result,\n    object = data;\n  result = new Array(object.length);\n  for (index = 0, length = object.length; index < length; index += 1) {\n    pair = object[index];\n    keys = Object.keys(pair);\n    result[index] = [keys[0], pair[keys[0]]];\n  }\n  return result;\n}\nvar pairs = new type('tag:yaml.org,2002:pairs', {\n  kind: 'sequence',\n  resolve: resolveYamlPairs,\n  construct: constructYamlPairs\n});\nvar _hasOwnProperty$2 = Object.prototype.hasOwnProperty;\nfunction resolveYamlSet(data) {\n  if (data === null) return true;\n  var key,\n    object = data;\n  for (key in object) {\n    if (_hasOwnProperty$2.call(object, key)) {\n      if (object[key] !== null) return false;\n    }\n  }\n  return true;\n}\nfunction constructYamlSet(data) {\n  return data !== null ? data : {};\n}\nvar set = new type('tag:yaml.org,2002:set', {\n  kind: 'mapping',\n  resolve: resolveYamlSet,\n  construct: constructYamlSet\n});\nvar _default = core.extend({\n  implicit: [timestamp, merge],\n  explicit: [binary, omap, pairs, set]\n});\n\n/*eslint-disable max-len,no-use-before-define*/\n\nvar _hasOwnProperty$1 = Object.prototype.hasOwnProperty;\nvar CONTEXT_FLOW_IN = 1;\nvar CONTEXT_FLOW_OUT = 2;\nvar CONTEXT_BLOCK_IN = 3;\nvar CONTEXT_BLOCK_OUT = 4;\nvar CHOMPING_CLIP = 1;\nvar CHOMPING_STRIP = 2;\nvar CHOMPING_KEEP = 3;\nvar PATTERN_NON_PRINTABLE = /[\\x00-\\x08\\x0B\\x0C\\x0E-\\x1F\\x7F-\\x84\\x86-\\x9F\\uFFFE\\uFFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]/;\nvar PATTERN_NON_ASCII_LINE_BREAKS = /[\\x85\\u2028\\u2029]/;\nvar PATTERN_FLOW_INDICATORS = /[,\\[\\]\\{\\}]/;\nvar PATTERN_TAG_HANDLE = /^(?:!|!!|![a-z\\-]+!)$/i;\nvar PATTERN_TAG_URI = /^(?:!|[^,\\[\\]\\{\\}])(?:%[0-9a-f]{2}|[0-9a-z\\-#;\\/\\?:@&=\\+\\$,_\\.!~\\*'\\(\\)\\[\\]])*$/i;\nfunction _class(obj) {\n  return Object.prototype.toString.call(obj);\n}\nfunction is_EOL(c) {\n  return c === 0x0A /* LF */ || c === 0x0D /* CR */;\n}\nfunction is_WHITE_SPACE(c) {\n  return c === 0x09 /* Tab */ || c === 0x20 /* Space */;\n}\nfunction is_WS_OR_EOL(c) {\n  return c === 0x09 /* Tab */ || c === 0x20 /* Space */ || c === 0x0A /* LF */ || c === 0x0D /* CR */;\n}\nfunction is_FLOW_INDICATOR(c) {\n  return c === 0x2C /* , */ || c === 0x5B /* [ */ || c === 0x5D /* ] */ || c === 0x7B /* { */ || c === 0x7D /* } */;\n}\nfunction fromHexCode(c) {\n  var lc;\n  if (0x30 /* 0 */ <= c && c <= 0x39 /* 9 */) {\n    return c - 0x30;\n  }\n\n  /*eslint-disable no-bitwise*/\n  lc = c | 0x20;\n  if (0x61 /* a */ <= lc && lc <= 0x66 /* f */) {\n    return lc - 0x61 + 10;\n  }\n  return -1;\n}\nfunction escapedHexLen(c) {\n  if (c === 0x78 /* x */) {\n    return 2;\n  }\n  if (c === 0x75 /* u */) {\n    return 4;\n  }\n  if (c === 0x55 /* U */) {\n    return 8;\n  }\n  return 0;\n}\nfunction fromDecimalCode(c) {\n  if (0x30 /* 0 */ <= c && c <= 0x39 /* 9 */) {\n    return c - 0x30;\n  }\n  return -1;\n}\nfunction simpleEscapeSequence(c) {\n  /* eslint-disable indent */\n  return c === 0x30 /* 0 */ ? '\\x00' : c === 0x61 /* a */ ? '\\x07' : c === 0x62 /* b */ ? '\\x08' : c === 0x74 /* t */ ? '\\x09' : c === 0x09 /* Tab */ ? '\\x09' : c === 0x6E /* n */ ? '\\x0A' : c === 0x76 /* v */ ? '\\x0B' : c === 0x66 /* f */ ? '\\x0C' : c === 0x72 /* r */ ? '\\x0D' : c === 0x65 /* e */ ? '\\x1B' : c === 0x20 /* Space */ ? ' ' : c === 0x22 /* \" */ ? '\\x22' : c === 0x2F /* / */ ? '/' : c === 0x5C /* \\ */ ? '\\x5C' : c === 0x4E /* N */ ? '\\x85' : c === 0x5F /* _ */ ? '\\xA0' : c === 0x4C /* L */ ? '\\u2028' : c === 0x50 /* P */ ? '\\u2029' : '';\n}\nfunction charFromCodepoint(c) {\n  if (c <= 0xFFFF) {\n    return String.fromCharCode(c);\n  }\n  // Encode UTF-16 surrogate pair\n  // https://en.wikipedia.org/wiki/UTF-16#Code_points_U.2B010000_to_U.2B10FFFF\n  return String.fromCharCode((c - 0x010000 >> 10) + 0xD800, (c - 0x010000 & 0x03FF) + 0xDC00);\n}\nvar simpleEscapeCheck = new Array(256); // integer, for fast access\nvar simpleEscapeMap = new Array(256);\nfor (var i = 0; i < 256; i++) {\n  simpleEscapeCheck[i] = simpleEscapeSequence(i) ? 1 : 0;\n  simpleEscapeMap[i] = simpleEscapeSequence(i);\n}\nfunction State$1(input, options) {\n  this.input = input;\n  this.filename = options['filename'] || null;\n  this.schema = options['schema'] || _default;\n  this.onWarning = options['onWarning'] || null;\n  // (Hidden) Remove? makes the loader to expect YAML 1.1 documents\n  // if such documents have no explicit %YAML directive\n  this.legacy = options['legacy'] || false;\n  this.json = options['json'] || false;\n  this.listener = options['listener'] || null;\n  this.implicitTypes = this.schema.compiledImplicit;\n  this.typeMap = this.schema.compiledTypeMap;\n  this.length = input.length;\n  this.position = 0;\n  this.line = 0;\n  this.lineStart = 0;\n  this.lineIndent = 0;\n\n  // position of first leading tab in the current line,\n  // used to make sure there are no tabs in the indentation\n  this.firstTabInLine = -1;\n  this.documents = [];\n\n  /*\n  this.version;\n  this.checkLineBreaks;\n  this.tagMap;\n  this.anchorMap;\n  this.tag;\n  this.anchor;\n  this.kind;\n  this.result;*/\n}\nfunction generateError(state, message) {\n  var mark = {\n    name: state.filename,\n    buffer: state.input.slice(0, -1),\n    // omit trailing \\0\n    position: state.position,\n    line: state.line,\n    column: state.position - state.lineStart\n  };\n  mark.snippet = snippet(mark);\n  return new exception(message, mark);\n}\nfunction throwError(state, message) {\n  throw generateError(state, message);\n}\nfunction throwWarning(state, message) {\n  if (state.onWarning) {\n    state.onWarning.call(null, generateError(state, message));\n  }\n}\nvar directiveHandlers = {\n  YAML: function handleYamlDirective(state, name, args) {\n    var match, major, minor;\n    if (state.version !== null) {\n      throwError(state, 'duplication of %YAML directive');\n    }\n    if (args.length !== 1) {\n      throwError(state, 'YAML directive accepts exactly one argument');\n    }\n    match = /^([0-9]+)\\.([0-9]+)$/.exec(args[0]);\n    if (match === null) {\n      throwError(state, 'ill-formed argument of the YAML directive');\n    }\n    major = parseInt(match[1], 10);\n    minor = parseInt(match[2], 10);\n    if (major !== 1) {\n      throwError(state, 'unacceptable YAML version of the document');\n    }\n    state.version = args[0];\n    state.checkLineBreaks = minor < 2;\n    if (minor !== 1 && minor !== 2) {\n      throwWarning(state, 'unsupported YAML version of the document');\n    }\n  },\n  TAG: function handleTagDirective(state, name, args) {\n    var handle, prefix;\n    if (args.length !== 2) {\n      throwError(state, 'TAG directive accepts exactly two arguments');\n    }\n    handle = args[0];\n    prefix = args[1];\n    if (!PATTERN_TAG_HANDLE.test(handle)) {\n      throwError(state, 'ill-formed tag handle (first argument) of the TAG directive');\n    }\n    if (_hasOwnProperty$1.call(state.tagMap, handle)) {\n      throwError(state, 'there is a previously declared suffix for \"' + handle + '\" tag handle');\n    }\n    if (!PATTERN_TAG_URI.test(prefix)) {\n      throwError(state, 'ill-formed tag prefix (second argument) of the TAG directive');\n    }\n    try {\n      prefix = decodeURIComponent(prefix);\n    } catch (err) {\n      throwError(state, 'tag prefix is malformed: ' + prefix);\n    }\n    state.tagMap[handle] = prefix;\n  }\n};\nfunction captureSegment(state, start, end, checkJson) {\n  var _position, _length, _character, _result;\n  if (start < end) {\n    _result = state.input.slice(start, end);\n    if (checkJson) {\n      for (_position = 0, _length = _result.length; _position < _length; _position += 1) {\n        _character = _result.charCodeAt(_position);\n        if (!(_character === 0x09 || 0x20 <= _character && _character <= 0x10FFFF)) {\n          throwError(state, 'expected valid JSON character');\n        }\n      }\n    } else if (PATTERN_NON_PRINTABLE.test(_result)) {\n      throwError(state, 'the stream contains non-printable characters');\n    }\n    state.result += _result;\n  }\n}\nfunction mergeMappings(state, destination, source, overridableKeys) {\n  var sourceKeys, key, index, quantity;\n  if (!common.isObject(source)) {\n    throwError(state, 'cannot merge mappings; the provided source object is unacceptable');\n  }\n  sourceKeys = Object.keys(source);\n  for (index = 0, quantity = sourceKeys.length; index < quantity; index += 1) {\n    key = sourceKeys[index];\n    if (!_hasOwnProperty$1.call(destination, key)) {\n      destination[key] = source[key];\n      overridableKeys[key] = true;\n    }\n  }\n}\nfunction storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, valueNode, startLine, startLineStart, startPos) {\n  var index, quantity;\n\n  // The output is a plain object here, so keys can only be strings.\n  // We need to convert keyNode to a string, but doing so can hang the process\n  // (deeply nested arrays that explode exponentially using aliases).\n  if (Array.isArray(keyNode)) {\n    keyNode = Array.prototype.slice.call(keyNode);\n    for (index = 0, quantity = keyNode.length; index < quantity; index += 1) {\n      if (Array.isArray(keyNode[index])) {\n        throwError(state, 'nested arrays are not supported inside keys');\n      }\n      if (typeof keyNode === 'object' && _class(keyNode[index]) === '[object Object]') {\n        keyNode[index] = '[object Object]';\n      }\n    }\n  }\n\n  // Avoid code execution in load() via toString property\n  // (still use its own toString for arrays, timestamps,\n  // and whatever user schema extensions happen to have @@toStringTag)\n  if (typeof keyNode === 'object' && _class(keyNode) === '[object Object]') {\n    keyNode = '[object Object]';\n  }\n  keyNode = String(keyNode);\n  if (_result === null) {\n    _result = {};\n  }\n  if (keyTag === 'tag:yaml.org,2002:merge') {\n    if (Array.isArray(valueNode)) {\n      for (index = 0, quantity = valueNode.length; index < quantity; index += 1) {\n        mergeMappings(state, _result, valueNode[index], overridableKeys);\n      }\n    } else {\n      mergeMappings(state, _result, valueNode, overridableKeys);\n    }\n  } else {\n    if (!state.json && !_hasOwnProperty$1.call(overridableKeys, keyNode) && _hasOwnProperty$1.call(_result, keyNode)) {\n      state.line = startLine || state.line;\n      state.lineStart = startLineStart || state.lineStart;\n      state.position = startPos || state.position;\n      throwError(state, 'duplicated mapping key');\n    }\n\n    // used for this specific key only because Object.defineProperty is slow\n    if (keyNode === '__proto__') {\n      Object.defineProperty(_result, keyNode, {\n        configurable: true,\n        enumerable: true,\n        writable: true,\n        value: valueNode\n      });\n    } else {\n      _result[keyNode] = valueNode;\n    }\n    delete overridableKeys[keyNode];\n  }\n  return _result;\n}\nfunction readLineBreak(state) {\n  var ch;\n  ch = state.input.charCodeAt(state.position);\n  if (ch === 0x0A /* LF */) {\n    state.position++;\n  } else if (ch === 0x0D /* CR */) {\n    state.position++;\n    if (state.input.charCodeAt(state.position) === 0x0A /* LF */) {\n      state.position++;\n    }\n  } else {\n    throwError(state, 'a line break is expected');\n  }\n  state.line += 1;\n  state.lineStart = state.position;\n  state.firstTabInLine = -1;\n}\nfunction skipSeparationSpace(state, allowComments, checkIndent) {\n  var lineBreaks = 0,\n    ch = state.input.charCodeAt(state.position);\n  while (ch !== 0) {\n    while (is_WHITE_SPACE(ch)) {\n      if (ch === 0x09 /* Tab */ && state.firstTabInLine === -1) {\n        state.firstTabInLine = state.position;\n      }\n      ch = state.input.charCodeAt(++state.position);\n    }\n    if (allowComments && ch === 0x23 /* # */) {\n      do {\n        ch = state.input.charCodeAt(++state.position);\n      } while (ch !== 0x0A /* LF */ && ch !== 0x0D /* CR */ && ch !== 0);\n    }\n    if (is_EOL(ch)) {\n      readLineBreak(state);\n      ch = state.input.charCodeAt(state.position);\n      lineBreaks++;\n      state.lineIndent = 0;\n      while (ch === 0x20 /* Space */) {\n        state.lineIndent++;\n        ch = state.input.charCodeAt(++state.position);\n      }\n    } else {\n      break;\n    }\n  }\n  if (checkIndent !== -1 && lineBreaks !== 0 && state.lineIndent < checkIndent) {\n    throwWarning(state, 'deficient indentation');\n  }\n  return lineBreaks;\n}\nfunction testDocumentSeparator(state) {\n  var _position = state.position,\n    ch;\n  ch = state.input.charCodeAt(_position);\n\n  // Condition state.position === state.lineStart is tested\n  // in parent on each call, for efficiency. No needs to test here again.\n  if ((ch === 0x2D /* - */ || ch === 0x2E /* . */) && ch === state.input.charCodeAt(_position + 1) && ch === state.input.charCodeAt(_position + 2)) {\n    _position += 3;\n    ch = state.input.charCodeAt(_position);\n    if (ch === 0 || is_WS_OR_EOL(ch)) {\n      return true;\n    }\n  }\n  return false;\n}\nfunction writeFoldedLines(state, count) {\n  if (count === 1) {\n    state.result += ' ';\n  } else if (count > 1) {\n    state.result += common.repeat('\\n', count - 1);\n  }\n}\nfunction readPlainScalar(state, nodeIndent, withinFlowCollection) {\n  var preceding,\n    following,\n    captureStart,\n    captureEnd,\n    hasPendingContent,\n    _line,\n    _lineStart,\n    _lineIndent,\n    _kind = state.kind,\n    _result = state.result,\n    ch;\n  ch = state.input.charCodeAt(state.position);\n  if (is_WS_OR_EOL(ch) || is_FLOW_INDICATOR(ch) || ch === 0x23 /* # */ || ch === 0x26 /* & */ || ch === 0x2A /* * */ || ch === 0x21 /* ! */ || ch === 0x7C /* | */ || ch === 0x3E /* > */ || ch === 0x27 /* ' */ || ch === 0x22 /* \" */ || ch === 0x25 /* % */ || ch === 0x40 /* @ */ || ch === 0x60 /* ` */) {\n    return false;\n  }\n  if (ch === 0x3F /* ? */ || ch === 0x2D /* - */) {\n    following = state.input.charCodeAt(state.position + 1);\n    if (is_WS_OR_EOL(following) || withinFlowCollection && is_FLOW_INDICATOR(following)) {\n      return false;\n    }\n  }\n  state.kind = 'scalar';\n  state.result = '';\n  captureStart = captureEnd = state.position;\n  hasPendingContent = false;\n  while (ch !== 0) {\n    if (ch === 0x3A /* : */) {\n      following = state.input.charCodeAt(state.position + 1);\n      if (is_WS_OR_EOL(following) || withinFlowCollection && is_FLOW_INDICATOR(following)) {\n        break;\n      }\n    } else if (ch === 0x23 /* # */) {\n      preceding = state.input.charCodeAt(state.position - 1);\n      if (is_WS_OR_EOL(preceding)) {\n        break;\n      }\n    } else if (state.position === state.lineStart && testDocumentSeparator(state) || withinFlowCollection && is_FLOW_INDICATOR(ch)) {\n      break;\n    } else if (is_EOL(ch)) {\n      _line = state.line;\n      _lineStart = state.lineStart;\n      _lineIndent = state.lineIndent;\n      skipSeparationSpace(state, false, -1);\n      if (state.lineIndent >= nodeIndent) {\n        hasPendingContent = true;\n        ch = state.input.charCodeAt(state.position);\n        continue;\n      } else {\n        state.position = captureEnd;\n        state.line = _line;\n        state.lineStart = _lineStart;\n        state.lineIndent = _lineIndent;\n        break;\n      }\n    }\n    if (hasPendingContent) {\n      captureSegment(state, captureStart, captureEnd, false);\n      writeFoldedLines(state, state.line - _line);\n      captureStart = captureEnd = state.position;\n      hasPendingContent = false;\n    }\n    if (!is_WHITE_SPACE(ch)) {\n      captureEnd = state.position + 1;\n    }\n    ch = state.input.charCodeAt(++state.position);\n  }\n  captureSegment(state, captureStart, captureEnd, false);\n  if (state.result) {\n    return true;\n  }\n  state.kind = _kind;\n  state.result = _result;\n  return false;\n}\nfunction readSingleQuotedScalar(state, nodeIndent) {\n  var ch, captureStart, captureEnd;\n  ch = state.input.charCodeAt(state.position);\n  if (ch !== 0x27 /* ' */) {\n    return false;\n  }\n  state.kind = 'scalar';\n  state.result = '';\n  state.position++;\n  captureStart = captureEnd = state.position;\n  while ((ch = state.input.charCodeAt(state.position)) !== 0) {\n    if (ch === 0x27 /* ' */) {\n      captureSegment(state, captureStart, state.position, true);\n      ch = state.input.charCodeAt(++state.position);\n      if (ch === 0x27 /* ' */) {\n        captureStart = state.position;\n        state.position++;\n        captureEnd = state.position;\n      } else {\n        return true;\n      }\n    } else if (is_EOL(ch)) {\n      captureSegment(state, captureStart, captureEnd, true);\n      writeFoldedLines(state, skipSeparationSpace(state, false, nodeIndent));\n      captureStart = captureEnd = state.position;\n    } else if (state.position === state.lineStart && testDocumentSeparator(state)) {\n      throwError(state, 'unexpected end of the document within a single quoted scalar');\n    } else {\n      state.position++;\n      captureEnd = state.position;\n    }\n  }\n  throwError(state, 'unexpected end of the stream within a single quoted scalar');\n}\nfunction readDoubleQuotedScalar(state, nodeIndent) {\n  var captureStart, captureEnd, hexLength, hexResult, tmp, ch;\n  ch = state.input.charCodeAt(state.position);\n  if (ch !== 0x22 /* \" */) {\n    return false;\n  }\n  state.kind = 'scalar';\n  state.result = '';\n  state.position++;\n  captureStart = captureEnd = state.position;\n  while ((ch = state.input.charCodeAt(state.position)) !== 0) {\n    if (ch === 0x22 /* \" */) {\n      captureSegment(state, captureStart, state.position, true);\n      state.position++;\n      return true;\n    } else if (ch === 0x5C /* \\ */) {\n      captureSegment(state, captureStart, state.position, true);\n      ch = state.input.charCodeAt(++state.position);\n      if (is_EOL(ch)) {\n        skipSeparationSpace(state, false, nodeIndent);\n\n        // TODO: rework to inline fn with no type cast?\n      } else if (ch < 256 && simpleEscapeCheck[ch]) {\n        state.result += simpleEscapeMap[ch];\n        state.position++;\n      } else if ((tmp = escapedHexLen(ch)) > 0) {\n        hexLength = tmp;\n        hexResult = 0;\n        for (; hexLength > 0; hexLength--) {\n          ch = state.input.charCodeAt(++state.position);\n          if ((tmp = fromHexCode(ch)) >= 0) {\n            hexResult = (hexResult << 4) + tmp;\n          } else {\n            throwError(state, 'expected hexadecimal character');\n          }\n        }\n        state.result += charFromCodepoint(hexResult);\n        state.position++;\n      } else {\n        throwError(state, 'unknown escape sequence');\n      }\n      captureStart = captureEnd = state.position;\n    } else if (is_EOL(ch)) {\n      captureSegment(state, captureStart, captureEnd, true);\n      writeFoldedLines(state, skipSeparationSpace(state, false, nodeIndent));\n      captureStart = captureEnd = state.position;\n    } else if (state.position === state.lineStart && testDocumentSeparator(state)) {\n      throwError(state, 'unexpected end of the document within a double quoted scalar');\n    } else {\n      state.position++;\n      captureEnd = state.position;\n    }\n  }\n  throwError(state, 'unexpected end of the stream within a double quoted scalar');\n}\nfunction readFlowCollection(state, nodeIndent) {\n  var readNext = true,\n    _line,\n    _lineStart,\n    _pos,\n    _tag = state.tag,\n    _result,\n    _anchor = state.anchor,\n    following,\n    terminator,\n    isPair,\n    isExplicitPair,\n    isMapping,\n    overridableKeys = Object.create(null),\n    keyNode,\n    keyTag,\n    valueNode,\n    ch;\n  ch = state.input.charCodeAt(state.position);\n  if (ch === 0x5B /* [ */) {\n    terminator = 0x5D; /* ] */\n    isMapping = false;\n    _result = [];\n  } else if (ch === 0x7B /* { */) {\n    terminator = 0x7D; /* } */\n    isMapping = true;\n    _result = {};\n  } else {\n    return false;\n  }\n  if (state.anchor !== null) {\n    state.anchorMap[state.anchor] = _result;\n  }\n  ch = state.input.charCodeAt(++state.position);\n  while (ch !== 0) {\n    skipSeparationSpace(state, true, nodeIndent);\n    ch = state.input.charCodeAt(state.position);\n    if (ch === terminator) {\n      state.position++;\n      state.tag = _tag;\n      state.anchor = _anchor;\n      state.kind = isMapping ? 'mapping' : 'sequence';\n      state.result = _result;\n      return true;\n    } else if (!readNext) {\n      throwError(state, 'missed comma between flow collection entries');\n    } else if (ch === 0x2C /* , */) {\n      // \"flow collection entries can never be completely empty\", as per YAML 1.2, section 7.4\n      throwError(state, \"expected the node content, but found ','\");\n    }\n    keyTag = keyNode = valueNode = null;\n    isPair = isExplicitPair = false;\n    if (ch === 0x3F /* ? */) {\n      following = state.input.charCodeAt(state.position + 1);\n      if (is_WS_OR_EOL(following)) {\n        isPair = isExplicitPair = true;\n        state.position++;\n        skipSeparationSpace(state, true, nodeIndent);\n      }\n    }\n    _line = state.line; // Save the current line.\n    _lineStart = state.lineStart;\n    _pos = state.position;\n    composeNode(state, nodeIndent, CONTEXT_FLOW_IN, false, true);\n    keyTag = state.tag;\n    keyNode = state.result;\n    skipSeparationSpace(state, true, nodeIndent);\n    ch = state.input.charCodeAt(state.position);\n    if ((isExplicitPair || state.line === _line) && ch === 0x3A /* : */) {\n      isPair = true;\n      ch = state.input.charCodeAt(++state.position);\n      skipSeparationSpace(state, true, nodeIndent);\n      composeNode(state, nodeIndent, CONTEXT_FLOW_IN, false, true);\n      valueNode = state.result;\n    }\n    if (isMapping) {\n      storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, valueNode, _line, _lineStart, _pos);\n    } else if (isPair) {\n      _result.push(storeMappingPair(state, null, overridableKeys, keyTag, keyNode, valueNode, _line, _lineStart, _pos));\n    } else {\n      _result.push(keyNode);\n    }\n    skipSeparationSpace(state, true, nodeIndent);\n    ch = state.input.charCodeAt(state.position);\n    if (ch === 0x2C /* , */) {\n      readNext = true;\n      ch = state.input.charCodeAt(++state.position);\n    } else {\n      readNext = false;\n    }\n  }\n  throwError(state, 'unexpected end of the stream within a flow collection');\n}\nfunction readBlockScalar(state, nodeIndent) {\n  var captureStart,\n    folding,\n    chomping = CHOMPING_CLIP,\n    didReadContent = false,\n    detectedIndent = false,\n    textIndent = nodeIndent,\n    emptyLines = 0,\n    atMoreIndented = false,\n    tmp,\n    ch;\n  ch = state.input.charCodeAt(state.position);\n  if (ch === 0x7C /* | */) {\n    folding = false;\n  } else if (ch === 0x3E /* > */) {\n    folding = true;\n  } else {\n    return false;\n  }\n  state.kind = 'scalar';\n  state.result = '';\n  while (ch !== 0) {\n    ch = state.input.charCodeAt(++state.position);\n    if (ch === 0x2B /* + */ || ch === 0x2D /* - */) {\n      if (CHOMPING_CLIP === chomping) {\n        chomping = ch === 0x2B /* + */ ? CHOMPING_KEEP : CHOMPING_STRIP;\n      } else {\n        throwError(state, 'repeat of a chomping mode identifier');\n      }\n    } else if ((tmp = fromDecimalCode(ch)) >= 0) {\n      if (tmp === 0) {\n        throwError(state, 'bad explicit indentation width of a block scalar; it cannot be less than one');\n      } else if (!detectedIndent) {\n        textIndent = nodeIndent + tmp - 1;\n        detectedIndent = true;\n      } else {\n        throwError(state, 'repeat of an indentation width identifier');\n      }\n    } else {\n      break;\n    }\n  }\n  if (is_WHITE_SPACE(ch)) {\n    do {\n      ch = state.input.charCodeAt(++state.position);\n    } while (is_WHITE_SPACE(ch));\n    if (ch === 0x23 /* # */) {\n      do {\n        ch = state.input.charCodeAt(++state.position);\n      } while (!is_EOL(ch) && ch !== 0);\n    }\n  }\n  while (ch !== 0) {\n    readLineBreak(state);\n    state.lineIndent = 0;\n    ch = state.input.charCodeAt(state.position);\n    while ((!detectedIndent || state.lineIndent < textIndent) && ch === 0x20 /* Space */) {\n      state.lineIndent++;\n      ch = state.input.charCodeAt(++state.position);\n    }\n    if (!detectedIndent && state.lineIndent > textIndent) {\n      textIndent = state.lineIndent;\n    }\n    if (is_EOL(ch)) {\n      emptyLines++;\n      continue;\n    }\n\n    // End of the scalar.\n    if (state.lineIndent < textIndent) {\n      // Perform the chomping.\n      if (chomping === CHOMPING_KEEP) {\n        state.result += common.repeat('\\n', didReadContent ? 1 + emptyLines : emptyLines);\n      } else if (chomping === CHOMPING_CLIP) {\n        if (didReadContent) {\n          // i.e. only if the scalar is not empty.\n          state.result += '\\n';\n        }\n      }\n\n      // Break this `while` cycle and go to the funciton's epilogue.\n      break;\n    }\n\n    // Folded style: use fancy rules to handle line breaks.\n    if (folding) {\n      // Lines starting with white space characters (more-indented lines) are not folded.\n      if (is_WHITE_SPACE(ch)) {\n        atMoreIndented = true;\n        // except for the first content line (cf. Example 8.1)\n        state.result += common.repeat('\\n', didReadContent ? 1 + emptyLines : emptyLines);\n\n        // End of more-indented block.\n      } else if (atMoreIndented) {\n        atMoreIndented = false;\n        state.result += common.repeat('\\n', emptyLines + 1);\n\n        // Just one line break - perceive as the same line.\n      } else if (emptyLines === 0) {\n        if (didReadContent) {\n          // i.e. only if we have already read some scalar content.\n          state.result += ' ';\n        }\n\n        // Several line breaks - perceive as different lines.\n      } else {\n        state.result += common.repeat('\\n', emptyLines);\n      }\n\n      // Literal style: just add exact number of line breaks between content lines.\n    } else {\n      // Keep all line breaks except the header line break.\n      state.result += common.repeat('\\n', didReadContent ? 1 + emptyLines : emptyLines);\n    }\n    didReadContent = true;\n    detectedIndent = true;\n    emptyLines = 0;\n    captureStart = state.position;\n    while (!is_EOL(ch) && ch !== 0) {\n      ch = state.input.charCodeAt(++state.position);\n    }\n    captureSegment(state, captureStart, state.position, false);\n  }\n  return true;\n}\nfunction readBlockSequence(state, nodeIndent) {\n  var _line,\n    _tag = state.tag,\n    _anchor = state.anchor,\n    _result = [],\n    following,\n    detected = false,\n    ch;\n\n  // there is a leading tab before this token, so it can't be a block sequence/mapping;\n  // it can still be flow sequence/mapping or a scalar\n  if (state.firstTabInLine !== -1) return false;\n  if (state.anchor !== null) {\n    state.anchorMap[state.anchor] = _result;\n  }\n  ch = state.input.charCodeAt(state.position);\n  while (ch !== 0) {\n    if (state.firstTabInLine !== -1) {\n      state.position = state.firstTabInLine;\n      throwError(state, 'tab characters must not be used in indentation');\n    }\n    if (ch !== 0x2D /* - */) {\n      break;\n    }\n    following = state.input.charCodeAt(state.position + 1);\n    if (!is_WS_OR_EOL(following)) {\n      break;\n    }\n    detected = true;\n    state.position++;\n    if (skipSeparationSpace(state, true, -1)) {\n      if (state.lineIndent <= nodeIndent) {\n        _result.push(null);\n        ch = state.input.charCodeAt(state.position);\n        continue;\n      }\n    }\n    _line = state.line;\n    composeNode(state, nodeIndent, CONTEXT_BLOCK_IN, false, true);\n    _result.push(state.result);\n    skipSeparationSpace(state, true, -1);\n    ch = state.input.charCodeAt(state.position);\n    if ((state.line === _line || state.lineIndent > nodeIndent) && ch !== 0) {\n      throwError(state, 'bad indentation of a sequence entry');\n    } else if (state.lineIndent < nodeIndent) {\n      break;\n    }\n  }\n  if (detected) {\n    state.tag = _tag;\n    state.anchor = _anchor;\n    state.kind = 'sequence';\n    state.result = _result;\n    return true;\n  }\n  return false;\n}\nfunction readBlockMapping(state, nodeIndent, flowIndent) {\n  var following,\n    allowCompact,\n    _line,\n    _keyLine,\n    _keyLineStart,\n    _keyPos,\n    _tag = state.tag,\n    _anchor = state.anchor,\n    _result = {},\n    overridableKeys = Object.create(null),\n    keyTag = null,\n    keyNode = null,\n    valueNode = null,\n    atExplicitKey = false,\n    detected = false,\n    ch;\n\n  // there is a leading tab before this token, so it can't be a block sequence/mapping;\n  // it can still be flow sequence/mapping or a scalar\n  if (state.firstTabInLine !== -1) return false;\n  if (state.anchor !== null) {\n    state.anchorMap[state.anchor] = _result;\n  }\n  ch = state.input.charCodeAt(state.position);\n  while (ch !== 0) {\n    if (!atExplicitKey && state.firstTabInLine !== -1) {\n      state.position = state.firstTabInLine;\n      throwError(state, 'tab characters must not be used in indentation');\n    }\n    following = state.input.charCodeAt(state.position + 1);\n    _line = state.line; // Save the current line.\n\n    //\n    // Explicit notation case. There are two separate blocks:\n    // first for the key (denoted by \"?\") and second for the value (denoted by \":\")\n    //\n    if ((ch === 0x3F /* ? */ || ch === 0x3A /* : */) && is_WS_OR_EOL(following)) {\n      if (ch === 0x3F /* ? */) {\n        if (atExplicitKey) {\n          storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, null, _keyLine, _keyLineStart, _keyPos);\n          keyTag = keyNode = valueNode = null;\n        }\n        detected = true;\n        atExplicitKey = true;\n        allowCompact = true;\n      } else if (atExplicitKey) {\n        // i.e. 0x3A/* : */ === character after the explicit key.\n        atExplicitKey = false;\n        allowCompact = true;\n      } else {\n        throwError(state, 'incomplete explicit mapping pair; a key node is missed; or followed by a non-tabulated empty line');\n      }\n      state.position += 1;\n      ch = following;\n\n      //\n      // Implicit notation case. Flow-style node as the key first, then \":\", and the value.\n      //\n    } else {\n      _keyLine = state.line;\n      _keyLineStart = state.lineStart;\n      _keyPos = state.position;\n      if (!composeNode(state, flowIndent, CONTEXT_FLOW_OUT, false, true)) {\n        // Neither implicit nor explicit notation.\n        // Reading is done. Go to the epilogue.\n        break;\n      }\n      if (state.line === _line) {\n        ch = state.input.charCodeAt(state.position);\n        while (is_WHITE_SPACE(ch)) {\n          ch = state.input.charCodeAt(++state.position);\n        }\n        if (ch === 0x3A /* : */) {\n          ch = state.input.charCodeAt(++state.position);\n          if (!is_WS_OR_EOL(ch)) {\n            throwError(state, 'a whitespace character is expected after the key-value separator within a block mapping');\n          }\n          if (atExplicitKey) {\n            storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, null, _keyLine, _keyLineStart, _keyPos);\n            keyTag = keyNode = valueNode = null;\n          }\n          detected = true;\n          atExplicitKey = false;\n          allowCompact = false;\n          keyTag = state.tag;\n          keyNode = state.result;\n        } else if (detected) {\n          throwError(state, 'can not read an implicit mapping pair; a colon is missed');\n        } else {\n          state.tag = _tag;\n          state.anchor = _anchor;\n          return true; // Keep the result of `composeNode`.\n        }\n      } else if (detected) {\n        throwError(state, 'can not read a block mapping entry; a multiline key may not be an implicit key');\n      } else {\n        state.tag = _tag;\n        state.anchor = _anchor;\n        return true; // Keep the result of `composeNode`.\n      }\n    }\n\n    //\n    // Common reading code for both explicit and implicit notations.\n    //\n    if (state.line === _line || state.lineIndent > nodeIndent) {\n      if (atExplicitKey) {\n        _keyLine = state.line;\n        _keyLineStart = state.lineStart;\n        _keyPos = state.position;\n      }\n      if (composeNode(state, nodeIndent, CONTEXT_BLOCK_OUT, true, allowCompact)) {\n        if (atExplicitKey) {\n          keyNode = state.result;\n        } else {\n          valueNode = state.result;\n        }\n      }\n      if (!atExplicitKey) {\n        storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, valueNode, _keyLine, _keyLineStart, _keyPos);\n        keyTag = keyNode = valueNode = null;\n      }\n      skipSeparationSpace(state, true, -1);\n      ch = state.input.charCodeAt(state.position);\n    }\n    if ((state.line === _line || state.lineIndent > nodeIndent) && ch !== 0) {\n      throwError(state, 'bad indentation of a mapping entry');\n    } else if (state.lineIndent < nodeIndent) {\n      break;\n    }\n  }\n\n  //\n  // Epilogue.\n  //\n\n  // Special case: last mapping's node contains only the key in explicit notation.\n  if (atExplicitKey) {\n    storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, null, _keyLine, _keyLineStart, _keyPos);\n  }\n\n  // Expose the resulting mapping.\n  if (detected) {\n    state.tag = _tag;\n    state.anchor = _anchor;\n    state.kind = 'mapping';\n    state.result = _result;\n  }\n  return detected;\n}\nfunction readTagProperty(state) {\n  var _position,\n    isVerbatim = false,\n    isNamed = false,\n    tagHandle,\n    tagName,\n    ch;\n  ch = state.input.charCodeAt(state.position);\n  if (ch !== 0x21 /* ! */) return false;\n  if (state.tag !== null) {\n    throwError(state, 'duplication of a tag property');\n  }\n  ch = state.input.charCodeAt(++state.position);\n  if (ch === 0x3C /* < */) {\n    isVerbatim = true;\n    ch = state.input.charCodeAt(++state.position);\n  } else if (ch === 0x21 /* ! */) {\n    isNamed = true;\n    tagHandle = '!!';\n    ch = state.input.charCodeAt(++state.position);\n  } else {\n    tagHandle = '!';\n  }\n  _position = state.position;\n  if (isVerbatim) {\n    do {\n      ch = state.input.charCodeAt(++state.position);\n    } while (ch !== 0 && ch !== 0x3E /* > */);\n    if (state.position < state.length) {\n      tagName = state.input.slice(_position, state.position);\n      ch = state.input.charCodeAt(++state.position);\n    } else {\n      throwError(state, 'unexpected end of the stream within a verbatim tag');\n    }\n  } else {\n    while (ch !== 0 && !is_WS_OR_EOL(ch)) {\n      if (ch === 0x21 /* ! */) {\n        if (!isNamed) {\n          tagHandle = state.input.slice(_position - 1, state.position + 1);\n          if (!PATTERN_TAG_HANDLE.test(tagHandle)) {\n            throwError(state, 'named tag handle cannot contain such characters');\n          }\n          isNamed = true;\n          _position = state.position + 1;\n        } else {\n          throwError(state, 'tag suffix cannot contain exclamation marks');\n        }\n      }\n      ch = state.input.charCodeAt(++state.position);\n    }\n    tagName = state.input.slice(_position, state.position);\n    if (PATTERN_FLOW_INDICATORS.test(tagName)) {\n      throwError(state, 'tag suffix cannot contain flow indicator characters');\n    }\n  }\n  if (tagName && !PATTERN_TAG_URI.test(tagName)) {\n    throwError(state, 'tag name cannot contain such characters: ' + tagName);\n  }\n  try {\n    tagName = decodeURIComponent(tagName);\n  } catch (err) {\n    throwError(state, 'tag name is malformed: ' + tagName);\n  }\n  if (isVerbatim) {\n    state.tag = tagName;\n  } else if (_hasOwnProperty$1.call(state.tagMap, tagHandle)) {\n    state.tag = state.tagMap[tagHandle] + tagName;\n  } else if (tagHandle === '!') {\n    state.tag = '!' + tagName;\n  } else if (tagHandle === '!!') {\n    state.tag = 'tag:yaml.org,2002:' + tagName;\n  } else {\n    throwError(state, 'undeclared tag handle \"' + tagHandle + '\"');\n  }\n  return true;\n}\nfunction readAnchorProperty(state) {\n  var _position, ch;\n  ch = state.input.charCodeAt(state.position);\n  if (ch !== 0x26 /* & */) return false;\n  if (state.anchor !== null) {\n    throwError(state, 'duplication of an anchor property');\n  }\n  ch = state.input.charCodeAt(++state.position);\n  _position = state.position;\n  while (ch !== 0 && !is_WS_OR_EOL(ch) && !is_FLOW_INDICATOR(ch)) {\n    ch = state.input.charCodeAt(++state.position);\n  }\n  if (state.position === _position) {\n    throwError(state, 'name of an anchor node must contain at least one character');\n  }\n  state.anchor = state.input.slice(_position, state.position);\n  return true;\n}\nfunction readAlias(state) {\n  var _position, alias, ch;\n  ch = state.input.charCodeAt(state.position);\n  if (ch !== 0x2A /* * */) return false;\n  ch = state.input.charCodeAt(++state.position);\n  _position = state.position;\n  while (ch !== 0 && !is_WS_OR_EOL(ch) && !is_FLOW_INDICATOR(ch)) {\n    ch = state.input.charCodeAt(++state.position);\n  }\n  if (state.position === _position) {\n    throwError(state, 'name of an alias node must contain at least one character');\n  }\n  alias = state.input.slice(_position, state.position);\n  if (!_hasOwnProperty$1.call(state.anchorMap, alias)) {\n    throwError(state, 'unidentified alias \"' + alias + '\"');\n  }\n  state.result = state.anchorMap[alias];\n  skipSeparationSpace(state, true, -1);\n  return true;\n}\nfunction composeNode(state, parentIndent, nodeContext, allowToSeek, allowCompact) {\n  var allowBlockStyles,\n    allowBlockScalars,\n    allowBlockCollections,\n    indentStatus = 1,\n    // 1: this>parent, 0: this=parent, -1: this<parent\n    atNewLine = false,\n    hasContent = false,\n    typeIndex,\n    typeQuantity,\n    typeList,\n    type,\n    flowIndent,\n    blockIndent;\n  if (state.listener !== null) {\n    state.listener('open', state);\n  }\n  state.tag = null;\n  state.anchor = null;\n  state.kind = null;\n  state.result = null;\n  allowBlockStyles = allowBlockScalars = allowBlockCollections = CONTEXT_BLOCK_OUT === nodeContext || CONTEXT_BLOCK_IN === nodeContext;\n  if (allowToSeek) {\n    if (skipSeparationSpace(state, true, -1)) {\n      atNewLine = true;\n      if (state.lineIndent > parentIndent) {\n        indentStatus = 1;\n      } else if (state.lineIndent === parentIndent) {\n        indentStatus = 0;\n      } else if (state.lineIndent < parentIndent) {\n        indentStatus = -1;\n      }\n    }\n  }\n  if (indentStatus === 1) {\n    while (readTagProperty(state) || readAnchorProperty(state)) {\n      if (skipSeparationSpace(state, true, -1)) {\n        atNewLine = true;\n        allowBlockCollections = allowBlockStyles;\n        if (state.lineIndent > parentIndent) {\n          indentStatus = 1;\n        } else if (state.lineIndent === parentIndent) {\n          indentStatus = 0;\n        } else if (state.lineIndent < parentIndent) {\n          indentStatus = -1;\n        }\n      } else {\n        allowBlockCollections = false;\n      }\n    }\n  }\n  if (allowBlockCollections) {\n    allowBlockCollections = atNewLine || allowCompact;\n  }\n  if (indentStatus === 1 || CONTEXT_BLOCK_OUT === nodeContext) {\n    if (CONTEXT_FLOW_IN === nodeContext || CONTEXT_FLOW_OUT === nodeContext) {\n      flowIndent = parentIndent;\n    } else {\n      flowIndent = parentIndent + 1;\n    }\n    blockIndent = state.position - state.lineStart;\n    if (indentStatus === 1) {\n      if (allowBlockCollections && (readBlockSequence(state, blockIndent) || readBlockMapping(state, blockIndent, flowIndent)) || readFlowCollection(state, flowIndent)) {\n        hasContent = true;\n      } else {\n        if (allowBlockScalars && readBlockScalar(state, flowIndent) || readSingleQuotedScalar(state, flowIndent) || readDoubleQuotedScalar(state, flowIndent)) {\n          hasContent = true;\n        } else if (readAlias(state)) {\n          hasContent = true;\n          if (state.tag !== null || state.anchor !== null) {\n            throwError(state, 'alias node should not have any properties');\n          }\n        } else if (readPlainScalar(state, flowIndent, CONTEXT_FLOW_IN === nodeContext)) {\n          hasContent = true;\n          if (state.tag === null) {\n            state.tag = '?';\n          }\n        }\n        if (state.anchor !== null) {\n          state.anchorMap[state.anchor] = state.result;\n        }\n      }\n    } else if (indentStatus === 0) {\n      // Special case: block sequences are allowed to have same indentation level as the parent.\n      // http://www.yaml.org/spec/1.2/spec.html#id2799784\n      hasContent = allowBlockCollections && readBlockSequence(state, blockIndent);\n    }\n  }\n  if (state.tag === null) {\n    if (state.anchor !== null) {\n      state.anchorMap[state.anchor] = state.result;\n    }\n  } else if (state.tag === '?') {\n    // Implicit resolving is not allowed for non-scalar types, and '?'\n    // non-specific tag is only automatically assigned to plain scalars.\n    //\n    // We only need to check kind conformity in case user explicitly assigns '?'\n    // tag, for example like this: \"!<?> [0]\"\n    //\n    if (state.result !== null && state.kind !== 'scalar') {\n      throwError(state, 'unacceptable node kind for !<?> tag; it should be \"scalar\", not \"' + state.kind + '\"');\n    }\n    for (typeIndex = 0, typeQuantity = state.implicitTypes.length; typeIndex < typeQuantity; typeIndex += 1) {\n      type = state.implicitTypes[typeIndex];\n      if (type.resolve(state.result)) {\n        // `state.result` updated in resolver if matched\n        state.result = type.construct(state.result);\n        state.tag = type.tag;\n        if (state.anchor !== null) {\n          state.anchorMap[state.anchor] = state.result;\n        }\n        break;\n      }\n    }\n  } else if (state.tag !== '!') {\n    if (_hasOwnProperty$1.call(state.typeMap[state.kind || 'fallback'], state.tag)) {\n      type = state.typeMap[state.kind || 'fallback'][state.tag];\n    } else {\n      // looking for multi type\n      type = null;\n      typeList = state.typeMap.multi[state.kind || 'fallback'];\n      for (typeIndex = 0, typeQuantity = typeList.length; typeIndex < typeQuantity; typeIndex += 1) {\n        if (state.tag.slice(0, typeList[typeIndex].tag.length) === typeList[typeIndex].tag) {\n          type = typeList[typeIndex];\n          break;\n        }\n      }\n    }\n    if (!type) {\n      throwError(state, 'unknown tag !<' + state.tag + '>');\n    }\n    if (state.result !== null && type.kind !== state.kind) {\n      throwError(state, 'unacceptable node kind for !<' + state.tag + '> tag; it should be \"' + type.kind + '\", not \"' + state.kind + '\"');\n    }\n    if (!type.resolve(state.result, state.tag)) {\n      // `state.result` updated in resolver if matched\n      throwError(state, 'cannot resolve a node with !<' + state.tag + '> explicit tag');\n    } else {\n      state.result = type.construct(state.result, state.tag);\n      if (state.anchor !== null) {\n        state.anchorMap[state.anchor] = state.result;\n      }\n    }\n  }\n  if (state.listener !== null) {\n    state.listener('close', state);\n  }\n  return state.tag !== null || state.anchor !== null || hasContent;\n}\nfunction readDocument(state) {\n  var documentStart = state.position,\n    _position,\n    directiveName,\n    directiveArgs,\n    hasDirectives = false,\n    ch;\n  state.version = null;\n  state.checkLineBreaks = state.legacy;\n  state.tagMap = Object.create(null);\n  state.anchorMap = Object.create(null);\n  while ((ch = state.input.charCodeAt(state.position)) !== 0) {\n    skipSeparationSpace(state, true, -1);\n    ch = state.input.charCodeAt(state.position);\n    if (state.lineIndent > 0 || ch !== 0x25 /* % */) {\n      break;\n    }\n    hasDirectives = true;\n    ch = state.input.charCodeAt(++state.position);\n    _position = state.position;\n    while (ch !== 0 && !is_WS_OR_EOL(ch)) {\n      ch = state.input.charCodeAt(++state.position);\n    }\n    directiveName = state.input.slice(_position, state.position);\n    directiveArgs = [];\n    if (directiveName.length < 1) {\n      throwError(state, 'directive name must not be less than one character in length');\n    }\n    while (ch !== 0) {\n      while (is_WHITE_SPACE(ch)) {\n        ch = state.input.charCodeAt(++state.position);\n      }\n      if (ch === 0x23 /* # */) {\n        do {\n          ch = state.input.charCodeAt(++state.position);\n        } while (ch !== 0 && !is_EOL(ch));\n        break;\n      }\n      if (is_EOL(ch)) break;\n      _position = state.position;\n      while (ch !== 0 && !is_WS_OR_EOL(ch)) {\n        ch = state.input.charCodeAt(++state.position);\n      }\n      directiveArgs.push(state.input.slice(_position, state.position));\n    }\n    if (ch !== 0) readLineBreak(state);\n    if (_hasOwnProperty$1.call(directiveHandlers, directiveName)) {\n      directiveHandlers[directiveName](state, directiveName, directiveArgs);\n    } else {\n      throwWarning(state, 'unknown document directive \"' + directiveName + '\"');\n    }\n  }\n  skipSeparationSpace(state, true, -1);\n  if (state.lineIndent === 0 && state.input.charCodeAt(state.position) === 0x2D /* - */ && state.input.charCodeAt(state.position + 1) === 0x2D /* - */ && state.input.charCodeAt(state.position + 2) === 0x2D /* - */) {\n    state.position += 3;\n    skipSeparationSpace(state, true, -1);\n  } else if (hasDirectives) {\n    throwError(state, 'directives end mark is expected');\n  }\n  composeNode(state, state.lineIndent - 1, CONTEXT_BLOCK_OUT, false, true);\n  skipSeparationSpace(state, true, -1);\n  if (state.checkLineBreaks && PATTERN_NON_ASCII_LINE_BREAKS.test(state.input.slice(documentStart, state.position))) {\n    throwWarning(state, 'non-ASCII line breaks are interpreted as content');\n  }\n  state.documents.push(state.result);\n  if (state.position === state.lineStart && testDocumentSeparator(state)) {\n    if (state.input.charCodeAt(state.position) === 0x2E /* . */) {\n      state.position += 3;\n      skipSeparationSpace(state, true, -1);\n    }\n    return;\n  }\n  if (state.position < state.length - 1) {\n    throwError(state, 'end of the stream or a document separator is expected');\n  } else {\n    return;\n  }\n}\nfunction loadDocuments(input, options) {\n  input = String(input);\n  options = options || {};\n  if (input.length !== 0) {\n    // Add tailing `\\n` if not exists\n    if (input.charCodeAt(input.length - 1) !== 0x0A /* LF */ && input.charCodeAt(input.length - 1) !== 0x0D /* CR */) {\n      input += '\\n';\n    }\n\n    // Strip BOM\n    if (input.charCodeAt(0) === 0xFEFF) {\n      input = input.slice(1);\n    }\n  }\n  var state = new State$1(input, options);\n  var nullpos = input.indexOf('\\0');\n  if (nullpos !== -1) {\n    state.position = nullpos;\n    throwError(state, 'null byte is not allowed in input');\n  }\n\n  // Use 0 as string terminator. That significantly simplifies bounds check.\n  state.input += '\\0';\n  while (state.input.charCodeAt(state.position) === 0x20 /* Space */) {\n    state.lineIndent += 1;\n    state.position += 1;\n  }\n  while (state.position < state.length - 1) {\n    readDocument(state);\n  }\n  return state.documents;\n}\nfunction loadAll$1(input, iterator, options) {\n  if (iterator !== null && typeof iterator === 'object' && typeof options === 'undefined') {\n    options = iterator;\n    iterator = null;\n  }\n  var documents = loadDocuments(input, options);\n  if (typeof iterator !== 'function') {\n    return documents;\n  }\n  for (var index = 0, length = documents.length; index < length; index += 1) {\n    iterator(documents[index]);\n  }\n}\nfunction load$1(input, options) {\n  var documents = loadDocuments(input, options);\n  if (documents.length === 0) {\n    /*eslint-disable no-undefined*/\n    return undefined;\n  } else if (documents.length === 1) {\n    return documents[0];\n  }\n  throw new exception('expected a single document in the stream, but found more');\n}\nvar loadAll_1 = loadAll$1;\nvar load_1 = load$1;\nvar loader = {\n  loadAll: loadAll_1,\n  load: load_1\n};\n\n/*eslint-disable no-use-before-define*/\n\nvar _toString = Object.prototype.toString;\nvar _hasOwnProperty = Object.prototype.hasOwnProperty;\nvar CHAR_BOM = 0xFEFF;\nvar CHAR_TAB = 0x09; /* Tab */\nvar CHAR_LINE_FEED = 0x0A; /* LF */\nvar CHAR_CARRIAGE_RETURN = 0x0D; /* CR */\nvar CHAR_SPACE = 0x20; /* Space */\nvar CHAR_EXCLAMATION = 0x21; /* ! */\nvar CHAR_DOUBLE_QUOTE = 0x22; /* \" */\nvar CHAR_SHARP = 0x23; /* # */\nvar CHAR_PERCENT = 0x25; /* % */\nvar CHAR_AMPERSAND = 0x26; /* & */\nvar CHAR_SINGLE_QUOTE = 0x27; /* ' */\nvar CHAR_ASTERISK = 0x2A; /* * */\nvar CHAR_COMMA = 0x2C; /* , */\nvar CHAR_MINUS = 0x2D; /* - */\nvar CHAR_COLON = 0x3A; /* : */\nvar CHAR_EQUALS = 0x3D; /* = */\nvar CHAR_GREATER_THAN = 0x3E; /* > */\nvar CHAR_QUESTION = 0x3F; /* ? */\nvar CHAR_COMMERCIAL_AT = 0x40; /* @ */\nvar CHAR_LEFT_SQUARE_BRACKET = 0x5B; /* [ */\nvar CHAR_RIGHT_SQUARE_BRACKET = 0x5D; /* ] */\nvar CHAR_GRAVE_ACCENT = 0x60; /* ` */\nvar CHAR_LEFT_CURLY_BRACKET = 0x7B; /* { */\nvar CHAR_VERTICAL_LINE = 0x7C; /* | */\nvar CHAR_RIGHT_CURLY_BRACKET = 0x7D; /* } */\n\nvar ESCAPE_SEQUENCES = {};\nESCAPE_SEQUENCES[0x00] = '\\\\0';\nESCAPE_SEQUENCES[0x07] = '\\\\a';\nESCAPE_SEQUENCES[0x08] = '\\\\b';\nESCAPE_SEQUENCES[0x09] = '\\\\t';\nESCAPE_SEQUENCES[0x0A] = '\\\\n';\nESCAPE_SEQUENCES[0x0B] = '\\\\v';\nESCAPE_SEQUENCES[0x0C] = '\\\\f';\nESCAPE_SEQUENCES[0x0D] = '\\\\r';\nESCAPE_SEQUENCES[0x1B] = '\\\\e';\nESCAPE_SEQUENCES[0x22] = '\\\\\"';\nESCAPE_SEQUENCES[0x5C] = '\\\\\\\\';\nESCAPE_SEQUENCES[0x85] = '\\\\N';\nESCAPE_SEQUENCES[0xA0] = '\\\\_';\nESCAPE_SEQUENCES[0x2028] = '\\\\L';\nESCAPE_SEQUENCES[0x2029] = '\\\\P';\nvar DEPRECATED_BOOLEANS_SYNTAX = ['y', 'Y', 'yes', 'Yes', 'YES', 'on', 'On', 'ON', 'n', 'N', 'no', 'No', 'NO', 'off', 'Off', 'OFF'];\nvar DEPRECATED_BASE60_SYNTAX = /^[-+]?[0-9_]+(?::[0-9_]+)+(?:\\.[0-9_]*)?$/;\nfunction compileStyleMap(schema, map) {\n  var result, keys, index, length, tag, style, type;\n  if (map === null) return {};\n  result = {};\n  keys = Object.keys(map);\n  for (index = 0, length = keys.length; index < length; index += 1) {\n    tag = keys[index];\n    style = String(map[tag]);\n    if (tag.slice(0, 2) === '!!') {\n      tag = 'tag:yaml.org,2002:' + tag.slice(2);\n    }\n    type = schema.compiledTypeMap['fallback'][tag];\n    if (type && _hasOwnProperty.call(type.styleAliases, style)) {\n      style = type.styleAliases[style];\n    }\n    result[tag] = style;\n  }\n  return result;\n}\nfunction encodeHex(character) {\n  var string, handle, length;\n  string = character.toString(16).toUpperCase();\n  if (character <= 0xFF) {\n    handle = 'x';\n    length = 2;\n  } else if (character <= 0xFFFF) {\n    handle = 'u';\n    length = 4;\n  } else if (character <= 0xFFFFFFFF) {\n    handle = 'U';\n    length = 8;\n  } else {\n    throw new exception('code point within a string may not be greater than 0xFFFFFFFF');\n  }\n  return '\\\\' + handle + common.repeat('0', length - string.length) + string;\n}\nvar QUOTING_TYPE_SINGLE = 1,\n  QUOTING_TYPE_DOUBLE = 2;\nfunction State(options) {\n  this.schema = options['schema'] || _default;\n  this.indent = Math.max(1, options['indent'] || 2);\n  this.noArrayIndent = options['noArrayIndent'] || false;\n  this.skipInvalid = options['skipInvalid'] || false;\n  this.flowLevel = common.isNothing(options['flowLevel']) ? -1 : options['flowLevel'];\n  this.styleMap = compileStyleMap(this.schema, options['styles'] || null);\n  this.sortKeys = options['sortKeys'] || false;\n  this.lineWidth = options['lineWidth'] || 80;\n  this.noRefs = options['noRefs'] || false;\n  this.noCompatMode = options['noCompatMode'] || false;\n  this.condenseFlow = options['condenseFlow'] || false;\n  this.quotingType = options['quotingType'] === '\"' ? QUOTING_TYPE_DOUBLE : QUOTING_TYPE_SINGLE;\n  this.forceQuotes = options['forceQuotes'] || false;\n  this.replacer = typeof options['replacer'] === 'function' ? options['replacer'] : null;\n  this.implicitTypes = this.schema.compiledImplicit;\n  this.explicitTypes = this.schema.compiledExplicit;\n  this.tag = null;\n  this.result = '';\n  this.duplicates = [];\n  this.usedDuplicates = null;\n}\n\n// Indents every line in a string. Empty lines (\\n only) are not indented.\nfunction indentString(string, spaces) {\n  var ind = common.repeat(' ', spaces),\n    position = 0,\n    next = -1,\n    result = '',\n    line,\n    length = string.length;\n  while (position < length) {\n    next = string.indexOf('\\n', position);\n    if (next === -1) {\n      line = string.slice(position);\n      position = length;\n    } else {\n      line = string.slice(position, next + 1);\n      position = next + 1;\n    }\n    if (line.length && line !== '\\n') result += ind;\n    result += line;\n  }\n  return result;\n}\nfunction generateNextLine(state, level) {\n  return '\\n' + common.repeat(' ', state.indent * level);\n}\nfunction testImplicitResolving(state, str) {\n  var index, length, type;\n  for (index = 0, length = state.implicitTypes.length; index < length; index += 1) {\n    type = state.implicitTypes[index];\n    if (type.resolve(str)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n// [33] s-white ::= s-space | s-tab\nfunction isWhitespace(c) {\n  return c === CHAR_SPACE || c === CHAR_TAB;\n}\n\n// Returns true if the character can be printed without escaping.\n// From YAML 1.2: \"any allowed characters known to be non-printable\n// should also be escaped. [However,] This isn’t mandatory\"\n// Derived from nb-char - \\t - #x85 - #xA0 - #x2028 - #x2029.\nfunction isPrintable(c) {\n  return 0x00020 <= c && c <= 0x00007E || 0x000A1 <= c && c <= 0x00D7FF && c !== 0x2028 && c !== 0x2029 || 0x0E000 <= c && c <= 0x00FFFD && c !== CHAR_BOM || 0x10000 <= c && c <= 0x10FFFF;\n}\n\n// [34] ns-char ::= nb-char - s-white\n// [27] nb-char ::= c-printable - b-char - c-byte-order-mark\n// [26] b-char  ::= b-line-feed | b-carriage-return\n// Including s-white (for some reason, examples doesn't match specs in this aspect)\n// ns-char ::= c-printable - b-line-feed - b-carriage-return - c-byte-order-mark\nfunction isNsCharOrWhitespace(c) {\n  return isPrintable(c) && c !== CHAR_BOM\n  // - b-char\n  && c !== CHAR_CARRIAGE_RETURN && c !== CHAR_LINE_FEED;\n}\n\n// [127]  ns-plain-safe(c) ::= c = flow-out  ⇒ ns-plain-safe-out\n//                             c = flow-in   ⇒ ns-plain-safe-in\n//                             c = block-key ⇒ ns-plain-safe-out\n//                             c = flow-key  ⇒ ns-plain-safe-in\n// [128] ns-plain-safe-out ::= ns-char\n// [129]  ns-plain-safe-in ::= ns-char - c-flow-indicator\n// [130]  ns-plain-char(c) ::=  ( ns-plain-safe(c) - “:” - “#” )\n//                            | ( /* An ns-char preceding */ “#” )\n//                            | ( “:” /* Followed by an ns-plain-safe(c) */ )\nfunction isPlainSafe(c, prev, inblock) {\n  var cIsNsCharOrWhitespace = isNsCharOrWhitespace(c);\n  var cIsNsChar = cIsNsCharOrWhitespace && !isWhitespace(c);\n  return (\n  // ns-plain-safe\n  inblock ?\n  // c = flow-in\n  cIsNsCharOrWhitespace : cIsNsCharOrWhitespace\n  // - c-flow-indicator\n  && c !== CHAR_COMMA && c !== CHAR_LEFT_SQUARE_BRACKET && c !== CHAR_RIGHT_SQUARE_BRACKET && c !== CHAR_LEFT_CURLY_BRACKET && c !== CHAR_RIGHT_CURLY_BRACKET\n\n  // ns-plain-char\n  ) && c !== CHAR_SHARP // false on '#'\n  && !(prev === CHAR_COLON && !cIsNsChar) // false on ': '\n  || isNsCharOrWhitespace(prev) && !isWhitespace(prev) && c === CHAR_SHARP // change to true on '[^ ]#'\n  || prev === CHAR_COLON && cIsNsChar; // change to true on ':[^ ]'\n}\n\n// Simplified test for values allowed as the first character in plain style.\nfunction isPlainSafeFirst(c) {\n  // Uses a subset of ns-char - c-indicator\n  // where ns-char = nb-char - s-white.\n  // No support of ( ( “?” | “:” | “-” ) /* Followed by an ns-plain-safe(c)) */ ) part\n  return isPrintable(c) && c !== CHAR_BOM && !isWhitespace(c) // - s-white\n  // - (c-indicator ::=\n  // “-” | “?” | “:” | “,” | “[” | “]” | “{” | “}”\n  && c !== CHAR_MINUS && c !== CHAR_QUESTION && c !== CHAR_COLON && c !== CHAR_COMMA && c !== CHAR_LEFT_SQUARE_BRACKET && c !== CHAR_RIGHT_SQUARE_BRACKET && c !== CHAR_LEFT_CURLY_BRACKET && c !== CHAR_RIGHT_CURLY_BRACKET\n  // | “#” | “&” | “*” | “!” | “|” | “=” | “>” | “'” | “\"”\n  && c !== CHAR_SHARP && c !== CHAR_AMPERSAND && c !== CHAR_ASTERISK && c !== CHAR_EXCLAMATION && c !== CHAR_VERTICAL_LINE && c !== CHAR_EQUALS && c !== CHAR_GREATER_THAN && c !== CHAR_SINGLE_QUOTE && c !== CHAR_DOUBLE_QUOTE\n  // | “%” | “@” | “`”)\n  && c !== CHAR_PERCENT && c !== CHAR_COMMERCIAL_AT && c !== CHAR_GRAVE_ACCENT;\n}\n\n// Simplified test for values allowed as the last character in plain style.\nfunction isPlainSafeLast(c) {\n  // just not whitespace or colon, it will be checked to be plain character later\n  return !isWhitespace(c) && c !== CHAR_COLON;\n}\n\n// Same as 'string'.codePointAt(pos), but works in older browsers.\nfunction codePointAt(string, pos) {\n  var first = string.charCodeAt(pos),\n    second;\n  if (first >= 0xD800 && first <= 0xDBFF && pos + 1 < string.length) {\n    second = string.charCodeAt(pos + 1);\n    if (second >= 0xDC00 && second <= 0xDFFF) {\n      // https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n      return (first - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n    }\n  }\n  return first;\n}\n\n// Determines whether block indentation indicator is required.\nfunction needIndentIndicator(string) {\n  var leadingSpaceRe = /^\\n* /;\n  return leadingSpaceRe.test(string);\n}\nvar STYLE_PLAIN = 1,\n  STYLE_SINGLE = 2,\n  STYLE_LITERAL = 3,\n  STYLE_FOLDED = 4,\n  STYLE_DOUBLE = 5;\n\n// Determines which scalar styles are possible and returns the preferred style.\n// lineWidth = -1 => no limit.\n// Pre-conditions: str.length > 0.\n// Post-conditions:\n//    STYLE_PLAIN or STYLE_SINGLE => no \\n are in the string.\n//    STYLE_LITERAL => no lines are suitable for folding (or lineWidth is -1).\n//    STYLE_FOLDED => a line > lineWidth and can be folded (and lineWidth != -1).\nfunction chooseScalarStyle(string, singleLineOnly, indentPerLevel, lineWidth, testAmbiguousType, quotingType, forceQuotes, inblock) {\n  var i;\n  var char = 0;\n  var prevChar = null;\n  var hasLineBreak = false;\n  var hasFoldableLine = false; // only checked if shouldTrackWidth\n  var shouldTrackWidth = lineWidth !== -1;\n  var previousLineBreak = -1; // count the first line correctly\n  var plain = isPlainSafeFirst(codePointAt(string, 0)) && isPlainSafeLast(codePointAt(string, string.length - 1));\n  if (singleLineOnly || forceQuotes) {\n    // Case: no block styles.\n    // Check for disallowed characters to rule out plain and single.\n    for (i = 0; i < string.length; char >= 0x10000 ? i += 2 : i++) {\n      char = codePointAt(string, i);\n      if (!isPrintable(char)) {\n        return STYLE_DOUBLE;\n      }\n      plain = plain && isPlainSafe(char, prevChar, inblock);\n      prevChar = char;\n    }\n  } else {\n    // Case: block styles permitted.\n    for (i = 0; i < string.length; char >= 0x10000 ? i += 2 : i++) {\n      char = codePointAt(string, i);\n      if (char === CHAR_LINE_FEED) {\n        hasLineBreak = true;\n        // Check if any line can be folded.\n        if (shouldTrackWidth) {\n          hasFoldableLine = hasFoldableLine ||\n          // Foldable line = too long, and not more-indented.\n          i - previousLineBreak - 1 > lineWidth && string[previousLineBreak + 1] !== ' ';\n          previousLineBreak = i;\n        }\n      } else if (!isPrintable(char)) {\n        return STYLE_DOUBLE;\n      }\n      plain = plain && isPlainSafe(char, prevChar, inblock);\n      prevChar = char;\n    }\n    // in case the end is missing a \\n\n    hasFoldableLine = hasFoldableLine || shouldTrackWidth && i - previousLineBreak - 1 > lineWidth && string[previousLineBreak + 1] !== ' ';\n  }\n  // Although every style can represent \\n without escaping, prefer block styles\n  // for multiline, since they're more readable and they don't add empty lines.\n  // Also prefer folding a super-long line.\n  if (!hasLineBreak && !hasFoldableLine) {\n    // Strings interpretable as another type have to be quoted;\n    // e.g. the string 'true' vs. the boolean true.\n    if (plain && !forceQuotes && !testAmbiguousType(string)) {\n      return STYLE_PLAIN;\n    }\n    return quotingType === QUOTING_TYPE_DOUBLE ? STYLE_DOUBLE : STYLE_SINGLE;\n  }\n  // Edge case: block indentation indicator can only have one digit.\n  if (indentPerLevel > 9 && needIndentIndicator(string)) {\n    return STYLE_DOUBLE;\n  }\n  // At this point we know block styles are valid.\n  // Prefer literal style unless we want to fold.\n  if (!forceQuotes) {\n    return hasFoldableLine ? STYLE_FOLDED : STYLE_LITERAL;\n  }\n  return quotingType === QUOTING_TYPE_DOUBLE ? STYLE_DOUBLE : STYLE_SINGLE;\n}\n\n// Note: line breaking/folding is implemented for only the folded style.\n// NB. We drop the last trailing newline (if any) of a returned block scalar\n//  since the dumper adds its own newline. This always works:\n//    • No ending newline => unaffected; already using strip \"-\" chomping.\n//    • Ending newline    => removed then restored.\n//  Importantly, this keeps the \"+\" chomp indicator from gaining an extra line.\nfunction writeScalar(state, string, level, iskey, inblock) {\n  state.dump = function () {\n    if (string.length === 0) {\n      return state.quotingType === QUOTING_TYPE_DOUBLE ? '\"\"' : \"''\";\n    }\n    if (!state.noCompatMode) {\n      if (DEPRECATED_BOOLEANS_SYNTAX.indexOf(string) !== -1 || DEPRECATED_BASE60_SYNTAX.test(string)) {\n        return state.quotingType === QUOTING_TYPE_DOUBLE ? '\"' + string + '\"' : \"'\" + string + \"'\";\n      }\n    }\n    var indent = state.indent * Math.max(1, level); // no 0-indent scalars\n    // As indentation gets deeper, let the width decrease monotonically\n    // to the lower bound min(state.lineWidth, 40).\n    // Note that this implies\n    //  state.lineWidth ≤ 40 + state.indent: width is fixed at the lower bound.\n    //  state.lineWidth > 40 + state.indent: width decreases until the lower bound.\n    // This behaves better than a constant minimum width which disallows narrower options,\n    // or an indent threshold which causes the width to suddenly increase.\n    var lineWidth = state.lineWidth === -1 ? -1 : Math.max(Math.min(state.lineWidth, 40), state.lineWidth - indent);\n\n    // Without knowing if keys are implicit/explicit, assume implicit for safety.\n    var singleLineOnly = iskey\n    // No block styles in flow mode.\n    || state.flowLevel > -1 && level >= state.flowLevel;\n    function testAmbiguity(string) {\n      return testImplicitResolving(state, string);\n    }\n    switch (chooseScalarStyle(string, singleLineOnly, state.indent, lineWidth, testAmbiguity, state.quotingType, state.forceQuotes && !iskey, inblock)) {\n      case STYLE_PLAIN:\n        return string;\n      case STYLE_SINGLE:\n        return \"'\" + string.replace(/'/g, \"''\") + \"'\";\n      case STYLE_LITERAL:\n        return '|' + blockHeader(string, state.indent) + dropEndingNewline(indentString(string, indent));\n      case STYLE_FOLDED:\n        return '>' + blockHeader(string, state.indent) + dropEndingNewline(indentString(foldString(string, lineWidth), indent));\n      case STYLE_DOUBLE:\n        return '\"' + escapeString(string) + '\"';\n      default:\n        throw new exception('impossible error: invalid scalar style');\n    }\n  }();\n}\n\n// Pre-conditions: string is valid for a block scalar, 1 <= indentPerLevel <= 9.\nfunction blockHeader(string, indentPerLevel) {\n  var indentIndicator = needIndentIndicator(string) ? String(indentPerLevel) : '';\n\n  // note the special case: the string '\\n' counts as a \"trailing\" empty line.\n  var clip = string[string.length - 1] === '\\n';\n  var keep = clip && (string[string.length - 2] === '\\n' || string === '\\n');\n  var chomp = keep ? '+' : clip ? '' : '-';\n  return indentIndicator + chomp + '\\n';\n}\n\n// (See the note for writeScalar.)\nfunction dropEndingNewline(string) {\n  return string[string.length - 1] === '\\n' ? string.slice(0, -1) : string;\n}\n\n// Note: a long line without a suitable break point will exceed the width limit.\n// Pre-conditions: every char in str isPrintable, str.length > 0, width > 0.\nfunction foldString(string, width) {\n  // In folded style, $k$ consecutive newlines output as $k+1$ newlines—\n  // unless they're before or after a more-indented line, or at the very\n  // beginning or end, in which case $k$ maps to $k$.\n  // Therefore, parse each chunk as newline(s) followed by a content line.\n  var lineRe = /(\\n+)([^\\n]*)/g;\n\n  // first line (possibly an empty line)\n  var result = function () {\n    var nextLF = string.indexOf('\\n');\n    nextLF = nextLF !== -1 ? nextLF : string.length;\n    lineRe.lastIndex = nextLF;\n    return foldLine(string.slice(0, nextLF), width);\n  }();\n  // If we haven't reached the first content line yet, don't add an extra \\n.\n  var prevMoreIndented = string[0] === '\\n' || string[0] === ' ';\n  var moreIndented;\n\n  // rest of the lines\n  var match;\n  while (match = lineRe.exec(string)) {\n    var prefix = match[1],\n      line = match[2];\n    moreIndented = line[0] === ' ';\n    result += prefix + (!prevMoreIndented && !moreIndented && line !== '' ? '\\n' : '') + foldLine(line, width);\n    prevMoreIndented = moreIndented;\n  }\n  return result;\n}\n\n// Greedy line breaking.\n// Picks the longest line under the limit each time,\n// otherwise settles for the shortest line over the limit.\n// NB. More-indented lines *cannot* be folded, as that would add an extra \\n.\nfunction foldLine(line, width) {\n  if (line === '' || line[0] === ' ') return line;\n\n  // Since a more-indented line adds a \\n, breaks can't be followed by a space.\n  var breakRe = / [^ ]/g; // note: the match index will always be <= length-2.\n  var match;\n  // start is an inclusive index. end, curr, and next are exclusive.\n  var start = 0,\n    end,\n    curr = 0,\n    next = 0;\n  var result = '';\n\n  // Invariants: 0 <= start <= length-1.\n  //   0 <= curr <= next <= max(0, length-2). curr - start <= width.\n  // Inside the loop:\n  //   A match implies length >= 2, so curr and next are <= length-2.\n  while (match = breakRe.exec(line)) {\n    next = match.index;\n    // maintain invariant: curr - start <= width\n    if (next - start > width) {\n      end = curr > start ? curr : next; // derive end <= length-2\n      result += '\\n' + line.slice(start, end);\n      // skip the space that was output as \\n\n      start = end + 1; // derive start <= length-1\n    }\n    curr = next;\n  }\n\n  // By the invariants, start <= length-1, so there is something left over.\n  // It is either the whole string or a part starting from non-whitespace.\n  result += '\\n';\n  // Insert a break if the remainder is too long and there is a break available.\n  if (line.length - start > width && curr > start) {\n    result += line.slice(start, curr) + '\\n' + line.slice(curr + 1);\n  } else {\n    result += line.slice(start);\n  }\n  return result.slice(1); // drop extra \\n joiner\n}\n\n// Escapes a double-quoted string.\nfunction escapeString(string) {\n  var result = '';\n  var char = 0;\n  var escapeSeq;\n  for (var i = 0; i < string.length; char >= 0x10000 ? i += 2 : i++) {\n    char = codePointAt(string, i);\n    escapeSeq = ESCAPE_SEQUENCES[char];\n    if (!escapeSeq && isPrintable(char)) {\n      result += string[i];\n      if (char >= 0x10000) result += string[i + 1];\n    } else {\n      result += escapeSeq || encodeHex(char);\n    }\n  }\n  return result;\n}\nfunction writeFlowSequence(state, level, object) {\n  var _result = '',\n    _tag = state.tag,\n    index,\n    length,\n    value;\n  for (index = 0, length = object.length; index < length; index += 1) {\n    value = object[index];\n    if (state.replacer) {\n      value = state.replacer.call(object, String(index), value);\n    }\n\n    // Write only valid elements, put null instead of invalid elements.\n    if (writeNode(state, level, value, false, false) || typeof value === 'undefined' && writeNode(state, level, null, false, false)) {\n      if (_result !== '') _result += ',' + (!state.condenseFlow ? ' ' : '');\n      _result += state.dump;\n    }\n  }\n  state.tag = _tag;\n  state.dump = '[' + _result + ']';\n}\nfunction writeBlockSequence(state, level, object, compact) {\n  var _result = '',\n    _tag = state.tag,\n    index,\n    length,\n    value;\n  for (index = 0, length = object.length; index < length; index += 1) {\n    value = object[index];\n    if (state.replacer) {\n      value = state.replacer.call(object, String(index), value);\n    }\n\n    // Write only valid elements, put null instead of invalid elements.\n    if (writeNode(state, level + 1, value, true, true, false, true) || typeof value === 'undefined' && writeNode(state, level + 1, null, true, true, false, true)) {\n      if (!compact || _result !== '') {\n        _result += generateNextLine(state, level);\n      }\n      if (state.dump && CHAR_LINE_FEED === state.dump.charCodeAt(0)) {\n        _result += '-';\n      } else {\n        _result += '- ';\n      }\n      _result += state.dump;\n    }\n  }\n  state.tag = _tag;\n  state.dump = _result || '[]'; // Empty sequence if no valid values.\n}\nfunction writeFlowMapping(state, level, object) {\n  var _result = '',\n    _tag = state.tag,\n    objectKeyList = Object.keys(object),\n    index,\n    length,\n    objectKey,\n    objectValue,\n    pairBuffer;\n  for (index = 0, length = objectKeyList.length; index < length; index += 1) {\n    pairBuffer = '';\n    if (_result !== '') pairBuffer += ', ';\n    if (state.condenseFlow) pairBuffer += '\"';\n    objectKey = objectKeyList[index];\n    objectValue = object[objectKey];\n    if (state.replacer) {\n      objectValue = state.replacer.call(object, objectKey, objectValue);\n    }\n    if (!writeNode(state, level, objectKey, false, false)) {\n      continue; // Skip this pair because of invalid key;\n    }\n    if (state.dump.length > 1024) pairBuffer += '? ';\n    pairBuffer += state.dump + (state.condenseFlow ? '\"' : '') + ':' + (state.condenseFlow ? '' : ' ');\n    if (!writeNode(state, level, objectValue, false, false)) {\n      continue; // Skip this pair because of invalid value.\n    }\n    pairBuffer += state.dump;\n\n    // Both key and value are valid.\n    _result += pairBuffer;\n  }\n  state.tag = _tag;\n  state.dump = '{' + _result + '}';\n}\nfunction writeBlockMapping(state, level, object, compact) {\n  var _result = '',\n    _tag = state.tag,\n    objectKeyList = Object.keys(object),\n    index,\n    length,\n    objectKey,\n    objectValue,\n    explicitPair,\n    pairBuffer;\n\n  // Allow sorting keys so that the output file is deterministic\n  if (state.sortKeys === true) {\n    // Default sorting\n    objectKeyList.sort();\n  } else if (typeof state.sortKeys === 'function') {\n    // Custom sort function\n    objectKeyList.sort(state.sortKeys);\n  } else if (state.sortKeys) {\n    // Something is wrong\n    throw new exception('sortKeys must be a boolean or a function');\n  }\n  for (index = 0, length = objectKeyList.length; index < length; index += 1) {\n    pairBuffer = '';\n    if (!compact || _result !== '') {\n      pairBuffer += generateNextLine(state, level);\n    }\n    objectKey = objectKeyList[index];\n    objectValue = object[objectKey];\n    if (state.replacer) {\n      objectValue = state.replacer.call(object, objectKey, objectValue);\n    }\n    if (!writeNode(state, level + 1, objectKey, true, true, true)) {\n      continue; // Skip this pair because of invalid key.\n    }\n    explicitPair = state.tag !== null && state.tag !== '?' || state.dump && state.dump.length > 1024;\n    if (explicitPair) {\n      if (state.dump && CHAR_LINE_FEED === state.dump.charCodeAt(0)) {\n        pairBuffer += '?';\n      } else {\n        pairBuffer += '? ';\n      }\n    }\n    pairBuffer += state.dump;\n    if (explicitPair) {\n      pairBuffer += generateNextLine(state, level);\n    }\n    if (!writeNode(state, level + 1, objectValue, true, explicitPair)) {\n      continue; // Skip this pair because of invalid value.\n    }\n    if (state.dump && CHAR_LINE_FEED === state.dump.charCodeAt(0)) {\n      pairBuffer += ':';\n    } else {\n      pairBuffer += ': ';\n    }\n    pairBuffer += state.dump;\n\n    // Both key and value are valid.\n    _result += pairBuffer;\n  }\n  state.tag = _tag;\n  state.dump = _result || '{}'; // Empty mapping if no valid pairs.\n}\nfunction detectType(state, object, explicit) {\n  var _result, typeList, index, length, type, style;\n  typeList = explicit ? state.explicitTypes : state.implicitTypes;\n  for (index = 0, length = typeList.length; index < length; index += 1) {\n    type = typeList[index];\n    if ((type.instanceOf || type.predicate) && (!type.instanceOf || typeof object === 'object' && object instanceof type.instanceOf) && (!type.predicate || type.predicate(object))) {\n      if (explicit) {\n        if (type.multi && type.representName) {\n          state.tag = type.representName(object);\n        } else {\n          state.tag = type.tag;\n        }\n      } else {\n        state.tag = '?';\n      }\n      if (type.represent) {\n        style = state.styleMap[type.tag] || type.defaultStyle;\n        if (_toString.call(type.represent) === '[object Function]') {\n          _result = type.represent(object, style);\n        } else if (_hasOwnProperty.call(type.represent, style)) {\n          _result = type.represent[style](object, style);\n        } else {\n          throw new exception('!<' + type.tag + '> tag resolver accepts not \"' + style + '\" style');\n        }\n        state.dump = _result;\n      }\n      return true;\n    }\n  }\n  return false;\n}\n\n// Serializes `object` and writes it to global `result`.\n// Returns true on success, or false on invalid object.\n//\nfunction writeNode(state, level, object, block, compact, iskey, isblockseq) {\n  state.tag = null;\n  state.dump = object;\n  if (!detectType(state, object, false)) {\n    detectType(state, object, true);\n  }\n  var type = _toString.call(state.dump);\n  var inblock = block;\n  var tagStr;\n  if (block) {\n    block = state.flowLevel < 0 || state.flowLevel > level;\n  }\n  var objectOrArray = type === '[object Object]' || type === '[object Array]',\n    duplicateIndex,\n    duplicate;\n  if (objectOrArray) {\n    duplicateIndex = state.duplicates.indexOf(object);\n    duplicate = duplicateIndex !== -1;\n  }\n  if (state.tag !== null && state.tag !== '?' || duplicate || state.indent !== 2 && level > 0) {\n    compact = false;\n  }\n  if (duplicate && state.usedDuplicates[duplicateIndex]) {\n    state.dump = '*ref_' + duplicateIndex;\n  } else {\n    if (objectOrArray && duplicate && !state.usedDuplicates[duplicateIndex]) {\n      state.usedDuplicates[duplicateIndex] = true;\n    }\n    if (type === '[object Object]') {\n      if (block && Object.keys(state.dump).length !== 0) {\n        writeBlockMapping(state, level, state.dump, compact);\n        if (duplicate) {\n          state.dump = '&ref_' + duplicateIndex + state.dump;\n        }\n      } else {\n        writeFlowMapping(state, level, state.dump);\n        if (duplicate) {\n          state.dump = '&ref_' + duplicateIndex + ' ' + state.dump;\n        }\n      }\n    } else if (type === '[object Array]') {\n      if (block && state.dump.length !== 0) {\n        if (state.noArrayIndent && !isblockseq && level > 0) {\n          writeBlockSequence(state, level - 1, state.dump, compact);\n        } else {\n          writeBlockSequence(state, level, state.dump, compact);\n        }\n        if (duplicate) {\n          state.dump = '&ref_' + duplicateIndex + state.dump;\n        }\n      } else {\n        writeFlowSequence(state, level, state.dump);\n        if (duplicate) {\n          state.dump = '&ref_' + duplicateIndex + ' ' + state.dump;\n        }\n      }\n    } else if (type === '[object String]') {\n      if (state.tag !== '?') {\n        writeScalar(state, state.dump, level, iskey, inblock);\n      }\n    } else if (type === '[object Undefined]') {\n      return false;\n    } else {\n      if (state.skipInvalid) return false;\n      throw new exception('unacceptable kind of an object to dump ' + type);\n    }\n    if (state.tag !== null && state.tag !== '?') {\n      // Need to encode all characters except those allowed by the spec:\n      //\n      // [35] ns-dec-digit    ::=  [#x30-#x39] /* 0-9 */\n      // [36] ns-hex-digit    ::=  ns-dec-digit\n      //                         | [#x41-#x46] /* A-F */ | [#x61-#x66] /* a-f */\n      // [37] ns-ascii-letter ::=  [#x41-#x5A] /* A-Z */ | [#x61-#x7A] /* a-z */\n      // [38] ns-word-char    ::=  ns-dec-digit | ns-ascii-letter | “-”\n      // [39] ns-uri-char     ::=  “%” ns-hex-digit ns-hex-digit | ns-word-char | “#”\n      //                         | “;” | “/” | “?” | “:” | “@” | “&” | “=” | “+” | “$” | “,”\n      //                         | “_” | “.” | “!” | “~” | “*” | “'” | “(” | “)” | “[” | “]”\n      //\n      // Also need to encode '!' because it has special meaning (end of tag prefix).\n      //\n      tagStr = encodeURI(state.tag[0] === '!' ? state.tag.slice(1) : state.tag).replace(/!/g, '%21');\n      if (state.tag[0] === '!') {\n        tagStr = '!' + tagStr;\n      } else if (tagStr.slice(0, 18) === 'tag:yaml.org,2002:') {\n        tagStr = '!!' + tagStr.slice(18);\n      } else {\n        tagStr = '!<' + tagStr + '>';\n      }\n      state.dump = tagStr + ' ' + state.dump;\n    }\n  }\n  return true;\n}\nfunction getDuplicateReferences(object, state) {\n  var objects = [],\n    duplicatesIndexes = [],\n    index,\n    length;\n  inspectNode(object, objects, duplicatesIndexes);\n  for (index = 0, length = duplicatesIndexes.length; index < length; index += 1) {\n    state.duplicates.push(objects[duplicatesIndexes[index]]);\n  }\n  state.usedDuplicates = new Array(length);\n}\nfunction inspectNode(object, objects, duplicatesIndexes) {\n  var objectKeyList, index, length;\n  if (object !== null && typeof object === 'object') {\n    index = objects.indexOf(object);\n    if (index !== -1) {\n      if (duplicatesIndexes.indexOf(index) === -1) {\n        duplicatesIndexes.push(index);\n      }\n    } else {\n      objects.push(object);\n      if (Array.isArray(object)) {\n        for (index = 0, length = object.length; index < length; index += 1) {\n          inspectNode(object[index], objects, duplicatesIndexes);\n        }\n      } else {\n        objectKeyList = Object.keys(object);\n        for (index = 0, length = objectKeyList.length; index < length; index += 1) {\n          inspectNode(object[objectKeyList[index]], objects, duplicatesIndexes);\n        }\n      }\n    }\n  }\n}\nfunction dump$1(input, options) {\n  options = options || {};\n  var state = new State(options);\n  if (!state.noRefs) getDuplicateReferences(input, state);\n  var value = input;\n  if (state.replacer) {\n    value = state.replacer.call({\n      '': value\n    }, '', value);\n  }\n  if (writeNode(state, 0, value, true, true)) return state.dump + '\\n';\n  return '';\n}\nvar dump_1 = dump$1;\nvar dumper = {\n  dump: dump_1\n};\nfunction renamed(from, to) {\n  return function () {\n    throw new Error('Function yaml.' + from + ' is removed in js-yaml 4. ' + 'Use yaml.' + to + ' instead, which is now safe by default.');\n  };\n}\nvar Type = type;\nvar Schema = schema;\nvar FAILSAFE_SCHEMA = failsafe;\nvar JSON_SCHEMA = json;\nvar CORE_SCHEMA = core;\nvar DEFAULT_SCHEMA = _default;\nvar load = loader.load;\nvar loadAll = loader.loadAll;\nvar dump = dumper.dump;\nvar YAMLException = exception;\n\n// Re-export all types in case user wants to create custom schema\nvar types = {\n  binary: binary,\n  float: float,\n  map: map,\n  null: _null,\n  pairs: pairs,\n  set: set,\n  timestamp: timestamp,\n  bool: bool,\n  int: int,\n  merge: merge,\n  omap: omap,\n  seq: seq,\n  str: str\n};\n\n// Removed functions from JS-YAML 3.0.x\nvar safeLoad = renamed('safeLoad', 'load');\nvar safeLoadAll = renamed('safeLoadAll', 'loadAll');\nvar safeDump = renamed('safeDump', 'dump');\nvar jsYaml = {\n  Type: Type,\n  Schema: Schema,\n  FAILSAFE_SCHEMA: FAILSAFE_SCHEMA,\n  JSON_SCHEMA: JSON_SCHEMA,\n  CORE_SCHEMA: CORE_SCHEMA,\n  DEFAULT_SCHEMA: DEFAULT_SCHEMA,\n  load: load,\n  loadAll: loadAll,\n  dump: dump,\n  YAMLException: YAMLException,\n  types: types,\n  safeLoad: safeLoad,\n  safeLoadAll: safeLoadAll,\n  safeDump: safeDump\n};\nexport default jsYaml;\nexport { CORE_SCHEMA, DEFAULT_SCHEMA, FAILSAFE_SCHEMA, JSON_SCHEMA, Schema, Type, YAMLException, dump, load, loadAll, safeDump, safeLoad, safeLoadAll, types };","map":{"version":3,"names":["isNothing","subject","isObject","toArray","sequence","Array","isArray","extend","target","source","index","length","key","sourceKeys","Object","keys","repeat","string","count","result","cycle","isNegativeZero","number","Number","NEGATIVE_INFINITY","isNothing_1","isObject_1","toArray_1","repeat_1","isNegativeZero_1","extend_1","common","formatError","exception","compact","where","message","reason","mark","name","line","column","snippet","YAMLException$1","Error","call","captureStackTrace","constructor","stack","prototype","create","toString","getLine","buffer","lineStart","lineEnd","position","maxLineLength","head","tail","maxHalfLength","Math","floor","str","slice","replace","pos","padStart","max","makeSnippet","options","maxLength","indent","linesBefore","linesAfter","re","lineStarts","lineEnds","match","foundLineNo","exec","push","i","lineNoLength","min","TYPE_CONSTRUCTOR_OPTIONS","YAML_NODE_KINDS","compileStyleAliases","map","forEach","style","alias","String","Type$1","tag","indexOf","kind","resolve","construct","data","instanceOf","predicate","represent","representName","defaultStyle","multi","styleAliases","type","compileList","schema","currentType","newIndex","previousType","previousIndex","compileMap","scalar","mapping","fallback","collectType","arguments","Schema$1","definition","implicit","explicit","concat","type$1","loadKind","compiledImplicit","compiledExplicit","compiledTypeMap","seq","failsafe","resolveYamlNull","constructYamlNull","isNull","object","_null","canonical","lowercase","uppercase","camelcase","empty","resolveYamlBoolean","constructYamlBoolean","isBoolean","bool","isHexCode","c","isOctCode","isDecCode","resolveYamlInteger","hasDigits","ch","charCodeAt","constructYamlInteger","value","sign","parseInt","isInteger","int","binary","obj","octal","decimal","hexadecimal","toUpperCase","YAML_FLOAT_PATTERN","RegExp","resolveYamlFloat","test","constructYamlFloat","toLowerCase","POSITIVE_INFINITY","NaN","parseFloat","SCIENTIFIC_WITHOUT_DOT","representYamlFloat","res","isNaN","isFloat","float","json","core","YAML_DATE_REGEXP","YAML_TIMESTAMP_REGEXP","resolveYamlTimestamp","constructYamlTimestamp","year","month","day","hour","minute","second","fraction","delta","tz_hour","tz_minute","date","Date","UTC","setTime","getTime","representYamlTimestamp","toISOString","timestamp","resolveYamlMerge","merge","BASE64_MAP","resolveYamlBinary","code","idx","bitlen","charAt","constructYamlBinary","tailbits","input","bits","Uint8Array","representYamlBinary","isBinary","_hasOwnProperty$3","hasOwnProperty","_toString$2","resolveYamlOmap","objectKeys","pair","pairKey","pairHasKey","constructYamlOmap","omap","_toString$1","resolveYamlPairs","constructYamlPairs","pairs","_hasOwnProperty$2","resolveYamlSet","constructYamlSet","set","_default","_hasOwnProperty$1","CONTEXT_FLOW_IN","CONTEXT_FLOW_OUT","CONTEXT_BLOCK_IN","CONTEXT_BLOCK_OUT","CHOMPING_CLIP","CHOMPING_STRIP","CHOMPING_KEEP","PATTERN_NON_PRINTABLE","PATTERN_NON_ASCII_LINE_BREAKS","PATTERN_FLOW_INDICATORS","PATTERN_TAG_HANDLE","PATTERN_TAG_URI","_class","is_EOL","is_WHITE_SPACE","is_WS_OR_EOL","is_FLOW_INDICATOR","fromHexCode","lc","escapedHexLen","fromDecimalCode","simpleEscapeSequence","charFromCodepoint","fromCharCode","simpleEscapeCheck","simpleEscapeMap","State$1","filename","onWarning","legacy","listener","implicitTypes","typeMap","lineIndent","firstTabInLine","documents","generateError","state","throwError","throwWarning","directiveHandlers","YAML","handleYamlDirective","args","major","minor","version","checkLineBreaks","TAG","handleTagDirective","handle","prefix","tagMap","decodeURIComponent","err","captureSegment","start","end","checkJson","_position","_length","_character","_result","mergeMappings","destination","overridableKeys","quantity","storeMappingPair","keyTag","keyNode","valueNode","startLine","startLineStart","startPos","defineProperty","configurable","enumerable","writable","readLineBreak","skipSeparationSpace","allowComments","checkIndent","lineBreaks","testDocumentSeparator","writeFoldedLines","readPlainScalar","nodeIndent","withinFlowCollection","preceding","following","captureStart","captureEnd","hasPendingContent","_line","_lineStart","_lineIndent","_kind","readSingleQuotedScalar","readDoubleQuotedScalar","hexLength","hexResult","tmp","readFlowCollection","readNext","_pos","_tag","_anchor","anchor","terminator","isPair","isExplicitPair","isMapping","anchorMap","composeNode","readBlockScalar","folding","chomping","didReadContent","detectedIndent","textIndent","emptyLines","atMoreIndented","readBlockSequence","detected","readBlockMapping","flowIndent","allowCompact","_keyLine","_keyLineStart","_keyPos","atExplicitKey","readTagProperty","isVerbatim","isNamed","tagHandle","tagName","readAnchorProperty","readAlias","parentIndent","nodeContext","allowToSeek","allowBlockStyles","allowBlockScalars","allowBlockCollections","indentStatus","atNewLine","hasContent","typeIndex","typeQuantity","typeList","blockIndent","readDocument","documentStart","directiveName","directiveArgs","hasDirectives","loadDocuments","nullpos","loadAll$1","iterator","load$1","undefined","loadAll_1","load_1","loader","loadAll","load","_toString","_hasOwnProperty","CHAR_BOM","CHAR_TAB","CHAR_LINE_FEED","CHAR_CARRIAGE_RETURN","CHAR_SPACE","CHAR_EXCLAMATION","CHAR_DOUBLE_QUOTE","CHAR_SHARP","CHAR_PERCENT","CHAR_AMPERSAND","CHAR_SINGLE_QUOTE","CHAR_ASTERISK","CHAR_COMMA","CHAR_MINUS","CHAR_COLON","CHAR_EQUALS","CHAR_GREATER_THAN","CHAR_QUESTION","CHAR_COMMERCIAL_AT","CHAR_LEFT_SQUARE_BRACKET","CHAR_RIGHT_SQUARE_BRACKET","CHAR_GRAVE_ACCENT","CHAR_LEFT_CURLY_BRACKET","CHAR_VERTICAL_LINE","CHAR_RIGHT_CURLY_BRACKET","ESCAPE_SEQUENCES","DEPRECATED_BOOLEANS_SYNTAX","DEPRECATED_BASE60_SYNTAX","compileStyleMap","encodeHex","character","QUOTING_TYPE_SINGLE","QUOTING_TYPE_DOUBLE","State","noArrayIndent","skipInvalid","flowLevel","styleMap","sortKeys","lineWidth","noRefs","noCompatMode","condenseFlow","quotingType","forceQuotes","replacer","explicitTypes","duplicates","usedDuplicates","indentString","spaces","ind","next","generateNextLine","level","testImplicitResolving","isWhitespace","isPrintable","isNsCharOrWhitespace","isPlainSafe","prev","inblock","cIsNsCharOrWhitespace","cIsNsChar","isPlainSafeFirst","isPlainSafeLast","codePointAt","first","needIndentIndicator","leadingSpaceRe","STYLE_PLAIN","STYLE_SINGLE","STYLE_LITERAL","STYLE_FOLDED","STYLE_DOUBLE","chooseScalarStyle","singleLineOnly","indentPerLevel","testAmbiguousType","char","prevChar","hasLineBreak","hasFoldableLine","shouldTrackWidth","previousLineBreak","plain","writeScalar","iskey","dump","testAmbiguity","blockHeader","dropEndingNewline","foldString","escapeString","indentIndicator","clip","keep","chomp","width","lineRe","nextLF","lastIndex","foldLine","prevMoreIndented","moreIndented","breakRe","curr","escapeSeq","writeFlowSequence","writeNode","writeBlockSequence","writeFlowMapping","objectKeyList","objectKey","objectValue","pairBuffer","writeBlockMapping","explicitPair","sort","detectType","block","isblockseq","tagStr","objectOrArray","duplicateIndex","duplicate","encodeURI","getDuplicateReferences","objects","duplicatesIndexes","inspectNode","dump$1","dump_1","dumper","renamed","from","to","Type","Schema","FAILSAFE_SCHEMA","JSON_SCHEMA","CORE_SCHEMA","DEFAULT_SCHEMA","YAMLException","types","null","safeLoad","safeLoadAll","safeDump","jsYaml"],"sources":["C:/Users/chest/OneDrive/Documentos/GitHub/HackUPC/frontend/node_modules/@eslint/eslintrc/node_modules/js-yaml/dist/js-yaml.mjs"],"sourcesContent":["\n/*! js-yaml 4.1.0 https://github.com/nodeca/js-yaml @license MIT */\nfunction isNothing(subject) {\n  return (typeof subject === 'undefined') || (subject === null);\n}\n\n\nfunction isObject(subject) {\n  return (typeof subject === 'object') && (subject !== null);\n}\n\n\nfunction toArray(sequence) {\n  if (Array.isArray(sequence)) return sequence;\n  else if (isNothing(sequence)) return [];\n\n  return [ sequence ];\n}\n\n\nfunction extend(target, source) {\n  var index, length, key, sourceKeys;\n\n  if (source) {\n    sourceKeys = Object.keys(source);\n\n    for (index = 0, length = sourceKeys.length; index < length; index += 1) {\n      key = sourceKeys[index];\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\n\nfunction repeat(string, count) {\n  var result = '', cycle;\n\n  for (cycle = 0; cycle < count; cycle += 1) {\n    result += string;\n  }\n\n  return result;\n}\n\n\nfunction isNegativeZero(number) {\n  return (number === 0) && (Number.NEGATIVE_INFINITY === 1 / number);\n}\n\n\nvar isNothing_1      = isNothing;\nvar isObject_1       = isObject;\nvar toArray_1        = toArray;\nvar repeat_1         = repeat;\nvar isNegativeZero_1 = isNegativeZero;\nvar extend_1         = extend;\n\nvar common = {\n\tisNothing: isNothing_1,\n\tisObject: isObject_1,\n\ttoArray: toArray_1,\n\trepeat: repeat_1,\n\tisNegativeZero: isNegativeZero_1,\n\textend: extend_1\n};\n\n// YAML error class. http://stackoverflow.com/questions/8458984\n\n\nfunction formatError(exception, compact) {\n  var where = '', message = exception.reason || '(unknown reason)';\n\n  if (!exception.mark) return message;\n\n  if (exception.mark.name) {\n    where += 'in \"' + exception.mark.name + '\" ';\n  }\n\n  where += '(' + (exception.mark.line + 1) + ':' + (exception.mark.column + 1) + ')';\n\n  if (!compact && exception.mark.snippet) {\n    where += '\\n\\n' + exception.mark.snippet;\n  }\n\n  return message + ' ' + where;\n}\n\n\nfunction YAMLException$1(reason, mark) {\n  // Super constructor\n  Error.call(this);\n\n  this.name = 'YAMLException';\n  this.reason = reason;\n  this.mark = mark;\n  this.message = formatError(this, false);\n\n  // Include stack trace in error object\n  if (Error.captureStackTrace) {\n    // Chrome and NodeJS\n    Error.captureStackTrace(this, this.constructor);\n  } else {\n    // FF, IE 10+ and Safari 6+. Fallback for others\n    this.stack = (new Error()).stack || '';\n  }\n}\n\n\n// Inherit from Error\nYAMLException$1.prototype = Object.create(Error.prototype);\nYAMLException$1.prototype.constructor = YAMLException$1;\n\n\nYAMLException$1.prototype.toString = function toString(compact) {\n  return this.name + ': ' + formatError(this, compact);\n};\n\n\nvar exception = YAMLException$1;\n\n// get snippet for a single line, respecting maxLength\nfunction getLine(buffer, lineStart, lineEnd, position, maxLineLength) {\n  var head = '';\n  var tail = '';\n  var maxHalfLength = Math.floor(maxLineLength / 2) - 1;\n\n  if (position - lineStart > maxHalfLength) {\n    head = ' ... ';\n    lineStart = position - maxHalfLength + head.length;\n  }\n\n  if (lineEnd - position > maxHalfLength) {\n    tail = ' ...';\n    lineEnd = position + maxHalfLength - tail.length;\n  }\n\n  return {\n    str: head + buffer.slice(lineStart, lineEnd).replace(/\\t/g, '→') + tail,\n    pos: position - lineStart + head.length // relative position\n  };\n}\n\n\nfunction padStart(string, max) {\n  return common.repeat(' ', max - string.length) + string;\n}\n\n\nfunction makeSnippet(mark, options) {\n  options = Object.create(options || null);\n\n  if (!mark.buffer) return null;\n\n  if (!options.maxLength) options.maxLength = 79;\n  if (typeof options.indent      !== 'number') options.indent      = 1;\n  if (typeof options.linesBefore !== 'number') options.linesBefore = 3;\n  if (typeof options.linesAfter  !== 'number') options.linesAfter  = 2;\n\n  var re = /\\r?\\n|\\r|\\0/g;\n  var lineStarts = [ 0 ];\n  var lineEnds = [];\n  var match;\n  var foundLineNo = -1;\n\n  while ((match = re.exec(mark.buffer))) {\n    lineEnds.push(match.index);\n    lineStarts.push(match.index + match[0].length);\n\n    if (mark.position <= match.index && foundLineNo < 0) {\n      foundLineNo = lineStarts.length - 2;\n    }\n  }\n\n  if (foundLineNo < 0) foundLineNo = lineStarts.length - 1;\n\n  var result = '', i, line;\n  var lineNoLength = Math.min(mark.line + options.linesAfter, lineEnds.length).toString().length;\n  var maxLineLength = options.maxLength - (options.indent + lineNoLength + 3);\n\n  for (i = 1; i <= options.linesBefore; i++) {\n    if (foundLineNo - i < 0) break;\n    line = getLine(\n      mark.buffer,\n      lineStarts[foundLineNo - i],\n      lineEnds[foundLineNo - i],\n      mark.position - (lineStarts[foundLineNo] - lineStarts[foundLineNo - i]),\n      maxLineLength\n    );\n    result = common.repeat(' ', options.indent) + padStart((mark.line - i + 1).toString(), lineNoLength) +\n      ' | ' + line.str + '\\n' + result;\n  }\n\n  line = getLine(mark.buffer, lineStarts[foundLineNo], lineEnds[foundLineNo], mark.position, maxLineLength);\n  result += common.repeat(' ', options.indent) + padStart((mark.line + 1).toString(), lineNoLength) +\n    ' | ' + line.str + '\\n';\n  result += common.repeat('-', options.indent + lineNoLength + 3 + line.pos) + '^' + '\\n';\n\n  for (i = 1; i <= options.linesAfter; i++) {\n    if (foundLineNo + i >= lineEnds.length) break;\n    line = getLine(\n      mark.buffer,\n      lineStarts[foundLineNo + i],\n      lineEnds[foundLineNo + i],\n      mark.position - (lineStarts[foundLineNo] - lineStarts[foundLineNo + i]),\n      maxLineLength\n    );\n    result += common.repeat(' ', options.indent) + padStart((mark.line + i + 1).toString(), lineNoLength) +\n      ' | ' + line.str + '\\n';\n  }\n\n  return result.replace(/\\n$/, '');\n}\n\n\nvar snippet = makeSnippet;\n\nvar TYPE_CONSTRUCTOR_OPTIONS = [\n  'kind',\n  'multi',\n  'resolve',\n  'construct',\n  'instanceOf',\n  'predicate',\n  'represent',\n  'representName',\n  'defaultStyle',\n  'styleAliases'\n];\n\nvar YAML_NODE_KINDS = [\n  'scalar',\n  'sequence',\n  'mapping'\n];\n\nfunction compileStyleAliases(map) {\n  var result = {};\n\n  if (map !== null) {\n    Object.keys(map).forEach(function (style) {\n      map[style].forEach(function (alias) {\n        result[String(alias)] = style;\n      });\n    });\n  }\n\n  return result;\n}\n\nfunction Type$1(tag, options) {\n  options = options || {};\n\n  Object.keys(options).forEach(function (name) {\n    if (TYPE_CONSTRUCTOR_OPTIONS.indexOf(name) === -1) {\n      throw new exception('Unknown option \"' + name + '\" is met in definition of \"' + tag + '\" YAML type.');\n    }\n  });\n\n  // TODO: Add tag format check.\n  this.options       = options; // keep original options in case user wants to extend this type later\n  this.tag           = tag;\n  this.kind          = options['kind']          || null;\n  this.resolve       = options['resolve']       || function () { return true; };\n  this.construct     = options['construct']     || function (data) { return data; };\n  this.instanceOf    = options['instanceOf']    || null;\n  this.predicate     = options['predicate']     || null;\n  this.represent     = options['represent']     || null;\n  this.representName = options['representName'] || null;\n  this.defaultStyle  = options['defaultStyle']  || null;\n  this.multi         = options['multi']         || false;\n  this.styleAliases  = compileStyleAliases(options['styleAliases'] || null);\n\n  if (YAML_NODE_KINDS.indexOf(this.kind) === -1) {\n    throw new exception('Unknown kind \"' + this.kind + '\" is specified for \"' + tag + '\" YAML type.');\n  }\n}\n\nvar type = Type$1;\n\n/*eslint-disable max-len*/\n\n\n\n\n\nfunction compileList(schema, name) {\n  var result = [];\n\n  schema[name].forEach(function (currentType) {\n    var newIndex = result.length;\n\n    result.forEach(function (previousType, previousIndex) {\n      if (previousType.tag === currentType.tag &&\n          previousType.kind === currentType.kind &&\n          previousType.multi === currentType.multi) {\n\n        newIndex = previousIndex;\n      }\n    });\n\n    result[newIndex] = currentType;\n  });\n\n  return result;\n}\n\n\nfunction compileMap(/* lists... */) {\n  var result = {\n        scalar: {},\n        sequence: {},\n        mapping: {},\n        fallback: {},\n        multi: {\n          scalar: [],\n          sequence: [],\n          mapping: [],\n          fallback: []\n        }\n      }, index, length;\n\n  function collectType(type) {\n    if (type.multi) {\n      result.multi[type.kind].push(type);\n      result.multi['fallback'].push(type);\n    } else {\n      result[type.kind][type.tag] = result['fallback'][type.tag] = type;\n    }\n  }\n\n  for (index = 0, length = arguments.length; index < length; index += 1) {\n    arguments[index].forEach(collectType);\n  }\n  return result;\n}\n\n\nfunction Schema$1(definition) {\n  return this.extend(definition);\n}\n\n\nSchema$1.prototype.extend = function extend(definition) {\n  var implicit = [];\n  var explicit = [];\n\n  if (definition instanceof type) {\n    // Schema.extend(type)\n    explicit.push(definition);\n\n  } else if (Array.isArray(definition)) {\n    // Schema.extend([ type1, type2, ... ])\n    explicit = explicit.concat(definition);\n\n  } else if (definition && (Array.isArray(definition.implicit) || Array.isArray(definition.explicit))) {\n    // Schema.extend({ explicit: [ type1, type2, ... ], implicit: [ type1, type2, ... ] })\n    if (definition.implicit) implicit = implicit.concat(definition.implicit);\n    if (definition.explicit) explicit = explicit.concat(definition.explicit);\n\n  } else {\n    throw new exception('Schema.extend argument should be a Type, [ Type ], ' +\n      'or a schema definition ({ implicit: [...], explicit: [...] })');\n  }\n\n  implicit.forEach(function (type$1) {\n    if (!(type$1 instanceof type)) {\n      throw new exception('Specified list of YAML types (or a single Type object) contains a non-Type object.');\n    }\n\n    if (type$1.loadKind && type$1.loadKind !== 'scalar') {\n      throw new exception('There is a non-scalar type in the implicit list of a schema. Implicit resolving of such types is not supported.');\n    }\n\n    if (type$1.multi) {\n      throw new exception('There is a multi type in the implicit list of a schema. Multi tags can only be listed as explicit.');\n    }\n  });\n\n  explicit.forEach(function (type$1) {\n    if (!(type$1 instanceof type)) {\n      throw new exception('Specified list of YAML types (or a single Type object) contains a non-Type object.');\n    }\n  });\n\n  var result = Object.create(Schema$1.prototype);\n\n  result.implicit = (this.implicit || []).concat(implicit);\n  result.explicit = (this.explicit || []).concat(explicit);\n\n  result.compiledImplicit = compileList(result, 'implicit');\n  result.compiledExplicit = compileList(result, 'explicit');\n  result.compiledTypeMap  = compileMap(result.compiledImplicit, result.compiledExplicit);\n\n  return result;\n};\n\n\nvar schema = Schema$1;\n\nvar str = new type('tag:yaml.org,2002:str', {\n  kind: 'scalar',\n  construct: function (data) { return data !== null ? data : ''; }\n});\n\nvar seq = new type('tag:yaml.org,2002:seq', {\n  kind: 'sequence',\n  construct: function (data) { return data !== null ? data : []; }\n});\n\nvar map = new type('tag:yaml.org,2002:map', {\n  kind: 'mapping',\n  construct: function (data) { return data !== null ? data : {}; }\n});\n\nvar failsafe = new schema({\n  explicit: [\n    str,\n    seq,\n    map\n  ]\n});\n\nfunction resolveYamlNull(data) {\n  if (data === null) return true;\n\n  var max = data.length;\n\n  return (max === 1 && data === '~') ||\n         (max === 4 && (data === 'null' || data === 'Null' || data === 'NULL'));\n}\n\nfunction constructYamlNull() {\n  return null;\n}\n\nfunction isNull(object) {\n  return object === null;\n}\n\nvar _null = new type('tag:yaml.org,2002:null', {\n  kind: 'scalar',\n  resolve: resolveYamlNull,\n  construct: constructYamlNull,\n  predicate: isNull,\n  represent: {\n    canonical: function () { return '~';    },\n    lowercase: function () { return 'null'; },\n    uppercase: function () { return 'NULL'; },\n    camelcase: function () { return 'Null'; },\n    empty:     function () { return '';     }\n  },\n  defaultStyle: 'lowercase'\n});\n\nfunction resolveYamlBoolean(data) {\n  if (data === null) return false;\n\n  var max = data.length;\n\n  return (max === 4 && (data === 'true' || data === 'True' || data === 'TRUE')) ||\n         (max === 5 && (data === 'false' || data === 'False' || data === 'FALSE'));\n}\n\nfunction constructYamlBoolean(data) {\n  return data === 'true' ||\n         data === 'True' ||\n         data === 'TRUE';\n}\n\nfunction isBoolean(object) {\n  return Object.prototype.toString.call(object) === '[object Boolean]';\n}\n\nvar bool = new type('tag:yaml.org,2002:bool', {\n  kind: 'scalar',\n  resolve: resolveYamlBoolean,\n  construct: constructYamlBoolean,\n  predicate: isBoolean,\n  represent: {\n    lowercase: function (object) { return object ? 'true' : 'false'; },\n    uppercase: function (object) { return object ? 'TRUE' : 'FALSE'; },\n    camelcase: function (object) { return object ? 'True' : 'False'; }\n  },\n  defaultStyle: 'lowercase'\n});\n\nfunction isHexCode(c) {\n  return ((0x30/* 0 */ <= c) && (c <= 0x39/* 9 */)) ||\n         ((0x41/* A */ <= c) && (c <= 0x46/* F */)) ||\n         ((0x61/* a */ <= c) && (c <= 0x66/* f */));\n}\n\nfunction isOctCode(c) {\n  return ((0x30/* 0 */ <= c) && (c <= 0x37/* 7 */));\n}\n\nfunction isDecCode(c) {\n  return ((0x30/* 0 */ <= c) && (c <= 0x39/* 9 */));\n}\n\nfunction resolveYamlInteger(data) {\n  if (data === null) return false;\n\n  var max = data.length,\n      index = 0,\n      hasDigits = false,\n      ch;\n\n  if (!max) return false;\n\n  ch = data[index];\n\n  // sign\n  if (ch === '-' || ch === '+') {\n    ch = data[++index];\n  }\n\n  if (ch === '0') {\n    // 0\n    if (index + 1 === max) return true;\n    ch = data[++index];\n\n    // base 2, base 8, base 16\n\n    if (ch === 'b') {\n      // base 2\n      index++;\n\n      for (; index < max; index++) {\n        ch = data[index];\n        if (ch === '_') continue;\n        if (ch !== '0' && ch !== '1') return false;\n        hasDigits = true;\n      }\n      return hasDigits && ch !== '_';\n    }\n\n\n    if (ch === 'x') {\n      // base 16\n      index++;\n\n      for (; index < max; index++) {\n        ch = data[index];\n        if (ch === '_') continue;\n        if (!isHexCode(data.charCodeAt(index))) return false;\n        hasDigits = true;\n      }\n      return hasDigits && ch !== '_';\n    }\n\n\n    if (ch === 'o') {\n      // base 8\n      index++;\n\n      for (; index < max; index++) {\n        ch = data[index];\n        if (ch === '_') continue;\n        if (!isOctCode(data.charCodeAt(index))) return false;\n        hasDigits = true;\n      }\n      return hasDigits && ch !== '_';\n    }\n  }\n\n  // base 10 (except 0)\n\n  // value should not start with `_`;\n  if (ch === '_') return false;\n\n  for (; index < max; index++) {\n    ch = data[index];\n    if (ch === '_') continue;\n    if (!isDecCode(data.charCodeAt(index))) {\n      return false;\n    }\n    hasDigits = true;\n  }\n\n  // Should have digits and should not end with `_`\n  if (!hasDigits || ch === '_') return false;\n\n  return true;\n}\n\nfunction constructYamlInteger(data) {\n  var value = data, sign = 1, ch;\n\n  if (value.indexOf('_') !== -1) {\n    value = value.replace(/_/g, '');\n  }\n\n  ch = value[0];\n\n  if (ch === '-' || ch === '+') {\n    if (ch === '-') sign = -1;\n    value = value.slice(1);\n    ch = value[0];\n  }\n\n  if (value === '0') return 0;\n\n  if (ch === '0') {\n    if (value[1] === 'b') return sign * parseInt(value.slice(2), 2);\n    if (value[1] === 'x') return sign * parseInt(value.slice(2), 16);\n    if (value[1] === 'o') return sign * parseInt(value.slice(2), 8);\n  }\n\n  return sign * parseInt(value, 10);\n}\n\nfunction isInteger(object) {\n  return (Object.prototype.toString.call(object)) === '[object Number]' &&\n         (object % 1 === 0 && !common.isNegativeZero(object));\n}\n\nvar int = new type('tag:yaml.org,2002:int', {\n  kind: 'scalar',\n  resolve: resolveYamlInteger,\n  construct: constructYamlInteger,\n  predicate: isInteger,\n  represent: {\n    binary:      function (obj) { return obj >= 0 ? '0b' + obj.toString(2) : '-0b' + obj.toString(2).slice(1); },\n    octal:       function (obj) { return obj >= 0 ? '0o'  + obj.toString(8) : '-0o'  + obj.toString(8).slice(1); },\n    decimal:     function (obj) { return obj.toString(10); },\n    /* eslint-disable max-len */\n    hexadecimal: function (obj) { return obj >= 0 ? '0x' + obj.toString(16).toUpperCase() :  '-0x' + obj.toString(16).toUpperCase().slice(1); }\n  },\n  defaultStyle: 'decimal',\n  styleAliases: {\n    binary:      [ 2,  'bin' ],\n    octal:       [ 8,  'oct' ],\n    decimal:     [ 10, 'dec' ],\n    hexadecimal: [ 16, 'hex' ]\n  }\n});\n\nvar YAML_FLOAT_PATTERN = new RegExp(\n  // 2.5e4, 2.5 and integers\n  '^(?:[-+]?(?:[0-9][0-9_]*)(?:\\\\.[0-9_]*)?(?:[eE][-+]?[0-9]+)?' +\n  // .2e4, .2\n  // special case, seems not from spec\n  '|\\\\.[0-9_]+(?:[eE][-+]?[0-9]+)?' +\n  // .inf\n  '|[-+]?\\\\.(?:inf|Inf|INF)' +\n  // .nan\n  '|\\\\.(?:nan|NaN|NAN))$');\n\nfunction resolveYamlFloat(data) {\n  if (data === null) return false;\n\n  if (!YAML_FLOAT_PATTERN.test(data) ||\n      // Quick hack to not allow integers end with `_`\n      // Probably should update regexp & check speed\n      data[data.length - 1] === '_') {\n    return false;\n  }\n\n  return true;\n}\n\nfunction constructYamlFloat(data) {\n  var value, sign;\n\n  value  = data.replace(/_/g, '').toLowerCase();\n  sign   = value[0] === '-' ? -1 : 1;\n\n  if ('+-'.indexOf(value[0]) >= 0) {\n    value = value.slice(1);\n  }\n\n  if (value === '.inf') {\n    return (sign === 1) ? Number.POSITIVE_INFINITY : Number.NEGATIVE_INFINITY;\n\n  } else if (value === '.nan') {\n    return NaN;\n  }\n  return sign * parseFloat(value, 10);\n}\n\n\nvar SCIENTIFIC_WITHOUT_DOT = /^[-+]?[0-9]+e/;\n\nfunction representYamlFloat(object, style) {\n  var res;\n\n  if (isNaN(object)) {\n    switch (style) {\n      case 'lowercase': return '.nan';\n      case 'uppercase': return '.NAN';\n      case 'camelcase': return '.NaN';\n    }\n  } else if (Number.POSITIVE_INFINITY === object) {\n    switch (style) {\n      case 'lowercase': return '.inf';\n      case 'uppercase': return '.INF';\n      case 'camelcase': return '.Inf';\n    }\n  } else if (Number.NEGATIVE_INFINITY === object) {\n    switch (style) {\n      case 'lowercase': return '-.inf';\n      case 'uppercase': return '-.INF';\n      case 'camelcase': return '-.Inf';\n    }\n  } else if (common.isNegativeZero(object)) {\n    return '-0.0';\n  }\n\n  res = object.toString(10);\n\n  // JS stringifier can build scientific format without dots: 5e-100,\n  // while YAML requres dot: 5.e-100. Fix it with simple hack\n\n  return SCIENTIFIC_WITHOUT_DOT.test(res) ? res.replace('e', '.e') : res;\n}\n\nfunction isFloat(object) {\n  return (Object.prototype.toString.call(object) === '[object Number]') &&\n         (object % 1 !== 0 || common.isNegativeZero(object));\n}\n\nvar float = new type('tag:yaml.org,2002:float', {\n  kind: 'scalar',\n  resolve: resolveYamlFloat,\n  construct: constructYamlFloat,\n  predicate: isFloat,\n  represent: representYamlFloat,\n  defaultStyle: 'lowercase'\n});\n\nvar json = failsafe.extend({\n  implicit: [\n    _null,\n    bool,\n    int,\n    float\n  ]\n});\n\nvar core = json;\n\nvar YAML_DATE_REGEXP = new RegExp(\n  '^([0-9][0-9][0-9][0-9])'          + // [1] year\n  '-([0-9][0-9])'                    + // [2] month\n  '-([0-9][0-9])$');                   // [3] day\n\nvar YAML_TIMESTAMP_REGEXP = new RegExp(\n  '^([0-9][0-9][0-9][0-9])'          + // [1] year\n  '-([0-9][0-9]?)'                   + // [2] month\n  '-([0-9][0-9]?)'                   + // [3] day\n  '(?:[Tt]|[ \\\\t]+)'                 + // ...\n  '([0-9][0-9]?)'                    + // [4] hour\n  ':([0-9][0-9])'                    + // [5] minute\n  ':([0-9][0-9])'                    + // [6] second\n  '(?:\\\\.([0-9]*))?'                 + // [7] fraction\n  '(?:[ \\\\t]*(Z|([-+])([0-9][0-9]?)' + // [8] tz [9] tz_sign [10] tz_hour\n  '(?::([0-9][0-9]))?))?$');           // [11] tz_minute\n\nfunction resolveYamlTimestamp(data) {\n  if (data === null) return false;\n  if (YAML_DATE_REGEXP.exec(data) !== null) return true;\n  if (YAML_TIMESTAMP_REGEXP.exec(data) !== null) return true;\n  return false;\n}\n\nfunction constructYamlTimestamp(data) {\n  var match, year, month, day, hour, minute, second, fraction = 0,\n      delta = null, tz_hour, tz_minute, date;\n\n  match = YAML_DATE_REGEXP.exec(data);\n  if (match === null) match = YAML_TIMESTAMP_REGEXP.exec(data);\n\n  if (match === null) throw new Error('Date resolve error');\n\n  // match: [1] year [2] month [3] day\n\n  year = +(match[1]);\n  month = +(match[2]) - 1; // JS month starts with 0\n  day = +(match[3]);\n\n  if (!match[4]) { // no hour\n    return new Date(Date.UTC(year, month, day));\n  }\n\n  // match: [4] hour [5] minute [6] second [7] fraction\n\n  hour = +(match[4]);\n  minute = +(match[5]);\n  second = +(match[6]);\n\n  if (match[7]) {\n    fraction = match[7].slice(0, 3);\n    while (fraction.length < 3) { // milli-seconds\n      fraction += '0';\n    }\n    fraction = +fraction;\n  }\n\n  // match: [8] tz [9] tz_sign [10] tz_hour [11] tz_minute\n\n  if (match[9]) {\n    tz_hour = +(match[10]);\n    tz_minute = +(match[11] || 0);\n    delta = (tz_hour * 60 + tz_minute) * 60000; // delta in mili-seconds\n    if (match[9] === '-') delta = -delta;\n  }\n\n  date = new Date(Date.UTC(year, month, day, hour, minute, second, fraction));\n\n  if (delta) date.setTime(date.getTime() - delta);\n\n  return date;\n}\n\nfunction representYamlTimestamp(object /*, style*/) {\n  return object.toISOString();\n}\n\nvar timestamp = new type('tag:yaml.org,2002:timestamp', {\n  kind: 'scalar',\n  resolve: resolveYamlTimestamp,\n  construct: constructYamlTimestamp,\n  instanceOf: Date,\n  represent: representYamlTimestamp\n});\n\nfunction resolveYamlMerge(data) {\n  return data === '<<' || data === null;\n}\n\nvar merge = new type('tag:yaml.org,2002:merge', {\n  kind: 'scalar',\n  resolve: resolveYamlMerge\n});\n\n/*eslint-disable no-bitwise*/\n\n\n\n\n\n// [ 64, 65, 66 ] -> [ padding, CR, LF ]\nvar BASE64_MAP = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\\n\\r';\n\n\nfunction resolveYamlBinary(data) {\n  if (data === null) return false;\n\n  var code, idx, bitlen = 0, max = data.length, map = BASE64_MAP;\n\n  // Convert one by one.\n  for (idx = 0; idx < max; idx++) {\n    code = map.indexOf(data.charAt(idx));\n\n    // Skip CR/LF\n    if (code > 64) continue;\n\n    // Fail on illegal characters\n    if (code < 0) return false;\n\n    bitlen += 6;\n  }\n\n  // If there are any bits left, source was corrupted\n  return (bitlen % 8) === 0;\n}\n\nfunction constructYamlBinary(data) {\n  var idx, tailbits,\n      input = data.replace(/[\\r\\n=]/g, ''), // remove CR/LF & padding to simplify scan\n      max = input.length,\n      map = BASE64_MAP,\n      bits = 0,\n      result = [];\n\n  // Collect by 6*4 bits (3 bytes)\n\n  for (idx = 0; idx < max; idx++) {\n    if ((idx % 4 === 0) && idx) {\n      result.push((bits >> 16) & 0xFF);\n      result.push((bits >> 8) & 0xFF);\n      result.push(bits & 0xFF);\n    }\n\n    bits = (bits << 6) | map.indexOf(input.charAt(idx));\n  }\n\n  // Dump tail\n\n  tailbits = (max % 4) * 6;\n\n  if (tailbits === 0) {\n    result.push((bits >> 16) & 0xFF);\n    result.push((bits >> 8) & 0xFF);\n    result.push(bits & 0xFF);\n  } else if (tailbits === 18) {\n    result.push((bits >> 10) & 0xFF);\n    result.push((bits >> 2) & 0xFF);\n  } else if (tailbits === 12) {\n    result.push((bits >> 4) & 0xFF);\n  }\n\n  return new Uint8Array(result);\n}\n\nfunction representYamlBinary(object /*, style*/) {\n  var result = '', bits = 0, idx, tail,\n      max = object.length,\n      map = BASE64_MAP;\n\n  // Convert every three bytes to 4 ASCII characters.\n\n  for (idx = 0; idx < max; idx++) {\n    if ((idx % 3 === 0) && idx) {\n      result += map[(bits >> 18) & 0x3F];\n      result += map[(bits >> 12) & 0x3F];\n      result += map[(bits >> 6) & 0x3F];\n      result += map[bits & 0x3F];\n    }\n\n    bits = (bits << 8) + object[idx];\n  }\n\n  // Dump tail\n\n  tail = max % 3;\n\n  if (tail === 0) {\n    result += map[(bits >> 18) & 0x3F];\n    result += map[(bits >> 12) & 0x3F];\n    result += map[(bits >> 6) & 0x3F];\n    result += map[bits & 0x3F];\n  } else if (tail === 2) {\n    result += map[(bits >> 10) & 0x3F];\n    result += map[(bits >> 4) & 0x3F];\n    result += map[(bits << 2) & 0x3F];\n    result += map[64];\n  } else if (tail === 1) {\n    result += map[(bits >> 2) & 0x3F];\n    result += map[(bits << 4) & 0x3F];\n    result += map[64];\n    result += map[64];\n  }\n\n  return result;\n}\n\nfunction isBinary(obj) {\n  return Object.prototype.toString.call(obj) ===  '[object Uint8Array]';\n}\n\nvar binary = new type('tag:yaml.org,2002:binary', {\n  kind: 'scalar',\n  resolve: resolveYamlBinary,\n  construct: constructYamlBinary,\n  predicate: isBinary,\n  represent: representYamlBinary\n});\n\nvar _hasOwnProperty$3 = Object.prototype.hasOwnProperty;\nvar _toString$2       = Object.prototype.toString;\n\nfunction resolveYamlOmap(data) {\n  if (data === null) return true;\n\n  var objectKeys = [], index, length, pair, pairKey, pairHasKey,\n      object = data;\n\n  for (index = 0, length = object.length; index < length; index += 1) {\n    pair = object[index];\n    pairHasKey = false;\n\n    if (_toString$2.call(pair) !== '[object Object]') return false;\n\n    for (pairKey in pair) {\n      if (_hasOwnProperty$3.call(pair, pairKey)) {\n        if (!pairHasKey) pairHasKey = true;\n        else return false;\n      }\n    }\n\n    if (!pairHasKey) return false;\n\n    if (objectKeys.indexOf(pairKey) === -1) objectKeys.push(pairKey);\n    else return false;\n  }\n\n  return true;\n}\n\nfunction constructYamlOmap(data) {\n  return data !== null ? data : [];\n}\n\nvar omap = new type('tag:yaml.org,2002:omap', {\n  kind: 'sequence',\n  resolve: resolveYamlOmap,\n  construct: constructYamlOmap\n});\n\nvar _toString$1 = Object.prototype.toString;\n\nfunction resolveYamlPairs(data) {\n  if (data === null) return true;\n\n  var index, length, pair, keys, result,\n      object = data;\n\n  result = new Array(object.length);\n\n  for (index = 0, length = object.length; index < length; index += 1) {\n    pair = object[index];\n\n    if (_toString$1.call(pair) !== '[object Object]') return false;\n\n    keys = Object.keys(pair);\n\n    if (keys.length !== 1) return false;\n\n    result[index] = [ keys[0], pair[keys[0]] ];\n  }\n\n  return true;\n}\n\nfunction constructYamlPairs(data) {\n  if (data === null) return [];\n\n  var index, length, pair, keys, result,\n      object = data;\n\n  result = new Array(object.length);\n\n  for (index = 0, length = object.length; index < length; index += 1) {\n    pair = object[index];\n\n    keys = Object.keys(pair);\n\n    result[index] = [ keys[0], pair[keys[0]] ];\n  }\n\n  return result;\n}\n\nvar pairs = new type('tag:yaml.org,2002:pairs', {\n  kind: 'sequence',\n  resolve: resolveYamlPairs,\n  construct: constructYamlPairs\n});\n\nvar _hasOwnProperty$2 = Object.prototype.hasOwnProperty;\n\nfunction resolveYamlSet(data) {\n  if (data === null) return true;\n\n  var key, object = data;\n\n  for (key in object) {\n    if (_hasOwnProperty$2.call(object, key)) {\n      if (object[key] !== null) return false;\n    }\n  }\n\n  return true;\n}\n\nfunction constructYamlSet(data) {\n  return data !== null ? data : {};\n}\n\nvar set = new type('tag:yaml.org,2002:set', {\n  kind: 'mapping',\n  resolve: resolveYamlSet,\n  construct: constructYamlSet\n});\n\nvar _default = core.extend({\n  implicit: [\n    timestamp,\n    merge\n  ],\n  explicit: [\n    binary,\n    omap,\n    pairs,\n    set\n  ]\n});\n\n/*eslint-disable max-len,no-use-before-define*/\n\n\n\n\n\n\n\nvar _hasOwnProperty$1 = Object.prototype.hasOwnProperty;\n\n\nvar CONTEXT_FLOW_IN   = 1;\nvar CONTEXT_FLOW_OUT  = 2;\nvar CONTEXT_BLOCK_IN  = 3;\nvar CONTEXT_BLOCK_OUT = 4;\n\n\nvar CHOMPING_CLIP  = 1;\nvar CHOMPING_STRIP = 2;\nvar CHOMPING_KEEP  = 3;\n\n\nvar PATTERN_NON_PRINTABLE         = /[\\x00-\\x08\\x0B\\x0C\\x0E-\\x1F\\x7F-\\x84\\x86-\\x9F\\uFFFE\\uFFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]/;\nvar PATTERN_NON_ASCII_LINE_BREAKS = /[\\x85\\u2028\\u2029]/;\nvar PATTERN_FLOW_INDICATORS       = /[,\\[\\]\\{\\}]/;\nvar PATTERN_TAG_HANDLE            = /^(?:!|!!|![a-z\\-]+!)$/i;\nvar PATTERN_TAG_URI               = /^(?:!|[^,\\[\\]\\{\\}])(?:%[0-9a-f]{2}|[0-9a-z\\-#;\\/\\?:@&=\\+\\$,_\\.!~\\*'\\(\\)\\[\\]])*$/i;\n\n\nfunction _class(obj) { return Object.prototype.toString.call(obj); }\n\nfunction is_EOL(c) {\n  return (c === 0x0A/* LF */) || (c === 0x0D/* CR */);\n}\n\nfunction is_WHITE_SPACE(c) {\n  return (c === 0x09/* Tab */) || (c === 0x20/* Space */);\n}\n\nfunction is_WS_OR_EOL(c) {\n  return (c === 0x09/* Tab */) ||\n         (c === 0x20/* Space */) ||\n         (c === 0x0A/* LF */) ||\n         (c === 0x0D/* CR */);\n}\n\nfunction is_FLOW_INDICATOR(c) {\n  return c === 0x2C/* , */ ||\n         c === 0x5B/* [ */ ||\n         c === 0x5D/* ] */ ||\n         c === 0x7B/* { */ ||\n         c === 0x7D/* } */;\n}\n\nfunction fromHexCode(c) {\n  var lc;\n\n  if ((0x30/* 0 */ <= c) && (c <= 0x39/* 9 */)) {\n    return c - 0x30;\n  }\n\n  /*eslint-disable no-bitwise*/\n  lc = c | 0x20;\n\n  if ((0x61/* a */ <= lc) && (lc <= 0x66/* f */)) {\n    return lc - 0x61 + 10;\n  }\n\n  return -1;\n}\n\nfunction escapedHexLen(c) {\n  if (c === 0x78/* x */) { return 2; }\n  if (c === 0x75/* u */) { return 4; }\n  if (c === 0x55/* U */) { return 8; }\n  return 0;\n}\n\nfunction fromDecimalCode(c) {\n  if ((0x30/* 0 */ <= c) && (c <= 0x39/* 9 */)) {\n    return c - 0x30;\n  }\n\n  return -1;\n}\n\nfunction simpleEscapeSequence(c) {\n  /* eslint-disable indent */\n  return (c === 0x30/* 0 */) ? '\\x00' :\n        (c === 0x61/* a */) ? '\\x07' :\n        (c === 0x62/* b */) ? '\\x08' :\n        (c === 0x74/* t */) ? '\\x09' :\n        (c === 0x09/* Tab */) ? '\\x09' :\n        (c === 0x6E/* n */) ? '\\x0A' :\n        (c === 0x76/* v */) ? '\\x0B' :\n        (c === 0x66/* f */) ? '\\x0C' :\n        (c === 0x72/* r */) ? '\\x0D' :\n        (c === 0x65/* e */) ? '\\x1B' :\n        (c === 0x20/* Space */) ? ' ' :\n        (c === 0x22/* \" */) ? '\\x22' :\n        (c === 0x2F/* / */) ? '/' :\n        (c === 0x5C/* \\ */) ? '\\x5C' :\n        (c === 0x4E/* N */) ? '\\x85' :\n        (c === 0x5F/* _ */) ? '\\xA0' :\n        (c === 0x4C/* L */) ? '\\u2028' :\n        (c === 0x50/* P */) ? '\\u2029' : '';\n}\n\nfunction charFromCodepoint(c) {\n  if (c <= 0xFFFF) {\n    return String.fromCharCode(c);\n  }\n  // Encode UTF-16 surrogate pair\n  // https://en.wikipedia.org/wiki/UTF-16#Code_points_U.2B010000_to_U.2B10FFFF\n  return String.fromCharCode(\n    ((c - 0x010000) >> 10) + 0xD800,\n    ((c - 0x010000) & 0x03FF) + 0xDC00\n  );\n}\n\nvar simpleEscapeCheck = new Array(256); // integer, for fast access\nvar simpleEscapeMap = new Array(256);\nfor (var i = 0; i < 256; i++) {\n  simpleEscapeCheck[i] = simpleEscapeSequence(i) ? 1 : 0;\n  simpleEscapeMap[i] = simpleEscapeSequence(i);\n}\n\n\nfunction State$1(input, options) {\n  this.input = input;\n\n  this.filename  = options['filename']  || null;\n  this.schema    = options['schema']    || _default;\n  this.onWarning = options['onWarning'] || null;\n  // (Hidden) Remove? makes the loader to expect YAML 1.1 documents\n  // if such documents have no explicit %YAML directive\n  this.legacy    = options['legacy']    || false;\n\n  this.json      = options['json']      || false;\n  this.listener  = options['listener']  || null;\n\n  this.implicitTypes = this.schema.compiledImplicit;\n  this.typeMap       = this.schema.compiledTypeMap;\n\n  this.length     = input.length;\n  this.position   = 0;\n  this.line       = 0;\n  this.lineStart  = 0;\n  this.lineIndent = 0;\n\n  // position of first leading tab in the current line,\n  // used to make sure there are no tabs in the indentation\n  this.firstTabInLine = -1;\n\n  this.documents = [];\n\n  /*\n  this.version;\n  this.checkLineBreaks;\n  this.tagMap;\n  this.anchorMap;\n  this.tag;\n  this.anchor;\n  this.kind;\n  this.result;*/\n\n}\n\n\nfunction generateError(state, message) {\n  var mark = {\n    name:     state.filename,\n    buffer:   state.input.slice(0, -1), // omit trailing \\0\n    position: state.position,\n    line:     state.line,\n    column:   state.position - state.lineStart\n  };\n\n  mark.snippet = snippet(mark);\n\n  return new exception(message, mark);\n}\n\nfunction throwError(state, message) {\n  throw generateError(state, message);\n}\n\nfunction throwWarning(state, message) {\n  if (state.onWarning) {\n    state.onWarning.call(null, generateError(state, message));\n  }\n}\n\n\nvar directiveHandlers = {\n\n  YAML: function handleYamlDirective(state, name, args) {\n\n    var match, major, minor;\n\n    if (state.version !== null) {\n      throwError(state, 'duplication of %YAML directive');\n    }\n\n    if (args.length !== 1) {\n      throwError(state, 'YAML directive accepts exactly one argument');\n    }\n\n    match = /^([0-9]+)\\.([0-9]+)$/.exec(args[0]);\n\n    if (match === null) {\n      throwError(state, 'ill-formed argument of the YAML directive');\n    }\n\n    major = parseInt(match[1], 10);\n    minor = parseInt(match[2], 10);\n\n    if (major !== 1) {\n      throwError(state, 'unacceptable YAML version of the document');\n    }\n\n    state.version = args[0];\n    state.checkLineBreaks = (minor < 2);\n\n    if (minor !== 1 && minor !== 2) {\n      throwWarning(state, 'unsupported YAML version of the document');\n    }\n  },\n\n  TAG: function handleTagDirective(state, name, args) {\n\n    var handle, prefix;\n\n    if (args.length !== 2) {\n      throwError(state, 'TAG directive accepts exactly two arguments');\n    }\n\n    handle = args[0];\n    prefix = args[1];\n\n    if (!PATTERN_TAG_HANDLE.test(handle)) {\n      throwError(state, 'ill-formed tag handle (first argument) of the TAG directive');\n    }\n\n    if (_hasOwnProperty$1.call(state.tagMap, handle)) {\n      throwError(state, 'there is a previously declared suffix for \"' + handle + '\" tag handle');\n    }\n\n    if (!PATTERN_TAG_URI.test(prefix)) {\n      throwError(state, 'ill-formed tag prefix (second argument) of the TAG directive');\n    }\n\n    try {\n      prefix = decodeURIComponent(prefix);\n    } catch (err) {\n      throwError(state, 'tag prefix is malformed: ' + prefix);\n    }\n\n    state.tagMap[handle] = prefix;\n  }\n};\n\n\nfunction captureSegment(state, start, end, checkJson) {\n  var _position, _length, _character, _result;\n\n  if (start < end) {\n    _result = state.input.slice(start, end);\n\n    if (checkJson) {\n      for (_position = 0, _length = _result.length; _position < _length; _position += 1) {\n        _character = _result.charCodeAt(_position);\n        if (!(_character === 0x09 ||\n              (0x20 <= _character && _character <= 0x10FFFF))) {\n          throwError(state, 'expected valid JSON character');\n        }\n      }\n    } else if (PATTERN_NON_PRINTABLE.test(_result)) {\n      throwError(state, 'the stream contains non-printable characters');\n    }\n\n    state.result += _result;\n  }\n}\n\nfunction mergeMappings(state, destination, source, overridableKeys) {\n  var sourceKeys, key, index, quantity;\n\n  if (!common.isObject(source)) {\n    throwError(state, 'cannot merge mappings; the provided source object is unacceptable');\n  }\n\n  sourceKeys = Object.keys(source);\n\n  for (index = 0, quantity = sourceKeys.length; index < quantity; index += 1) {\n    key = sourceKeys[index];\n\n    if (!_hasOwnProperty$1.call(destination, key)) {\n      destination[key] = source[key];\n      overridableKeys[key] = true;\n    }\n  }\n}\n\nfunction storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, valueNode,\n  startLine, startLineStart, startPos) {\n\n  var index, quantity;\n\n  // The output is a plain object here, so keys can only be strings.\n  // We need to convert keyNode to a string, but doing so can hang the process\n  // (deeply nested arrays that explode exponentially using aliases).\n  if (Array.isArray(keyNode)) {\n    keyNode = Array.prototype.slice.call(keyNode);\n\n    for (index = 0, quantity = keyNode.length; index < quantity; index += 1) {\n      if (Array.isArray(keyNode[index])) {\n        throwError(state, 'nested arrays are not supported inside keys');\n      }\n\n      if (typeof keyNode === 'object' && _class(keyNode[index]) === '[object Object]') {\n        keyNode[index] = '[object Object]';\n      }\n    }\n  }\n\n  // Avoid code execution in load() via toString property\n  // (still use its own toString for arrays, timestamps,\n  // and whatever user schema extensions happen to have @@toStringTag)\n  if (typeof keyNode === 'object' && _class(keyNode) === '[object Object]') {\n    keyNode = '[object Object]';\n  }\n\n\n  keyNode = String(keyNode);\n\n  if (_result === null) {\n    _result = {};\n  }\n\n  if (keyTag === 'tag:yaml.org,2002:merge') {\n    if (Array.isArray(valueNode)) {\n      for (index = 0, quantity = valueNode.length; index < quantity; index += 1) {\n        mergeMappings(state, _result, valueNode[index], overridableKeys);\n      }\n    } else {\n      mergeMappings(state, _result, valueNode, overridableKeys);\n    }\n  } else {\n    if (!state.json &&\n        !_hasOwnProperty$1.call(overridableKeys, keyNode) &&\n        _hasOwnProperty$1.call(_result, keyNode)) {\n      state.line = startLine || state.line;\n      state.lineStart = startLineStart || state.lineStart;\n      state.position = startPos || state.position;\n      throwError(state, 'duplicated mapping key');\n    }\n\n    // used for this specific key only because Object.defineProperty is slow\n    if (keyNode === '__proto__') {\n      Object.defineProperty(_result, keyNode, {\n        configurable: true,\n        enumerable: true,\n        writable: true,\n        value: valueNode\n      });\n    } else {\n      _result[keyNode] = valueNode;\n    }\n    delete overridableKeys[keyNode];\n  }\n\n  return _result;\n}\n\nfunction readLineBreak(state) {\n  var ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch === 0x0A/* LF */) {\n    state.position++;\n  } else if (ch === 0x0D/* CR */) {\n    state.position++;\n    if (state.input.charCodeAt(state.position) === 0x0A/* LF */) {\n      state.position++;\n    }\n  } else {\n    throwError(state, 'a line break is expected');\n  }\n\n  state.line += 1;\n  state.lineStart = state.position;\n  state.firstTabInLine = -1;\n}\n\nfunction skipSeparationSpace(state, allowComments, checkIndent) {\n  var lineBreaks = 0,\n      ch = state.input.charCodeAt(state.position);\n\n  while (ch !== 0) {\n    while (is_WHITE_SPACE(ch)) {\n      if (ch === 0x09/* Tab */ && state.firstTabInLine === -1) {\n        state.firstTabInLine = state.position;\n      }\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    if (allowComments && ch === 0x23/* # */) {\n      do {\n        ch = state.input.charCodeAt(++state.position);\n      } while (ch !== 0x0A/* LF */ && ch !== 0x0D/* CR */ && ch !== 0);\n    }\n\n    if (is_EOL(ch)) {\n      readLineBreak(state);\n\n      ch = state.input.charCodeAt(state.position);\n      lineBreaks++;\n      state.lineIndent = 0;\n\n      while (ch === 0x20/* Space */) {\n        state.lineIndent++;\n        ch = state.input.charCodeAt(++state.position);\n      }\n    } else {\n      break;\n    }\n  }\n\n  if (checkIndent !== -1 && lineBreaks !== 0 && state.lineIndent < checkIndent) {\n    throwWarning(state, 'deficient indentation');\n  }\n\n  return lineBreaks;\n}\n\nfunction testDocumentSeparator(state) {\n  var _position = state.position,\n      ch;\n\n  ch = state.input.charCodeAt(_position);\n\n  // Condition state.position === state.lineStart is tested\n  // in parent on each call, for efficiency. No needs to test here again.\n  if ((ch === 0x2D/* - */ || ch === 0x2E/* . */) &&\n      ch === state.input.charCodeAt(_position + 1) &&\n      ch === state.input.charCodeAt(_position + 2)) {\n\n    _position += 3;\n\n    ch = state.input.charCodeAt(_position);\n\n    if (ch === 0 || is_WS_OR_EOL(ch)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction writeFoldedLines(state, count) {\n  if (count === 1) {\n    state.result += ' ';\n  } else if (count > 1) {\n    state.result += common.repeat('\\n', count - 1);\n  }\n}\n\n\nfunction readPlainScalar(state, nodeIndent, withinFlowCollection) {\n  var preceding,\n      following,\n      captureStart,\n      captureEnd,\n      hasPendingContent,\n      _line,\n      _lineStart,\n      _lineIndent,\n      _kind = state.kind,\n      _result = state.result,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (is_WS_OR_EOL(ch)      ||\n      is_FLOW_INDICATOR(ch) ||\n      ch === 0x23/* # */    ||\n      ch === 0x26/* & */    ||\n      ch === 0x2A/* * */    ||\n      ch === 0x21/* ! */    ||\n      ch === 0x7C/* | */    ||\n      ch === 0x3E/* > */    ||\n      ch === 0x27/* ' */    ||\n      ch === 0x22/* \" */    ||\n      ch === 0x25/* % */    ||\n      ch === 0x40/* @ */    ||\n      ch === 0x60/* ` */) {\n    return false;\n  }\n\n  if (ch === 0x3F/* ? */ || ch === 0x2D/* - */) {\n    following = state.input.charCodeAt(state.position + 1);\n\n    if (is_WS_OR_EOL(following) ||\n        withinFlowCollection && is_FLOW_INDICATOR(following)) {\n      return false;\n    }\n  }\n\n  state.kind = 'scalar';\n  state.result = '';\n  captureStart = captureEnd = state.position;\n  hasPendingContent = false;\n\n  while (ch !== 0) {\n    if (ch === 0x3A/* : */) {\n      following = state.input.charCodeAt(state.position + 1);\n\n      if (is_WS_OR_EOL(following) ||\n          withinFlowCollection && is_FLOW_INDICATOR(following)) {\n        break;\n      }\n\n    } else if (ch === 0x23/* # */) {\n      preceding = state.input.charCodeAt(state.position - 1);\n\n      if (is_WS_OR_EOL(preceding)) {\n        break;\n      }\n\n    } else if ((state.position === state.lineStart && testDocumentSeparator(state)) ||\n               withinFlowCollection && is_FLOW_INDICATOR(ch)) {\n      break;\n\n    } else if (is_EOL(ch)) {\n      _line = state.line;\n      _lineStart = state.lineStart;\n      _lineIndent = state.lineIndent;\n      skipSeparationSpace(state, false, -1);\n\n      if (state.lineIndent >= nodeIndent) {\n        hasPendingContent = true;\n        ch = state.input.charCodeAt(state.position);\n        continue;\n      } else {\n        state.position = captureEnd;\n        state.line = _line;\n        state.lineStart = _lineStart;\n        state.lineIndent = _lineIndent;\n        break;\n      }\n    }\n\n    if (hasPendingContent) {\n      captureSegment(state, captureStart, captureEnd, false);\n      writeFoldedLines(state, state.line - _line);\n      captureStart = captureEnd = state.position;\n      hasPendingContent = false;\n    }\n\n    if (!is_WHITE_SPACE(ch)) {\n      captureEnd = state.position + 1;\n    }\n\n    ch = state.input.charCodeAt(++state.position);\n  }\n\n  captureSegment(state, captureStart, captureEnd, false);\n\n  if (state.result) {\n    return true;\n  }\n\n  state.kind = _kind;\n  state.result = _result;\n  return false;\n}\n\nfunction readSingleQuotedScalar(state, nodeIndent) {\n  var ch,\n      captureStart, captureEnd;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x27/* ' */) {\n    return false;\n  }\n\n  state.kind = 'scalar';\n  state.result = '';\n  state.position++;\n  captureStart = captureEnd = state.position;\n\n  while ((ch = state.input.charCodeAt(state.position)) !== 0) {\n    if (ch === 0x27/* ' */) {\n      captureSegment(state, captureStart, state.position, true);\n      ch = state.input.charCodeAt(++state.position);\n\n      if (ch === 0x27/* ' */) {\n        captureStart = state.position;\n        state.position++;\n        captureEnd = state.position;\n      } else {\n        return true;\n      }\n\n    } else if (is_EOL(ch)) {\n      captureSegment(state, captureStart, captureEnd, true);\n      writeFoldedLines(state, skipSeparationSpace(state, false, nodeIndent));\n      captureStart = captureEnd = state.position;\n\n    } else if (state.position === state.lineStart && testDocumentSeparator(state)) {\n      throwError(state, 'unexpected end of the document within a single quoted scalar');\n\n    } else {\n      state.position++;\n      captureEnd = state.position;\n    }\n  }\n\n  throwError(state, 'unexpected end of the stream within a single quoted scalar');\n}\n\nfunction readDoubleQuotedScalar(state, nodeIndent) {\n  var captureStart,\n      captureEnd,\n      hexLength,\n      hexResult,\n      tmp,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x22/* \" */) {\n    return false;\n  }\n\n  state.kind = 'scalar';\n  state.result = '';\n  state.position++;\n  captureStart = captureEnd = state.position;\n\n  while ((ch = state.input.charCodeAt(state.position)) !== 0) {\n    if (ch === 0x22/* \" */) {\n      captureSegment(state, captureStart, state.position, true);\n      state.position++;\n      return true;\n\n    } else if (ch === 0x5C/* \\ */) {\n      captureSegment(state, captureStart, state.position, true);\n      ch = state.input.charCodeAt(++state.position);\n\n      if (is_EOL(ch)) {\n        skipSeparationSpace(state, false, nodeIndent);\n\n        // TODO: rework to inline fn with no type cast?\n      } else if (ch < 256 && simpleEscapeCheck[ch]) {\n        state.result += simpleEscapeMap[ch];\n        state.position++;\n\n      } else if ((tmp = escapedHexLen(ch)) > 0) {\n        hexLength = tmp;\n        hexResult = 0;\n\n        for (; hexLength > 0; hexLength--) {\n          ch = state.input.charCodeAt(++state.position);\n\n          if ((tmp = fromHexCode(ch)) >= 0) {\n            hexResult = (hexResult << 4) + tmp;\n\n          } else {\n            throwError(state, 'expected hexadecimal character');\n          }\n        }\n\n        state.result += charFromCodepoint(hexResult);\n\n        state.position++;\n\n      } else {\n        throwError(state, 'unknown escape sequence');\n      }\n\n      captureStart = captureEnd = state.position;\n\n    } else if (is_EOL(ch)) {\n      captureSegment(state, captureStart, captureEnd, true);\n      writeFoldedLines(state, skipSeparationSpace(state, false, nodeIndent));\n      captureStart = captureEnd = state.position;\n\n    } else if (state.position === state.lineStart && testDocumentSeparator(state)) {\n      throwError(state, 'unexpected end of the document within a double quoted scalar');\n\n    } else {\n      state.position++;\n      captureEnd = state.position;\n    }\n  }\n\n  throwError(state, 'unexpected end of the stream within a double quoted scalar');\n}\n\nfunction readFlowCollection(state, nodeIndent) {\n  var readNext = true,\n      _line,\n      _lineStart,\n      _pos,\n      _tag     = state.tag,\n      _result,\n      _anchor  = state.anchor,\n      following,\n      terminator,\n      isPair,\n      isExplicitPair,\n      isMapping,\n      overridableKeys = Object.create(null),\n      keyNode,\n      keyTag,\n      valueNode,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch === 0x5B/* [ */) {\n    terminator = 0x5D;/* ] */\n    isMapping = false;\n    _result = [];\n  } else if (ch === 0x7B/* { */) {\n    terminator = 0x7D;/* } */\n    isMapping = true;\n    _result = {};\n  } else {\n    return false;\n  }\n\n  if (state.anchor !== null) {\n    state.anchorMap[state.anchor] = _result;\n  }\n\n  ch = state.input.charCodeAt(++state.position);\n\n  while (ch !== 0) {\n    skipSeparationSpace(state, true, nodeIndent);\n\n    ch = state.input.charCodeAt(state.position);\n\n    if (ch === terminator) {\n      state.position++;\n      state.tag = _tag;\n      state.anchor = _anchor;\n      state.kind = isMapping ? 'mapping' : 'sequence';\n      state.result = _result;\n      return true;\n    } else if (!readNext) {\n      throwError(state, 'missed comma between flow collection entries');\n    } else if (ch === 0x2C/* , */) {\n      // \"flow collection entries can never be completely empty\", as per YAML 1.2, section 7.4\n      throwError(state, \"expected the node content, but found ','\");\n    }\n\n    keyTag = keyNode = valueNode = null;\n    isPair = isExplicitPair = false;\n\n    if (ch === 0x3F/* ? */) {\n      following = state.input.charCodeAt(state.position + 1);\n\n      if (is_WS_OR_EOL(following)) {\n        isPair = isExplicitPair = true;\n        state.position++;\n        skipSeparationSpace(state, true, nodeIndent);\n      }\n    }\n\n    _line = state.line; // Save the current line.\n    _lineStart = state.lineStart;\n    _pos = state.position;\n    composeNode(state, nodeIndent, CONTEXT_FLOW_IN, false, true);\n    keyTag = state.tag;\n    keyNode = state.result;\n    skipSeparationSpace(state, true, nodeIndent);\n\n    ch = state.input.charCodeAt(state.position);\n\n    if ((isExplicitPair || state.line === _line) && ch === 0x3A/* : */) {\n      isPair = true;\n      ch = state.input.charCodeAt(++state.position);\n      skipSeparationSpace(state, true, nodeIndent);\n      composeNode(state, nodeIndent, CONTEXT_FLOW_IN, false, true);\n      valueNode = state.result;\n    }\n\n    if (isMapping) {\n      storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, valueNode, _line, _lineStart, _pos);\n    } else if (isPair) {\n      _result.push(storeMappingPair(state, null, overridableKeys, keyTag, keyNode, valueNode, _line, _lineStart, _pos));\n    } else {\n      _result.push(keyNode);\n    }\n\n    skipSeparationSpace(state, true, nodeIndent);\n\n    ch = state.input.charCodeAt(state.position);\n\n    if (ch === 0x2C/* , */) {\n      readNext = true;\n      ch = state.input.charCodeAt(++state.position);\n    } else {\n      readNext = false;\n    }\n  }\n\n  throwError(state, 'unexpected end of the stream within a flow collection');\n}\n\nfunction readBlockScalar(state, nodeIndent) {\n  var captureStart,\n      folding,\n      chomping       = CHOMPING_CLIP,\n      didReadContent = false,\n      detectedIndent = false,\n      textIndent     = nodeIndent,\n      emptyLines     = 0,\n      atMoreIndented = false,\n      tmp,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch === 0x7C/* | */) {\n    folding = false;\n  } else if (ch === 0x3E/* > */) {\n    folding = true;\n  } else {\n    return false;\n  }\n\n  state.kind = 'scalar';\n  state.result = '';\n\n  while (ch !== 0) {\n    ch = state.input.charCodeAt(++state.position);\n\n    if (ch === 0x2B/* + */ || ch === 0x2D/* - */) {\n      if (CHOMPING_CLIP === chomping) {\n        chomping = (ch === 0x2B/* + */) ? CHOMPING_KEEP : CHOMPING_STRIP;\n      } else {\n        throwError(state, 'repeat of a chomping mode identifier');\n      }\n\n    } else if ((tmp = fromDecimalCode(ch)) >= 0) {\n      if (tmp === 0) {\n        throwError(state, 'bad explicit indentation width of a block scalar; it cannot be less than one');\n      } else if (!detectedIndent) {\n        textIndent = nodeIndent + tmp - 1;\n        detectedIndent = true;\n      } else {\n        throwError(state, 'repeat of an indentation width identifier');\n      }\n\n    } else {\n      break;\n    }\n  }\n\n  if (is_WHITE_SPACE(ch)) {\n    do { ch = state.input.charCodeAt(++state.position); }\n    while (is_WHITE_SPACE(ch));\n\n    if (ch === 0x23/* # */) {\n      do { ch = state.input.charCodeAt(++state.position); }\n      while (!is_EOL(ch) && (ch !== 0));\n    }\n  }\n\n  while (ch !== 0) {\n    readLineBreak(state);\n    state.lineIndent = 0;\n\n    ch = state.input.charCodeAt(state.position);\n\n    while ((!detectedIndent || state.lineIndent < textIndent) &&\n           (ch === 0x20/* Space */)) {\n      state.lineIndent++;\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    if (!detectedIndent && state.lineIndent > textIndent) {\n      textIndent = state.lineIndent;\n    }\n\n    if (is_EOL(ch)) {\n      emptyLines++;\n      continue;\n    }\n\n    // End of the scalar.\n    if (state.lineIndent < textIndent) {\n\n      // Perform the chomping.\n      if (chomping === CHOMPING_KEEP) {\n        state.result += common.repeat('\\n', didReadContent ? 1 + emptyLines : emptyLines);\n      } else if (chomping === CHOMPING_CLIP) {\n        if (didReadContent) { // i.e. only if the scalar is not empty.\n          state.result += '\\n';\n        }\n      }\n\n      // Break this `while` cycle and go to the funciton's epilogue.\n      break;\n    }\n\n    // Folded style: use fancy rules to handle line breaks.\n    if (folding) {\n\n      // Lines starting with white space characters (more-indented lines) are not folded.\n      if (is_WHITE_SPACE(ch)) {\n        atMoreIndented = true;\n        // except for the first content line (cf. Example 8.1)\n        state.result += common.repeat('\\n', didReadContent ? 1 + emptyLines : emptyLines);\n\n      // End of more-indented block.\n      } else if (atMoreIndented) {\n        atMoreIndented = false;\n        state.result += common.repeat('\\n', emptyLines + 1);\n\n      // Just one line break - perceive as the same line.\n      } else if (emptyLines === 0) {\n        if (didReadContent) { // i.e. only if we have already read some scalar content.\n          state.result += ' ';\n        }\n\n      // Several line breaks - perceive as different lines.\n      } else {\n        state.result += common.repeat('\\n', emptyLines);\n      }\n\n    // Literal style: just add exact number of line breaks between content lines.\n    } else {\n      // Keep all line breaks except the header line break.\n      state.result += common.repeat('\\n', didReadContent ? 1 + emptyLines : emptyLines);\n    }\n\n    didReadContent = true;\n    detectedIndent = true;\n    emptyLines = 0;\n    captureStart = state.position;\n\n    while (!is_EOL(ch) && (ch !== 0)) {\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    captureSegment(state, captureStart, state.position, false);\n  }\n\n  return true;\n}\n\nfunction readBlockSequence(state, nodeIndent) {\n  var _line,\n      _tag      = state.tag,\n      _anchor   = state.anchor,\n      _result   = [],\n      following,\n      detected  = false,\n      ch;\n\n  // there is a leading tab before this token, so it can't be a block sequence/mapping;\n  // it can still be flow sequence/mapping or a scalar\n  if (state.firstTabInLine !== -1) return false;\n\n  if (state.anchor !== null) {\n    state.anchorMap[state.anchor] = _result;\n  }\n\n  ch = state.input.charCodeAt(state.position);\n\n  while (ch !== 0) {\n    if (state.firstTabInLine !== -1) {\n      state.position = state.firstTabInLine;\n      throwError(state, 'tab characters must not be used in indentation');\n    }\n\n    if (ch !== 0x2D/* - */) {\n      break;\n    }\n\n    following = state.input.charCodeAt(state.position + 1);\n\n    if (!is_WS_OR_EOL(following)) {\n      break;\n    }\n\n    detected = true;\n    state.position++;\n\n    if (skipSeparationSpace(state, true, -1)) {\n      if (state.lineIndent <= nodeIndent) {\n        _result.push(null);\n        ch = state.input.charCodeAt(state.position);\n        continue;\n      }\n    }\n\n    _line = state.line;\n    composeNode(state, nodeIndent, CONTEXT_BLOCK_IN, false, true);\n    _result.push(state.result);\n    skipSeparationSpace(state, true, -1);\n\n    ch = state.input.charCodeAt(state.position);\n\n    if ((state.line === _line || state.lineIndent > nodeIndent) && (ch !== 0)) {\n      throwError(state, 'bad indentation of a sequence entry');\n    } else if (state.lineIndent < nodeIndent) {\n      break;\n    }\n  }\n\n  if (detected) {\n    state.tag = _tag;\n    state.anchor = _anchor;\n    state.kind = 'sequence';\n    state.result = _result;\n    return true;\n  }\n  return false;\n}\n\nfunction readBlockMapping(state, nodeIndent, flowIndent) {\n  var following,\n      allowCompact,\n      _line,\n      _keyLine,\n      _keyLineStart,\n      _keyPos,\n      _tag          = state.tag,\n      _anchor       = state.anchor,\n      _result       = {},\n      overridableKeys = Object.create(null),\n      keyTag        = null,\n      keyNode       = null,\n      valueNode     = null,\n      atExplicitKey = false,\n      detected      = false,\n      ch;\n\n  // there is a leading tab before this token, so it can't be a block sequence/mapping;\n  // it can still be flow sequence/mapping or a scalar\n  if (state.firstTabInLine !== -1) return false;\n\n  if (state.anchor !== null) {\n    state.anchorMap[state.anchor] = _result;\n  }\n\n  ch = state.input.charCodeAt(state.position);\n\n  while (ch !== 0) {\n    if (!atExplicitKey && state.firstTabInLine !== -1) {\n      state.position = state.firstTabInLine;\n      throwError(state, 'tab characters must not be used in indentation');\n    }\n\n    following = state.input.charCodeAt(state.position + 1);\n    _line = state.line; // Save the current line.\n\n    //\n    // Explicit notation case. There are two separate blocks:\n    // first for the key (denoted by \"?\") and second for the value (denoted by \":\")\n    //\n    if ((ch === 0x3F/* ? */ || ch === 0x3A/* : */) && is_WS_OR_EOL(following)) {\n\n      if (ch === 0x3F/* ? */) {\n        if (atExplicitKey) {\n          storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, null, _keyLine, _keyLineStart, _keyPos);\n          keyTag = keyNode = valueNode = null;\n        }\n\n        detected = true;\n        atExplicitKey = true;\n        allowCompact = true;\n\n      } else if (atExplicitKey) {\n        // i.e. 0x3A/* : */ === character after the explicit key.\n        atExplicitKey = false;\n        allowCompact = true;\n\n      } else {\n        throwError(state, 'incomplete explicit mapping pair; a key node is missed; or followed by a non-tabulated empty line');\n      }\n\n      state.position += 1;\n      ch = following;\n\n    //\n    // Implicit notation case. Flow-style node as the key first, then \":\", and the value.\n    //\n    } else {\n      _keyLine = state.line;\n      _keyLineStart = state.lineStart;\n      _keyPos = state.position;\n\n      if (!composeNode(state, flowIndent, CONTEXT_FLOW_OUT, false, true)) {\n        // Neither implicit nor explicit notation.\n        // Reading is done. Go to the epilogue.\n        break;\n      }\n\n      if (state.line === _line) {\n        ch = state.input.charCodeAt(state.position);\n\n        while (is_WHITE_SPACE(ch)) {\n          ch = state.input.charCodeAt(++state.position);\n        }\n\n        if (ch === 0x3A/* : */) {\n          ch = state.input.charCodeAt(++state.position);\n\n          if (!is_WS_OR_EOL(ch)) {\n            throwError(state, 'a whitespace character is expected after the key-value separator within a block mapping');\n          }\n\n          if (atExplicitKey) {\n            storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, null, _keyLine, _keyLineStart, _keyPos);\n            keyTag = keyNode = valueNode = null;\n          }\n\n          detected = true;\n          atExplicitKey = false;\n          allowCompact = false;\n          keyTag = state.tag;\n          keyNode = state.result;\n\n        } else if (detected) {\n          throwError(state, 'can not read an implicit mapping pair; a colon is missed');\n\n        } else {\n          state.tag = _tag;\n          state.anchor = _anchor;\n          return true; // Keep the result of `composeNode`.\n        }\n\n      } else if (detected) {\n        throwError(state, 'can not read a block mapping entry; a multiline key may not be an implicit key');\n\n      } else {\n        state.tag = _tag;\n        state.anchor = _anchor;\n        return true; // Keep the result of `composeNode`.\n      }\n    }\n\n    //\n    // Common reading code for both explicit and implicit notations.\n    //\n    if (state.line === _line || state.lineIndent > nodeIndent) {\n      if (atExplicitKey) {\n        _keyLine = state.line;\n        _keyLineStart = state.lineStart;\n        _keyPos = state.position;\n      }\n\n      if (composeNode(state, nodeIndent, CONTEXT_BLOCK_OUT, true, allowCompact)) {\n        if (atExplicitKey) {\n          keyNode = state.result;\n        } else {\n          valueNode = state.result;\n        }\n      }\n\n      if (!atExplicitKey) {\n        storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, valueNode, _keyLine, _keyLineStart, _keyPos);\n        keyTag = keyNode = valueNode = null;\n      }\n\n      skipSeparationSpace(state, true, -1);\n      ch = state.input.charCodeAt(state.position);\n    }\n\n    if ((state.line === _line || state.lineIndent > nodeIndent) && (ch !== 0)) {\n      throwError(state, 'bad indentation of a mapping entry');\n    } else if (state.lineIndent < nodeIndent) {\n      break;\n    }\n  }\n\n  //\n  // Epilogue.\n  //\n\n  // Special case: last mapping's node contains only the key in explicit notation.\n  if (atExplicitKey) {\n    storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, null, _keyLine, _keyLineStart, _keyPos);\n  }\n\n  // Expose the resulting mapping.\n  if (detected) {\n    state.tag = _tag;\n    state.anchor = _anchor;\n    state.kind = 'mapping';\n    state.result = _result;\n  }\n\n  return detected;\n}\n\nfunction readTagProperty(state) {\n  var _position,\n      isVerbatim = false,\n      isNamed    = false,\n      tagHandle,\n      tagName,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x21/* ! */) return false;\n\n  if (state.tag !== null) {\n    throwError(state, 'duplication of a tag property');\n  }\n\n  ch = state.input.charCodeAt(++state.position);\n\n  if (ch === 0x3C/* < */) {\n    isVerbatim = true;\n    ch = state.input.charCodeAt(++state.position);\n\n  } else if (ch === 0x21/* ! */) {\n    isNamed = true;\n    tagHandle = '!!';\n    ch = state.input.charCodeAt(++state.position);\n\n  } else {\n    tagHandle = '!';\n  }\n\n  _position = state.position;\n\n  if (isVerbatim) {\n    do { ch = state.input.charCodeAt(++state.position); }\n    while (ch !== 0 && ch !== 0x3E/* > */);\n\n    if (state.position < state.length) {\n      tagName = state.input.slice(_position, state.position);\n      ch = state.input.charCodeAt(++state.position);\n    } else {\n      throwError(state, 'unexpected end of the stream within a verbatim tag');\n    }\n  } else {\n    while (ch !== 0 && !is_WS_OR_EOL(ch)) {\n\n      if (ch === 0x21/* ! */) {\n        if (!isNamed) {\n          tagHandle = state.input.slice(_position - 1, state.position + 1);\n\n          if (!PATTERN_TAG_HANDLE.test(tagHandle)) {\n            throwError(state, 'named tag handle cannot contain such characters');\n          }\n\n          isNamed = true;\n          _position = state.position + 1;\n        } else {\n          throwError(state, 'tag suffix cannot contain exclamation marks');\n        }\n      }\n\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    tagName = state.input.slice(_position, state.position);\n\n    if (PATTERN_FLOW_INDICATORS.test(tagName)) {\n      throwError(state, 'tag suffix cannot contain flow indicator characters');\n    }\n  }\n\n  if (tagName && !PATTERN_TAG_URI.test(tagName)) {\n    throwError(state, 'tag name cannot contain such characters: ' + tagName);\n  }\n\n  try {\n    tagName = decodeURIComponent(tagName);\n  } catch (err) {\n    throwError(state, 'tag name is malformed: ' + tagName);\n  }\n\n  if (isVerbatim) {\n    state.tag = tagName;\n\n  } else if (_hasOwnProperty$1.call(state.tagMap, tagHandle)) {\n    state.tag = state.tagMap[tagHandle] + tagName;\n\n  } else if (tagHandle === '!') {\n    state.tag = '!' + tagName;\n\n  } else if (tagHandle === '!!') {\n    state.tag = 'tag:yaml.org,2002:' + tagName;\n\n  } else {\n    throwError(state, 'undeclared tag handle \"' + tagHandle + '\"');\n  }\n\n  return true;\n}\n\nfunction readAnchorProperty(state) {\n  var _position,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x26/* & */) return false;\n\n  if (state.anchor !== null) {\n    throwError(state, 'duplication of an anchor property');\n  }\n\n  ch = state.input.charCodeAt(++state.position);\n  _position = state.position;\n\n  while (ch !== 0 && !is_WS_OR_EOL(ch) && !is_FLOW_INDICATOR(ch)) {\n    ch = state.input.charCodeAt(++state.position);\n  }\n\n  if (state.position === _position) {\n    throwError(state, 'name of an anchor node must contain at least one character');\n  }\n\n  state.anchor = state.input.slice(_position, state.position);\n  return true;\n}\n\nfunction readAlias(state) {\n  var _position, alias,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x2A/* * */) return false;\n\n  ch = state.input.charCodeAt(++state.position);\n  _position = state.position;\n\n  while (ch !== 0 && !is_WS_OR_EOL(ch) && !is_FLOW_INDICATOR(ch)) {\n    ch = state.input.charCodeAt(++state.position);\n  }\n\n  if (state.position === _position) {\n    throwError(state, 'name of an alias node must contain at least one character');\n  }\n\n  alias = state.input.slice(_position, state.position);\n\n  if (!_hasOwnProperty$1.call(state.anchorMap, alias)) {\n    throwError(state, 'unidentified alias \"' + alias + '\"');\n  }\n\n  state.result = state.anchorMap[alias];\n  skipSeparationSpace(state, true, -1);\n  return true;\n}\n\nfunction composeNode(state, parentIndent, nodeContext, allowToSeek, allowCompact) {\n  var allowBlockStyles,\n      allowBlockScalars,\n      allowBlockCollections,\n      indentStatus = 1, // 1: this>parent, 0: this=parent, -1: this<parent\n      atNewLine  = false,\n      hasContent = false,\n      typeIndex,\n      typeQuantity,\n      typeList,\n      type,\n      flowIndent,\n      blockIndent;\n\n  if (state.listener !== null) {\n    state.listener('open', state);\n  }\n\n  state.tag    = null;\n  state.anchor = null;\n  state.kind   = null;\n  state.result = null;\n\n  allowBlockStyles = allowBlockScalars = allowBlockCollections =\n    CONTEXT_BLOCK_OUT === nodeContext ||\n    CONTEXT_BLOCK_IN  === nodeContext;\n\n  if (allowToSeek) {\n    if (skipSeparationSpace(state, true, -1)) {\n      atNewLine = true;\n\n      if (state.lineIndent > parentIndent) {\n        indentStatus = 1;\n      } else if (state.lineIndent === parentIndent) {\n        indentStatus = 0;\n      } else if (state.lineIndent < parentIndent) {\n        indentStatus = -1;\n      }\n    }\n  }\n\n  if (indentStatus === 1) {\n    while (readTagProperty(state) || readAnchorProperty(state)) {\n      if (skipSeparationSpace(state, true, -1)) {\n        atNewLine = true;\n        allowBlockCollections = allowBlockStyles;\n\n        if (state.lineIndent > parentIndent) {\n          indentStatus = 1;\n        } else if (state.lineIndent === parentIndent) {\n          indentStatus = 0;\n        } else if (state.lineIndent < parentIndent) {\n          indentStatus = -1;\n        }\n      } else {\n        allowBlockCollections = false;\n      }\n    }\n  }\n\n  if (allowBlockCollections) {\n    allowBlockCollections = atNewLine || allowCompact;\n  }\n\n  if (indentStatus === 1 || CONTEXT_BLOCK_OUT === nodeContext) {\n    if (CONTEXT_FLOW_IN === nodeContext || CONTEXT_FLOW_OUT === nodeContext) {\n      flowIndent = parentIndent;\n    } else {\n      flowIndent = parentIndent + 1;\n    }\n\n    blockIndent = state.position - state.lineStart;\n\n    if (indentStatus === 1) {\n      if (allowBlockCollections &&\n          (readBlockSequence(state, blockIndent) ||\n           readBlockMapping(state, blockIndent, flowIndent)) ||\n          readFlowCollection(state, flowIndent)) {\n        hasContent = true;\n      } else {\n        if ((allowBlockScalars && readBlockScalar(state, flowIndent)) ||\n            readSingleQuotedScalar(state, flowIndent) ||\n            readDoubleQuotedScalar(state, flowIndent)) {\n          hasContent = true;\n\n        } else if (readAlias(state)) {\n          hasContent = true;\n\n          if (state.tag !== null || state.anchor !== null) {\n            throwError(state, 'alias node should not have any properties');\n          }\n\n        } else if (readPlainScalar(state, flowIndent, CONTEXT_FLOW_IN === nodeContext)) {\n          hasContent = true;\n\n          if (state.tag === null) {\n            state.tag = '?';\n          }\n        }\n\n        if (state.anchor !== null) {\n          state.anchorMap[state.anchor] = state.result;\n        }\n      }\n    } else if (indentStatus === 0) {\n      // Special case: block sequences are allowed to have same indentation level as the parent.\n      // http://www.yaml.org/spec/1.2/spec.html#id2799784\n      hasContent = allowBlockCollections && readBlockSequence(state, blockIndent);\n    }\n  }\n\n  if (state.tag === null) {\n    if (state.anchor !== null) {\n      state.anchorMap[state.anchor] = state.result;\n    }\n\n  } else if (state.tag === '?') {\n    // Implicit resolving is not allowed for non-scalar types, and '?'\n    // non-specific tag is only automatically assigned to plain scalars.\n    //\n    // We only need to check kind conformity in case user explicitly assigns '?'\n    // tag, for example like this: \"!<?> [0]\"\n    //\n    if (state.result !== null && state.kind !== 'scalar') {\n      throwError(state, 'unacceptable node kind for !<?> tag; it should be \"scalar\", not \"' + state.kind + '\"');\n    }\n\n    for (typeIndex = 0, typeQuantity = state.implicitTypes.length; typeIndex < typeQuantity; typeIndex += 1) {\n      type = state.implicitTypes[typeIndex];\n\n      if (type.resolve(state.result)) { // `state.result` updated in resolver if matched\n        state.result = type.construct(state.result);\n        state.tag = type.tag;\n        if (state.anchor !== null) {\n          state.anchorMap[state.anchor] = state.result;\n        }\n        break;\n      }\n    }\n  } else if (state.tag !== '!') {\n    if (_hasOwnProperty$1.call(state.typeMap[state.kind || 'fallback'], state.tag)) {\n      type = state.typeMap[state.kind || 'fallback'][state.tag];\n    } else {\n      // looking for multi type\n      type = null;\n      typeList = state.typeMap.multi[state.kind || 'fallback'];\n\n      for (typeIndex = 0, typeQuantity = typeList.length; typeIndex < typeQuantity; typeIndex += 1) {\n        if (state.tag.slice(0, typeList[typeIndex].tag.length) === typeList[typeIndex].tag) {\n          type = typeList[typeIndex];\n          break;\n        }\n      }\n    }\n\n    if (!type) {\n      throwError(state, 'unknown tag !<' + state.tag + '>');\n    }\n\n    if (state.result !== null && type.kind !== state.kind) {\n      throwError(state, 'unacceptable node kind for !<' + state.tag + '> tag; it should be \"' + type.kind + '\", not \"' + state.kind + '\"');\n    }\n\n    if (!type.resolve(state.result, state.tag)) { // `state.result` updated in resolver if matched\n      throwError(state, 'cannot resolve a node with !<' + state.tag + '> explicit tag');\n    } else {\n      state.result = type.construct(state.result, state.tag);\n      if (state.anchor !== null) {\n        state.anchorMap[state.anchor] = state.result;\n      }\n    }\n  }\n\n  if (state.listener !== null) {\n    state.listener('close', state);\n  }\n  return state.tag !== null ||  state.anchor !== null || hasContent;\n}\n\nfunction readDocument(state) {\n  var documentStart = state.position,\n      _position,\n      directiveName,\n      directiveArgs,\n      hasDirectives = false,\n      ch;\n\n  state.version = null;\n  state.checkLineBreaks = state.legacy;\n  state.tagMap = Object.create(null);\n  state.anchorMap = Object.create(null);\n\n  while ((ch = state.input.charCodeAt(state.position)) !== 0) {\n    skipSeparationSpace(state, true, -1);\n\n    ch = state.input.charCodeAt(state.position);\n\n    if (state.lineIndent > 0 || ch !== 0x25/* % */) {\n      break;\n    }\n\n    hasDirectives = true;\n    ch = state.input.charCodeAt(++state.position);\n    _position = state.position;\n\n    while (ch !== 0 && !is_WS_OR_EOL(ch)) {\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    directiveName = state.input.slice(_position, state.position);\n    directiveArgs = [];\n\n    if (directiveName.length < 1) {\n      throwError(state, 'directive name must not be less than one character in length');\n    }\n\n    while (ch !== 0) {\n      while (is_WHITE_SPACE(ch)) {\n        ch = state.input.charCodeAt(++state.position);\n      }\n\n      if (ch === 0x23/* # */) {\n        do { ch = state.input.charCodeAt(++state.position); }\n        while (ch !== 0 && !is_EOL(ch));\n        break;\n      }\n\n      if (is_EOL(ch)) break;\n\n      _position = state.position;\n\n      while (ch !== 0 && !is_WS_OR_EOL(ch)) {\n        ch = state.input.charCodeAt(++state.position);\n      }\n\n      directiveArgs.push(state.input.slice(_position, state.position));\n    }\n\n    if (ch !== 0) readLineBreak(state);\n\n    if (_hasOwnProperty$1.call(directiveHandlers, directiveName)) {\n      directiveHandlers[directiveName](state, directiveName, directiveArgs);\n    } else {\n      throwWarning(state, 'unknown document directive \"' + directiveName + '\"');\n    }\n  }\n\n  skipSeparationSpace(state, true, -1);\n\n  if (state.lineIndent === 0 &&\n      state.input.charCodeAt(state.position)     === 0x2D/* - */ &&\n      state.input.charCodeAt(state.position + 1) === 0x2D/* - */ &&\n      state.input.charCodeAt(state.position + 2) === 0x2D/* - */) {\n    state.position += 3;\n    skipSeparationSpace(state, true, -1);\n\n  } else if (hasDirectives) {\n    throwError(state, 'directives end mark is expected');\n  }\n\n  composeNode(state, state.lineIndent - 1, CONTEXT_BLOCK_OUT, false, true);\n  skipSeparationSpace(state, true, -1);\n\n  if (state.checkLineBreaks &&\n      PATTERN_NON_ASCII_LINE_BREAKS.test(state.input.slice(documentStart, state.position))) {\n    throwWarning(state, 'non-ASCII line breaks are interpreted as content');\n  }\n\n  state.documents.push(state.result);\n\n  if (state.position === state.lineStart && testDocumentSeparator(state)) {\n\n    if (state.input.charCodeAt(state.position) === 0x2E/* . */) {\n      state.position += 3;\n      skipSeparationSpace(state, true, -1);\n    }\n    return;\n  }\n\n  if (state.position < (state.length - 1)) {\n    throwError(state, 'end of the stream or a document separator is expected');\n  } else {\n    return;\n  }\n}\n\n\nfunction loadDocuments(input, options) {\n  input = String(input);\n  options = options || {};\n\n  if (input.length !== 0) {\n\n    // Add tailing `\\n` if not exists\n    if (input.charCodeAt(input.length - 1) !== 0x0A/* LF */ &&\n        input.charCodeAt(input.length - 1) !== 0x0D/* CR */) {\n      input += '\\n';\n    }\n\n    // Strip BOM\n    if (input.charCodeAt(0) === 0xFEFF) {\n      input = input.slice(1);\n    }\n  }\n\n  var state = new State$1(input, options);\n\n  var nullpos = input.indexOf('\\0');\n\n  if (nullpos !== -1) {\n    state.position = nullpos;\n    throwError(state, 'null byte is not allowed in input');\n  }\n\n  // Use 0 as string terminator. That significantly simplifies bounds check.\n  state.input += '\\0';\n\n  while (state.input.charCodeAt(state.position) === 0x20/* Space */) {\n    state.lineIndent += 1;\n    state.position += 1;\n  }\n\n  while (state.position < (state.length - 1)) {\n    readDocument(state);\n  }\n\n  return state.documents;\n}\n\n\nfunction loadAll$1(input, iterator, options) {\n  if (iterator !== null && typeof iterator === 'object' && typeof options === 'undefined') {\n    options = iterator;\n    iterator = null;\n  }\n\n  var documents = loadDocuments(input, options);\n\n  if (typeof iterator !== 'function') {\n    return documents;\n  }\n\n  for (var index = 0, length = documents.length; index < length; index += 1) {\n    iterator(documents[index]);\n  }\n}\n\n\nfunction load$1(input, options) {\n  var documents = loadDocuments(input, options);\n\n  if (documents.length === 0) {\n    /*eslint-disable no-undefined*/\n    return undefined;\n  } else if (documents.length === 1) {\n    return documents[0];\n  }\n  throw new exception('expected a single document in the stream, but found more');\n}\n\n\nvar loadAll_1 = loadAll$1;\nvar load_1    = load$1;\n\nvar loader = {\n\tloadAll: loadAll_1,\n\tload: load_1\n};\n\n/*eslint-disable no-use-before-define*/\n\n\n\n\n\nvar _toString       = Object.prototype.toString;\nvar _hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar CHAR_BOM                  = 0xFEFF;\nvar CHAR_TAB                  = 0x09; /* Tab */\nvar CHAR_LINE_FEED            = 0x0A; /* LF */\nvar CHAR_CARRIAGE_RETURN      = 0x0D; /* CR */\nvar CHAR_SPACE                = 0x20; /* Space */\nvar CHAR_EXCLAMATION          = 0x21; /* ! */\nvar CHAR_DOUBLE_QUOTE         = 0x22; /* \" */\nvar CHAR_SHARP                = 0x23; /* # */\nvar CHAR_PERCENT              = 0x25; /* % */\nvar CHAR_AMPERSAND            = 0x26; /* & */\nvar CHAR_SINGLE_QUOTE         = 0x27; /* ' */\nvar CHAR_ASTERISK             = 0x2A; /* * */\nvar CHAR_COMMA                = 0x2C; /* , */\nvar CHAR_MINUS                = 0x2D; /* - */\nvar CHAR_COLON                = 0x3A; /* : */\nvar CHAR_EQUALS               = 0x3D; /* = */\nvar CHAR_GREATER_THAN         = 0x3E; /* > */\nvar CHAR_QUESTION             = 0x3F; /* ? */\nvar CHAR_COMMERCIAL_AT        = 0x40; /* @ */\nvar CHAR_LEFT_SQUARE_BRACKET  = 0x5B; /* [ */\nvar CHAR_RIGHT_SQUARE_BRACKET = 0x5D; /* ] */\nvar CHAR_GRAVE_ACCENT         = 0x60; /* ` */\nvar CHAR_LEFT_CURLY_BRACKET   = 0x7B; /* { */\nvar CHAR_VERTICAL_LINE        = 0x7C; /* | */\nvar CHAR_RIGHT_CURLY_BRACKET  = 0x7D; /* } */\n\nvar ESCAPE_SEQUENCES = {};\n\nESCAPE_SEQUENCES[0x00]   = '\\\\0';\nESCAPE_SEQUENCES[0x07]   = '\\\\a';\nESCAPE_SEQUENCES[0x08]   = '\\\\b';\nESCAPE_SEQUENCES[0x09]   = '\\\\t';\nESCAPE_SEQUENCES[0x0A]   = '\\\\n';\nESCAPE_SEQUENCES[0x0B]   = '\\\\v';\nESCAPE_SEQUENCES[0x0C]   = '\\\\f';\nESCAPE_SEQUENCES[0x0D]   = '\\\\r';\nESCAPE_SEQUENCES[0x1B]   = '\\\\e';\nESCAPE_SEQUENCES[0x22]   = '\\\\\"';\nESCAPE_SEQUENCES[0x5C]   = '\\\\\\\\';\nESCAPE_SEQUENCES[0x85]   = '\\\\N';\nESCAPE_SEQUENCES[0xA0]   = '\\\\_';\nESCAPE_SEQUENCES[0x2028] = '\\\\L';\nESCAPE_SEQUENCES[0x2029] = '\\\\P';\n\nvar DEPRECATED_BOOLEANS_SYNTAX = [\n  'y', 'Y', 'yes', 'Yes', 'YES', 'on', 'On', 'ON',\n  'n', 'N', 'no', 'No', 'NO', 'off', 'Off', 'OFF'\n];\n\nvar DEPRECATED_BASE60_SYNTAX = /^[-+]?[0-9_]+(?::[0-9_]+)+(?:\\.[0-9_]*)?$/;\n\nfunction compileStyleMap(schema, map) {\n  var result, keys, index, length, tag, style, type;\n\n  if (map === null) return {};\n\n  result = {};\n  keys = Object.keys(map);\n\n  for (index = 0, length = keys.length; index < length; index += 1) {\n    tag = keys[index];\n    style = String(map[tag]);\n\n    if (tag.slice(0, 2) === '!!') {\n      tag = 'tag:yaml.org,2002:' + tag.slice(2);\n    }\n    type = schema.compiledTypeMap['fallback'][tag];\n\n    if (type && _hasOwnProperty.call(type.styleAliases, style)) {\n      style = type.styleAliases[style];\n    }\n\n    result[tag] = style;\n  }\n\n  return result;\n}\n\nfunction encodeHex(character) {\n  var string, handle, length;\n\n  string = character.toString(16).toUpperCase();\n\n  if (character <= 0xFF) {\n    handle = 'x';\n    length = 2;\n  } else if (character <= 0xFFFF) {\n    handle = 'u';\n    length = 4;\n  } else if (character <= 0xFFFFFFFF) {\n    handle = 'U';\n    length = 8;\n  } else {\n    throw new exception('code point within a string may not be greater than 0xFFFFFFFF');\n  }\n\n  return '\\\\' + handle + common.repeat('0', length - string.length) + string;\n}\n\n\nvar QUOTING_TYPE_SINGLE = 1,\n    QUOTING_TYPE_DOUBLE = 2;\n\nfunction State(options) {\n  this.schema        = options['schema'] || _default;\n  this.indent        = Math.max(1, (options['indent'] || 2));\n  this.noArrayIndent = options['noArrayIndent'] || false;\n  this.skipInvalid   = options['skipInvalid'] || false;\n  this.flowLevel     = (common.isNothing(options['flowLevel']) ? -1 : options['flowLevel']);\n  this.styleMap      = compileStyleMap(this.schema, options['styles'] || null);\n  this.sortKeys      = options['sortKeys'] || false;\n  this.lineWidth     = options['lineWidth'] || 80;\n  this.noRefs        = options['noRefs'] || false;\n  this.noCompatMode  = options['noCompatMode'] || false;\n  this.condenseFlow  = options['condenseFlow'] || false;\n  this.quotingType   = options['quotingType'] === '\"' ? QUOTING_TYPE_DOUBLE : QUOTING_TYPE_SINGLE;\n  this.forceQuotes   = options['forceQuotes'] || false;\n  this.replacer      = typeof options['replacer'] === 'function' ? options['replacer'] : null;\n\n  this.implicitTypes = this.schema.compiledImplicit;\n  this.explicitTypes = this.schema.compiledExplicit;\n\n  this.tag = null;\n  this.result = '';\n\n  this.duplicates = [];\n  this.usedDuplicates = null;\n}\n\n// Indents every line in a string. Empty lines (\\n only) are not indented.\nfunction indentString(string, spaces) {\n  var ind = common.repeat(' ', spaces),\n      position = 0,\n      next = -1,\n      result = '',\n      line,\n      length = string.length;\n\n  while (position < length) {\n    next = string.indexOf('\\n', position);\n    if (next === -1) {\n      line = string.slice(position);\n      position = length;\n    } else {\n      line = string.slice(position, next + 1);\n      position = next + 1;\n    }\n\n    if (line.length && line !== '\\n') result += ind;\n\n    result += line;\n  }\n\n  return result;\n}\n\nfunction generateNextLine(state, level) {\n  return '\\n' + common.repeat(' ', state.indent * level);\n}\n\nfunction testImplicitResolving(state, str) {\n  var index, length, type;\n\n  for (index = 0, length = state.implicitTypes.length; index < length; index += 1) {\n    type = state.implicitTypes[index];\n\n    if (type.resolve(str)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\n// [33] s-white ::= s-space | s-tab\nfunction isWhitespace(c) {\n  return c === CHAR_SPACE || c === CHAR_TAB;\n}\n\n// Returns true if the character can be printed without escaping.\n// From YAML 1.2: \"any allowed characters known to be non-printable\n// should also be escaped. [However,] This isn’t mandatory\"\n// Derived from nb-char - \\t - #x85 - #xA0 - #x2028 - #x2029.\nfunction isPrintable(c) {\n  return  (0x00020 <= c && c <= 0x00007E)\n      || ((0x000A1 <= c && c <= 0x00D7FF) && c !== 0x2028 && c !== 0x2029)\n      || ((0x0E000 <= c && c <= 0x00FFFD) && c !== CHAR_BOM)\n      ||  (0x10000 <= c && c <= 0x10FFFF);\n}\n\n// [34] ns-char ::= nb-char - s-white\n// [27] nb-char ::= c-printable - b-char - c-byte-order-mark\n// [26] b-char  ::= b-line-feed | b-carriage-return\n// Including s-white (for some reason, examples doesn't match specs in this aspect)\n// ns-char ::= c-printable - b-line-feed - b-carriage-return - c-byte-order-mark\nfunction isNsCharOrWhitespace(c) {\n  return isPrintable(c)\n    && c !== CHAR_BOM\n    // - b-char\n    && c !== CHAR_CARRIAGE_RETURN\n    && c !== CHAR_LINE_FEED;\n}\n\n// [127]  ns-plain-safe(c) ::= c = flow-out  ⇒ ns-plain-safe-out\n//                             c = flow-in   ⇒ ns-plain-safe-in\n//                             c = block-key ⇒ ns-plain-safe-out\n//                             c = flow-key  ⇒ ns-plain-safe-in\n// [128] ns-plain-safe-out ::= ns-char\n// [129]  ns-plain-safe-in ::= ns-char - c-flow-indicator\n// [130]  ns-plain-char(c) ::=  ( ns-plain-safe(c) - “:” - “#” )\n//                            | ( /* An ns-char preceding */ “#” )\n//                            | ( “:” /* Followed by an ns-plain-safe(c) */ )\nfunction isPlainSafe(c, prev, inblock) {\n  var cIsNsCharOrWhitespace = isNsCharOrWhitespace(c);\n  var cIsNsChar = cIsNsCharOrWhitespace && !isWhitespace(c);\n  return (\n    // ns-plain-safe\n    inblock ? // c = flow-in\n      cIsNsCharOrWhitespace\n      : cIsNsCharOrWhitespace\n        // - c-flow-indicator\n        && c !== CHAR_COMMA\n        && c !== CHAR_LEFT_SQUARE_BRACKET\n        && c !== CHAR_RIGHT_SQUARE_BRACKET\n        && c !== CHAR_LEFT_CURLY_BRACKET\n        && c !== CHAR_RIGHT_CURLY_BRACKET\n  )\n    // ns-plain-char\n    && c !== CHAR_SHARP // false on '#'\n    && !(prev === CHAR_COLON && !cIsNsChar) // false on ': '\n    || (isNsCharOrWhitespace(prev) && !isWhitespace(prev) && c === CHAR_SHARP) // change to true on '[^ ]#'\n    || (prev === CHAR_COLON && cIsNsChar); // change to true on ':[^ ]'\n}\n\n// Simplified test for values allowed as the first character in plain style.\nfunction isPlainSafeFirst(c) {\n  // Uses a subset of ns-char - c-indicator\n  // where ns-char = nb-char - s-white.\n  // No support of ( ( “?” | “:” | “-” ) /* Followed by an ns-plain-safe(c)) */ ) part\n  return isPrintable(c) && c !== CHAR_BOM\n    && !isWhitespace(c) // - s-white\n    // - (c-indicator ::=\n    // “-” | “?” | “:” | “,” | “[” | “]” | “{” | “}”\n    && c !== CHAR_MINUS\n    && c !== CHAR_QUESTION\n    && c !== CHAR_COLON\n    && c !== CHAR_COMMA\n    && c !== CHAR_LEFT_SQUARE_BRACKET\n    && c !== CHAR_RIGHT_SQUARE_BRACKET\n    && c !== CHAR_LEFT_CURLY_BRACKET\n    && c !== CHAR_RIGHT_CURLY_BRACKET\n    // | “#” | “&” | “*” | “!” | “|” | “=” | “>” | “'” | “\"”\n    && c !== CHAR_SHARP\n    && c !== CHAR_AMPERSAND\n    && c !== CHAR_ASTERISK\n    && c !== CHAR_EXCLAMATION\n    && c !== CHAR_VERTICAL_LINE\n    && c !== CHAR_EQUALS\n    && c !== CHAR_GREATER_THAN\n    && c !== CHAR_SINGLE_QUOTE\n    && c !== CHAR_DOUBLE_QUOTE\n    // | “%” | “@” | “`”)\n    && c !== CHAR_PERCENT\n    && c !== CHAR_COMMERCIAL_AT\n    && c !== CHAR_GRAVE_ACCENT;\n}\n\n// Simplified test for values allowed as the last character in plain style.\nfunction isPlainSafeLast(c) {\n  // just not whitespace or colon, it will be checked to be plain character later\n  return !isWhitespace(c) && c !== CHAR_COLON;\n}\n\n// Same as 'string'.codePointAt(pos), but works in older browsers.\nfunction codePointAt(string, pos) {\n  var first = string.charCodeAt(pos), second;\n  if (first >= 0xD800 && first <= 0xDBFF && pos + 1 < string.length) {\n    second = string.charCodeAt(pos + 1);\n    if (second >= 0xDC00 && second <= 0xDFFF) {\n      // https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n      return (first - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n    }\n  }\n  return first;\n}\n\n// Determines whether block indentation indicator is required.\nfunction needIndentIndicator(string) {\n  var leadingSpaceRe = /^\\n* /;\n  return leadingSpaceRe.test(string);\n}\n\nvar STYLE_PLAIN   = 1,\n    STYLE_SINGLE  = 2,\n    STYLE_LITERAL = 3,\n    STYLE_FOLDED  = 4,\n    STYLE_DOUBLE  = 5;\n\n// Determines which scalar styles are possible and returns the preferred style.\n// lineWidth = -1 => no limit.\n// Pre-conditions: str.length > 0.\n// Post-conditions:\n//    STYLE_PLAIN or STYLE_SINGLE => no \\n are in the string.\n//    STYLE_LITERAL => no lines are suitable for folding (or lineWidth is -1).\n//    STYLE_FOLDED => a line > lineWidth and can be folded (and lineWidth != -1).\nfunction chooseScalarStyle(string, singleLineOnly, indentPerLevel, lineWidth,\n  testAmbiguousType, quotingType, forceQuotes, inblock) {\n\n  var i;\n  var char = 0;\n  var prevChar = null;\n  var hasLineBreak = false;\n  var hasFoldableLine = false; // only checked if shouldTrackWidth\n  var shouldTrackWidth = lineWidth !== -1;\n  var previousLineBreak = -1; // count the first line correctly\n  var plain = isPlainSafeFirst(codePointAt(string, 0))\n          && isPlainSafeLast(codePointAt(string, string.length - 1));\n\n  if (singleLineOnly || forceQuotes) {\n    // Case: no block styles.\n    // Check for disallowed characters to rule out plain and single.\n    for (i = 0; i < string.length; char >= 0x10000 ? i += 2 : i++) {\n      char = codePointAt(string, i);\n      if (!isPrintable(char)) {\n        return STYLE_DOUBLE;\n      }\n      plain = plain && isPlainSafe(char, prevChar, inblock);\n      prevChar = char;\n    }\n  } else {\n    // Case: block styles permitted.\n    for (i = 0; i < string.length; char >= 0x10000 ? i += 2 : i++) {\n      char = codePointAt(string, i);\n      if (char === CHAR_LINE_FEED) {\n        hasLineBreak = true;\n        // Check if any line can be folded.\n        if (shouldTrackWidth) {\n          hasFoldableLine = hasFoldableLine ||\n            // Foldable line = too long, and not more-indented.\n            (i - previousLineBreak - 1 > lineWidth &&\n             string[previousLineBreak + 1] !== ' ');\n          previousLineBreak = i;\n        }\n      } else if (!isPrintable(char)) {\n        return STYLE_DOUBLE;\n      }\n      plain = plain && isPlainSafe(char, prevChar, inblock);\n      prevChar = char;\n    }\n    // in case the end is missing a \\n\n    hasFoldableLine = hasFoldableLine || (shouldTrackWidth &&\n      (i - previousLineBreak - 1 > lineWidth &&\n       string[previousLineBreak + 1] !== ' '));\n  }\n  // Although every style can represent \\n without escaping, prefer block styles\n  // for multiline, since they're more readable and they don't add empty lines.\n  // Also prefer folding a super-long line.\n  if (!hasLineBreak && !hasFoldableLine) {\n    // Strings interpretable as another type have to be quoted;\n    // e.g. the string 'true' vs. the boolean true.\n    if (plain && !forceQuotes && !testAmbiguousType(string)) {\n      return STYLE_PLAIN;\n    }\n    return quotingType === QUOTING_TYPE_DOUBLE ? STYLE_DOUBLE : STYLE_SINGLE;\n  }\n  // Edge case: block indentation indicator can only have one digit.\n  if (indentPerLevel > 9 && needIndentIndicator(string)) {\n    return STYLE_DOUBLE;\n  }\n  // At this point we know block styles are valid.\n  // Prefer literal style unless we want to fold.\n  if (!forceQuotes) {\n    return hasFoldableLine ? STYLE_FOLDED : STYLE_LITERAL;\n  }\n  return quotingType === QUOTING_TYPE_DOUBLE ? STYLE_DOUBLE : STYLE_SINGLE;\n}\n\n// Note: line breaking/folding is implemented for only the folded style.\n// NB. We drop the last trailing newline (if any) of a returned block scalar\n//  since the dumper adds its own newline. This always works:\n//    • No ending newline => unaffected; already using strip \"-\" chomping.\n//    • Ending newline    => removed then restored.\n//  Importantly, this keeps the \"+\" chomp indicator from gaining an extra line.\nfunction writeScalar(state, string, level, iskey, inblock) {\n  state.dump = (function () {\n    if (string.length === 0) {\n      return state.quotingType === QUOTING_TYPE_DOUBLE ? '\"\"' : \"''\";\n    }\n    if (!state.noCompatMode) {\n      if (DEPRECATED_BOOLEANS_SYNTAX.indexOf(string) !== -1 || DEPRECATED_BASE60_SYNTAX.test(string)) {\n        return state.quotingType === QUOTING_TYPE_DOUBLE ? ('\"' + string + '\"') : (\"'\" + string + \"'\");\n      }\n    }\n\n    var indent = state.indent * Math.max(1, level); // no 0-indent scalars\n    // As indentation gets deeper, let the width decrease monotonically\n    // to the lower bound min(state.lineWidth, 40).\n    // Note that this implies\n    //  state.lineWidth ≤ 40 + state.indent: width is fixed at the lower bound.\n    //  state.lineWidth > 40 + state.indent: width decreases until the lower bound.\n    // This behaves better than a constant minimum width which disallows narrower options,\n    // or an indent threshold which causes the width to suddenly increase.\n    var lineWidth = state.lineWidth === -1\n      ? -1 : Math.max(Math.min(state.lineWidth, 40), state.lineWidth - indent);\n\n    // Without knowing if keys are implicit/explicit, assume implicit for safety.\n    var singleLineOnly = iskey\n      // No block styles in flow mode.\n      || (state.flowLevel > -1 && level >= state.flowLevel);\n    function testAmbiguity(string) {\n      return testImplicitResolving(state, string);\n    }\n\n    switch (chooseScalarStyle(string, singleLineOnly, state.indent, lineWidth,\n      testAmbiguity, state.quotingType, state.forceQuotes && !iskey, inblock)) {\n\n      case STYLE_PLAIN:\n        return string;\n      case STYLE_SINGLE:\n        return \"'\" + string.replace(/'/g, \"''\") + \"'\";\n      case STYLE_LITERAL:\n        return '|' + blockHeader(string, state.indent)\n          + dropEndingNewline(indentString(string, indent));\n      case STYLE_FOLDED:\n        return '>' + blockHeader(string, state.indent)\n          + dropEndingNewline(indentString(foldString(string, lineWidth), indent));\n      case STYLE_DOUBLE:\n        return '\"' + escapeString(string) + '\"';\n      default:\n        throw new exception('impossible error: invalid scalar style');\n    }\n  }());\n}\n\n// Pre-conditions: string is valid for a block scalar, 1 <= indentPerLevel <= 9.\nfunction blockHeader(string, indentPerLevel) {\n  var indentIndicator = needIndentIndicator(string) ? String(indentPerLevel) : '';\n\n  // note the special case: the string '\\n' counts as a \"trailing\" empty line.\n  var clip =          string[string.length - 1] === '\\n';\n  var keep = clip && (string[string.length - 2] === '\\n' || string === '\\n');\n  var chomp = keep ? '+' : (clip ? '' : '-');\n\n  return indentIndicator + chomp + '\\n';\n}\n\n// (See the note for writeScalar.)\nfunction dropEndingNewline(string) {\n  return string[string.length - 1] === '\\n' ? string.slice(0, -1) : string;\n}\n\n// Note: a long line without a suitable break point will exceed the width limit.\n// Pre-conditions: every char in str isPrintable, str.length > 0, width > 0.\nfunction foldString(string, width) {\n  // In folded style, $k$ consecutive newlines output as $k+1$ newlines—\n  // unless they're before or after a more-indented line, or at the very\n  // beginning or end, in which case $k$ maps to $k$.\n  // Therefore, parse each chunk as newline(s) followed by a content line.\n  var lineRe = /(\\n+)([^\\n]*)/g;\n\n  // first line (possibly an empty line)\n  var result = (function () {\n    var nextLF = string.indexOf('\\n');\n    nextLF = nextLF !== -1 ? nextLF : string.length;\n    lineRe.lastIndex = nextLF;\n    return foldLine(string.slice(0, nextLF), width);\n  }());\n  // If we haven't reached the first content line yet, don't add an extra \\n.\n  var prevMoreIndented = string[0] === '\\n' || string[0] === ' ';\n  var moreIndented;\n\n  // rest of the lines\n  var match;\n  while ((match = lineRe.exec(string))) {\n    var prefix = match[1], line = match[2];\n    moreIndented = (line[0] === ' ');\n    result += prefix\n      + (!prevMoreIndented && !moreIndented && line !== ''\n        ? '\\n' : '')\n      + foldLine(line, width);\n    prevMoreIndented = moreIndented;\n  }\n\n  return result;\n}\n\n// Greedy line breaking.\n// Picks the longest line under the limit each time,\n// otherwise settles for the shortest line over the limit.\n// NB. More-indented lines *cannot* be folded, as that would add an extra \\n.\nfunction foldLine(line, width) {\n  if (line === '' || line[0] === ' ') return line;\n\n  // Since a more-indented line adds a \\n, breaks can't be followed by a space.\n  var breakRe = / [^ ]/g; // note: the match index will always be <= length-2.\n  var match;\n  // start is an inclusive index. end, curr, and next are exclusive.\n  var start = 0, end, curr = 0, next = 0;\n  var result = '';\n\n  // Invariants: 0 <= start <= length-1.\n  //   0 <= curr <= next <= max(0, length-2). curr - start <= width.\n  // Inside the loop:\n  //   A match implies length >= 2, so curr and next are <= length-2.\n  while ((match = breakRe.exec(line))) {\n    next = match.index;\n    // maintain invariant: curr - start <= width\n    if (next - start > width) {\n      end = (curr > start) ? curr : next; // derive end <= length-2\n      result += '\\n' + line.slice(start, end);\n      // skip the space that was output as \\n\n      start = end + 1;                    // derive start <= length-1\n    }\n    curr = next;\n  }\n\n  // By the invariants, start <= length-1, so there is something left over.\n  // It is either the whole string or a part starting from non-whitespace.\n  result += '\\n';\n  // Insert a break if the remainder is too long and there is a break available.\n  if (line.length - start > width && curr > start) {\n    result += line.slice(start, curr) + '\\n' + line.slice(curr + 1);\n  } else {\n    result += line.slice(start);\n  }\n\n  return result.slice(1); // drop extra \\n joiner\n}\n\n// Escapes a double-quoted string.\nfunction escapeString(string) {\n  var result = '';\n  var char = 0;\n  var escapeSeq;\n\n  for (var i = 0; i < string.length; char >= 0x10000 ? i += 2 : i++) {\n    char = codePointAt(string, i);\n    escapeSeq = ESCAPE_SEQUENCES[char];\n\n    if (!escapeSeq && isPrintable(char)) {\n      result += string[i];\n      if (char >= 0x10000) result += string[i + 1];\n    } else {\n      result += escapeSeq || encodeHex(char);\n    }\n  }\n\n  return result;\n}\n\nfunction writeFlowSequence(state, level, object) {\n  var _result = '',\n      _tag    = state.tag,\n      index,\n      length,\n      value;\n\n  for (index = 0, length = object.length; index < length; index += 1) {\n    value = object[index];\n\n    if (state.replacer) {\n      value = state.replacer.call(object, String(index), value);\n    }\n\n    // Write only valid elements, put null instead of invalid elements.\n    if (writeNode(state, level, value, false, false) ||\n        (typeof value === 'undefined' &&\n         writeNode(state, level, null, false, false))) {\n\n      if (_result !== '') _result += ',' + (!state.condenseFlow ? ' ' : '');\n      _result += state.dump;\n    }\n  }\n\n  state.tag = _tag;\n  state.dump = '[' + _result + ']';\n}\n\nfunction writeBlockSequence(state, level, object, compact) {\n  var _result = '',\n      _tag    = state.tag,\n      index,\n      length,\n      value;\n\n  for (index = 0, length = object.length; index < length; index += 1) {\n    value = object[index];\n\n    if (state.replacer) {\n      value = state.replacer.call(object, String(index), value);\n    }\n\n    // Write only valid elements, put null instead of invalid elements.\n    if (writeNode(state, level + 1, value, true, true, false, true) ||\n        (typeof value === 'undefined' &&\n         writeNode(state, level + 1, null, true, true, false, true))) {\n\n      if (!compact || _result !== '') {\n        _result += generateNextLine(state, level);\n      }\n\n      if (state.dump && CHAR_LINE_FEED === state.dump.charCodeAt(0)) {\n        _result += '-';\n      } else {\n        _result += '- ';\n      }\n\n      _result += state.dump;\n    }\n  }\n\n  state.tag = _tag;\n  state.dump = _result || '[]'; // Empty sequence if no valid values.\n}\n\nfunction writeFlowMapping(state, level, object) {\n  var _result       = '',\n      _tag          = state.tag,\n      objectKeyList = Object.keys(object),\n      index,\n      length,\n      objectKey,\n      objectValue,\n      pairBuffer;\n\n  for (index = 0, length = objectKeyList.length; index < length; index += 1) {\n\n    pairBuffer = '';\n    if (_result !== '') pairBuffer += ', ';\n\n    if (state.condenseFlow) pairBuffer += '\"';\n\n    objectKey = objectKeyList[index];\n    objectValue = object[objectKey];\n\n    if (state.replacer) {\n      objectValue = state.replacer.call(object, objectKey, objectValue);\n    }\n\n    if (!writeNode(state, level, objectKey, false, false)) {\n      continue; // Skip this pair because of invalid key;\n    }\n\n    if (state.dump.length > 1024) pairBuffer += '? ';\n\n    pairBuffer += state.dump + (state.condenseFlow ? '\"' : '') + ':' + (state.condenseFlow ? '' : ' ');\n\n    if (!writeNode(state, level, objectValue, false, false)) {\n      continue; // Skip this pair because of invalid value.\n    }\n\n    pairBuffer += state.dump;\n\n    // Both key and value are valid.\n    _result += pairBuffer;\n  }\n\n  state.tag = _tag;\n  state.dump = '{' + _result + '}';\n}\n\nfunction writeBlockMapping(state, level, object, compact) {\n  var _result       = '',\n      _tag          = state.tag,\n      objectKeyList = Object.keys(object),\n      index,\n      length,\n      objectKey,\n      objectValue,\n      explicitPair,\n      pairBuffer;\n\n  // Allow sorting keys so that the output file is deterministic\n  if (state.sortKeys === true) {\n    // Default sorting\n    objectKeyList.sort();\n  } else if (typeof state.sortKeys === 'function') {\n    // Custom sort function\n    objectKeyList.sort(state.sortKeys);\n  } else if (state.sortKeys) {\n    // Something is wrong\n    throw new exception('sortKeys must be a boolean or a function');\n  }\n\n  for (index = 0, length = objectKeyList.length; index < length; index += 1) {\n    pairBuffer = '';\n\n    if (!compact || _result !== '') {\n      pairBuffer += generateNextLine(state, level);\n    }\n\n    objectKey = objectKeyList[index];\n    objectValue = object[objectKey];\n\n    if (state.replacer) {\n      objectValue = state.replacer.call(object, objectKey, objectValue);\n    }\n\n    if (!writeNode(state, level + 1, objectKey, true, true, true)) {\n      continue; // Skip this pair because of invalid key.\n    }\n\n    explicitPair = (state.tag !== null && state.tag !== '?') ||\n                   (state.dump && state.dump.length > 1024);\n\n    if (explicitPair) {\n      if (state.dump && CHAR_LINE_FEED === state.dump.charCodeAt(0)) {\n        pairBuffer += '?';\n      } else {\n        pairBuffer += '? ';\n      }\n    }\n\n    pairBuffer += state.dump;\n\n    if (explicitPair) {\n      pairBuffer += generateNextLine(state, level);\n    }\n\n    if (!writeNode(state, level + 1, objectValue, true, explicitPair)) {\n      continue; // Skip this pair because of invalid value.\n    }\n\n    if (state.dump && CHAR_LINE_FEED === state.dump.charCodeAt(0)) {\n      pairBuffer += ':';\n    } else {\n      pairBuffer += ': ';\n    }\n\n    pairBuffer += state.dump;\n\n    // Both key and value are valid.\n    _result += pairBuffer;\n  }\n\n  state.tag = _tag;\n  state.dump = _result || '{}'; // Empty mapping if no valid pairs.\n}\n\nfunction detectType(state, object, explicit) {\n  var _result, typeList, index, length, type, style;\n\n  typeList = explicit ? state.explicitTypes : state.implicitTypes;\n\n  for (index = 0, length = typeList.length; index < length; index += 1) {\n    type = typeList[index];\n\n    if ((type.instanceOf  || type.predicate) &&\n        (!type.instanceOf || ((typeof object === 'object') && (object instanceof type.instanceOf))) &&\n        (!type.predicate  || type.predicate(object))) {\n\n      if (explicit) {\n        if (type.multi && type.representName) {\n          state.tag = type.representName(object);\n        } else {\n          state.tag = type.tag;\n        }\n      } else {\n        state.tag = '?';\n      }\n\n      if (type.represent) {\n        style = state.styleMap[type.tag] || type.defaultStyle;\n\n        if (_toString.call(type.represent) === '[object Function]') {\n          _result = type.represent(object, style);\n        } else if (_hasOwnProperty.call(type.represent, style)) {\n          _result = type.represent[style](object, style);\n        } else {\n          throw new exception('!<' + type.tag + '> tag resolver accepts not \"' + style + '\" style');\n        }\n\n        state.dump = _result;\n      }\n\n      return true;\n    }\n  }\n\n  return false;\n}\n\n// Serializes `object` and writes it to global `result`.\n// Returns true on success, or false on invalid object.\n//\nfunction writeNode(state, level, object, block, compact, iskey, isblockseq) {\n  state.tag = null;\n  state.dump = object;\n\n  if (!detectType(state, object, false)) {\n    detectType(state, object, true);\n  }\n\n  var type = _toString.call(state.dump);\n  var inblock = block;\n  var tagStr;\n\n  if (block) {\n    block = (state.flowLevel < 0 || state.flowLevel > level);\n  }\n\n  var objectOrArray = type === '[object Object]' || type === '[object Array]',\n      duplicateIndex,\n      duplicate;\n\n  if (objectOrArray) {\n    duplicateIndex = state.duplicates.indexOf(object);\n    duplicate = duplicateIndex !== -1;\n  }\n\n  if ((state.tag !== null && state.tag !== '?') || duplicate || (state.indent !== 2 && level > 0)) {\n    compact = false;\n  }\n\n  if (duplicate && state.usedDuplicates[duplicateIndex]) {\n    state.dump = '*ref_' + duplicateIndex;\n  } else {\n    if (objectOrArray && duplicate && !state.usedDuplicates[duplicateIndex]) {\n      state.usedDuplicates[duplicateIndex] = true;\n    }\n    if (type === '[object Object]') {\n      if (block && (Object.keys(state.dump).length !== 0)) {\n        writeBlockMapping(state, level, state.dump, compact);\n        if (duplicate) {\n          state.dump = '&ref_' + duplicateIndex + state.dump;\n        }\n      } else {\n        writeFlowMapping(state, level, state.dump);\n        if (duplicate) {\n          state.dump = '&ref_' + duplicateIndex + ' ' + state.dump;\n        }\n      }\n    } else if (type === '[object Array]') {\n      if (block && (state.dump.length !== 0)) {\n        if (state.noArrayIndent && !isblockseq && level > 0) {\n          writeBlockSequence(state, level - 1, state.dump, compact);\n        } else {\n          writeBlockSequence(state, level, state.dump, compact);\n        }\n        if (duplicate) {\n          state.dump = '&ref_' + duplicateIndex + state.dump;\n        }\n      } else {\n        writeFlowSequence(state, level, state.dump);\n        if (duplicate) {\n          state.dump = '&ref_' + duplicateIndex + ' ' + state.dump;\n        }\n      }\n    } else if (type === '[object String]') {\n      if (state.tag !== '?') {\n        writeScalar(state, state.dump, level, iskey, inblock);\n      }\n    } else if (type === '[object Undefined]') {\n      return false;\n    } else {\n      if (state.skipInvalid) return false;\n      throw new exception('unacceptable kind of an object to dump ' + type);\n    }\n\n    if (state.tag !== null && state.tag !== '?') {\n      // Need to encode all characters except those allowed by the spec:\n      //\n      // [35] ns-dec-digit    ::=  [#x30-#x39] /* 0-9 */\n      // [36] ns-hex-digit    ::=  ns-dec-digit\n      //                         | [#x41-#x46] /* A-F */ | [#x61-#x66] /* a-f */\n      // [37] ns-ascii-letter ::=  [#x41-#x5A] /* A-Z */ | [#x61-#x7A] /* a-z */\n      // [38] ns-word-char    ::=  ns-dec-digit | ns-ascii-letter | “-”\n      // [39] ns-uri-char     ::=  “%” ns-hex-digit ns-hex-digit | ns-word-char | “#”\n      //                         | “;” | “/” | “?” | “:” | “@” | “&” | “=” | “+” | “$” | “,”\n      //                         | “_” | “.” | “!” | “~” | “*” | “'” | “(” | “)” | “[” | “]”\n      //\n      // Also need to encode '!' because it has special meaning (end of tag prefix).\n      //\n      tagStr = encodeURI(\n        state.tag[0] === '!' ? state.tag.slice(1) : state.tag\n      ).replace(/!/g, '%21');\n\n      if (state.tag[0] === '!') {\n        tagStr = '!' + tagStr;\n      } else if (tagStr.slice(0, 18) === 'tag:yaml.org,2002:') {\n        tagStr = '!!' + tagStr.slice(18);\n      } else {\n        tagStr = '!<' + tagStr + '>';\n      }\n\n      state.dump = tagStr + ' ' + state.dump;\n    }\n  }\n\n  return true;\n}\n\nfunction getDuplicateReferences(object, state) {\n  var objects = [],\n      duplicatesIndexes = [],\n      index,\n      length;\n\n  inspectNode(object, objects, duplicatesIndexes);\n\n  for (index = 0, length = duplicatesIndexes.length; index < length; index += 1) {\n    state.duplicates.push(objects[duplicatesIndexes[index]]);\n  }\n  state.usedDuplicates = new Array(length);\n}\n\nfunction inspectNode(object, objects, duplicatesIndexes) {\n  var objectKeyList,\n      index,\n      length;\n\n  if (object !== null && typeof object === 'object') {\n    index = objects.indexOf(object);\n    if (index !== -1) {\n      if (duplicatesIndexes.indexOf(index) === -1) {\n        duplicatesIndexes.push(index);\n      }\n    } else {\n      objects.push(object);\n\n      if (Array.isArray(object)) {\n        for (index = 0, length = object.length; index < length; index += 1) {\n          inspectNode(object[index], objects, duplicatesIndexes);\n        }\n      } else {\n        objectKeyList = Object.keys(object);\n\n        for (index = 0, length = objectKeyList.length; index < length; index += 1) {\n          inspectNode(object[objectKeyList[index]], objects, duplicatesIndexes);\n        }\n      }\n    }\n  }\n}\n\nfunction dump$1(input, options) {\n  options = options || {};\n\n  var state = new State(options);\n\n  if (!state.noRefs) getDuplicateReferences(input, state);\n\n  var value = input;\n\n  if (state.replacer) {\n    value = state.replacer.call({ '': value }, '', value);\n  }\n\n  if (writeNode(state, 0, value, true, true)) return state.dump + '\\n';\n\n  return '';\n}\n\nvar dump_1 = dump$1;\n\nvar dumper = {\n\tdump: dump_1\n};\n\nfunction renamed(from, to) {\n  return function () {\n    throw new Error('Function yaml.' + from + ' is removed in js-yaml 4. ' +\n      'Use yaml.' + to + ' instead, which is now safe by default.');\n  };\n}\n\n\nvar Type                = type;\nvar Schema              = schema;\nvar FAILSAFE_SCHEMA     = failsafe;\nvar JSON_SCHEMA         = json;\nvar CORE_SCHEMA         = core;\nvar DEFAULT_SCHEMA      = _default;\nvar load                = loader.load;\nvar loadAll             = loader.loadAll;\nvar dump                = dumper.dump;\nvar YAMLException       = exception;\n\n// Re-export all types in case user wants to create custom schema\nvar types = {\n  binary:    binary,\n  float:     float,\n  map:       map,\n  null:      _null,\n  pairs:     pairs,\n  set:       set,\n  timestamp: timestamp,\n  bool:      bool,\n  int:       int,\n  merge:     merge,\n  omap:      omap,\n  seq:       seq,\n  str:       str\n};\n\n// Removed functions from JS-YAML 3.0.x\nvar safeLoad            = renamed('safeLoad', 'load');\nvar safeLoadAll         = renamed('safeLoadAll', 'loadAll');\nvar safeDump            = renamed('safeDump', 'dump');\n\nvar jsYaml = {\n\tType: Type,\n\tSchema: Schema,\n\tFAILSAFE_SCHEMA: FAILSAFE_SCHEMA,\n\tJSON_SCHEMA: JSON_SCHEMA,\n\tCORE_SCHEMA: CORE_SCHEMA,\n\tDEFAULT_SCHEMA: DEFAULT_SCHEMA,\n\tload: load,\n\tloadAll: loadAll,\n\tdump: dump,\n\tYAMLException: YAMLException,\n\ttypes: types,\n\tsafeLoad: safeLoad,\n\tsafeLoadAll: safeLoadAll,\n\tsafeDump: safeDump\n};\n\nexport default jsYaml;\nexport { CORE_SCHEMA, DEFAULT_SCHEMA, FAILSAFE_SCHEMA, JSON_SCHEMA, Schema, Type, YAMLException, dump, load, loadAll, safeDump, safeLoad, safeLoadAll, types };\n"],"mappings":"AACA;AACA,SAASA,SAASA,CAACC,OAAO,EAAE;EAC1B,OAAQ,OAAOA,OAAO,KAAK,WAAW,IAAMA,OAAO,KAAK,IAAK;AAC/D;AAGA,SAASC,QAAQA,CAACD,OAAO,EAAE;EACzB,OAAQ,OAAOA,OAAO,KAAK,QAAQ,IAAMA,OAAO,KAAK,IAAK;AAC5D;AAGA,SAASE,OAAOA,CAACC,QAAQ,EAAE;EACzB,IAAIC,KAAK,CAACC,OAAO,CAACF,QAAQ,CAAC,EAAE,OAAOA,QAAQ,CAAC,KACxC,IAAIJ,SAAS,CAACI,QAAQ,CAAC,EAAE,OAAO,EAAE;EAEvC,OAAO,CAAEA,QAAQ,CAAE;AACrB;AAGA,SAASG,MAAMA,CAACC,MAAM,EAAEC,MAAM,EAAE;EAC9B,IAAIC,KAAK,EAAEC,MAAM,EAAEC,GAAG,EAAEC,UAAU;EAElC,IAAIJ,MAAM,EAAE;IACVI,UAAU,GAAGC,MAAM,CAACC,IAAI,CAACN,MAAM,CAAC;IAEhC,KAAKC,KAAK,GAAG,CAAC,EAAEC,MAAM,GAAGE,UAAU,CAACF,MAAM,EAAED,KAAK,GAAGC,MAAM,EAAED,KAAK,IAAI,CAAC,EAAE;MACtEE,GAAG,GAAGC,UAAU,CAACH,KAAK,CAAC;MACvBF,MAAM,CAACI,GAAG,CAAC,GAAGH,MAAM,CAACG,GAAG,CAAC;IAC3B;EACF;EAEA,OAAOJ,MAAM;AACf;AAGA,SAASQ,MAAMA,CAACC,MAAM,EAAEC,KAAK,EAAE;EAC7B,IAAIC,MAAM,GAAG,EAAE;IAAEC,KAAK;EAEtB,KAAKA,KAAK,GAAG,CAAC,EAAEA,KAAK,GAAGF,KAAK,EAAEE,KAAK,IAAI,CAAC,EAAE;IACzCD,MAAM,IAAIF,MAAM;EAClB;EAEA,OAAOE,MAAM;AACf;AAGA,SAASE,cAAcA,CAACC,MAAM,EAAE;EAC9B,OAAQA,MAAM,KAAK,CAAC,IAAMC,MAAM,CAACC,iBAAiB,KAAK,CAAC,GAAGF,MAAO;AACpE;AAGA,IAAIG,WAAW,GAAQzB,SAAS;AAChC,IAAI0B,UAAU,GAASxB,QAAQ;AAC/B,IAAIyB,SAAS,GAAUxB,OAAO;AAC9B,IAAIyB,QAAQ,GAAWZ,MAAM;AAC7B,IAAIa,gBAAgB,GAAGR,cAAc;AACrC,IAAIS,QAAQ,GAAWvB,MAAM;AAE7B,IAAIwB,MAAM,GAAG;EACZ/B,SAAS,EAAEyB,WAAW;EACtBvB,QAAQ,EAAEwB,UAAU;EACpBvB,OAAO,EAAEwB,SAAS;EAClBX,MAAM,EAAEY,QAAQ;EAChBP,cAAc,EAAEQ,gBAAgB;EAChCtB,MAAM,EAAEuB;AACT,CAAC;;AAED;;AAGA,SAASE,WAAWA,CAACC,SAAS,EAAEC,OAAO,EAAE;EACvC,IAAIC,KAAK,GAAG,EAAE;IAAEC,OAAO,GAAGH,SAAS,CAACI,MAAM,IAAI,kBAAkB;EAEhE,IAAI,CAACJ,SAAS,CAACK,IAAI,EAAE,OAAOF,OAAO;EAEnC,IAAIH,SAAS,CAACK,IAAI,CAACC,IAAI,EAAE;IACvBJ,KAAK,IAAI,MAAM,GAAGF,SAAS,CAACK,IAAI,CAACC,IAAI,GAAG,IAAI;EAC9C;EAEAJ,KAAK,IAAI,GAAG,IAAIF,SAAS,CAACK,IAAI,CAACE,IAAI,GAAG,CAAC,CAAC,GAAG,GAAG,IAAIP,SAAS,CAACK,IAAI,CAACG,MAAM,GAAG,CAAC,CAAC,GAAG,GAAG;EAElF,IAAI,CAACP,OAAO,IAAID,SAAS,CAACK,IAAI,CAACI,OAAO,EAAE;IACtCP,KAAK,IAAI,MAAM,GAAGF,SAAS,CAACK,IAAI,CAACI,OAAO;EAC1C;EAEA,OAAON,OAAO,GAAG,GAAG,GAAGD,KAAK;AAC9B;AAGA,SAASQ,eAAeA,CAACN,MAAM,EAAEC,IAAI,EAAE;EACrC;EACAM,KAAK,CAACC,IAAI,CAAC,IAAI,CAAC;EAEhB,IAAI,CAACN,IAAI,GAAG,eAAe;EAC3B,IAAI,CAACF,MAAM,GAAGA,MAAM;EACpB,IAAI,CAACC,IAAI,GAAGA,IAAI;EAChB,IAAI,CAACF,OAAO,GAAGJ,WAAW,CAAC,IAAI,EAAE,KAAK,CAAC;;EAEvC;EACA,IAAIY,KAAK,CAACE,iBAAiB,EAAE;IAC3B;IACAF,KAAK,CAACE,iBAAiB,CAAC,IAAI,EAAE,IAAI,CAACC,WAAW,CAAC;EACjD,CAAC,MAAM;IACL;IACA,IAAI,CAACC,KAAK,GAAI,IAAIJ,KAAK,CAAC,CAAC,CAAEI,KAAK,IAAI,EAAE;EACxC;AACF;;AAGA;AACAL,eAAe,CAACM,SAAS,GAAGnC,MAAM,CAACoC,MAAM,CAACN,KAAK,CAACK,SAAS,CAAC;AAC1DN,eAAe,CAACM,SAAS,CAACF,WAAW,GAAGJ,eAAe;AAGvDA,eAAe,CAACM,SAAS,CAACE,QAAQ,GAAG,SAASA,QAAQA,CAACjB,OAAO,EAAE;EAC9D,OAAO,IAAI,CAACK,IAAI,GAAG,IAAI,GAAGP,WAAW,CAAC,IAAI,EAAEE,OAAO,CAAC;AACtD,CAAC;AAGD,IAAID,SAAS,GAAGU,eAAe;;AAE/B;AACA,SAASS,OAAOA,CAACC,MAAM,EAAEC,SAAS,EAAEC,OAAO,EAAEC,QAAQ,EAAEC,aAAa,EAAE;EACpE,IAAIC,IAAI,GAAG,EAAE;EACb,IAAIC,IAAI,GAAG,EAAE;EACb,IAAIC,aAAa,GAAGC,IAAI,CAACC,KAAK,CAACL,aAAa,GAAG,CAAC,CAAC,GAAG,CAAC;EAErD,IAAID,QAAQ,GAAGF,SAAS,GAAGM,aAAa,EAAE;IACxCF,IAAI,GAAG,OAAO;IACdJ,SAAS,GAAGE,QAAQ,GAAGI,aAAa,GAAGF,IAAI,CAAC/C,MAAM;EACpD;EAEA,IAAI4C,OAAO,GAAGC,QAAQ,GAAGI,aAAa,EAAE;IACtCD,IAAI,GAAG,MAAM;IACbJ,OAAO,GAAGC,QAAQ,GAAGI,aAAa,GAAGD,IAAI,CAAChD,MAAM;EAClD;EAEA,OAAO;IACLoD,GAAG,EAAEL,IAAI,GAAGL,MAAM,CAACW,KAAK,CAACV,SAAS,EAAEC,OAAO,CAAC,CAACU,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC,GAAGN,IAAI;IACvEO,GAAG,EAAEV,QAAQ,GAAGF,SAAS,GAAGI,IAAI,CAAC/C,MAAM,CAAC;EAC1C,CAAC;AACH;AAGA,SAASwD,QAAQA,CAAClD,MAAM,EAAEmD,GAAG,EAAE;EAC7B,OAAOrC,MAAM,CAACf,MAAM,CAAC,GAAG,EAAEoD,GAAG,GAAGnD,MAAM,CAACN,MAAM,CAAC,GAAGM,MAAM;AACzD;AAGA,SAASoD,WAAWA,CAAC/B,IAAI,EAAEgC,OAAO,EAAE;EAClCA,OAAO,GAAGxD,MAAM,CAACoC,MAAM,CAACoB,OAAO,IAAI,IAAI,CAAC;EAExC,IAAI,CAAChC,IAAI,CAACe,MAAM,EAAE,OAAO,IAAI;EAE7B,IAAI,CAACiB,OAAO,CAACC,SAAS,EAAED,OAAO,CAACC,SAAS,GAAG,EAAE;EAC9C,IAAI,OAAOD,OAAO,CAACE,MAAM,KAAU,QAAQ,EAAEF,OAAO,CAACE,MAAM,GAAQ,CAAC;EACpE,IAAI,OAAOF,OAAO,CAACG,WAAW,KAAK,QAAQ,EAAEH,OAAO,CAACG,WAAW,GAAG,CAAC;EACpE,IAAI,OAAOH,OAAO,CAACI,UAAU,KAAM,QAAQ,EAAEJ,OAAO,CAACI,UAAU,GAAI,CAAC;EAEpE,IAAIC,EAAE,GAAG,cAAc;EACvB,IAAIC,UAAU,GAAG,CAAE,CAAC,CAAE;EACtB,IAAIC,QAAQ,GAAG,EAAE;EACjB,IAAIC,KAAK;EACT,IAAIC,WAAW,GAAG,CAAC,CAAC;EAEpB,OAAQD,KAAK,GAAGH,EAAE,CAACK,IAAI,CAAC1C,IAAI,CAACe,MAAM,CAAC,EAAG;IACrCwB,QAAQ,CAACI,IAAI,CAACH,KAAK,CAACpE,KAAK,CAAC;IAC1BkE,UAAU,CAACK,IAAI,CAACH,KAAK,CAACpE,KAAK,GAAGoE,KAAK,CAAC,CAAC,CAAC,CAACnE,MAAM,CAAC;IAE9C,IAAI2B,IAAI,CAACkB,QAAQ,IAAIsB,KAAK,CAACpE,KAAK,IAAIqE,WAAW,GAAG,CAAC,EAAE;MACnDA,WAAW,GAAGH,UAAU,CAACjE,MAAM,GAAG,CAAC;IACrC;EACF;EAEA,IAAIoE,WAAW,GAAG,CAAC,EAAEA,WAAW,GAAGH,UAAU,CAACjE,MAAM,GAAG,CAAC;EAExD,IAAIQ,MAAM,GAAG,EAAE;IAAE+D,CAAC;IAAE1C,IAAI;EACxB,IAAI2C,YAAY,GAAGtB,IAAI,CAACuB,GAAG,CAAC9C,IAAI,CAACE,IAAI,GAAG8B,OAAO,CAACI,UAAU,EAAEG,QAAQ,CAAClE,MAAM,CAAC,CAACwC,QAAQ,CAAC,CAAC,CAACxC,MAAM;EAC9F,IAAI8C,aAAa,GAAGa,OAAO,CAACC,SAAS,IAAID,OAAO,CAACE,MAAM,GAAGW,YAAY,GAAG,CAAC,CAAC;EAE3E,KAAKD,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIZ,OAAO,CAACG,WAAW,EAAES,CAAC,EAAE,EAAE;IACzC,IAAIH,WAAW,GAAGG,CAAC,GAAG,CAAC,EAAE;IACzB1C,IAAI,GAAGY,OAAO,CACZd,IAAI,CAACe,MAAM,EACXuB,UAAU,CAACG,WAAW,GAAGG,CAAC,CAAC,EAC3BL,QAAQ,CAACE,WAAW,GAAGG,CAAC,CAAC,EACzB5C,IAAI,CAACkB,QAAQ,IAAIoB,UAAU,CAACG,WAAW,CAAC,GAAGH,UAAU,CAACG,WAAW,GAAGG,CAAC,CAAC,CAAC,EACvEzB,aACF,CAAC;IACDtC,MAAM,GAAGY,MAAM,CAACf,MAAM,CAAC,GAAG,EAAEsD,OAAO,CAACE,MAAM,CAAC,GAAGL,QAAQ,CAAC,CAAC7B,IAAI,CAACE,IAAI,GAAG0C,CAAC,GAAG,CAAC,EAAE/B,QAAQ,CAAC,CAAC,EAAEgC,YAAY,CAAC,GAClG,KAAK,GAAG3C,IAAI,CAACuB,GAAG,GAAG,IAAI,GAAG5C,MAAM;EACpC;EAEAqB,IAAI,GAAGY,OAAO,CAACd,IAAI,CAACe,MAAM,EAAEuB,UAAU,CAACG,WAAW,CAAC,EAAEF,QAAQ,CAACE,WAAW,CAAC,EAAEzC,IAAI,CAACkB,QAAQ,EAAEC,aAAa,CAAC;EACzGtC,MAAM,IAAIY,MAAM,CAACf,MAAM,CAAC,GAAG,EAAEsD,OAAO,CAACE,MAAM,CAAC,GAAGL,QAAQ,CAAC,CAAC7B,IAAI,CAACE,IAAI,GAAG,CAAC,EAAEW,QAAQ,CAAC,CAAC,EAAEgC,YAAY,CAAC,GAC/F,KAAK,GAAG3C,IAAI,CAACuB,GAAG,GAAG,IAAI;EACzB5C,MAAM,IAAIY,MAAM,CAACf,MAAM,CAAC,GAAG,EAAEsD,OAAO,CAACE,MAAM,GAAGW,YAAY,GAAG,CAAC,GAAG3C,IAAI,CAAC0B,GAAG,CAAC,GAAG,GAAG,GAAG,IAAI;EAEvF,KAAKgB,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIZ,OAAO,CAACI,UAAU,EAAEQ,CAAC,EAAE,EAAE;IACxC,IAAIH,WAAW,GAAGG,CAAC,IAAIL,QAAQ,CAAClE,MAAM,EAAE;IACxC6B,IAAI,GAAGY,OAAO,CACZd,IAAI,CAACe,MAAM,EACXuB,UAAU,CAACG,WAAW,GAAGG,CAAC,CAAC,EAC3BL,QAAQ,CAACE,WAAW,GAAGG,CAAC,CAAC,EACzB5C,IAAI,CAACkB,QAAQ,IAAIoB,UAAU,CAACG,WAAW,CAAC,GAAGH,UAAU,CAACG,WAAW,GAAGG,CAAC,CAAC,CAAC,EACvEzB,aACF,CAAC;IACDtC,MAAM,IAAIY,MAAM,CAACf,MAAM,CAAC,GAAG,EAAEsD,OAAO,CAACE,MAAM,CAAC,GAAGL,QAAQ,CAAC,CAAC7B,IAAI,CAACE,IAAI,GAAG0C,CAAC,GAAG,CAAC,EAAE/B,QAAQ,CAAC,CAAC,EAAEgC,YAAY,CAAC,GACnG,KAAK,GAAG3C,IAAI,CAACuB,GAAG,GAAG,IAAI;EAC3B;EAEA,OAAO5C,MAAM,CAAC8C,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC;AAClC;AAGA,IAAIvB,OAAO,GAAG2B,WAAW;AAEzB,IAAIgB,wBAAwB,GAAG,CAC7B,MAAM,EACN,OAAO,EACP,SAAS,EACT,WAAW,EACX,YAAY,EACZ,WAAW,EACX,WAAW,EACX,eAAe,EACf,cAAc,EACd,cAAc,CACf;AAED,IAAIC,eAAe,GAAG,CACpB,QAAQ,EACR,UAAU,EACV,SAAS,CACV;AAED,SAASC,mBAAmBA,CAACC,GAAG,EAAE;EAChC,IAAIrE,MAAM,GAAG,CAAC,CAAC;EAEf,IAAIqE,GAAG,KAAK,IAAI,EAAE;IAChB1E,MAAM,CAACC,IAAI,CAACyE,GAAG,CAAC,CAACC,OAAO,CAAC,UAAUC,KAAK,EAAE;MACxCF,GAAG,CAACE,KAAK,CAAC,CAACD,OAAO,CAAC,UAAUE,KAAK,EAAE;QAClCxE,MAAM,CAACyE,MAAM,CAACD,KAAK,CAAC,CAAC,GAAGD,KAAK;MAC/B,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ;EAEA,OAAOvE,MAAM;AACf;AAEA,SAAS0E,MAAMA,CAACC,GAAG,EAAExB,OAAO,EAAE;EAC5BA,OAAO,GAAGA,OAAO,IAAI,CAAC,CAAC;EAEvBxD,MAAM,CAACC,IAAI,CAACuD,OAAO,CAAC,CAACmB,OAAO,CAAC,UAAUlD,IAAI,EAAE;IAC3C,IAAI8C,wBAAwB,CAACU,OAAO,CAACxD,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE;MACjD,MAAM,IAAIN,SAAS,CAAC,kBAAkB,GAAGM,IAAI,GAAG,6BAA6B,GAAGuD,GAAG,GAAG,cAAc,CAAC;IACvG;EACF,CAAC,CAAC;;EAEF;EACA,IAAI,CAACxB,OAAO,GAASA,OAAO,CAAC,CAAC;EAC9B,IAAI,CAACwB,GAAG,GAAaA,GAAG;EACxB,IAAI,CAACE,IAAI,GAAY1B,OAAO,CAAC,MAAM,CAAC,IAAa,IAAI;EACrD,IAAI,CAAC2B,OAAO,GAAS3B,OAAO,CAAC,SAAS,CAAC,IAAU,YAAY;IAAE,OAAO,IAAI;EAAE,CAAC;EAC7E,IAAI,CAAC4B,SAAS,GAAO5B,OAAO,CAAC,WAAW,CAAC,IAAQ,UAAU6B,IAAI,EAAE;IAAE,OAAOA,IAAI;EAAE,CAAC;EACjF,IAAI,CAACC,UAAU,GAAM9B,OAAO,CAAC,YAAY,CAAC,IAAO,IAAI;EACrD,IAAI,CAAC+B,SAAS,GAAO/B,OAAO,CAAC,WAAW,CAAC,IAAQ,IAAI;EACrD,IAAI,CAACgC,SAAS,GAAOhC,OAAO,CAAC,WAAW,CAAC,IAAQ,IAAI;EACrD,IAAI,CAACiC,aAAa,GAAGjC,OAAO,CAAC,eAAe,CAAC,IAAI,IAAI;EACrD,IAAI,CAACkC,YAAY,GAAIlC,OAAO,CAAC,cAAc,CAAC,IAAK,IAAI;EACrD,IAAI,CAACmC,KAAK,GAAWnC,OAAO,CAAC,OAAO,CAAC,IAAY,KAAK;EACtD,IAAI,CAACoC,YAAY,GAAInB,mBAAmB,CAACjB,OAAO,CAAC,cAAc,CAAC,IAAI,IAAI,CAAC;EAEzE,IAAIgB,eAAe,CAACS,OAAO,CAAC,IAAI,CAACC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE;IAC7C,MAAM,IAAI/D,SAAS,CAAC,gBAAgB,GAAG,IAAI,CAAC+D,IAAI,GAAG,sBAAsB,GAAGF,GAAG,GAAG,cAAc,CAAC;EACnG;AACF;AAEA,IAAIa,IAAI,GAAGd,MAAM;;AAEjB;;AAMA,SAASe,WAAWA,CAACC,MAAM,EAAEtE,IAAI,EAAE;EACjC,IAAIpB,MAAM,GAAG,EAAE;EAEf0F,MAAM,CAACtE,IAAI,CAAC,CAACkD,OAAO,CAAC,UAAUqB,WAAW,EAAE;IAC1C,IAAIC,QAAQ,GAAG5F,MAAM,CAACR,MAAM;IAE5BQ,MAAM,CAACsE,OAAO,CAAC,UAAUuB,YAAY,EAAEC,aAAa,EAAE;MACpD,IAAID,YAAY,CAAClB,GAAG,KAAKgB,WAAW,CAAChB,GAAG,IACpCkB,YAAY,CAAChB,IAAI,KAAKc,WAAW,CAACd,IAAI,IACtCgB,YAAY,CAACP,KAAK,KAAKK,WAAW,CAACL,KAAK,EAAE;QAE5CM,QAAQ,GAAGE,aAAa;MAC1B;IACF,CAAC,CAAC;IAEF9F,MAAM,CAAC4F,QAAQ,CAAC,GAAGD,WAAW;EAChC,CAAC,CAAC;EAEF,OAAO3F,MAAM;AACf;AAGA,SAAS+F,UAAUA,CAAA,CAAC;AAAA,EAAgB;EAClC,IAAI/F,MAAM,GAAG;MACPgG,MAAM,EAAE,CAAC,CAAC;MACV/G,QAAQ,EAAE,CAAC,CAAC;MACZgH,OAAO,EAAE,CAAC,CAAC;MACXC,QAAQ,EAAE,CAAC,CAAC;MACZZ,KAAK,EAAE;QACLU,MAAM,EAAE,EAAE;QACV/G,QAAQ,EAAE,EAAE;QACZgH,OAAO,EAAE,EAAE;QACXC,QAAQ,EAAE;MACZ;IACF,CAAC;IAAE3G,KAAK;IAAEC,MAAM;EAEpB,SAAS2G,WAAWA,CAACX,IAAI,EAAE;IACzB,IAAIA,IAAI,CAACF,KAAK,EAAE;MACdtF,MAAM,CAACsF,KAAK,CAACE,IAAI,CAACX,IAAI,CAAC,CAACf,IAAI,CAAC0B,IAAI,CAAC;MAClCxF,MAAM,CAACsF,KAAK,CAAC,UAAU,CAAC,CAACxB,IAAI,CAAC0B,IAAI,CAAC;IACrC,CAAC,MAAM;MACLxF,MAAM,CAACwF,IAAI,CAACX,IAAI,CAAC,CAACW,IAAI,CAACb,GAAG,CAAC,GAAG3E,MAAM,CAAC,UAAU,CAAC,CAACwF,IAAI,CAACb,GAAG,CAAC,GAAGa,IAAI;IACnE;EACF;EAEA,KAAKjG,KAAK,GAAG,CAAC,EAAEC,MAAM,GAAG4G,SAAS,CAAC5G,MAAM,EAAED,KAAK,GAAGC,MAAM,EAAED,KAAK,IAAI,CAAC,EAAE;IACrE6G,SAAS,CAAC7G,KAAK,CAAC,CAAC+E,OAAO,CAAC6B,WAAW,CAAC;EACvC;EACA,OAAOnG,MAAM;AACf;AAGA,SAASqG,QAAQA,CAACC,UAAU,EAAE;EAC5B,OAAO,IAAI,CAAClH,MAAM,CAACkH,UAAU,CAAC;AAChC;AAGAD,QAAQ,CAACvE,SAAS,CAAC1C,MAAM,GAAG,SAASA,MAAMA,CAACkH,UAAU,EAAE;EACtD,IAAIC,QAAQ,GAAG,EAAE;EACjB,IAAIC,QAAQ,GAAG,EAAE;EAEjB,IAAIF,UAAU,YAAYd,IAAI,EAAE;IAC9B;IACAgB,QAAQ,CAAC1C,IAAI,CAACwC,UAAU,CAAC;EAE3B,CAAC,MAAM,IAAIpH,KAAK,CAACC,OAAO,CAACmH,UAAU,CAAC,EAAE;IACpC;IACAE,QAAQ,GAAGA,QAAQ,CAACC,MAAM,CAACH,UAAU,CAAC;EAExC,CAAC,MAAM,IAAIA,UAAU,KAAKpH,KAAK,CAACC,OAAO,CAACmH,UAAU,CAACC,QAAQ,CAAC,IAAIrH,KAAK,CAACC,OAAO,CAACmH,UAAU,CAACE,QAAQ,CAAC,CAAC,EAAE;IACnG;IACA,IAAIF,UAAU,CAACC,QAAQ,EAAEA,QAAQ,GAAGA,QAAQ,CAACE,MAAM,CAACH,UAAU,CAACC,QAAQ,CAAC;IACxE,IAAID,UAAU,CAACE,QAAQ,EAAEA,QAAQ,GAAGA,QAAQ,CAACC,MAAM,CAACH,UAAU,CAACE,QAAQ,CAAC;EAE1E,CAAC,MAAM;IACL,MAAM,IAAI1F,SAAS,CAAC,qDAAqD,GACvE,+DAA+D,CAAC;EACpE;EAEAyF,QAAQ,CAACjC,OAAO,CAAC,UAAUoC,MAAM,EAAE;IACjC,IAAI,EAAEA,MAAM,YAAYlB,IAAI,CAAC,EAAE;MAC7B,MAAM,IAAI1E,SAAS,CAAC,oFAAoF,CAAC;IAC3G;IAEA,IAAI4F,MAAM,CAACC,QAAQ,IAAID,MAAM,CAACC,QAAQ,KAAK,QAAQ,EAAE;MACnD,MAAM,IAAI7F,SAAS,CAAC,iHAAiH,CAAC;IACxI;IAEA,IAAI4F,MAAM,CAACpB,KAAK,EAAE;MAChB,MAAM,IAAIxE,SAAS,CAAC,oGAAoG,CAAC;IAC3H;EACF,CAAC,CAAC;EAEF0F,QAAQ,CAAClC,OAAO,CAAC,UAAUoC,MAAM,EAAE;IACjC,IAAI,EAAEA,MAAM,YAAYlB,IAAI,CAAC,EAAE;MAC7B,MAAM,IAAI1E,SAAS,CAAC,oFAAoF,CAAC;IAC3G;EACF,CAAC,CAAC;EAEF,IAAId,MAAM,GAAGL,MAAM,CAACoC,MAAM,CAACsE,QAAQ,CAACvE,SAAS,CAAC;EAE9C9B,MAAM,CAACuG,QAAQ,GAAG,CAAC,IAAI,CAACA,QAAQ,IAAI,EAAE,EAAEE,MAAM,CAACF,QAAQ,CAAC;EACxDvG,MAAM,CAACwG,QAAQ,GAAG,CAAC,IAAI,CAACA,QAAQ,IAAI,EAAE,EAAEC,MAAM,CAACD,QAAQ,CAAC;EAExDxG,MAAM,CAAC4G,gBAAgB,GAAGnB,WAAW,CAACzF,MAAM,EAAE,UAAU,CAAC;EACzDA,MAAM,CAAC6G,gBAAgB,GAAGpB,WAAW,CAACzF,MAAM,EAAE,UAAU,CAAC;EACzDA,MAAM,CAAC8G,eAAe,GAAIf,UAAU,CAAC/F,MAAM,CAAC4G,gBAAgB,EAAE5G,MAAM,CAAC6G,gBAAgB,CAAC;EAEtF,OAAO7G,MAAM;AACf,CAAC;AAGD,IAAI0F,MAAM,GAAGW,QAAQ;AAErB,IAAIzD,GAAG,GAAG,IAAI4C,IAAI,CAAC,uBAAuB,EAAE;EAC1CX,IAAI,EAAE,QAAQ;EACdE,SAAS,EAAE,SAAAA,CAAUC,IAAI,EAAE;IAAE,OAAOA,IAAI,KAAK,IAAI,GAAGA,IAAI,GAAG,EAAE;EAAE;AACjE,CAAC,CAAC;AAEF,IAAI+B,GAAG,GAAG,IAAIvB,IAAI,CAAC,uBAAuB,EAAE;EAC1CX,IAAI,EAAE,UAAU;EAChBE,SAAS,EAAE,SAAAA,CAAUC,IAAI,EAAE;IAAE,OAAOA,IAAI,KAAK,IAAI,GAAGA,IAAI,GAAG,EAAE;EAAE;AACjE,CAAC,CAAC;AAEF,IAAIX,GAAG,GAAG,IAAImB,IAAI,CAAC,uBAAuB,EAAE;EAC1CX,IAAI,EAAE,SAAS;EACfE,SAAS,EAAE,SAAAA,CAAUC,IAAI,EAAE;IAAE,OAAOA,IAAI,KAAK,IAAI,GAAGA,IAAI,GAAG,CAAC,CAAC;EAAE;AACjE,CAAC,CAAC;AAEF,IAAIgC,QAAQ,GAAG,IAAItB,MAAM,CAAC;EACxBc,QAAQ,EAAE,CACR5D,GAAG,EACHmE,GAAG,EACH1C,GAAG;AAEP,CAAC,CAAC;AAEF,SAAS4C,eAAeA,CAACjC,IAAI,EAAE;EAC7B,IAAIA,IAAI,KAAK,IAAI,EAAE,OAAO,IAAI;EAE9B,IAAI/B,GAAG,GAAG+B,IAAI,CAACxF,MAAM;EAErB,OAAQyD,GAAG,KAAK,CAAC,IAAI+B,IAAI,KAAK,GAAG,IACzB/B,GAAG,KAAK,CAAC,KAAK+B,IAAI,KAAK,MAAM,IAAIA,IAAI,KAAK,MAAM,IAAIA,IAAI,KAAK,MAAM,CAAE;AAC/E;AAEA,SAASkC,iBAAiBA,CAAA,EAAG;EAC3B,OAAO,IAAI;AACb;AAEA,SAASC,MAAMA,CAACC,MAAM,EAAE;EACtB,OAAOA,MAAM,KAAK,IAAI;AACxB;AAEA,IAAIC,KAAK,GAAG,IAAI7B,IAAI,CAAC,wBAAwB,EAAE;EAC7CX,IAAI,EAAE,QAAQ;EACdC,OAAO,EAAEmC,eAAe;EACxBlC,SAAS,EAAEmC,iBAAiB;EAC5BhC,SAAS,EAAEiC,MAAM;EACjBhC,SAAS,EAAE;IACTmC,SAAS,EAAE,SAAAA,CAAA,EAAY;MAAE,OAAO,GAAG;IAAK,CAAC;IACzCC,SAAS,EAAE,SAAAA,CAAA,EAAY;MAAE,OAAO,MAAM;IAAE,CAAC;IACzCC,SAAS,EAAE,SAAAA,CAAA,EAAY;MAAE,OAAO,MAAM;IAAE,CAAC;IACzCC,SAAS,EAAE,SAAAA,CAAA,EAAY;MAAE,OAAO,MAAM;IAAE,CAAC;IACzCC,KAAK,EAAM,SAAAA,CAAA,EAAY;MAAE,OAAO,EAAE;IAAM;EAC1C,CAAC;EACDrC,YAAY,EAAE;AAChB,CAAC,CAAC;AAEF,SAASsC,kBAAkBA,CAAC3C,IAAI,EAAE;EAChC,IAAIA,IAAI,KAAK,IAAI,EAAE,OAAO,KAAK;EAE/B,IAAI/B,GAAG,GAAG+B,IAAI,CAACxF,MAAM;EAErB,OAAQyD,GAAG,KAAK,CAAC,KAAK+B,IAAI,KAAK,MAAM,IAAIA,IAAI,KAAK,MAAM,IAAIA,IAAI,KAAK,MAAM,CAAC,IACpE/B,GAAG,KAAK,CAAC,KAAK+B,IAAI,KAAK,OAAO,IAAIA,IAAI,KAAK,OAAO,IAAIA,IAAI,KAAK,OAAO,CAAE;AAClF;AAEA,SAAS4C,oBAAoBA,CAAC5C,IAAI,EAAE;EAClC,OAAOA,IAAI,KAAK,MAAM,IACfA,IAAI,KAAK,MAAM,IACfA,IAAI,KAAK,MAAM;AACxB;AAEA,SAAS6C,SAASA,CAACT,MAAM,EAAE;EACzB,OAAOzH,MAAM,CAACmC,SAAS,CAACE,QAAQ,CAACN,IAAI,CAAC0F,MAAM,CAAC,KAAK,kBAAkB;AACtE;AAEA,IAAIU,IAAI,GAAG,IAAItC,IAAI,CAAC,wBAAwB,EAAE;EAC5CX,IAAI,EAAE,QAAQ;EACdC,OAAO,EAAE6C,kBAAkB;EAC3B5C,SAAS,EAAE6C,oBAAoB;EAC/B1C,SAAS,EAAE2C,SAAS;EACpB1C,SAAS,EAAE;IACToC,SAAS,EAAE,SAAAA,CAAUH,MAAM,EAAE;MAAE,OAAOA,MAAM,GAAG,MAAM,GAAG,OAAO;IAAE,CAAC;IAClEI,SAAS,EAAE,SAAAA,CAAUJ,MAAM,EAAE;MAAE,OAAOA,MAAM,GAAG,MAAM,GAAG,OAAO;IAAE,CAAC;IAClEK,SAAS,EAAE,SAAAA,CAAUL,MAAM,EAAE;MAAE,OAAOA,MAAM,GAAG,MAAM,GAAG,OAAO;IAAE;EACnE,CAAC;EACD/B,YAAY,EAAE;AAChB,CAAC,CAAC;AAEF,SAAS0C,SAASA,CAACC,CAAC,EAAE;EACpB,OAAS,IAAI,YAAWA,CAAC,IAAMA,CAAC,IAAI,IAAI,QAAQ,IACvC,IAAI,YAAWA,CAAC,IAAMA,CAAC,IAAI,IAAI,QAAS,IACxC,IAAI,YAAWA,CAAC,IAAMA,CAAC,IAAI,IAAI,QAAS;AACnD;AAEA,SAASC,SAASA,CAACD,CAAC,EAAE;EACpB,OAAS,IAAI,YAAWA,CAAC,IAAMA,CAAC,IAAI,IAAI,QAAQ;AAClD;AAEA,SAASE,SAASA,CAACF,CAAC,EAAE;EACpB,OAAS,IAAI,YAAWA,CAAC,IAAMA,CAAC,IAAI,IAAI,QAAQ;AAClD;AAEA,SAASG,kBAAkBA,CAACnD,IAAI,EAAE;EAChC,IAAIA,IAAI,KAAK,IAAI,EAAE,OAAO,KAAK;EAE/B,IAAI/B,GAAG,GAAG+B,IAAI,CAACxF,MAAM;IACjBD,KAAK,GAAG,CAAC;IACT6I,SAAS,GAAG,KAAK;IACjBC,EAAE;EAEN,IAAI,CAACpF,GAAG,EAAE,OAAO,KAAK;EAEtBoF,EAAE,GAAGrD,IAAI,CAACzF,KAAK,CAAC;;EAEhB;EACA,IAAI8I,EAAE,KAAK,GAAG,IAAIA,EAAE,KAAK,GAAG,EAAE;IAC5BA,EAAE,GAAGrD,IAAI,CAAC,EAAEzF,KAAK,CAAC;EACpB;EAEA,IAAI8I,EAAE,KAAK,GAAG,EAAE;IACd;IACA,IAAI9I,KAAK,GAAG,CAAC,KAAK0D,GAAG,EAAE,OAAO,IAAI;IAClCoF,EAAE,GAAGrD,IAAI,CAAC,EAAEzF,KAAK,CAAC;;IAElB;;IAEA,IAAI8I,EAAE,KAAK,GAAG,EAAE;MACd;MACA9I,KAAK,EAAE;MAEP,OAAOA,KAAK,GAAG0D,GAAG,EAAE1D,KAAK,EAAE,EAAE;QAC3B8I,EAAE,GAAGrD,IAAI,CAACzF,KAAK,CAAC;QAChB,IAAI8I,EAAE,KAAK,GAAG,EAAE;QAChB,IAAIA,EAAE,KAAK,GAAG,IAAIA,EAAE,KAAK,GAAG,EAAE,OAAO,KAAK;QAC1CD,SAAS,GAAG,IAAI;MAClB;MACA,OAAOA,SAAS,IAAIC,EAAE,KAAK,GAAG;IAChC;IAGA,IAAIA,EAAE,KAAK,GAAG,EAAE;MACd;MACA9I,KAAK,EAAE;MAEP,OAAOA,KAAK,GAAG0D,GAAG,EAAE1D,KAAK,EAAE,EAAE;QAC3B8I,EAAE,GAAGrD,IAAI,CAACzF,KAAK,CAAC;QAChB,IAAI8I,EAAE,KAAK,GAAG,EAAE;QAChB,IAAI,CAACN,SAAS,CAAC/C,IAAI,CAACsD,UAAU,CAAC/I,KAAK,CAAC,CAAC,EAAE,OAAO,KAAK;QACpD6I,SAAS,GAAG,IAAI;MAClB;MACA,OAAOA,SAAS,IAAIC,EAAE,KAAK,GAAG;IAChC;IAGA,IAAIA,EAAE,KAAK,GAAG,EAAE;MACd;MACA9I,KAAK,EAAE;MAEP,OAAOA,KAAK,GAAG0D,GAAG,EAAE1D,KAAK,EAAE,EAAE;QAC3B8I,EAAE,GAAGrD,IAAI,CAACzF,KAAK,CAAC;QAChB,IAAI8I,EAAE,KAAK,GAAG,EAAE;QAChB,IAAI,CAACJ,SAAS,CAACjD,IAAI,CAACsD,UAAU,CAAC/I,KAAK,CAAC,CAAC,EAAE,OAAO,KAAK;QACpD6I,SAAS,GAAG,IAAI;MAClB;MACA,OAAOA,SAAS,IAAIC,EAAE,KAAK,GAAG;IAChC;EACF;;EAEA;;EAEA;EACA,IAAIA,EAAE,KAAK,GAAG,EAAE,OAAO,KAAK;EAE5B,OAAO9I,KAAK,GAAG0D,GAAG,EAAE1D,KAAK,EAAE,EAAE;IAC3B8I,EAAE,GAAGrD,IAAI,CAACzF,KAAK,CAAC;IAChB,IAAI8I,EAAE,KAAK,GAAG,EAAE;IAChB,IAAI,CAACH,SAAS,CAAClD,IAAI,CAACsD,UAAU,CAAC/I,KAAK,CAAC,CAAC,EAAE;MACtC,OAAO,KAAK;IACd;IACA6I,SAAS,GAAG,IAAI;EAClB;;EAEA;EACA,IAAI,CAACA,SAAS,IAAIC,EAAE,KAAK,GAAG,EAAE,OAAO,KAAK;EAE1C,OAAO,IAAI;AACb;AAEA,SAASE,oBAAoBA,CAACvD,IAAI,EAAE;EAClC,IAAIwD,KAAK,GAAGxD,IAAI;IAAEyD,IAAI,GAAG,CAAC;IAAEJ,EAAE;EAE9B,IAAIG,KAAK,CAAC5D,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE;IAC7B4D,KAAK,GAAGA,KAAK,CAAC1F,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC;EACjC;EAEAuF,EAAE,GAAGG,KAAK,CAAC,CAAC,CAAC;EAEb,IAAIH,EAAE,KAAK,GAAG,IAAIA,EAAE,KAAK,GAAG,EAAE;IAC5B,IAAIA,EAAE,KAAK,GAAG,EAAEI,IAAI,GAAG,CAAC,CAAC;IACzBD,KAAK,GAAGA,KAAK,CAAC3F,KAAK,CAAC,CAAC,CAAC;IACtBwF,EAAE,GAAGG,KAAK,CAAC,CAAC,CAAC;EACf;EAEA,IAAIA,KAAK,KAAK,GAAG,EAAE,OAAO,CAAC;EAE3B,IAAIH,EAAE,KAAK,GAAG,EAAE;IACd,IAAIG,KAAK,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE,OAAOC,IAAI,GAAGC,QAAQ,CAACF,KAAK,CAAC3F,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;IAC/D,IAAI2F,KAAK,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE,OAAOC,IAAI,GAAGC,QAAQ,CAACF,KAAK,CAAC3F,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC;IAChE,IAAI2F,KAAK,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE,OAAOC,IAAI,GAAGC,QAAQ,CAACF,KAAK,CAAC3F,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;EACjE;EAEA,OAAO4F,IAAI,GAAGC,QAAQ,CAACF,KAAK,EAAE,EAAE,CAAC;AACnC;AAEA,SAASG,SAASA,CAACvB,MAAM,EAAE;EACzB,OAAQzH,MAAM,CAACmC,SAAS,CAACE,QAAQ,CAACN,IAAI,CAAC0F,MAAM,CAAC,KAAM,iBAAiB,IAC7DA,MAAM,GAAG,CAAC,KAAK,CAAC,IAAI,CAACxG,MAAM,CAACV,cAAc,CAACkH,MAAM,CAAE;AAC7D;AAEA,IAAIwB,GAAG,GAAG,IAAIpD,IAAI,CAAC,uBAAuB,EAAE;EAC1CX,IAAI,EAAE,QAAQ;EACdC,OAAO,EAAEqD,kBAAkB;EAC3BpD,SAAS,EAAEwD,oBAAoB;EAC/BrD,SAAS,EAAEyD,SAAS;EACpBxD,SAAS,EAAE;IACT0D,MAAM,EAAO,SAAAA,CAAUC,GAAG,EAAE;MAAE,OAAOA,GAAG,IAAI,CAAC,GAAG,IAAI,GAAGA,GAAG,CAAC9G,QAAQ,CAAC,CAAC,CAAC,GAAG,KAAK,GAAG8G,GAAG,CAAC9G,QAAQ,CAAC,CAAC,CAAC,CAACa,KAAK,CAAC,CAAC,CAAC;IAAE,CAAC;IAC5GkG,KAAK,EAAQ,SAAAA,CAAUD,GAAG,EAAE;MAAE,OAAOA,GAAG,IAAI,CAAC,GAAG,IAAI,GAAIA,GAAG,CAAC9G,QAAQ,CAAC,CAAC,CAAC,GAAG,KAAK,GAAI8G,GAAG,CAAC9G,QAAQ,CAAC,CAAC,CAAC,CAACa,KAAK,CAAC,CAAC,CAAC;IAAE,CAAC;IAC9GmG,OAAO,EAAM,SAAAA,CAAUF,GAAG,EAAE;MAAE,OAAOA,GAAG,CAAC9G,QAAQ,CAAC,EAAE,CAAC;IAAE,CAAC;IACxD;IACAiH,WAAW,EAAE,SAAAA,CAAUH,GAAG,EAAE;MAAE,OAAOA,GAAG,IAAI,CAAC,GAAG,IAAI,GAAGA,GAAG,CAAC9G,QAAQ,CAAC,EAAE,CAAC,CAACkH,WAAW,CAAC,CAAC,GAAI,KAAK,GAAGJ,GAAG,CAAC9G,QAAQ,CAAC,EAAE,CAAC,CAACkH,WAAW,CAAC,CAAC,CAACrG,KAAK,CAAC,CAAC,CAAC;IAAE;EAC5I,CAAC;EACDwC,YAAY,EAAE,SAAS;EACvBE,YAAY,EAAE;IACZsD,MAAM,EAAO,CAAE,CAAC,EAAG,KAAK,CAAE;IAC1BE,KAAK,EAAQ,CAAE,CAAC,EAAG,KAAK,CAAE;IAC1BC,OAAO,EAAM,CAAE,EAAE,EAAE,KAAK,CAAE;IAC1BC,WAAW,EAAE,CAAE,EAAE,EAAE,KAAK;EAC1B;AACF,CAAC,CAAC;AAEF,IAAIE,kBAAkB,GAAG,IAAIC,MAAM;AACjC;AACA,8DAA8D;AAC9D;AACA;AACA,iCAAiC;AACjC;AACA,0BAA0B;AAC1B;AACA,uBAAuB,CAAC;AAE1B,SAASC,gBAAgBA,CAACrE,IAAI,EAAE;EAC9B,IAAIA,IAAI,KAAK,IAAI,EAAE,OAAO,KAAK;EAE/B,IAAI,CAACmE,kBAAkB,CAACG,IAAI,CAACtE,IAAI,CAAC;EAC9B;EACA;EACAA,IAAI,CAACA,IAAI,CAACxF,MAAM,GAAG,CAAC,CAAC,KAAK,GAAG,EAAE;IACjC,OAAO,KAAK;EACd;EAEA,OAAO,IAAI;AACb;AAEA,SAAS+J,kBAAkBA,CAACvE,IAAI,EAAE;EAChC,IAAIwD,KAAK,EAAEC,IAAI;EAEfD,KAAK,GAAIxD,IAAI,CAAClC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC0G,WAAW,CAAC,CAAC;EAC7Cf,IAAI,GAAKD,KAAK,CAAC,CAAC,CAAC,KAAK,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC;EAElC,IAAI,IAAI,CAAC5D,OAAO,CAAC4D,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE;IAC/BA,KAAK,GAAGA,KAAK,CAAC3F,KAAK,CAAC,CAAC,CAAC;EACxB;EAEA,IAAI2F,KAAK,KAAK,MAAM,EAAE;IACpB,OAAQC,IAAI,KAAK,CAAC,GAAIrI,MAAM,CAACqJ,iBAAiB,GAAGrJ,MAAM,CAACC,iBAAiB;EAE3E,CAAC,MAAM,IAAImI,KAAK,KAAK,MAAM,EAAE;IAC3B,OAAOkB,GAAG;EACZ;EACA,OAAOjB,IAAI,GAAGkB,UAAU,CAACnB,KAAK,EAAE,EAAE,CAAC;AACrC;AAGA,IAAIoB,sBAAsB,GAAG,eAAe;AAE5C,SAASC,kBAAkBA,CAACzC,MAAM,EAAE7C,KAAK,EAAE;EACzC,IAAIuF,GAAG;EAEP,IAAIC,KAAK,CAAC3C,MAAM,CAAC,EAAE;IACjB,QAAQ7C,KAAK;MACX,KAAK,WAAW;QAAE,OAAO,MAAM;MAC/B,KAAK,WAAW;QAAE,OAAO,MAAM;MAC/B,KAAK,WAAW;QAAE,OAAO,MAAM;IACjC;EACF,CAAC,MAAM,IAAInE,MAAM,CAACqJ,iBAAiB,KAAKrC,MAAM,EAAE;IAC9C,QAAQ7C,KAAK;MACX,KAAK,WAAW;QAAE,OAAO,MAAM;MAC/B,KAAK,WAAW;QAAE,OAAO,MAAM;MAC/B,KAAK,WAAW;QAAE,OAAO,MAAM;IACjC;EACF,CAAC,MAAM,IAAInE,MAAM,CAACC,iBAAiB,KAAK+G,MAAM,EAAE;IAC9C,QAAQ7C,KAAK;MACX,KAAK,WAAW;QAAE,OAAO,OAAO;MAChC,KAAK,WAAW;QAAE,OAAO,OAAO;MAChC,KAAK,WAAW;QAAE,OAAO,OAAO;IAClC;EACF,CAAC,MAAM,IAAI3D,MAAM,CAACV,cAAc,CAACkH,MAAM,CAAC,EAAE;IACxC,OAAO,MAAM;EACf;EAEA0C,GAAG,GAAG1C,MAAM,CAACpF,QAAQ,CAAC,EAAE,CAAC;;EAEzB;EACA;;EAEA,OAAO4H,sBAAsB,CAACN,IAAI,CAACQ,GAAG,CAAC,GAAGA,GAAG,CAAChH,OAAO,CAAC,GAAG,EAAE,IAAI,CAAC,GAAGgH,GAAG;AACxE;AAEA,SAASE,OAAOA,CAAC5C,MAAM,EAAE;EACvB,OAAQzH,MAAM,CAACmC,SAAS,CAACE,QAAQ,CAACN,IAAI,CAAC0F,MAAM,CAAC,KAAK,iBAAiB,KAC5DA,MAAM,GAAG,CAAC,KAAK,CAAC,IAAIxG,MAAM,CAACV,cAAc,CAACkH,MAAM,CAAC,CAAC;AAC5D;AAEA,IAAI6C,KAAK,GAAG,IAAIzE,IAAI,CAAC,yBAAyB,EAAE;EAC9CX,IAAI,EAAE,QAAQ;EACdC,OAAO,EAAEuE,gBAAgB;EACzBtE,SAAS,EAAEwE,kBAAkB;EAC7BrE,SAAS,EAAE8E,OAAO;EAClB7E,SAAS,EAAE0E,kBAAkB;EAC7BxE,YAAY,EAAE;AAChB,CAAC,CAAC;AAEF,IAAI6E,IAAI,GAAGlD,QAAQ,CAAC5H,MAAM,CAAC;EACzBmH,QAAQ,EAAE,CACRc,KAAK,EACLS,IAAI,EACJc,GAAG,EACHqB,KAAK;AAET,CAAC,CAAC;AAEF,IAAIE,IAAI,GAAGD,IAAI;AAEf,IAAIE,gBAAgB,GAAG,IAAIhB,MAAM,CAC/B,yBAAyB;AAAY;AACrC,eAAe;AAAsB;AACrC,gBAAgB,CAAC,CAAC,CAAmB;;AAEvC,IAAIiB,qBAAqB,GAAG,IAAIjB,MAAM,CACpC,yBAAyB;AAAY;AACrC,gBAAgB;AAAqB;AACrC,gBAAgB;AAAqB;AACrC,kBAAkB;AAAmB;AACrC,eAAe;AAAsB;AACrC,eAAe;AAAsB;AACrC,eAAe;AAAsB;AACrC,kBAAkB;AAAmB;AACrC,kCAAkC;AAAG;AACrC,wBAAwB,CAAC,CAAC,CAAW;;AAEvC,SAASkB,oBAAoBA,CAACtF,IAAI,EAAE;EAClC,IAAIA,IAAI,KAAK,IAAI,EAAE,OAAO,KAAK;EAC/B,IAAIoF,gBAAgB,CAACvG,IAAI,CAACmB,IAAI,CAAC,KAAK,IAAI,EAAE,OAAO,IAAI;EACrD,IAAIqF,qBAAqB,CAACxG,IAAI,CAACmB,IAAI,CAAC,KAAK,IAAI,EAAE,OAAO,IAAI;EAC1D,OAAO,KAAK;AACd;AAEA,SAASuF,sBAAsBA,CAACvF,IAAI,EAAE;EACpC,IAAIrB,KAAK;IAAE6G,IAAI;IAAEC,KAAK;IAAEC,GAAG;IAAEC,IAAI;IAAEC,MAAM;IAAEC,MAAM;IAAEC,QAAQ,GAAG,CAAC;IAC3DC,KAAK,GAAG,IAAI;IAAEC,OAAO;IAAEC,SAAS;IAAEC,IAAI;EAE1CvH,KAAK,GAAGyG,gBAAgB,CAACvG,IAAI,CAACmB,IAAI,CAAC;EACnC,IAAIrB,KAAK,KAAK,IAAI,EAAEA,KAAK,GAAG0G,qBAAqB,CAACxG,IAAI,CAACmB,IAAI,CAAC;EAE5D,IAAIrB,KAAK,KAAK,IAAI,EAAE,MAAM,IAAIlC,KAAK,CAAC,oBAAoB,CAAC;;EAEzD;;EAEA+I,IAAI,GAAG,CAAE7G,KAAK,CAAC,CAAC,CAAE;EAClB8G,KAAK,GAAG,CAAE9G,KAAK,CAAC,CAAC,CAAE,GAAG,CAAC,CAAC,CAAC;EACzB+G,GAAG,GAAG,CAAE/G,KAAK,CAAC,CAAC,CAAE;EAEjB,IAAI,CAACA,KAAK,CAAC,CAAC,CAAC,EAAE;IAAE;IACf,OAAO,IAAIwH,IAAI,CAACA,IAAI,CAACC,GAAG,CAACZ,IAAI,EAAEC,KAAK,EAAEC,GAAG,CAAC,CAAC;EAC7C;;EAEA;;EAEAC,IAAI,GAAG,CAAEhH,KAAK,CAAC,CAAC,CAAE;EAClBiH,MAAM,GAAG,CAAEjH,KAAK,CAAC,CAAC,CAAE;EACpBkH,MAAM,GAAG,CAAElH,KAAK,CAAC,CAAC,CAAE;EAEpB,IAAIA,KAAK,CAAC,CAAC,CAAC,EAAE;IACZmH,QAAQ,GAAGnH,KAAK,CAAC,CAAC,CAAC,CAACd,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;IAC/B,OAAOiI,QAAQ,CAACtL,MAAM,GAAG,CAAC,EAAE;MAAE;MAC5BsL,QAAQ,IAAI,GAAG;IACjB;IACAA,QAAQ,GAAG,CAACA,QAAQ;EACtB;;EAEA;;EAEA,IAAInH,KAAK,CAAC,CAAC,CAAC,EAAE;IACZqH,OAAO,GAAG,CAAErH,KAAK,CAAC,EAAE,CAAE;IACtBsH,SAAS,GAAG,EAAEtH,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;IAC7BoH,KAAK,GAAG,CAACC,OAAO,GAAG,EAAE,GAAGC,SAAS,IAAI,KAAK,CAAC,CAAC;IAC5C,IAAItH,KAAK,CAAC,CAAC,CAAC,KAAK,GAAG,EAAEoH,KAAK,GAAG,CAACA,KAAK;EACtC;EAEAG,IAAI,GAAG,IAAIC,IAAI,CAACA,IAAI,CAACC,GAAG,CAACZ,IAAI,EAAEC,KAAK,EAAEC,GAAG,EAAEC,IAAI,EAAEC,MAAM,EAAEC,MAAM,EAAEC,QAAQ,CAAC,CAAC;EAE3E,IAAIC,KAAK,EAAEG,IAAI,CAACG,OAAO,CAACH,IAAI,CAACI,OAAO,CAAC,CAAC,GAAGP,KAAK,CAAC;EAE/C,OAAOG,IAAI;AACb;AAEA,SAASK,sBAAsBA,CAACnE,MAAM,CAAC,aAAa;EAClD,OAAOA,MAAM,CAACoE,WAAW,CAAC,CAAC;AAC7B;AAEA,IAAIC,SAAS,GAAG,IAAIjG,IAAI,CAAC,6BAA6B,EAAE;EACtDX,IAAI,EAAE,QAAQ;EACdC,OAAO,EAAEwF,oBAAoB;EAC7BvF,SAAS,EAAEwF,sBAAsB;EACjCtF,UAAU,EAAEkG,IAAI;EAChBhG,SAAS,EAAEoG;AACb,CAAC,CAAC;AAEF,SAASG,gBAAgBA,CAAC1G,IAAI,EAAE;EAC9B,OAAOA,IAAI,KAAK,IAAI,IAAIA,IAAI,KAAK,IAAI;AACvC;AAEA,IAAI2G,KAAK,GAAG,IAAInG,IAAI,CAAC,yBAAyB,EAAE;EAC9CX,IAAI,EAAE,QAAQ;EACdC,OAAO,EAAE4G;AACX,CAAC,CAAC;;AAEF;;AAMA;AACA,IAAIE,UAAU,GAAG,uEAAuE;AAGxF,SAASC,iBAAiBA,CAAC7G,IAAI,EAAE;EAC/B,IAAIA,IAAI,KAAK,IAAI,EAAE,OAAO,KAAK;EAE/B,IAAI8G,IAAI;IAAEC,GAAG;IAAEC,MAAM,GAAG,CAAC;IAAE/I,GAAG,GAAG+B,IAAI,CAACxF,MAAM;IAAE6E,GAAG,GAAGuH,UAAU;;EAE9D;EACA,KAAKG,GAAG,GAAG,CAAC,EAAEA,GAAG,GAAG9I,GAAG,EAAE8I,GAAG,EAAE,EAAE;IAC9BD,IAAI,GAAGzH,GAAG,CAACO,OAAO,CAACI,IAAI,CAACiH,MAAM,CAACF,GAAG,CAAC,CAAC;;IAEpC;IACA,IAAID,IAAI,GAAG,EAAE,EAAE;;IAEf;IACA,IAAIA,IAAI,GAAG,CAAC,EAAE,OAAO,KAAK;IAE1BE,MAAM,IAAI,CAAC;EACb;;EAEA;EACA,OAAQA,MAAM,GAAG,CAAC,KAAM,CAAC;AAC3B;AAEA,SAASE,mBAAmBA,CAAClH,IAAI,EAAE;EACjC,IAAI+G,GAAG;IAAEI,QAAQ;IACbC,KAAK,GAAGpH,IAAI,CAAClC,OAAO,CAAC,UAAU,EAAE,EAAE,CAAC;IAAE;IACtCG,GAAG,GAAGmJ,KAAK,CAAC5M,MAAM;IAClB6E,GAAG,GAAGuH,UAAU;IAChBS,IAAI,GAAG,CAAC;IACRrM,MAAM,GAAG,EAAE;;EAEf;;EAEA,KAAK+L,GAAG,GAAG,CAAC,EAAEA,GAAG,GAAG9I,GAAG,EAAE8I,GAAG,EAAE,EAAE;IAC9B,IAAKA,GAAG,GAAG,CAAC,KAAK,CAAC,IAAKA,GAAG,EAAE;MAC1B/L,MAAM,CAAC8D,IAAI,CAAEuI,IAAI,IAAI,EAAE,GAAI,IAAI,CAAC;MAChCrM,MAAM,CAAC8D,IAAI,CAAEuI,IAAI,IAAI,CAAC,GAAI,IAAI,CAAC;MAC/BrM,MAAM,CAAC8D,IAAI,CAACuI,IAAI,GAAG,IAAI,CAAC;IAC1B;IAEAA,IAAI,GAAIA,IAAI,IAAI,CAAC,GAAIhI,GAAG,CAACO,OAAO,CAACwH,KAAK,CAACH,MAAM,CAACF,GAAG,CAAC,CAAC;EACrD;;EAEA;;EAEAI,QAAQ,GAAIlJ,GAAG,GAAG,CAAC,GAAI,CAAC;EAExB,IAAIkJ,QAAQ,KAAK,CAAC,EAAE;IAClBnM,MAAM,CAAC8D,IAAI,CAAEuI,IAAI,IAAI,EAAE,GAAI,IAAI,CAAC;IAChCrM,MAAM,CAAC8D,IAAI,CAAEuI,IAAI,IAAI,CAAC,GAAI,IAAI,CAAC;IAC/BrM,MAAM,CAAC8D,IAAI,CAACuI,IAAI,GAAG,IAAI,CAAC;EAC1B,CAAC,MAAM,IAAIF,QAAQ,KAAK,EAAE,EAAE;IAC1BnM,MAAM,CAAC8D,IAAI,CAAEuI,IAAI,IAAI,EAAE,GAAI,IAAI,CAAC;IAChCrM,MAAM,CAAC8D,IAAI,CAAEuI,IAAI,IAAI,CAAC,GAAI,IAAI,CAAC;EACjC,CAAC,MAAM,IAAIF,QAAQ,KAAK,EAAE,EAAE;IAC1BnM,MAAM,CAAC8D,IAAI,CAAEuI,IAAI,IAAI,CAAC,GAAI,IAAI,CAAC;EACjC;EAEA,OAAO,IAAIC,UAAU,CAACtM,MAAM,CAAC;AAC/B;AAEA,SAASuM,mBAAmBA,CAACnF,MAAM,CAAC,aAAa;EAC/C,IAAIpH,MAAM,GAAG,EAAE;IAAEqM,IAAI,GAAG,CAAC;IAAEN,GAAG;IAAEvJ,IAAI;IAChCS,GAAG,GAAGmE,MAAM,CAAC5H,MAAM;IACnB6E,GAAG,GAAGuH,UAAU;;EAEpB;;EAEA,KAAKG,GAAG,GAAG,CAAC,EAAEA,GAAG,GAAG9I,GAAG,EAAE8I,GAAG,EAAE,EAAE;IAC9B,IAAKA,GAAG,GAAG,CAAC,KAAK,CAAC,IAAKA,GAAG,EAAE;MAC1B/L,MAAM,IAAIqE,GAAG,CAAEgI,IAAI,IAAI,EAAE,GAAI,IAAI,CAAC;MAClCrM,MAAM,IAAIqE,GAAG,CAAEgI,IAAI,IAAI,EAAE,GAAI,IAAI,CAAC;MAClCrM,MAAM,IAAIqE,GAAG,CAAEgI,IAAI,IAAI,CAAC,GAAI,IAAI,CAAC;MACjCrM,MAAM,IAAIqE,GAAG,CAACgI,IAAI,GAAG,IAAI,CAAC;IAC5B;IAEAA,IAAI,GAAG,CAACA,IAAI,IAAI,CAAC,IAAIjF,MAAM,CAAC2E,GAAG,CAAC;EAClC;;EAEA;;EAEAvJ,IAAI,GAAGS,GAAG,GAAG,CAAC;EAEd,IAAIT,IAAI,KAAK,CAAC,EAAE;IACdxC,MAAM,IAAIqE,GAAG,CAAEgI,IAAI,IAAI,EAAE,GAAI,IAAI,CAAC;IAClCrM,MAAM,IAAIqE,GAAG,CAAEgI,IAAI,IAAI,EAAE,GAAI,IAAI,CAAC;IAClCrM,MAAM,IAAIqE,GAAG,CAAEgI,IAAI,IAAI,CAAC,GAAI,IAAI,CAAC;IACjCrM,MAAM,IAAIqE,GAAG,CAACgI,IAAI,GAAG,IAAI,CAAC;EAC5B,CAAC,MAAM,IAAI7J,IAAI,KAAK,CAAC,EAAE;IACrBxC,MAAM,IAAIqE,GAAG,CAAEgI,IAAI,IAAI,EAAE,GAAI,IAAI,CAAC;IAClCrM,MAAM,IAAIqE,GAAG,CAAEgI,IAAI,IAAI,CAAC,GAAI,IAAI,CAAC;IACjCrM,MAAM,IAAIqE,GAAG,CAAEgI,IAAI,IAAI,CAAC,GAAI,IAAI,CAAC;IACjCrM,MAAM,IAAIqE,GAAG,CAAC,EAAE,CAAC;EACnB,CAAC,MAAM,IAAI7B,IAAI,KAAK,CAAC,EAAE;IACrBxC,MAAM,IAAIqE,GAAG,CAAEgI,IAAI,IAAI,CAAC,GAAI,IAAI,CAAC;IACjCrM,MAAM,IAAIqE,GAAG,CAAEgI,IAAI,IAAI,CAAC,GAAI,IAAI,CAAC;IACjCrM,MAAM,IAAIqE,GAAG,CAAC,EAAE,CAAC;IACjBrE,MAAM,IAAIqE,GAAG,CAAC,EAAE,CAAC;EACnB;EAEA,OAAOrE,MAAM;AACf;AAEA,SAASwM,QAAQA,CAAC1D,GAAG,EAAE;EACrB,OAAOnJ,MAAM,CAACmC,SAAS,CAACE,QAAQ,CAACN,IAAI,CAACoH,GAAG,CAAC,KAAM,qBAAqB;AACvE;AAEA,IAAID,MAAM,GAAG,IAAIrD,IAAI,CAAC,0BAA0B,EAAE;EAChDX,IAAI,EAAE,QAAQ;EACdC,OAAO,EAAE+G,iBAAiB;EAC1B9G,SAAS,EAAEmH,mBAAmB;EAC9BhH,SAAS,EAAEsH,QAAQ;EACnBrH,SAAS,EAAEoH;AACb,CAAC,CAAC;AAEF,IAAIE,iBAAiB,GAAG9M,MAAM,CAACmC,SAAS,CAAC4K,cAAc;AACvD,IAAIC,WAAW,GAAShN,MAAM,CAACmC,SAAS,CAACE,QAAQ;AAEjD,SAAS4K,eAAeA,CAAC5H,IAAI,EAAE;EAC7B,IAAIA,IAAI,KAAK,IAAI,EAAE,OAAO,IAAI;EAE9B,IAAI6H,UAAU,GAAG,EAAE;IAAEtN,KAAK;IAAEC,MAAM;IAAEsN,IAAI;IAAEC,OAAO;IAAEC,UAAU;IACzD5F,MAAM,GAAGpC,IAAI;EAEjB,KAAKzF,KAAK,GAAG,CAAC,EAAEC,MAAM,GAAG4H,MAAM,CAAC5H,MAAM,EAAED,KAAK,GAAGC,MAAM,EAAED,KAAK,IAAI,CAAC,EAAE;IAClEuN,IAAI,GAAG1F,MAAM,CAAC7H,KAAK,CAAC;IACpByN,UAAU,GAAG,KAAK;IAElB,IAAIL,WAAW,CAACjL,IAAI,CAACoL,IAAI,CAAC,KAAK,iBAAiB,EAAE,OAAO,KAAK;IAE9D,KAAKC,OAAO,IAAID,IAAI,EAAE;MACpB,IAAIL,iBAAiB,CAAC/K,IAAI,CAACoL,IAAI,EAAEC,OAAO,CAAC,EAAE;QACzC,IAAI,CAACC,UAAU,EAAEA,UAAU,GAAG,IAAI,CAAC,KAC9B,OAAO,KAAK;MACnB;IACF;IAEA,IAAI,CAACA,UAAU,EAAE,OAAO,KAAK;IAE7B,IAAIH,UAAU,CAACjI,OAAO,CAACmI,OAAO,CAAC,KAAK,CAAC,CAAC,EAAEF,UAAU,CAAC/I,IAAI,CAACiJ,OAAO,CAAC,CAAC,KAC5D,OAAO,KAAK;EACnB;EAEA,OAAO,IAAI;AACb;AAEA,SAASE,iBAAiBA,CAACjI,IAAI,EAAE;EAC/B,OAAOA,IAAI,KAAK,IAAI,GAAGA,IAAI,GAAG,EAAE;AAClC;AAEA,IAAIkI,IAAI,GAAG,IAAI1H,IAAI,CAAC,wBAAwB,EAAE;EAC5CX,IAAI,EAAE,UAAU;EAChBC,OAAO,EAAE8H,eAAe;EACxB7H,SAAS,EAAEkI;AACb,CAAC,CAAC;AAEF,IAAIE,WAAW,GAAGxN,MAAM,CAACmC,SAAS,CAACE,QAAQ;AAE3C,SAASoL,gBAAgBA,CAACpI,IAAI,EAAE;EAC9B,IAAIA,IAAI,KAAK,IAAI,EAAE,OAAO,IAAI;EAE9B,IAAIzF,KAAK;IAAEC,MAAM;IAAEsN,IAAI;IAAElN,IAAI;IAAEI,MAAM;IACjCoH,MAAM,GAAGpC,IAAI;EAEjBhF,MAAM,GAAG,IAAId,KAAK,CAACkI,MAAM,CAAC5H,MAAM,CAAC;EAEjC,KAAKD,KAAK,GAAG,CAAC,EAAEC,MAAM,GAAG4H,MAAM,CAAC5H,MAAM,EAAED,KAAK,GAAGC,MAAM,EAAED,KAAK,IAAI,CAAC,EAAE;IAClEuN,IAAI,GAAG1F,MAAM,CAAC7H,KAAK,CAAC;IAEpB,IAAI4N,WAAW,CAACzL,IAAI,CAACoL,IAAI,CAAC,KAAK,iBAAiB,EAAE,OAAO,KAAK;IAE9DlN,IAAI,GAAGD,MAAM,CAACC,IAAI,CAACkN,IAAI,CAAC;IAExB,IAAIlN,IAAI,CAACJ,MAAM,KAAK,CAAC,EAAE,OAAO,KAAK;IAEnCQ,MAAM,CAACT,KAAK,CAAC,GAAG,CAAEK,IAAI,CAAC,CAAC,CAAC,EAAEkN,IAAI,CAAClN,IAAI,CAAC,CAAC,CAAC,CAAC,CAAE;EAC5C;EAEA,OAAO,IAAI;AACb;AAEA,SAASyN,kBAAkBA,CAACrI,IAAI,EAAE;EAChC,IAAIA,IAAI,KAAK,IAAI,EAAE,OAAO,EAAE;EAE5B,IAAIzF,KAAK;IAAEC,MAAM;IAAEsN,IAAI;IAAElN,IAAI;IAAEI,MAAM;IACjCoH,MAAM,GAAGpC,IAAI;EAEjBhF,MAAM,GAAG,IAAId,KAAK,CAACkI,MAAM,CAAC5H,MAAM,CAAC;EAEjC,KAAKD,KAAK,GAAG,CAAC,EAAEC,MAAM,GAAG4H,MAAM,CAAC5H,MAAM,EAAED,KAAK,GAAGC,MAAM,EAAED,KAAK,IAAI,CAAC,EAAE;IAClEuN,IAAI,GAAG1F,MAAM,CAAC7H,KAAK,CAAC;IAEpBK,IAAI,GAAGD,MAAM,CAACC,IAAI,CAACkN,IAAI,CAAC;IAExB9M,MAAM,CAACT,KAAK,CAAC,GAAG,CAAEK,IAAI,CAAC,CAAC,CAAC,EAAEkN,IAAI,CAAClN,IAAI,CAAC,CAAC,CAAC,CAAC,CAAE;EAC5C;EAEA,OAAOI,MAAM;AACf;AAEA,IAAIsN,KAAK,GAAG,IAAI9H,IAAI,CAAC,yBAAyB,EAAE;EAC9CX,IAAI,EAAE,UAAU;EAChBC,OAAO,EAAEsI,gBAAgB;EACzBrI,SAAS,EAAEsI;AACb,CAAC,CAAC;AAEF,IAAIE,iBAAiB,GAAG5N,MAAM,CAACmC,SAAS,CAAC4K,cAAc;AAEvD,SAASc,cAAcA,CAACxI,IAAI,EAAE;EAC5B,IAAIA,IAAI,KAAK,IAAI,EAAE,OAAO,IAAI;EAE9B,IAAIvF,GAAG;IAAE2H,MAAM,GAAGpC,IAAI;EAEtB,KAAKvF,GAAG,IAAI2H,MAAM,EAAE;IAClB,IAAImG,iBAAiB,CAAC7L,IAAI,CAAC0F,MAAM,EAAE3H,GAAG,CAAC,EAAE;MACvC,IAAI2H,MAAM,CAAC3H,GAAG,CAAC,KAAK,IAAI,EAAE,OAAO,KAAK;IACxC;EACF;EAEA,OAAO,IAAI;AACb;AAEA,SAASgO,gBAAgBA,CAACzI,IAAI,EAAE;EAC9B,OAAOA,IAAI,KAAK,IAAI,GAAGA,IAAI,GAAG,CAAC,CAAC;AAClC;AAEA,IAAI0I,GAAG,GAAG,IAAIlI,IAAI,CAAC,uBAAuB,EAAE;EAC1CX,IAAI,EAAE,SAAS;EACfC,OAAO,EAAE0I,cAAc;EACvBzI,SAAS,EAAE0I;AACb,CAAC,CAAC;AAEF,IAAIE,QAAQ,GAAGxD,IAAI,CAAC/K,MAAM,CAAC;EACzBmH,QAAQ,EAAE,CACRkF,SAAS,EACTE,KAAK,CACN;EACDnF,QAAQ,EAAE,CACRqC,MAAM,EACNqE,IAAI,EACJI,KAAK,EACLI,GAAG;AAEP,CAAC,CAAC;;AAEF;;AAQA,IAAIE,iBAAiB,GAAGjO,MAAM,CAACmC,SAAS,CAAC4K,cAAc;AAGvD,IAAImB,eAAe,GAAK,CAAC;AACzB,IAAIC,gBAAgB,GAAI,CAAC;AACzB,IAAIC,gBAAgB,GAAI,CAAC;AACzB,IAAIC,iBAAiB,GAAG,CAAC;AAGzB,IAAIC,aAAa,GAAI,CAAC;AACtB,IAAIC,cAAc,GAAG,CAAC;AACtB,IAAIC,aAAa,GAAI,CAAC;AAGtB,IAAIC,qBAAqB,GAAW,qIAAqI;AACzK,IAAIC,6BAA6B,GAAG,oBAAoB;AACxD,IAAIC,uBAAuB,GAAS,aAAa;AACjD,IAAIC,kBAAkB,GAAc,wBAAwB;AAC5D,IAAIC,eAAe,GAAiB,kFAAkF;AAGtH,SAASC,MAAMA,CAAC3F,GAAG,EAAE;EAAE,OAAOnJ,MAAM,CAACmC,SAAS,CAACE,QAAQ,CAACN,IAAI,CAACoH,GAAG,CAAC;AAAE;AAEnE,SAAS4F,MAAMA,CAAC1G,CAAC,EAAE;EACjB,OAAQA,CAAC,KAAK,IAAI,aAAcA,CAAC,KAAK,IAAI,SAAS;AACrD;AAEA,SAAS2G,cAAcA,CAAC3G,CAAC,EAAE;EACzB,OAAQA,CAAC,KAAK,IAAI,cAAeA,CAAC,KAAK,IAAI,YAAY;AACzD;AAEA,SAAS4G,YAAYA,CAAC5G,CAAC,EAAE;EACvB,OAAQA,CAAC,KAAK,IAAI,cACVA,CAAC,KAAK,IAAI,YAAY,IACtBA,CAAC,KAAK,IAAI,SAAS,IACnBA,CAAC,KAAK,IAAI,SAAS;AAC7B;AAEA,SAAS6G,iBAAiBA,CAAC7G,CAAC,EAAE;EAC5B,OAAOA,CAAC,KAAK,IAAI,YACVA,CAAC,KAAK,IAAI,YACVA,CAAC,KAAK,IAAI,YACVA,CAAC,KAAK,IAAI,YACVA,CAAC,KAAK,IAAI;AACnB;AAEA,SAAS8G,WAAWA,CAAC9G,CAAC,EAAE;EACtB,IAAI+G,EAAE;EAEN,IAAK,IAAI,YAAW/G,CAAC,IAAMA,CAAC,IAAI,IAAI,QAAQ,EAAE;IAC5C,OAAOA,CAAC,GAAG,IAAI;EACjB;;EAEA;EACA+G,EAAE,GAAG/G,CAAC,GAAG,IAAI;EAEb,IAAK,IAAI,YAAW+G,EAAE,IAAMA,EAAE,IAAI,IAAI,QAAQ,EAAE;IAC9C,OAAOA,EAAE,GAAG,IAAI,GAAG,EAAE;EACvB;EAEA,OAAO,CAAC,CAAC;AACX;AAEA,SAASC,aAAaA,CAAChH,CAAC,EAAE;EACxB,IAAIA,CAAC,KAAK,IAAI,UAAS;IAAE,OAAO,CAAC;EAAE;EACnC,IAAIA,CAAC,KAAK,IAAI,UAAS;IAAE,OAAO,CAAC;EAAE;EACnC,IAAIA,CAAC,KAAK,IAAI,UAAS;IAAE,OAAO,CAAC;EAAE;EACnC,OAAO,CAAC;AACV;AAEA,SAASiH,eAAeA,CAACjH,CAAC,EAAE;EAC1B,IAAK,IAAI,YAAWA,CAAC,IAAMA,CAAC,IAAI,IAAI,QAAQ,EAAE;IAC5C,OAAOA,CAAC,GAAG,IAAI;EACjB;EAEA,OAAO,CAAC,CAAC;AACX;AAEA,SAASkH,oBAAoBA,CAAClH,CAAC,EAAE;EAC/B;EACA,OAAQA,CAAC,KAAK,IAAI,WAAW,MAAM,GAC5BA,CAAC,KAAK,IAAI,WAAW,MAAM,GAC3BA,CAAC,KAAK,IAAI,WAAW,MAAM,GAC3BA,CAAC,KAAK,IAAI,WAAW,MAAM,GAC3BA,CAAC,KAAK,IAAI,aAAa,MAAM,GAC7BA,CAAC,KAAK,IAAI,WAAW,MAAM,GAC3BA,CAAC,KAAK,IAAI,WAAW,MAAM,GAC3BA,CAAC,KAAK,IAAI,WAAW,MAAM,GAC3BA,CAAC,KAAK,IAAI,WAAW,MAAM,GAC3BA,CAAC,KAAK,IAAI,WAAW,MAAM,GAC3BA,CAAC,KAAK,IAAI,eAAe,GAAG,GAC5BA,CAAC,KAAK,IAAI,WAAW,MAAM,GAC3BA,CAAC,KAAK,IAAI,WAAW,GAAG,GACxBA,CAAC,KAAK,IAAI,WAAW,MAAM,GAC3BA,CAAC,KAAK,IAAI,WAAW,MAAM,GAC3BA,CAAC,KAAK,IAAI,WAAW,MAAM,GAC3BA,CAAC,KAAK,IAAI,WAAW,QAAQ,GAC7BA,CAAC,KAAK,IAAI,WAAW,QAAQ,GAAG,EAAE;AAC3C;AAEA,SAASmH,iBAAiBA,CAACnH,CAAC,EAAE;EAC5B,IAAIA,CAAC,IAAI,MAAM,EAAE;IACf,OAAOvD,MAAM,CAAC2K,YAAY,CAACpH,CAAC,CAAC;EAC/B;EACA;EACA;EACA,OAAOvD,MAAM,CAAC2K,YAAY,CACxB,CAAEpH,CAAC,GAAG,QAAQ,IAAK,EAAE,IAAI,MAAM,EAC/B,CAAEA,CAAC,GAAG,QAAQ,GAAI,MAAM,IAAI,MAC9B,CAAC;AACH;AAEA,IAAIqH,iBAAiB,GAAG,IAAInQ,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;AACxC,IAAIoQ,eAAe,GAAG,IAAIpQ,KAAK,CAAC,GAAG,CAAC;AACpC,KAAK,IAAI6E,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,GAAG,EAAEA,CAAC,EAAE,EAAE;EAC5BsL,iBAAiB,CAACtL,CAAC,CAAC,GAAGmL,oBAAoB,CAACnL,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC;EACtDuL,eAAe,CAACvL,CAAC,CAAC,GAAGmL,oBAAoB,CAACnL,CAAC,CAAC;AAC9C;AAGA,SAASwL,OAAOA,CAACnD,KAAK,EAAEjJ,OAAO,EAAE;EAC/B,IAAI,CAACiJ,KAAK,GAAGA,KAAK;EAElB,IAAI,CAACoD,QAAQ,GAAIrM,OAAO,CAAC,UAAU,CAAC,IAAK,IAAI;EAC7C,IAAI,CAACuC,MAAM,GAAMvC,OAAO,CAAC,QAAQ,CAAC,IAAOwK,QAAQ;EACjD,IAAI,CAAC8B,SAAS,GAAGtM,OAAO,CAAC,WAAW,CAAC,IAAI,IAAI;EAC7C;EACA;EACA,IAAI,CAACuM,MAAM,GAAMvM,OAAO,CAAC,QAAQ,CAAC,IAAO,KAAK;EAE9C,IAAI,CAAC+G,IAAI,GAAQ/G,OAAO,CAAC,MAAM,CAAC,IAAS,KAAK;EAC9C,IAAI,CAACwM,QAAQ,GAAIxM,OAAO,CAAC,UAAU,CAAC,IAAK,IAAI;EAE7C,IAAI,CAACyM,aAAa,GAAG,IAAI,CAAClK,MAAM,CAACkB,gBAAgB;EACjD,IAAI,CAACiJ,OAAO,GAAS,IAAI,CAACnK,MAAM,CAACoB,eAAe;EAEhD,IAAI,CAACtH,MAAM,GAAO4M,KAAK,CAAC5M,MAAM;EAC9B,IAAI,CAAC6C,QAAQ,GAAK,CAAC;EACnB,IAAI,CAAChB,IAAI,GAAS,CAAC;EACnB,IAAI,CAACc,SAAS,GAAI,CAAC;EACnB,IAAI,CAAC2N,UAAU,GAAG,CAAC;;EAEnB;EACA;EACA,IAAI,CAACC,cAAc,GAAG,CAAC,CAAC;EAExB,IAAI,CAACC,SAAS,GAAG,EAAE;;EAEnB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA,SAASC,aAAaA,CAACC,KAAK,EAAEjP,OAAO,EAAE;EACrC,IAAIE,IAAI,GAAG;IACTC,IAAI,EAAM8O,KAAK,CAACV,QAAQ;IACxBtN,MAAM,EAAIgO,KAAK,CAAC9D,KAAK,CAACvJ,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAAE;IACpCR,QAAQ,EAAE6N,KAAK,CAAC7N,QAAQ;IACxBhB,IAAI,EAAM6O,KAAK,CAAC7O,IAAI;IACpBC,MAAM,EAAI4O,KAAK,CAAC7N,QAAQ,GAAG6N,KAAK,CAAC/N;EACnC,CAAC;EAEDhB,IAAI,CAACI,OAAO,GAAGA,OAAO,CAACJ,IAAI,CAAC;EAE5B,OAAO,IAAIL,SAAS,CAACG,OAAO,EAAEE,IAAI,CAAC;AACrC;AAEA,SAASgP,UAAUA,CAACD,KAAK,EAAEjP,OAAO,EAAE;EAClC,MAAMgP,aAAa,CAACC,KAAK,EAAEjP,OAAO,CAAC;AACrC;AAEA,SAASmP,YAAYA,CAACF,KAAK,EAAEjP,OAAO,EAAE;EACpC,IAAIiP,KAAK,CAACT,SAAS,EAAE;IACnBS,KAAK,CAACT,SAAS,CAAC/N,IAAI,CAAC,IAAI,EAAEuO,aAAa,CAACC,KAAK,EAAEjP,OAAO,CAAC,CAAC;EAC3D;AACF;AAGA,IAAIoP,iBAAiB,GAAG;EAEtBC,IAAI,EAAE,SAASC,mBAAmBA,CAACL,KAAK,EAAE9O,IAAI,EAAEoP,IAAI,EAAE;IAEpD,IAAI7M,KAAK,EAAE8M,KAAK,EAAEC,KAAK;IAEvB,IAAIR,KAAK,CAACS,OAAO,KAAK,IAAI,EAAE;MAC1BR,UAAU,CAACD,KAAK,EAAE,gCAAgC,CAAC;IACrD;IAEA,IAAIM,IAAI,CAAChR,MAAM,KAAK,CAAC,EAAE;MACrB2Q,UAAU,CAACD,KAAK,EAAE,6CAA6C,CAAC;IAClE;IAEAvM,KAAK,GAAG,sBAAsB,CAACE,IAAI,CAAC2M,IAAI,CAAC,CAAC,CAAC,CAAC;IAE5C,IAAI7M,KAAK,KAAK,IAAI,EAAE;MAClBwM,UAAU,CAACD,KAAK,EAAE,2CAA2C,CAAC;IAChE;IAEAO,KAAK,GAAG/H,QAAQ,CAAC/E,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC;IAC9B+M,KAAK,GAAGhI,QAAQ,CAAC/E,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC;IAE9B,IAAI8M,KAAK,KAAK,CAAC,EAAE;MACfN,UAAU,CAACD,KAAK,EAAE,2CAA2C,CAAC;IAChE;IAEAA,KAAK,CAACS,OAAO,GAAGH,IAAI,CAAC,CAAC,CAAC;IACvBN,KAAK,CAACU,eAAe,GAAIF,KAAK,GAAG,CAAE;IAEnC,IAAIA,KAAK,KAAK,CAAC,IAAIA,KAAK,KAAK,CAAC,EAAE;MAC9BN,YAAY,CAACF,KAAK,EAAE,0CAA0C,CAAC;IACjE;EACF,CAAC;EAEDW,GAAG,EAAE,SAASC,kBAAkBA,CAACZ,KAAK,EAAE9O,IAAI,EAAEoP,IAAI,EAAE;IAElD,IAAIO,MAAM,EAAEC,MAAM;IAElB,IAAIR,IAAI,CAAChR,MAAM,KAAK,CAAC,EAAE;MACrB2Q,UAAU,CAACD,KAAK,EAAE,6CAA6C,CAAC;IAClE;IAEAa,MAAM,GAAGP,IAAI,CAAC,CAAC,CAAC;IAChBQ,MAAM,GAAGR,IAAI,CAAC,CAAC,CAAC;IAEhB,IAAI,CAACjC,kBAAkB,CAACjF,IAAI,CAACyH,MAAM,CAAC,EAAE;MACpCZ,UAAU,CAACD,KAAK,EAAE,6DAA6D,CAAC;IAClF;IAEA,IAAItC,iBAAiB,CAAClM,IAAI,CAACwO,KAAK,CAACe,MAAM,EAAEF,MAAM,CAAC,EAAE;MAChDZ,UAAU,CAACD,KAAK,EAAE,6CAA6C,GAAGa,MAAM,GAAG,cAAc,CAAC;IAC5F;IAEA,IAAI,CAACvC,eAAe,CAAClF,IAAI,CAAC0H,MAAM,CAAC,EAAE;MACjCb,UAAU,CAACD,KAAK,EAAE,8DAA8D,CAAC;IACnF;IAEA,IAAI;MACFc,MAAM,GAAGE,kBAAkB,CAACF,MAAM,CAAC;IACrC,CAAC,CAAC,OAAOG,GAAG,EAAE;MACZhB,UAAU,CAACD,KAAK,EAAE,2BAA2B,GAAGc,MAAM,CAAC;IACzD;IAEAd,KAAK,CAACe,MAAM,CAACF,MAAM,CAAC,GAAGC,MAAM;EAC/B;AACF,CAAC;AAGD,SAASI,cAAcA,CAAClB,KAAK,EAAEmB,KAAK,EAAEC,GAAG,EAAEC,SAAS,EAAE;EACpD,IAAIC,SAAS,EAAEC,OAAO,EAAEC,UAAU,EAAEC,OAAO;EAE3C,IAAIN,KAAK,GAAGC,GAAG,EAAE;IACfK,OAAO,GAAGzB,KAAK,CAAC9D,KAAK,CAACvJ,KAAK,CAACwO,KAAK,EAAEC,GAAG,CAAC;IAEvC,IAAIC,SAAS,EAAE;MACb,KAAKC,SAAS,GAAG,CAAC,EAAEC,OAAO,GAAGE,OAAO,CAACnS,MAAM,EAAEgS,SAAS,GAAGC,OAAO,EAAED,SAAS,IAAI,CAAC,EAAE;QACjFE,UAAU,GAAGC,OAAO,CAACrJ,UAAU,CAACkJ,SAAS,CAAC;QAC1C,IAAI,EAAEE,UAAU,KAAK,IAAI,IAClB,IAAI,IAAIA,UAAU,IAAIA,UAAU,IAAI,QAAS,CAAC,EAAE;UACrDvB,UAAU,CAACD,KAAK,EAAE,+BAA+B,CAAC;QACpD;MACF;IACF,CAAC,MAAM,IAAI9B,qBAAqB,CAAC9E,IAAI,CAACqI,OAAO,CAAC,EAAE;MAC9CxB,UAAU,CAACD,KAAK,EAAE,8CAA8C,CAAC;IACnE;IAEAA,KAAK,CAAClQ,MAAM,IAAI2R,OAAO;EACzB;AACF;AAEA,SAASC,aAAaA,CAAC1B,KAAK,EAAE2B,WAAW,EAAEvS,MAAM,EAAEwS,eAAe,EAAE;EAClE,IAAIpS,UAAU,EAAED,GAAG,EAAEF,KAAK,EAAEwS,QAAQ;EAEpC,IAAI,CAACnR,MAAM,CAAC7B,QAAQ,CAACO,MAAM,CAAC,EAAE;IAC5B6Q,UAAU,CAACD,KAAK,EAAE,mEAAmE,CAAC;EACxF;EAEAxQ,UAAU,GAAGC,MAAM,CAACC,IAAI,CAACN,MAAM,CAAC;EAEhC,KAAKC,KAAK,GAAG,CAAC,EAAEwS,QAAQ,GAAGrS,UAAU,CAACF,MAAM,EAAED,KAAK,GAAGwS,QAAQ,EAAExS,KAAK,IAAI,CAAC,EAAE;IAC1EE,GAAG,GAAGC,UAAU,CAACH,KAAK,CAAC;IAEvB,IAAI,CAACqO,iBAAiB,CAAClM,IAAI,CAACmQ,WAAW,EAAEpS,GAAG,CAAC,EAAE;MAC7CoS,WAAW,CAACpS,GAAG,CAAC,GAAGH,MAAM,CAACG,GAAG,CAAC;MAC9BqS,eAAe,CAACrS,GAAG,CAAC,GAAG,IAAI;IAC7B;EACF;AACF;AAEA,SAASuS,gBAAgBA,CAAC9B,KAAK,EAAEyB,OAAO,EAAEG,eAAe,EAAEG,MAAM,EAAEC,OAAO,EAAEC,SAAS,EACnFC,SAAS,EAAEC,cAAc,EAAEC,QAAQ,EAAE;EAErC,IAAI/S,KAAK,EAAEwS,QAAQ;;EAEnB;EACA;EACA;EACA,IAAI7S,KAAK,CAACC,OAAO,CAAC+S,OAAO,CAAC,EAAE;IAC1BA,OAAO,GAAGhT,KAAK,CAAC4C,SAAS,CAACe,KAAK,CAACnB,IAAI,CAACwQ,OAAO,CAAC;IAE7C,KAAK3S,KAAK,GAAG,CAAC,EAAEwS,QAAQ,GAAGG,OAAO,CAAC1S,MAAM,EAAED,KAAK,GAAGwS,QAAQ,EAAExS,KAAK,IAAI,CAAC,EAAE;MACvE,IAAIL,KAAK,CAACC,OAAO,CAAC+S,OAAO,CAAC3S,KAAK,CAAC,CAAC,EAAE;QACjC4Q,UAAU,CAACD,KAAK,EAAE,6CAA6C,CAAC;MAClE;MAEA,IAAI,OAAOgC,OAAO,KAAK,QAAQ,IAAIzD,MAAM,CAACyD,OAAO,CAAC3S,KAAK,CAAC,CAAC,KAAK,iBAAiB,EAAE;QAC/E2S,OAAO,CAAC3S,KAAK,CAAC,GAAG,iBAAiB;MACpC;IACF;EACF;;EAEA;EACA;EACA;EACA,IAAI,OAAO2S,OAAO,KAAK,QAAQ,IAAIzD,MAAM,CAACyD,OAAO,CAAC,KAAK,iBAAiB,EAAE;IACxEA,OAAO,GAAG,iBAAiB;EAC7B;EAGAA,OAAO,GAAGzN,MAAM,CAACyN,OAAO,CAAC;EAEzB,IAAIP,OAAO,KAAK,IAAI,EAAE;IACpBA,OAAO,GAAG,CAAC,CAAC;EACd;EAEA,IAAIM,MAAM,KAAK,yBAAyB,EAAE;IACxC,IAAI/S,KAAK,CAACC,OAAO,CAACgT,SAAS,CAAC,EAAE;MAC5B,KAAK5S,KAAK,GAAG,CAAC,EAAEwS,QAAQ,GAAGI,SAAS,CAAC3S,MAAM,EAAED,KAAK,GAAGwS,QAAQ,EAAExS,KAAK,IAAI,CAAC,EAAE;QACzEqS,aAAa,CAAC1B,KAAK,EAAEyB,OAAO,EAAEQ,SAAS,CAAC5S,KAAK,CAAC,EAAEuS,eAAe,CAAC;MAClE;IACF,CAAC,MAAM;MACLF,aAAa,CAAC1B,KAAK,EAAEyB,OAAO,EAAEQ,SAAS,EAAEL,eAAe,CAAC;IAC3D;EACF,CAAC,MAAM;IACL,IAAI,CAAC5B,KAAK,CAAChG,IAAI,IACX,CAAC0D,iBAAiB,CAAClM,IAAI,CAACoQ,eAAe,EAAEI,OAAO,CAAC,IACjDtE,iBAAiB,CAAClM,IAAI,CAACiQ,OAAO,EAAEO,OAAO,CAAC,EAAE;MAC5ChC,KAAK,CAAC7O,IAAI,GAAG+Q,SAAS,IAAIlC,KAAK,CAAC7O,IAAI;MACpC6O,KAAK,CAAC/N,SAAS,GAAGkQ,cAAc,IAAInC,KAAK,CAAC/N,SAAS;MACnD+N,KAAK,CAAC7N,QAAQ,GAAGiQ,QAAQ,IAAIpC,KAAK,CAAC7N,QAAQ;MAC3C8N,UAAU,CAACD,KAAK,EAAE,wBAAwB,CAAC;IAC7C;;IAEA;IACA,IAAIgC,OAAO,KAAK,WAAW,EAAE;MAC3BvS,MAAM,CAAC4S,cAAc,CAACZ,OAAO,EAAEO,OAAO,EAAE;QACtCM,YAAY,EAAE,IAAI;QAClBC,UAAU,EAAE,IAAI;QAChBC,QAAQ,EAAE,IAAI;QACdlK,KAAK,EAAE2J;MACT,CAAC,CAAC;IACJ,CAAC,MAAM;MACLR,OAAO,CAACO,OAAO,CAAC,GAAGC,SAAS;IAC9B;IACA,OAAOL,eAAe,CAACI,OAAO,CAAC;EACjC;EAEA,OAAOP,OAAO;AAChB;AAEA,SAASgB,aAAaA,CAACzC,KAAK,EAAE;EAC5B,IAAI7H,EAAE;EAENA,EAAE,GAAG6H,KAAK,CAAC9D,KAAK,CAAC9D,UAAU,CAAC4H,KAAK,CAAC7N,QAAQ,CAAC;EAE3C,IAAIgG,EAAE,KAAK,IAAI,WAAU;IACvB6H,KAAK,CAAC7N,QAAQ,EAAE;EAClB,CAAC,MAAM,IAAIgG,EAAE,KAAK,IAAI,WAAU;IAC9B6H,KAAK,CAAC7N,QAAQ,EAAE;IAChB,IAAI6N,KAAK,CAAC9D,KAAK,CAAC9D,UAAU,CAAC4H,KAAK,CAAC7N,QAAQ,CAAC,KAAK,IAAI,WAAU;MAC3D6N,KAAK,CAAC7N,QAAQ,EAAE;IAClB;EACF,CAAC,MAAM;IACL8N,UAAU,CAACD,KAAK,EAAE,0BAA0B,CAAC;EAC/C;EAEAA,KAAK,CAAC7O,IAAI,IAAI,CAAC;EACf6O,KAAK,CAAC/N,SAAS,GAAG+N,KAAK,CAAC7N,QAAQ;EAChC6N,KAAK,CAACH,cAAc,GAAG,CAAC,CAAC;AAC3B;AAEA,SAAS6C,mBAAmBA,CAAC1C,KAAK,EAAE2C,aAAa,EAAEC,WAAW,EAAE;EAC9D,IAAIC,UAAU,GAAG,CAAC;IACd1K,EAAE,GAAG6H,KAAK,CAAC9D,KAAK,CAAC9D,UAAU,CAAC4H,KAAK,CAAC7N,QAAQ,CAAC;EAE/C,OAAOgG,EAAE,KAAK,CAAC,EAAE;IACf,OAAOsG,cAAc,CAACtG,EAAE,CAAC,EAAE;MACzB,IAAIA,EAAE,KAAK,IAAI,cAAa6H,KAAK,CAACH,cAAc,KAAK,CAAC,CAAC,EAAE;QACvDG,KAAK,CAACH,cAAc,GAAGG,KAAK,CAAC7N,QAAQ;MACvC;MACAgG,EAAE,GAAG6H,KAAK,CAAC9D,KAAK,CAAC9D,UAAU,CAAC,EAAE4H,KAAK,CAAC7N,QAAQ,CAAC;IAC/C;IAEA,IAAIwQ,aAAa,IAAIxK,EAAE,KAAK,IAAI,UAAS;MACvC,GAAG;QACDA,EAAE,GAAG6H,KAAK,CAAC9D,KAAK,CAAC9D,UAAU,CAAC,EAAE4H,KAAK,CAAC7N,QAAQ,CAAC;MAC/C,CAAC,QAAQgG,EAAE,KAAK,IAAI,aAAYA,EAAE,KAAK,IAAI,aAAYA,EAAE,KAAK,CAAC;IACjE;IAEA,IAAIqG,MAAM,CAACrG,EAAE,CAAC,EAAE;MACdsK,aAAa,CAACzC,KAAK,CAAC;MAEpB7H,EAAE,GAAG6H,KAAK,CAAC9D,KAAK,CAAC9D,UAAU,CAAC4H,KAAK,CAAC7N,QAAQ,CAAC;MAC3C0Q,UAAU,EAAE;MACZ7C,KAAK,CAACJ,UAAU,GAAG,CAAC;MAEpB,OAAOzH,EAAE,KAAK,IAAI,cAAa;QAC7B6H,KAAK,CAACJ,UAAU,EAAE;QAClBzH,EAAE,GAAG6H,KAAK,CAAC9D,KAAK,CAAC9D,UAAU,CAAC,EAAE4H,KAAK,CAAC7N,QAAQ,CAAC;MAC/C;IACF,CAAC,MAAM;MACL;IACF;EACF;EAEA,IAAIyQ,WAAW,KAAK,CAAC,CAAC,IAAIC,UAAU,KAAK,CAAC,IAAI7C,KAAK,CAACJ,UAAU,GAAGgD,WAAW,EAAE;IAC5E1C,YAAY,CAACF,KAAK,EAAE,uBAAuB,CAAC;EAC9C;EAEA,OAAO6C,UAAU;AACnB;AAEA,SAASC,qBAAqBA,CAAC9C,KAAK,EAAE;EACpC,IAAIsB,SAAS,GAAGtB,KAAK,CAAC7N,QAAQ;IAC1BgG,EAAE;EAENA,EAAE,GAAG6H,KAAK,CAAC9D,KAAK,CAAC9D,UAAU,CAACkJ,SAAS,CAAC;;EAEtC;EACA;EACA,IAAI,CAACnJ,EAAE,KAAK,IAAI,YAAWA,EAAE,KAAK,IAAI,aAClCA,EAAE,KAAK6H,KAAK,CAAC9D,KAAK,CAAC9D,UAAU,CAACkJ,SAAS,GAAG,CAAC,CAAC,IAC5CnJ,EAAE,KAAK6H,KAAK,CAAC9D,KAAK,CAAC9D,UAAU,CAACkJ,SAAS,GAAG,CAAC,CAAC,EAAE;IAEhDA,SAAS,IAAI,CAAC;IAEdnJ,EAAE,GAAG6H,KAAK,CAAC9D,KAAK,CAAC9D,UAAU,CAACkJ,SAAS,CAAC;IAEtC,IAAInJ,EAAE,KAAK,CAAC,IAAIuG,YAAY,CAACvG,EAAE,CAAC,EAAE;MAChC,OAAO,IAAI;IACb;EACF;EAEA,OAAO,KAAK;AACd;AAEA,SAAS4K,gBAAgBA,CAAC/C,KAAK,EAAEnQ,KAAK,EAAE;EACtC,IAAIA,KAAK,KAAK,CAAC,EAAE;IACfmQ,KAAK,CAAClQ,MAAM,IAAI,GAAG;EACrB,CAAC,MAAM,IAAID,KAAK,GAAG,CAAC,EAAE;IACpBmQ,KAAK,CAAClQ,MAAM,IAAIY,MAAM,CAACf,MAAM,CAAC,IAAI,EAAEE,KAAK,GAAG,CAAC,CAAC;EAChD;AACF;AAGA,SAASmT,eAAeA,CAAChD,KAAK,EAAEiD,UAAU,EAAEC,oBAAoB,EAAE;EAChE,IAAIC,SAAS;IACTC,SAAS;IACTC,YAAY;IACZC,UAAU;IACVC,iBAAiB;IACjBC,KAAK;IACLC,UAAU;IACVC,WAAW;IACXC,KAAK,GAAG3D,KAAK,CAACrL,IAAI;IAClB8M,OAAO,GAAGzB,KAAK,CAAClQ,MAAM;IACtBqI,EAAE;EAENA,EAAE,GAAG6H,KAAK,CAAC9D,KAAK,CAAC9D,UAAU,CAAC4H,KAAK,CAAC7N,QAAQ,CAAC;EAE3C,IAAIuM,YAAY,CAACvG,EAAE,CAAC,IAChBwG,iBAAiB,CAACxG,EAAE,CAAC,IACrBA,EAAE,KAAK,IAAI,YACXA,EAAE,KAAK,IAAI,YACXA,EAAE,KAAK,IAAI,YACXA,EAAE,KAAK,IAAI,YACXA,EAAE,KAAK,IAAI,YACXA,EAAE,KAAK,IAAI,YACXA,EAAE,KAAK,IAAI,YACXA,EAAE,KAAK,IAAI,YACXA,EAAE,KAAK,IAAI,YACXA,EAAE,KAAK,IAAI,YACXA,EAAE,KAAK,IAAI,UAAS;IACtB,OAAO,KAAK;EACd;EAEA,IAAIA,EAAE,KAAK,IAAI,YAAWA,EAAE,KAAK,IAAI,UAAS;IAC5CiL,SAAS,GAAGpD,KAAK,CAAC9D,KAAK,CAAC9D,UAAU,CAAC4H,KAAK,CAAC7N,QAAQ,GAAG,CAAC,CAAC;IAEtD,IAAIuM,YAAY,CAAC0E,SAAS,CAAC,IACvBF,oBAAoB,IAAIvE,iBAAiB,CAACyE,SAAS,CAAC,EAAE;MACxD,OAAO,KAAK;IACd;EACF;EAEApD,KAAK,CAACrL,IAAI,GAAG,QAAQ;EACrBqL,KAAK,CAAClQ,MAAM,GAAG,EAAE;EACjBuT,YAAY,GAAGC,UAAU,GAAGtD,KAAK,CAAC7N,QAAQ;EAC1CoR,iBAAiB,GAAG,KAAK;EAEzB,OAAOpL,EAAE,KAAK,CAAC,EAAE;IACf,IAAIA,EAAE,KAAK,IAAI,UAAS;MACtBiL,SAAS,GAAGpD,KAAK,CAAC9D,KAAK,CAAC9D,UAAU,CAAC4H,KAAK,CAAC7N,QAAQ,GAAG,CAAC,CAAC;MAEtD,IAAIuM,YAAY,CAAC0E,SAAS,CAAC,IACvBF,oBAAoB,IAAIvE,iBAAiB,CAACyE,SAAS,CAAC,EAAE;QACxD;MACF;IAEF,CAAC,MAAM,IAAIjL,EAAE,KAAK,IAAI,UAAS;MAC7BgL,SAAS,GAAGnD,KAAK,CAAC9D,KAAK,CAAC9D,UAAU,CAAC4H,KAAK,CAAC7N,QAAQ,GAAG,CAAC,CAAC;MAEtD,IAAIuM,YAAY,CAACyE,SAAS,CAAC,EAAE;QAC3B;MACF;IAEF,CAAC,MAAM,IAAKnD,KAAK,CAAC7N,QAAQ,KAAK6N,KAAK,CAAC/N,SAAS,IAAI6Q,qBAAqB,CAAC9C,KAAK,CAAC,IACnEkD,oBAAoB,IAAIvE,iBAAiB,CAACxG,EAAE,CAAC,EAAE;MACxD;IAEF,CAAC,MAAM,IAAIqG,MAAM,CAACrG,EAAE,CAAC,EAAE;MACrBqL,KAAK,GAAGxD,KAAK,CAAC7O,IAAI;MAClBsS,UAAU,GAAGzD,KAAK,CAAC/N,SAAS;MAC5ByR,WAAW,GAAG1D,KAAK,CAACJ,UAAU;MAC9B8C,mBAAmB,CAAC1C,KAAK,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC;MAErC,IAAIA,KAAK,CAACJ,UAAU,IAAIqD,UAAU,EAAE;QAClCM,iBAAiB,GAAG,IAAI;QACxBpL,EAAE,GAAG6H,KAAK,CAAC9D,KAAK,CAAC9D,UAAU,CAAC4H,KAAK,CAAC7N,QAAQ,CAAC;QAC3C;MACF,CAAC,MAAM;QACL6N,KAAK,CAAC7N,QAAQ,GAAGmR,UAAU;QAC3BtD,KAAK,CAAC7O,IAAI,GAAGqS,KAAK;QAClBxD,KAAK,CAAC/N,SAAS,GAAGwR,UAAU;QAC5BzD,KAAK,CAACJ,UAAU,GAAG8D,WAAW;QAC9B;MACF;IACF;IAEA,IAAIH,iBAAiB,EAAE;MACrBrC,cAAc,CAAClB,KAAK,EAAEqD,YAAY,EAAEC,UAAU,EAAE,KAAK,CAAC;MACtDP,gBAAgB,CAAC/C,KAAK,EAAEA,KAAK,CAAC7O,IAAI,GAAGqS,KAAK,CAAC;MAC3CH,YAAY,GAAGC,UAAU,GAAGtD,KAAK,CAAC7N,QAAQ;MAC1CoR,iBAAiB,GAAG,KAAK;IAC3B;IAEA,IAAI,CAAC9E,cAAc,CAACtG,EAAE,CAAC,EAAE;MACvBmL,UAAU,GAAGtD,KAAK,CAAC7N,QAAQ,GAAG,CAAC;IACjC;IAEAgG,EAAE,GAAG6H,KAAK,CAAC9D,KAAK,CAAC9D,UAAU,CAAC,EAAE4H,KAAK,CAAC7N,QAAQ,CAAC;EAC/C;EAEA+O,cAAc,CAAClB,KAAK,EAAEqD,YAAY,EAAEC,UAAU,EAAE,KAAK,CAAC;EAEtD,IAAItD,KAAK,CAAClQ,MAAM,EAAE;IAChB,OAAO,IAAI;EACb;EAEAkQ,KAAK,CAACrL,IAAI,GAAGgP,KAAK;EAClB3D,KAAK,CAAClQ,MAAM,GAAG2R,OAAO;EACtB,OAAO,KAAK;AACd;AAEA,SAASmC,sBAAsBA,CAAC5D,KAAK,EAAEiD,UAAU,EAAE;EACjD,IAAI9K,EAAE,EACFkL,YAAY,EAAEC,UAAU;EAE5BnL,EAAE,GAAG6H,KAAK,CAAC9D,KAAK,CAAC9D,UAAU,CAAC4H,KAAK,CAAC7N,QAAQ,CAAC;EAE3C,IAAIgG,EAAE,KAAK,IAAI,UAAS;IACtB,OAAO,KAAK;EACd;EAEA6H,KAAK,CAACrL,IAAI,GAAG,QAAQ;EACrBqL,KAAK,CAAClQ,MAAM,GAAG,EAAE;EACjBkQ,KAAK,CAAC7N,QAAQ,EAAE;EAChBkR,YAAY,GAAGC,UAAU,GAAGtD,KAAK,CAAC7N,QAAQ;EAE1C,OAAO,CAACgG,EAAE,GAAG6H,KAAK,CAAC9D,KAAK,CAAC9D,UAAU,CAAC4H,KAAK,CAAC7N,QAAQ,CAAC,MAAM,CAAC,EAAE;IAC1D,IAAIgG,EAAE,KAAK,IAAI,UAAS;MACtB+I,cAAc,CAAClB,KAAK,EAAEqD,YAAY,EAAErD,KAAK,CAAC7N,QAAQ,EAAE,IAAI,CAAC;MACzDgG,EAAE,GAAG6H,KAAK,CAAC9D,KAAK,CAAC9D,UAAU,CAAC,EAAE4H,KAAK,CAAC7N,QAAQ,CAAC;MAE7C,IAAIgG,EAAE,KAAK,IAAI,UAAS;QACtBkL,YAAY,GAAGrD,KAAK,CAAC7N,QAAQ;QAC7B6N,KAAK,CAAC7N,QAAQ,EAAE;QAChBmR,UAAU,GAAGtD,KAAK,CAAC7N,QAAQ;MAC7B,CAAC,MAAM;QACL,OAAO,IAAI;MACb;IAEF,CAAC,MAAM,IAAIqM,MAAM,CAACrG,EAAE,CAAC,EAAE;MACrB+I,cAAc,CAAClB,KAAK,EAAEqD,YAAY,EAAEC,UAAU,EAAE,IAAI,CAAC;MACrDP,gBAAgB,CAAC/C,KAAK,EAAE0C,mBAAmB,CAAC1C,KAAK,EAAE,KAAK,EAAEiD,UAAU,CAAC,CAAC;MACtEI,YAAY,GAAGC,UAAU,GAAGtD,KAAK,CAAC7N,QAAQ;IAE5C,CAAC,MAAM,IAAI6N,KAAK,CAAC7N,QAAQ,KAAK6N,KAAK,CAAC/N,SAAS,IAAI6Q,qBAAqB,CAAC9C,KAAK,CAAC,EAAE;MAC7EC,UAAU,CAACD,KAAK,EAAE,8DAA8D,CAAC;IAEnF,CAAC,MAAM;MACLA,KAAK,CAAC7N,QAAQ,EAAE;MAChBmR,UAAU,GAAGtD,KAAK,CAAC7N,QAAQ;IAC7B;EACF;EAEA8N,UAAU,CAACD,KAAK,EAAE,4DAA4D,CAAC;AACjF;AAEA,SAAS6D,sBAAsBA,CAAC7D,KAAK,EAAEiD,UAAU,EAAE;EACjD,IAAII,YAAY,EACZC,UAAU,EACVQ,SAAS,EACTC,SAAS,EACTC,GAAG,EACH7L,EAAE;EAENA,EAAE,GAAG6H,KAAK,CAAC9D,KAAK,CAAC9D,UAAU,CAAC4H,KAAK,CAAC7N,QAAQ,CAAC;EAE3C,IAAIgG,EAAE,KAAK,IAAI,UAAS;IACtB,OAAO,KAAK;EACd;EAEA6H,KAAK,CAACrL,IAAI,GAAG,QAAQ;EACrBqL,KAAK,CAAClQ,MAAM,GAAG,EAAE;EACjBkQ,KAAK,CAAC7N,QAAQ,EAAE;EAChBkR,YAAY,GAAGC,UAAU,GAAGtD,KAAK,CAAC7N,QAAQ;EAE1C,OAAO,CAACgG,EAAE,GAAG6H,KAAK,CAAC9D,KAAK,CAAC9D,UAAU,CAAC4H,KAAK,CAAC7N,QAAQ,CAAC,MAAM,CAAC,EAAE;IAC1D,IAAIgG,EAAE,KAAK,IAAI,UAAS;MACtB+I,cAAc,CAAClB,KAAK,EAAEqD,YAAY,EAAErD,KAAK,CAAC7N,QAAQ,EAAE,IAAI,CAAC;MACzD6N,KAAK,CAAC7N,QAAQ,EAAE;MAChB,OAAO,IAAI;IAEb,CAAC,MAAM,IAAIgG,EAAE,KAAK,IAAI,UAAS;MAC7B+I,cAAc,CAAClB,KAAK,EAAEqD,YAAY,EAAErD,KAAK,CAAC7N,QAAQ,EAAE,IAAI,CAAC;MACzDgG,EAAE,GAAG6H,KAAK,CAAC9D,KAAK,CAAC9D,UAAU,CAAC,EAAE4H,KAAK,CAAC7N,QAAQ,CAAC;MAE7C,IAAIqM,MAAM,CAACrG,EAAE,CAAC,EAAE;QACduK,mBAAmB,CAAC1C,KAAK,EAAE,KAAK,EAAEiD,UAAU,CAAC;;QAE7C;MACF,CAAC,MAAM,IAAI9K,EAAE,GAAG,GAAG,IAAIgH,iBAAiB,CAAChH,EAAE,CAAC,EAAE;QAC5C6H,KAAK,CAAClQ,MAAM,IAAIsP,eAAe,CAACjH,EAAE,CAAC;QACnC6H,KAAK,CAAC7N,QAAQ,EAAE;MAElB,CAAC,MAAM,IAAI,CAAC6R,GAAG,GAAGlF,aAAa,CAAC3G,EAAE,CAAC,IAAI,CAAC,EAAE;QACxC2L,SAAS,GAAGE,GAAG;QACfD,SAAS,GAAG,CAAC;QAEb,OAAOD,SAAS,GAAG,CAAC,EAAEA,SAAS,EAAE,EAAE;UACjC3L,EAAE,GAAG6H,KAAK,CAAC9D,KAAK,CAAC9D,UAAU,CAAC,EAAE4H,KAAK,CAAC7N,QAAQ,CAAC;UAE7C,IAAI,CAAC6R,GAAG,GAAGpF,WAAW,CAACzG,EAAE,CAAC,KAAK,CAAC,EAAE;YAChC4L,SAAS,GAAG,CAACA,SAAS,IAAI,CAAC,IAAIC,GAAG;UAEpC,CAAC,MAAM;YACL/D,UAAU,CAACD,KAAK,EAAE,gCAAgC,CAAC;UACrD;QACF;QAEAA,KAAK,CAAClQ,MAAM,IAAImP,iBAAiB,CAAC8E,SAAS,CAAC;QAE5C/D,KAAK,CAAC7N,QAAQ,EAAE;MAElB,CAAC,MAAM;QACL8N,UAAU,CAACD,KAAK,EAAE,yBAAyB,CAAC;MAC9C;MAEAqD,YAAY,GAAGC,UAAU,GAAGtD,KAAK,CAAC7N,QAAQ;IAE5C,CAAC,MAAM,IAAIqM,MAAM,CAACrG,EAAE,CAAC,EAAE;MACrB+I,cAAc,CAAClB,KAAK,EAAEqD,YAAY,EAAEC,UAAU,EAAE,IAAI,CAAC;MACrDP,gBAAgB,CAAC/C,KAAK,EAAE0C,mBAAmB,CAAC1C,KAAK,EAAE,KAAK,EAAEiD,UAAU,CAAC,CAAC;MACtEI,YAAY,GAAGC,UAAU,GAAGtD,KAAK,CAAC7N,QAAQ;IAE5C,CAAC,MAAM,IAAI6N,KAAK,CAAC7N,QAAQ,KAAK6N,KAAK,CAAC/N,SAAS,IAAI6Q,qBAAqB,CAAC9C,KAAK,CAAC,EAAE;MAC7EC,UAAU,CAACD,KAAK,EAAE,8DAA8D,CAAC;IAEnF,CAAC,MAAM;MACLA,KAAK,CAAC7N,QAAQ,EAAE;MAChBmR,UAAU,GAAGtD,KAAK,CAAC7N,QAAQ;IAC7B;EACF;EAEA8N,UAAU,CAACD,KAAK,EAAE,4DAA4D,CAAC;AACjF;AAEA,SAASiE,kBAAkBA,CAACjE,KAAK,EAAEiD,UAAU,EAAE;EAC7C,IAAIiB,QAAQ,GAAG,IAAI;IACfV,KAAK;IACLC,UAAU;IACVU,IAAI;IACJC,IAAI,GAAOpE,KAAK,CAACvL,GAAG;IACpBgN,OAAO;IACP4C,OAAO,GAAIrE,KAAK,CAACsE,MAAM;IACvBlB,SAAS;IACTmB,UAAU;IACVC,MAAM;IACNC,cAAc;IACdC,SAAS;IACT9C,eAAe,GAAGnS,MAAM,CAACoC,MAAM,CAAC,IAAI,CAAC;IACrCmQ,OAAO;IACPD,MAAM;IACNE,SAAS;IACT9J,EAAE;EAENA,EAAE,GAAG6H,KAAK,CAAC9D,KAAK,CAAC9D,UAAU,CAAC4H,KAAK,CAAC7N,QAAQ,CAAC;EAE3C,IAAIgG,EAAE,KAAK,IAAI,UAAS;IACtBoM,UAAU,GAAG,IAAI,CAAC;IAClBG,SAAS,GAAG,KAAK;IACjBjD,OAAO,GAAG,EAAE;EACd,CAAC,MAAM,IAAItJ,EAAE,KAAK,IAAI,UAAS;IAC7BoM,UAAU,GAAG,IAAI,CAAC;IAClBG,SAAS,GAAG,IAAI;IAChBjD,OAAO,GAAG,CAAC,CAAC;EACd,CAAC,MAAM;IACL,OAAO,KAAK;EACd;EAEA,IAAIzB,KAAK,CAACsE,MAAM,KAAK,IAAI,EAAE;IACzBtE,KAAK,CAAC2E,SAAS,CAAC3E,KAAK,CAACsE,MAAM,CAAC,GAAG7C,OAAO;EACzC;EAEAtJ,EAAE,GAAG6H,KAAK,CAAC9D,KAAK,CAAC9D,UAAU,CAAC,EAAE4H,KAAK,CAAC7N,QAAQ,CAAC;EAE7C,OAAOgG,EAAE,KAAK,CAAC,EAAE;IACfuK,mBAAmB,CAAC1C,KAAK,EAAE,IAAI,EAAEiD,UAAU,CAAC;IAE5C9K,EAAE,GAAG6H,KAAK,CAAC9D,KAAK,CAAC9D,UAAU,CAAC4H,KAAK,CAAC7N,QAAQ,CAAC;IAE3C,IAAIgG,EAAE,KAAKoM,UAAU,EAAE;MACrBvE,KAAK,CAAC7N,QAAQ,EAAE;MAChB6N,KAAK,CAACvL,GAAG,GAAG2P,IAAI;MAChBpE,KAAK,CAACsE,MAAM,GAAGD,OAAO;MACtBrE,KAAK,CAACrL,IAAI,GAAG+P,SAAS,GAAG,SAAS,GAAG,UAAU;MAC/C1E,KAAK,CAAClQ,MAAM,GAAG2R,OAAO;MACtB,OAAO,IAAI;IACb,CAAC,MAAM,IAAI,CAACyC,QAAQ,EAAE;MACpBjE,UAAU,CAACD,KAAK,EAAE,8CAA8C,CAAC;IACnE,CAAC,MAAM,IAAI7H,EAAE,KAAK,IAAI,UAAS;MAC7B;MACA8H,UAAU,CAACD,KAAK,EAAE,0CAA0C,CAAC;IAC/D;IAEA+B,MAAM,GAAGC,OAAO,GAAGC,SAAS,GAAG,IAAI;IACnCuC,MAAM,GAAGC,cAAc,GAAG,KAAK;IAE/B,IAAItM,EAAE,KAAK,IAAI,UAAS;MACtBiL,SAAS,GAAGpD,KAAK,CAAC9D,KAAK,CAAC9D,UAAU,CAAC4H,KAAK,CAAC7N,QAAQ,GAAG,CAAC,CAAC;MAEtD,IAAIuM,YAAY,CAAC0E,SAAS,CAAC,EAAE;QAC3BoB,MAAM,GAAGC,cAAc,GAAG,IAAI;QAC9BzE,KAAK,CAAC7N,QAAQ,EAAE;QAChBuQ,mBAAmB,CAAC1C,KAAK,EAAE,IAAI,EAAEiD,UAAU,CAAC;MAC9C;IACF;IAEAO,KAAK,GAAGxD,KAAK,CAAC7O,IAAI,CAAC,CAAC;IACpBsS,UAAU,GAAGzD,KAAK,CAAC/N,SAAS;IAC5BkS,IAAI,GAAGnE,KAAK,CAAC7N,QAAQ;IACrByS,WAAW,CAAC5E,KAAK,EAAEiD,UAAU,EAAEtF,eAAe,EAAE,KAAK,EAAE,IAAI,CAAC;IAC5DoE,MAAM,GAAG/B,KAAK,CAACvL,GAAG;IAClBuN,OAAO,GAAGhC,KAAK,CAAClQ,MAAM;IACtB4S,mBAAmB,CAAC1C,KAAK,EAAE,IAAI,EAAEiD,UAAU,CAAC;IAE5C9K,EAAE,GAAG6H,KAAK,CAAC9D,KAAK,CAAC9D,UAAU,CAAC4H,KAAK,CAAC7N,QAAQ,CAAC;IAE3C,IAAI,CAACsS,cAAc,IAAIzE,KAAK,CAAC7O,IAAI,KAAKqS,KAAK,KAAKrL,EAAE,KAAK,IAAI,UAAS;MAClEqM,MAAM,GAAG,IAAI;MACbrM,EAAE,GAAG6H,KAAK,CAAC9D,KAAK,CAAC9D,UAAU,CAAC,EAAE4H,KAAK,CAAC7N,QAAQ,CAAC;MAC7CuQ,mBAAmB,CAAC1C,KAAK,EAAE,IAAI,EAAEiD,UAAU,CAAC;MAC5C2B,WAAW,CAAC5E,KAAK,EAAEiD,UAAU,EAAEtF,eAAe,EAAE,KAAK,EAAE,IAAI,CAAC;MAC5DsE,SAAS,GAAGjC,KAAK,CAAClQ,MAAM;IAC1B;IAEA,IAAI4U,SAAS,EAAE;MACb5C,gBAAgB,CAAC9B,KAAK,EAAEyB,OAAO,EAAEG,eAAe,EAAEG,MAAM,EAAEC,OAAO,EAAEC,SAAS,EAAEuB,KAAK,EAAEC,UAAU,EAAEU,IAAI,CAAC;IACxG,CAAC,MAAM,IAAIK,MAAM,EAAE;MACjB/C,OAAO,CAAC7N,IAAI,CAACkO,gBAAgB,CAAC9B,KAAK,EAAE,IAAI,EAAE4B,eAAe,EAAEG,MAAM,EAAEC,OAAO,EAAEC,SAAS,EAAEuB,KAAK,EAAEC,UAAU,EAAEU,IAAI,CAAC,CAAC;IACnH,CAAC,MAAM;MACL1C,OAAO,CAAC7N,IAAI,CAACoO,OAAO,CAAC;IACvB;IAEAU,mBAAmB,CAAC1C,KAAK,EAAE,IAAI,EAAEiD,UAAU,CAAC;IAE5C9K,EAAE,GAAG6H,KAAK,CAAC9D,KAAK,CAAC9D,UAAU,CAAC4H,KAAK,CAAC7N,QAAQ,CAAC;IAE3C,IAAIgG,EAAE,KAAK,IAAI,UAAS;MACtB+L,QAAQ,GAAG,IAAI;MACf/L,EAAE,GAAG6H,KAAK,CAAC9D,KAAK,CAAC9D,UAAU,CAAC,EAAE4H,KAAK,CAAC7N,QAAQ,CAAC;IAC/C,CAAC,MAAM;MACL+R,QAAQ,GAAG,KAAK;IAClB;EACF;EAEAjE,UAAU,CAACD,KAAK,EAAE,uDAAuD,CAAC;AAC5E;AAEA,SAAS6E,eAAeA,CAAC7E,KAAK,EAAEiD,UAAU,EAAE;EAC1C,IAAII,YAAY;IACZyB,OAAO;IACPC,QAAQ,GAAShH,aAAa;IAC9BiH,cAAc,GAAG,KAAK;IACtBC,cAAc,GAAG,KAAK;IACtBC,UAAU,GAAOjC,UAAU;IAC3BkC,UAAU,GAAO,CAAC;IAClBC,cAAc,GAAG,KAAK;IACtBpB,GAAG;IACH7L,EAAE;EAENA,EAAE,GAAG6H,KAAK,CAAC9D,KAAK,CAAC9D,UAAU,CAAC4H,KAAK,CAAC7N,QAAQ,CAAC;EAE3C,IAAIgG,EAAE,KAAK,IAAI,UAAS;IACtB2M,OAAO,GAAG,KAAK;EACjB,CAAC,MAAM,IAAI3M,EAAE,KAAK,IAAI,UAAS;IAC7B2M,OAAO,GAAG,IAAI;EAChB,CAAC,MAAM;IACL,OAAO,KAAK;EACd;EAEA9E,KAAK,CAACrL,IAAI,GAAG,QAAQ;EACrBqL,KAAK,CAAClQ,MAAM,GAAG,EAAE;EAEjB,OAAOqI,EAAE,KAAK,CAAC,EAAE;IACfA,EAAE,GAAG6H,KAAK,CAAC9D,KAAK,CAAC9D,UAAU,CAAC,EAAE4H,KAAK,CAAC7N,QAAQ,CAAC;IAE7C,IAAIgG,EAAE,KAAK,IAAI,YAAWA,EAAE,KAAK,IAAI,UAAS;MAC5C,IAAI4F,aAAa,KAAKgH,QAAQ,EAAE;QAC9BA,QAAQ,GAAI5M,EAAE,KAAK,IAAI,WAAW8F,aAAa,GAAGD,cAAc;MAClE,CAAC,MAAM;QACLiC,UAAU,CAACD,KAAK,EAAE,sCAAsC,CAAC;MAC3D;IAEF,CAAC,MAAM,IAAI,CAACgE,GAAG,GAAGjF,eAAe,CAAC5G,EAAE,CAAC,KAAK,CAAC,EAAE;MAC3C,IAAI6L,GAAG,KAAK,CAAC,EAAE;QACb/D,UAAU,CAACD,KAAK,EAAE,8EAA8E,CAAC;MACnG,CAAC,MAAM,IAAI,CAACiF,cAAc,EAAE;QAC1BC,UAAU,GAAGjC,UAAU,GAAGe,GAAG,GAAG,CAAC;QACjCiB,cAAc,GAAG,IAAI;MACvB,CAAC,MAAM;QACLhF,UAAU,CAACD,KAAK,EAAE,2CAA2C,CAAC;MAChE;IAEF,CAAC,MAAM;MACL;IACF;EACF;EAEA,IAAIvB,cAAc,CAACtG,EAAE,CAAC,EAAE;IACtB,GAAG;MAAEA,EAAE,GAAG6H,KAAK,CAAC9D,KAAK,CAAC9D,UAAU,CAAC,EAAE4H,KAAK,CAAC7N,QAAQ,CAAC;IAAE,CAAC,QAC9CsM,cAAc,CAACtG,EAAE,CAAC;IAEzB,IAAIA,EAAE,KAAK,IAAI,UAAS;MACtB,GAAG;QAAEA,EAAE,GAAG6H,KAAK,CAAC9D,KAAK,CAAC9D,UAAU,CAAC,EAAE4H,KAAK,CAAC7N,QAAQ,CAAC;MAAE,CAAC,QAC9C,CAACqM,MAAM,CAACrG,EAAE,CAAC,IAAKA,EAAE,KAAK,CAAE;IAClC;EACF;EAEA,OAAOA,EAAE,KAAK,CAAC,EAAE;IACfsK,aAAa,CAACzC,KAAK,CAAC;IACpBA,KAAK,CAACJ,UAAU,GAAG,CAAC;IAEpBzH,EAAE,GAAG6H,KAAK,CAAC9D,KAAK,CAAC9D,UAAU,CAAC4H,KAAK,CAAC7N,QAAQ,CAAC;IAE3C,OAAO,CAAC,CAAC8S,cAAc,IAAIjF,KAAK,CAACJ,UAAU,GAAGsF,UAAU,KAChD/M,EAAE,KAAK,IAAI,YAAY,EAAE;MAC/B6H,KAAK,CAACJ,UAAU,EAAE;MAClBzH,EAAE,GAAG6H,KAAK,CAAC9D,KAAK,CAAC9D,UAAU,CAAC,EAAE4H,KAAK,CAAC7N,QAAQ,CAAC;IAC/C;IAEA,IAAI,CAAC8S,cAAc,IAAIjF,KAAK,CAACJ,UAAU,GAAGsF,UAAU,EAAE;MACpDA,UAAU,GAAGlF,KAAK,CAACJ,UAAU;IAC/B;IAEA,IAAIpB,MAAM,CAACrG,EAAE,CAAC,EAAE;MACdgN,UAAU,EAAE;MACZ;IACF;;IAEA;IACA,IAAInF,KAAK,CAACJ,UAAU,GAAGsF,UAAU,EAAE;MAEjC;MACA,IAAIH,QAAQ,KAAK9G,aAAa,EAAE;QAC9B+B,KAAK,CAAClQ,MAAM,IAAIY,MAAM,CAACf,MAAM,CAAC,IAAI,EAAEqV,cAAc,GAAG,CAAC,GAAGG,UAAU,GAAGA,UAAU,CAAC;MACnF,CAAC,MAAM,IAAIJ,QAAQ,KAAKhH,aAAa,EAAE;QACrC,IAAIiH,cAAc,EAAE;UAAE;UACpBhF,KAAK,CAAClQ,MAAM,IAAI,IAAI;QACtB;MACF;;MAEA;MACA;IACF;;IAEA;IACA,IAAIgV,OAAO,EAAE;MAEX;MACA,IAAIrG,cAAc,CAACtG,EAAE,CAAC,EAAE;QACtBiN,cAAc,GAAG,IAAI;QACrB;QACApF,KAAK,CAAClQ,MAAM,IAAIY,MAAM,CAACf,MAAM,CAAC,IAAI,EAAEqV,cAAc,GAAG,CAAC,GAAGG,UAAU,GAAGA,UAAU,CAAC;;QAEnF;MACA,CAAC,MAAM,IAAIC,cAAc,EAAE;QACzBA,cAAc,GAAG,KAAK;QACtBpF,KAAK,CAAClQ,MAAM,IAAIY,MAAM,CAACf,MAAM,CAAC,IAAI,EAAEwV,UAAU,GAAG,CAAC,CAAC;;QAErD;MACA,CAAC,MAAM,IAAIA,UAAU,KAAK,CAAC,EAAE;QAC3B,IAAIH,cAAc,EAAE;UAAE;UACpBhF,KAAK,CAAClQ,MAAM,IAAI,GAAG;QACrB;;QAEF;MACA,CAAC,MAAM;QACLkQ,KAAK,CAAClQ,MAAM,IAAIY,MAAM,CAACf,MAAM,CAAC,IAAI,EAAEwV,UAAU,CAAC;MACjD;;MAEF;IACA,CAAC,MAAM;MACL;MACAnF,KAAK,CAAClQ,MAAM,IAAIY,MAAM,CAACf,MAAM,CAAC,IAAI,EAAEqV,cAAc,GAAG,CAAC,GAAGG,UAAU,GAAGA,UAAU,CAAC;IACnF;IAEAH,cAAc,GAAG,IAAI;IACrBC,cAAc,GAAG,IAAI;IACrBE,UAAU,GAAG,CAAC;IACd9B,YAAY,GAAGrD,KAAK,CAAC7N,QAAQ;IAE7B,OAAO,CAACqM,MAAM,CAACrG,EAAE,CAAC,IAAKA,EAAE,KAAK,CAAE,EAAE;MAChCA,EAAE,GAAG6H,KAAK,CAAC9D,KAAK,CAAC9D,UAAU,CAAC,EAAE4H,KAAK,CAAC7N,QAAQ,CAAC;IAC/C;IAEA+O,cAAc,CAAClB,KAAK,EAAEqD,YAAY,EAAErD,KAAK,CAAC7N,QAAQ,EAAE,KAAK,CAAC;EAC5D;EAEA,OAAO,IAAI;AACb;AAEA,SAASkT,iBAAiBA,CAACrF,KAAK,EAAEiD,UAAU,EAAE;EAC5C,IAAIO,KAAK;IACLY,IAAI,GAAQpE,KAAK,CAACvL,GAAG;IACrB4P,OAAO,GAAKrE,KAAK,CAACsE,MAAM;IACxB7C,OAAO,GAAK,EAAE;IACd2B,SAAS;IACTkC,QAAQ,GAAI,KAAK;IACjBnN,EAAE;;EAEN;EACA;EACA,IAAI6H,KAAK,CAACH,cAAc,KAAK,CAAC,CAAC,EAAE,OAAO,KAAK;EAE7C,IAAIG,KAAK,CAACsE,MAAM,KAAK,IAAI,EAAE;IACzBtE,KAAK,CAAC2E,SAAS,CAAC3E,KAAK,CAACsE,MAAM,CAAC,GAAG7C,OAAO;EACzC;EAEAtJ,EAAE,GAAG6H,KAAK,CAAC9D,KAAK,CAAC9D,UAAU,CAAC4H,KAAK,CAAC7N,QAAQ,CAAC;EAE3C,OAAOgG,EAAE,KAAK,CAAC,EAAE;IACf,IAAI6H,KAAK,CAACH,cAAc,KAAK,CAAC,CAAC,EAAE;MAC/BG,KAAK,CAAC7N,QAAQ,GAAG6N,KAAK,CAACH,cAAc;MACrCI,UAAU,CAACD,KAAK,EAAE,gDAAgD,CAAC;IACrE;IAEA,IAAI7H,EAAE,KAAK,IAAI,UAAS;MACtB;IACF;IAEAiL,SAAS,GAAGpD,KAAK,CAAC9D,KAAK,CAAC9D,UAAU,CAAC4H,KAAK,CAAC7N,QAAQ,GAAG,CAAC,CAAC;IAEtD,IAAI,CAACuM,YAAY,CAAC0E,SAAS,CAAC,EAAE;MAC5B;IACF;IAEAkC,QAAQ,GAAG,IAAI;IACftF,KAAK,CAAC7N,QAAQ,EAAE;IAEhB,IAAIuQ,mBAAmB,CAAC1C,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,EAAE;MACxC,IAAIA,KAAK,CAACJ,UAAU,IAAIqD,UAAU,EAAE;QAClCxB,OAAO,CAAC7N,IAAI,CAAC,IAAI,CAAC;QAClBuE,EAAE,GAAG6H,KAAK,CAAC9D,KAAK,CAAC9D,UAAU,CAAC4H,KAAK,CAAC7N,QAAQ,CAAC;QAC3C;MACF;IACF;IAEAqR,KAAK,GAAGxD,KAAK,CAAC7O,IAAI;IAClByT,WAAW,CAAC5E,KAAK,EAAEiD,UAAU,EAAEpF,gBAAgB,EAAE,KAAK,EAAE,IAAI,CAAC;IAC7D4D,OAAO,CAAC7N,IAAI,CAACoM,KAAK,CAAClQ,MAAM,CAAC;IAC1B4S,mBAAmB,CAAC1C,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;IAEpC7H,EAAE,GAAG6H,KAAK,CAAC9D,KAAK,CAAC9D,UAAU,CAAC4H,KAAK,CAAC7N,QAAQ,CAAC;IAE3C,IAAI,CAAC6N,KAAK,CAAC7O,IAAI,KAAKqS,KAAK,IAAIxD,KAAK,CAACJ,UAAU,GAAGqD,UAAU,KAAM9K,EAAE,KAAK,CAAE,EAAE;MACzE8H,UAAU,CAACD,KAAK,EAAE,qCAAqC,CAAC;IAC1D,CAAC,MAAM,IAAIA,KAAK,CAACJ,UAAU,GAAGqD,UAAU,EAAE;MACxC;IACF;EACF;EAEA,IAAIqC,QAAQ,EAAE;IACZtF,KAAK,CAACvL,GAAG,GAAG2P,IAAI;IAChBpE,KAAK,CAACsE,MAAM,GAAGD,OAAO;IACtBrE,KAAK,CAACrL,IAAI,GAAG,UAAU;IACvBqL,KAAK,CAAClQ,MAAM,GAAG2R,OAAO;IACtB,OAAO,IAAI;EACb;EACA,OAAO,KAAK;AACd;AAEA,SAAS8D,gBAAgBA,CAACvF,KAAK,EAAEiD,UAAU,EAAEuC,UAAU,EAAE;EACvD,IAAIpC,SAAS;IACTqC,YAAY;IACZjC,KAAK;IACLkC,QAAQ;IACRC,aAAa;IACbC,OAAO;IACPxB,IAAI,GAAYpE,KAAK,CAACvL,GAAG;IACzB4P,OAAO,GAASrE,KAAK,CAACsE,MAAM;IAC5B7C,OAAO,GAAS,CAAC,CAAC;IAClBG,eAAe,GAAGnS,MAAM,CAACoC,MAAM,CAAC,IAAI,CAAC;IACrCkQ,MAAM,GAAU,IAAI;IACpBC,OAAO,GAAS,IAAI;IACpBC,SAAS,GAAO,IAAI;IACpB4D,aAAa,GAAG,KAAK;IACrBP,QAAQ,GAAQ,KAAK;IACrBnN,EAAE;;EAEN;EACA;EACA,IAAI6H,KAAK,CAACH,cAAc,KAAK,CAAC,CAAC,EAAE,OAAO,KAAK;EAE7C,IAAIG,KAAK,CAACsE,MAAM,KAAK,IAAI,EAAE;IACzBtE,KAAK,CAAC2E,SAAS,CAAC3E,KAAK,CAACsE,MAAM,CAAC,GAAG7C,OAAO;EACzC;EAEAtJ,EAAE,GAAG6H,KAAK,CAAC9D,KAAK,CAAC9D,UAAU,CAAC4H,KAAK,CAAC7N,QAAQ,CAAC;EAE3C,OAAOgG,EAAE,KAAK,CAAC,EAAE;IACf,IAAI,CAAC0N,aAAa,IAAI7F,KAAK,CAACH,cAAc,KAAK,CAAC,CAAC,EAAE;MACjDG,KAAK,CAAC7N,QAAQ,GAAG6N,KAAK,CAACH,cAAc;MACrCI,UAAU,CAACD,KAAK,EAAE,gDAAgD,CAAC;IACrE;IAEAoD,SAAS,GAAGpD,KAAK,CAAC9D,KAAK,CAAC9D,UAAU,CAAC4H,KAAK,CAAC7N,QAAQ,GAAG,CAAC,CAAC;IACtDqR,KAAK,GAAGxD,KAAK,CAAC7O,IAAI,CAAC,CAAC;;IAEpB;IACA;IACA;IACA;IACA,IAAI,CAACgH,EAAE,KAAK,IAAI,YAAWA,EAAE,KAAK,IAAI,aAAYuG,YAAY,CAAC0E,SAAS,CAAC,EAAE;MAEzE,IAAIjL,EAAE,KAAK,IAAI,UAAS;QACtB,IAAI0N,aAAa,EAAE;UACjB/D,gBAAgB,CAAC9B,KAAK,EAAEyB,OAAO,EAAEG,eAAe,EAAEG,MAAM,EAAEC,OAAO,EAAE,IAAI,EAAE0D,QAAQ,EAAEC,aAAa,EAAEC,OAAO,CAAC;UAC1G7D,MAAM,GAAGC,OAAO,GAAGC,SAAS,GAAG,IAAI;QACrC;QAEAqD,QAAQ,GAAG,IAAI;QACfO,aAAa,GAAG,IAAI;QACpBJ,YAAY,GAAG,IAAI;MAErB,CAAC,MAAM,IAAII,aAAa,EAAE;QACxB;QACAA,aAAa,GAAG,KAAK;QACrBJ,YAAY,GAAG,IAAI;MAErB,CAAC,MAAM;QACLxF,UAAU,CAACD,KAAK,EAAE,mGAAmG,CAAC;MACxH;MAEAA,KAAK,CAAC7N,QAAQ,IAAI,CAAC;MACnBgG,EAAE,GAAGiL,SAAS;;MAEhB;MACA;MACA;IACA,CAAC,MAAM;MACLsC,QAAQ,GAAG1F,KAAK,CAAC7O,IAAI;MACrBwU,aAAa,GAAG3F,KAAK,CAAC/N,SAAS;MAC/B2T,OAAO,GAAG5F,KAAK,CAAC7N,QAAQ;MAExB,IAAI,CAACyS,WAAW,CAAC5E,KAAK,EAAEwF,UAAU,EAAE5H,gBAAgB,EAAE,KAAK,EAAE,IAAI,CAAC,EAAE;QAClE;QACA;QACA;MACF;MAEA,IAAIoC,KAAK,CAAC7O,IAAI,KAAKqS,KAAK,EAAE;QACxBrL,EAAE,GAAG6H,KAAK,CAAC9D,KAAK,CAAC9D,UAAU,CAAC4H,KAAK,CAAC7N,QAAQ,CAAC;QAE3C,OAAOsM,cAAc,CAACtG,EAAE,CAAC,EAAE;UACzBA,EAAE,GAAG6H,KAAK,CAAC9D,KAAK,CAAC9D,UAAU,CAAC,EAAE4H,KAAK,CAAC7N,QAAQ,CAAC;QAC/C;QAEA,IAAIgG,EAAE,KAAK,IAAI,UAAS;UACtBA,EAAE,GAAG6H,KAAK,CAAC9D,KAAK,CAAC9D,UAAU,CAAC,EAAE4H,KAAK,CAAC7N,QAAQ,CAAC;UAE7C,IAAI,CAACuM,YAAY,CAACvG,EAAE,CAAC,EAAE;YACrB8H,UAAU,CAACD,KAAK,EAAE,yFAAyF,CAAC;UAC9G;UAEA,IAAI6F,aAAa,EAAE;YACjB/D,gBAAgB,CAAC9B,KAAK,EAAEyB,OAAO,EAAEG,eAAe,EAAEG,MAAM,EAAEC,OAAO,EAAE,IAAI,EAAE0D,QAAQ,EAAEC,aAAa,EAAEC,OAAO,CAAC;YAC1G7D,MAAM,GAAGC,OAAO,GAAGC,SAAS,GAAG,IAAI;UACrC;UAEAqD,QAAQ,GAAG,IAAI;UACfO,aAAa,GAAG,KAAK;UACrBJ,YAAY,GAAG,KAAK;UACpB1D,MAAM,GAAG/B,KAAK,CAACvL,GAAG;UAClBuN,OAAO,GAAGhC,KAAK,CAAClQ,MAAM;QAExB,CAAC,MAAM,IAAIwV,QAAQ,EAAE;UACnBrF,UAAU,CAACD,KAAK,EAAE,0DAA0D,CAAC;QAE/E,CAAC,MAAM;UACLA,KAAK,CAACvL,GAAG,GAAG2P,IAAI;UAChBpE,KAAK,CAACsE,MAAM,GAAGD,OAAO;UACtB,OAAO,IAAI,CAAC,CAAC;QACf;MAEF,CAAC,MAAM,IAAIiB,QAAQ,EAAE;QACnBrF,UAAU,CAACD,KAAK,EAAE,gFAAgF,CAAC;MAErG,CAAC,MAAM;QACLA,KAAK,CAACvL,GAAG,GAAG2P,IAAI;QAChBpE,KAAK,CAACsE,MAAM,GAAGD,OAAO;QACtB,OAAO,IAAI,CAAC,CAAC;MACf;IACF;;IAEA;IACA;IACA;IACA,IAAIrE,KAAK,CAAC7O,IAAI,KAAKqS,KAAK,IAAIxD,KAAK,CAACJ,UAAU,GAAGqD,UAAU,EAAE;MACzD,IAAI4C,aAAa,EAAE;QACjBH,QAAQ,GAAG1F,KAAK,CAAC7O,IAAI;QACrBwU,aAAa,GAAG3F,KAAK,CAAC/N,SAAS;QAC/B2T,OAAO,GAAG5F,KAAK,CAAC7N,QAAQ;MAC1B;MAEA,IAAIyS,WAAW,CAAC5E,KAAK,EAAEiD,UAAU,EAAEnF,iBAAiB,EAAE,IAAI,EAAE2H,YAAY,CAAC,EAAE;QACzE,IAAII,aAAa,EAAE;UACjB7D,OAAO,GAAGhC,KAAK,CAAClQ,MAAM;QACxB,CAAC,MAAM;UACLmS,SAAS,GAAGjC,KAAK,CAAClQ,MAAM;QAC1B;MACF;MAEA,IAAI,CAAC+V,aAAa,EAAE;QAClB/D,gBAAgB,CAAC9B,KAAK,EAAEyB,OAAO,EAAEG,eAAe,EAAEG,MAAM,EAAEC,OAAO,EAAEC,SAAS,EAAEyD,QAAQ,EAAEC,aAAa,EAAEC,OAAO,CAAC;QAC/G7D,MAAM,GAAGC,OAAO,GAAGC,SAAS,GAAG,IAAI;MACrC;MAEAS,mBAAmB,CAAC1C,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;MACpC7H,EAAE,GAAG6H,KAAK,CAAC9D,KAAK,CAAC9D,UAAU,CAAC4H,KAAK,CAAC7N,QAAQ,CAAC;IAC7C;IAEA,IAAI,CAAC6N,KAAK,CAAC7O,IAAI,KAAKqS,KAAK,IAAIxD,KAAK,CAACJ,UAAU,GAAGqD,UAAU,KAAM9K,EAAE,KAAK,CAAE,EAAE;MACzE8H,UAAU,CAACD,KAAK,EAAE,oCAAoC,CAAC;IACzD,CAAC,MAAM,IAAIA,KAAK,CAACJ,UAAU,GAAGqD,UAAU,EAAE;MACxC;IACF;EACF;;EAEA;EACA;EACA;;EAEA;EACA,IAAI4C,aAAa,EAAE;IACjB/D,gBAAgB,CAAC9B,KAAK,EAAEyB,OAAO,EAAEG,eAAe,EAAEG,MAAM,EAAEC,OAAO,EAAE,IAAI,EAAE0D,QAAQ,EAAEC,aAAa,EAAEC,OAAO,CAAC;EAC5G;;EAEA;EACA,IAAIN,QAAQ,EAAE;IACZtF,KAAK,CAACvL,GAAG,GAAG2P,IAAI;IAChBpE,KAAK,CAACsE,MAAM,GAAGD,OAAO;IACtBrE,KAAK,CAACrL,IAAI,GAAG,SAAS;IACtBqL,KAAK,CAAClQ,MAAM,GAAG2R,OAAO;EACxB;EAEA,OAAO6D,QAAQ;AACjB;AAEA,SAASQ,eAAeA,CAAC9F,KAAK,EAAE;EAC9B,IAAIsB,SAAS;IACTyE,UAAU,GAAG,KAAK;IAClBC,OAAO,GAAM,KAAK;IAClBC,SAAS;IACTC,OAAO;IACP/N,EAAE;EAENA,EAAE,GAAG6H,KAAK,CAAC9D,KAAK,CAAC9D,UAAU,CAAC4H,KAAK,CAAC7N,QAAQ,CAAC;EAE3C,IAAIgG,EAAE,KAAK,IAAI,UAAS,OAAO,KAAK;EAEpC,IAAI6H,KAAK,CAACvL,GAAG,KAAK,IAAI,EAAE;IACtBwL,UAAU,CAACD,KAAK,EAAE,+BAA+B,CAAC;EACpD;EAEA7H,EAAE,GAAG6H,KAAK,CAAC9D,KAAK,CAAC9D,UAAU,CAAC,EAAE4H,KAAK,CAAC7N,QAAQ,CAAC;EAE7C,IAAIgG,EAAE,KAAK,IAAI,UAAS;IACtB4N,UAAU,GAAG,IAAI;IACjB5N,EAAE,GAAG6H,KAAK,CAAC9D,KAAK,CAAC9D,UAAU,CAAC,EAAE4H,KAAK,CAAC7N,QAAQ,CAAC;EAE/C,CAAC,MAAM,IAAIgG,EAAE,KAAK,IAAI,UAAS;IAC7B6N,OAAO,GAAG,IAAI;IACdC,SAAS,GAAG,IAAI;IAChB9N,EAAE,GAAG6H,KAAK,CAAC9D,KAAK,CAAC9D,UAAU,CAAC,EAAE4H,KAAK,CAAC7N,QAAQ,CAAC;EAE/C,CAAC,MAAM;IACL8T,SAAS,GAAG,GAAG;EACjB;EAEA3E,SAAS,GAAGtB,KAAK,CAAC7N,QAAQ;EAE1B,IAAI4T,UAAU,EAAE;IACd,GAAG;MAAE5N,EAAE,GAAG6H,KAAK,CAAC9D,KAAK,CAAC9D,UAAU,CAAC,EAAE4H,KAAK,CAAC7N,QAAQ,CAAC;IAAE,CAAC,QAC9CgG,EAAE,KAAK,CAAC,IAAIA,EAAE,KAAK,IAAI;IAE9B,IAAI6H,KAAK,CAAC7N,QAAQ,GAAG6N,KAAK,CAAC1Q,MAAM,EAAE;MACjC4W,OAAO,GAAGlG,KAAK,CAAC9D,KAAK,CAACvJ,KAAK,CAAC2O,SAAS,EAAEtB,KAAK,CAAC7N,QAAQ,CAAC;MACtDgG,EAAE,GAAG6H,KAAK,CAAC9D,KAAK,CAAC9D,UAAU,CAAC,EAAE4H,KAAK,CAAC7N,QAAQ,CAAC;IAC/C,CAAC,MAAM;MACL8N,UAAU,CAACD,KAAK,EAAE,oDAAoD,CAAC;IACzE;EACF,CAAC,MAAM;IACL,OAAO7H,EAAE,KAAK,CAAC,IAAI,CAACuG,YAAY,CAACvG,EAAE,CAAC,EAAE;MAEpC,IAAIA,EAAE,KAAK,IAAI,UAAS;QACtB,IAAI,CAAC6N,OAAO,EAAE;UACZC,SAAS,GAAGjG,KAAK,CAAC9D,KAAK,CAACvJ,KAAK,CAAC2O,SAAS,GAAG,CAAC,EAAEtB,KAAK,CAAC7N,QAAQ,GAAG,CAAC,CAAC;UAEhE,IAAI,CAACkM,kBAAkB,CAACjF,IAAI,CAAC6M,SAAS,CAAC,EAAE;YACvChG,UAAU,CAACD,KAAK,EAAE,iDAAiD,CAAC;UACtE;UAEAgG,OAAO,GAAG,IAAI;UACd1E,SAAS,GAAGtB,KAAK,CAAC7N,QAAQ,GAAG,CAAC;QAChC,CAAC,MAAM;UACL8N,UAAU,CAACD,KAAK,EAAE,6CAA6C,CAAC;QAClE;MACF;MAEA7H,EAAE,GAAG6H,KAAK,CAAC9D,KAAK,CAAC9D,UAAU,CAAC,EAAE4H,KAAK,CAAC7N,QAAQ,CAAC;IAC/C;IAEA+T,OAAO,GAAGlG,KAAK,CAAC9D,KAAK,CAACvJ,KAAK,CAAC2O,SAAS,EAAEtB,KAAK,CAAC7N,QAAQ,CAAC;IAEtD,IAAIiM,uBAAuB,CAAChF,IAAI,CAAC8M,OAAO,CAAC,EAAE;MACzCjG,UAAU,CAACD,KAAK,EAAE,qDAAqD,CAAC;IAC1E;EACF;EAEA,IAAIkG,OAAO,IAAI,CAAC5H,eAAe,CAAClF,IAAI,CAAC8M,OAAO,CAAC,EAAE;IAC7CjG,UAAU,CAACD,KAAK,EAAE,2CAA2C,GAAGkG,OAAO,CAAC;EAC1E;EAEA,IAAI;IACFA,OAAO,GAAGlF,kBAAkB,CAACkF,OAAO,CAAC;EACvC,CAAC,CAAC,OAAOjF,GAAG,EAAE;IACZhB,UAAU,CAACD,KAAK,EAAE,yBAAyB,GAAGkG,OAAO,CAAC;EACxD;EAEA,IAAIH,UAAU,EAAE;IACd/F,KAAK,CAACvL,GAAG,GAAGyR,OAAO;EAErB,CAAC,MAAM,IAAIxI,iBAAiB,CAAClM,IAAI,CAACwO,KAAK,CAACe,MAAM,EAAEkF,SAAS,CAAC,EAAE;IAC1DjG,KAAK,CAACvL,GAAG,GAAGuL,KAAK,CAACe,MAAM,CAACkF,SAAS,CAAC,GAAGC,OAAO;EAE/C,CAAC,MAAM,IAAID,SAAS,KAAK,GAAG,EAAE;IAC5BjG,KAAK,CAACvL,GAAG,GAAG,GAAG,GAAGyR,OAAO;EAE3B,CAAC,MAAM,IAAID,SAAS,KAAK,IAAI,EAAE;IAC7BjG,KAAK,CAACvL,GAAG,GAAG,oBAAoB,GAAGyR,OAAO;EAE5C,CAAC,MAAM;IACLjG,UAAU,CAACD,KAAK,EAAE,yBAAyB,GAAGiG,SAAS,GAAG,GAAG,CAAC;EAChE;EAEA,OAAO,IAAI;AACb;AAEA,SAASE,kBAAkBA,CAACnG,KAAK,EAAE;EACjC,IAAIsB,SAAS,EACTnJ,EAAE;EAENA,EAAE,GAAG6H,KAAK,CAAC9D,KAAK,CAAC9D,UAAU,CAAC4H,KAAK,CAAC7N,QAAQ,CAAC;EAE3C,IAAIgG,EAAE,KAAK,IAAI,UAAS,OAAO,KAAK;EAEpC,IAAI6H,KAAK,CAACsE,MAAM,KAAK,IAAI,EAAE;IACzBrE,UAAU,CAACD,KAAK,EAAE,mCAAmC,CAAC;EACxD;EAEA7H,EAAE,GAAG6H,KAAK,CAAC9D,KAAK,CAAC9D,UAAU,CAAC,EAAE4H,KAAK,CAAC7N,QAAQ,CAAC;EAC7CmP,SAAS,GAAGtB,KAAK,CAAC7N,QAAQ;EAE1B,OAAOgG,EAAE,KAAK,CAAC,IAAI,CAACuG,YAAY,CAACvG,EAAE,CAAC,IAAI,CAACwG,iBAAiB,CAACxG,EAAE,CAAC,EAAE;IAC9DA,EAAE,GAAG6H,KAAK,CAAC9D,KAAK,CAAC9D,UAAU,CAAC,EAAE4H,KAAK,CAAC7N,QAAQ,CAAC;EAC/C;EAEA,IAAI6N,KAAK,CAAC7N,QAAQ,KAAKmP,SAAS,EAAE;IAChCrB,UAAU,CAACD,KAAK,EAAE,4DAA4D,CAAC;EACjF;EAEAA,KAAK,CAACsE,MAAM,GAAGtE,KAAK,CAAC9D,KAAK,CAACvJ,KAAK,CAAC2O,SAAS,EAAEtB,KAAK,CAAC7N,QAAQ,CAAC;EAC3D,OAAO,IAAI;AACb;AAEA,SAASiU,SAASA,CAACpG,KAAK,EAAE;EACxB,IAAIsB,SAAS,EAAEhN,KAAK,EAChB6D,EAAE;EAENA,EAAE,GAAG6H,KAAK,CAAC9D,KAAK,CAAC9D,UAAU,CAAC4H,KAAK,CAAC7N,QAAQ,CAAC;EAE3C,IAAIgG,EAAE,KAAK,IAAI,UAAS,OAAO,KAAK;EAEpCA,EAAE,GAAG6H,KAAK,CAAC9D,KAAK,CAAC9D,UAAU,CAAC,EAAE4H,KAAK,CAAC7N,QAAQ,CAAC;EAC7CmP,SAAS,GAAGtB,KAAK,CAAC7N,QAAQ;EAE1B,OAAOgG,EAAE,KAAK,CAAC,IAAI,CAACuG,YAAY,CAACvG,EAAE,CAAC,IAAI,CAACwG,iBAAiB,CAACxG,EAAE,CAAC,EAAE;IAC9DA,EAAE,GAAG6H,KAAK,CAAC9D,KAAK,CAAC9D,UAAU,CAAC,EAAE4H,KAAK,CAAC7N,QAAQ,CAAC;EAC/C;EAEA,IAAI6N,KAAK,CAAC7N,QAAQ,KAAKmP,SAAS,EAAE;IAChCrB,UAAU,CAACD,KAAK,EAAE,2DAA2D,CAAC;EAChF;EAEA1L,KAAK,GAAG0L,KAAK,CAAC9D,KAAK,CAACvJ,KAAK,CAAC2O,SAAS,EAAEtB,KAAK,CAAC7N,QAAQ,CAAC;EAEpD,IAAI,CAACuL,iBAAiB,CAAClM,IAAI,CAACwO,KAAK,CAAC2E,SAAS,EAAErQ,KAAK,CAAC,EAAE;IACnD2L,UAAU,CAACD,KAAK,EAAE,sBAAsB,GAAG1L,KAAK,GAAG,GAAG,CAAC;EACzD;EAEA0L,KAAK,CAAClQ,MAAM,GAAGkQ,KAAK,CAAC2E,SAAS,CAACrQ,KAAK,CAAC;EACrCoO,mBAAmB,CAAC1C,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;EACpC,OAAO,IAAI;AACb;AAEA,SAAS4E,WAAWA,CAAC5E,KAAK,EAAEqG,YAAY,EAAEC,WAAW,EAAEC,WAAW,EAAEd,YAAY,EAAE;EAChF,IAAIe,gBAAgB;IAChBC,iBAAiB;IACjBC,qBAAqB;IACrBC,YAAY,GAAG,CAAC;IAAE;IAClBC,SAAS,GAAI,KAAK;IAClBC,UAAU,GAAG,KAAK;IAClBC,SAAS;IACTC,YAAY;IACZC,QAAQ;IACR1R,IAAI;IACJkQ,UAAU;IACVyB,WAAW;EAEf,IAAIjH,KAAK,CAACP,QAAQ,KAAK,IAAI,EAAE;IAC3BO,KAAK,CAACP,QAAQ,CAAC,MAAM,EAAEO,KAAK,CAAC;EAC/B;EAEAA,KAAK,CAACvL,GAAG,GAAM,IAAI;EACnBuL,KAAK,CAACsE,MAAM,GAAG,IAAI;EACnBtE,KAAK,CAACrL,IAAI,GAAK,IAAI;EACnBqL,KAAK,CAAClQ,MAAM,GAAG,IAAI;EAEnB0W,gBAAgB,GAAGC,iBAAiB,GAAGC,qBAAqB,GAC1D5I,iBAAiB,KAAKwI,WAAW,IACjCzI,gBAAgB,KAAMyI,WAAW;EAEnC,IAAIC,WAAW,EAAE;IACf,IAAI7D,mBAAmB,CAAC1C,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,EAAE;MACxC4G,SAAS,GAAG,IAAI;MAEhB,IAAI5G,KAAK,CAACJ,UAAU,GAAGyG,YAAY,EAAE;QACnCM,YAAY,GAAG,CAAC;MAClB,CAAC,MAAM,IAAI3G,KAAK,CAACJ,UAAU,KAAKyG,YAAY,EAAE;QAC5CM,YAAY,GAAG,CAAC;MAClB,CAAC,MAAM,IAAI3G,KAAK,CAACJ,UAAU,GAAGyG,YAAY,EAAE;QAC1CM,YAAY,GAAG,CAAC,CAAC;MACnB;IACF;EACF;EAEA,IAAIA,YAAY,KAAK,CAAC,EAAE;IACtB,OAAOb,eAAe,CAAC9F,KAAK,CAAC,IAAImG,kBAAkB,CAACnG,KAAK,CAAC,EAAE;MAC1D,IAAI0C,mBAAmB,CAAC1C,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,EAAE;QACxC4G,SAAS,GAAG,IAAI;QAChBF,qBAAqB,GAAGF,gBAAgB;QAExC,IAAIxG,KAAK,CAACJ,UAAU,GAAGyG,YAAY,EAAE;UACnCM,YAAY,GAAG,CAAC;QAClB,CAAC,MAAM,IAAI3G,KAAK,CAACJ,UAAU,KAAKyG,YAAY,EAAE;UAC5CM,YAAY,GAAG,CAAC;QAClB,CAAC,MAAM,IAAI3G,KAAK,CAACJ,UAAU,GAAGyG,YAAY,EAAE;UAC1CM,YAAY,GAAG,CAAC,CAAC;QACnB;MACF,CAAC,MAAM;QACLD,qBAAqB,GAAG,KAAK;MAC/B;IACF;EACF;EAEA,IAAIA,qBAAqB,EAAE;IACzBA,qBAAqB,GAAGE,SAAS,IAAInB,YAAY;EACnD;EAEA,IAAIkB,YAAY,KAAK,CAAC,IAAI7I,iBAAiB,KAAKwI,WAAW,EAAE;IAC3D,IAAI3I,eAAe,KAAK2I,WAAW,IAAI1I,gBAAgB,KAAK0I,WAAW,EAAE;MACvEd,UAAU,GAAGa,YAAY;IAC3B,CAAC,MAAM;MACLb,UAAU,GAAGa,YAAY,GAAG,CAAC;IAC/B;IAEAY,WAAW,GAAGjH,KAAK,CAAC7N,QAAQ,GAAG6N,KAAK,CAAC/N,SAAS;IAE9C,IAAI0U,YAAY,KAAK,CAAC,EAAE;MACtB,IAAID,qBAAqB,KACpBrB,iBAAiB,CAACrF,KAAK,EAAEiH,WAAW,CAAC,IACrC1B,gBAAgB,CAACvF,KAAK,EAAEiH,WAAW,EAAEzB,UAAU,CAAC,CAAC,IAClDvB,kBAAkB,CAACjE,KAAK,EAAEwF,UAAU,CAAC,EAAE;QACzCqB,UAAU,GAAG,IAAI;MACnB,CAAC,MAAM;QACL,IAAKJ,iBAAiB,IAAI5B,eAAe,CAAC7E,KAAK,EAAEwF,UAAU,CAAC,IACxD5B,sBAAsB,CAAC5D,KAAK,EAAEwF,UAAU,CAAC,IACzC3B,sBAAsB,CAAC7D,KAAK,EAAEwF,UAAU,CAAC,EAAE;UAC7CqB,UAAU,GAAG,IAAI;QAEnB,CAAC,MAAM,IAAIT,SAAS,CAACpG,KAAK,CAAC,EAAE;UAC3B6G,UAAU,GAAG,IAAI;UAEjB,IAAI7G,KAAK,CAACvL,GAAG,KAAK,IAAI,IAAIuL,KAAK,CAACsE,MAAM,KAAK,IAAI,EAAE;YAC/CrE,UAAU,CAACD,KAAK,EAAE,2CAA2C,CAAC;UAChE;QAEF,CAAC,MAAM,IAAIgD,eAAe,CAAChD,KAAK,EAAEwF,UAAU,EAAE7H,eAAe,KAAK2I,WAAW,CAAC,EAAE;UAC9EO,UAAU,GAAG,IAAI;UAEjB,IAAI7G,KAAK,CAACvL,GAAG,KAAK,IAAI,EAAE;YACtBuL,KAAK,CAACvL,GAAG,GAAG,GAAG;UACjB;QACF;QAEA,IAAIuL,KAAK,CAACsE,MAAM,KAAK,IAAI,EAAE;UACzBtE,KAAK,CAAC2E,SAAS,CAAC3E,KAAK,CAACsE,MAAM,CAAC,GAAGtE,KAAK,CAAClQ,MAAM;QAC9C;MACF;IACF,CAAC,MAAM,IAAI6W,YAAY,KAAK,CAAC,EAAE;MAC7B;MACA;MACAE,UAAU,GAAGH,qBAAqB,IAAIrB,iBAAiB,CAACrF,KAAK,EAAEiH,WAAW,CAAC;IAC7E;EACF;EAEA,IAAIjH,KAAK,CAACvL,GAAG,KAAK,IAAI,EAAE;IACtB,IAAIuL,KAAK,CAACsE,MAAM,KAAK,IAAI,EAAE;MACzBtE,KAAK,CAAC2E,SAAS,CAAC3E,KAAK,CAACsE,MAAM,CAAC,GAAGtE,KAAK,CAAClQ,MAAM;IAC9C;EAEF,CAAC,MAAM,IAAIkQ,KAAK,CAACvL,GAAG,KAAK,GAAG,EAAE;IAC5B;IACA;IACA;IACA;IACA;IACA;IACA,IAAIuL,KAAK,CAAClQ,MAAM,KAAK,IAAI,IAAIkQ,KAAK,CAACrL,IAAI,KAAK,QAAQ,EAAE;MACpDsL,UAAU,CAACD,KAAK,EAAE,mEAAmE,GAAGA,KAAK,CAACrL,IAAI,GAAG,GAAG,CAAC;IAC3G;IAEA,KAAKmS,SAAS,GAAG,CAAC,EAAEC,YAAY,GAAG/G,KAAK,CAACN,aAAa,CAACpQ,MAAM,EAAEwX,SAAS,GAAGC,YAAY,EAAED,SAAS,IAAI,CAAC,EAAE;MACvGxR,IAAI,GAAG0K,KAAK,CAACN,aAAa,CAACoH,SAAS,CAAC;MAErC,IAAIxR,IAAI,CAACV,OAAO,CAACoL,KAAK,CAAClQ,MAAM,CAAC,EAAE;QAAE;QAChCkQ,KAAK,CAAClQ,MAAM,GAAGwF,IAAI,CAACT,SAAS,CAACmL,KAAK,CAAClQ,MAAM,CAAC;QAC3CkQ,KAAK,CAACvL,GAAG,GAAGa,IAAI,CAACb,GAAG;QACpB,IAAIuL,KAAK,CAACsE,MAAM,KAAK,IAAI,EAAE;UACzBtE,KAAK,CAAC2E,SAAS,CAAC3E,KAAK,CAACsE,MAAM,CAAC,GAAGtE,KAAK,CAAClQ,MAAM;QAC9C;QACA;MACF;IACF;EACF,CAAC,MAAM,IAAIkQ,KAAK,CAACvL,GAAG,KAAK,GAAG,EAAE;IAC5B,IAAIiJ,iBAAiB,CAAClM,IAAI,CAACwO,KAAK,CAACL,OAAO,CAACK,KAAK,CAACrL,IAAI,IAAI,UAAU,CAAC,EAAEqL,KAAK,CAACvL,GAAG,CAAC,EAAE;MAC9Ea,IAAI,GAAG0K,KAAK,CAACL,OAAO,CAACK,KAAK,CAACrL,IAAI,IAAI,UAAU,CAAC,CAACqL,KAAK,CAACvL,GAAG,CAAC;IAC3D,CAAC,MAAM;MACL;MACAa,IAAI,GAAG,IAAI;MACX0R,QAAQ,GAAGhH,KAAK,CAACL,OAAO,CAACvK,KAAK,CAAC4K,KAAK,CAACrL,IAAI,IAAI,UAAU,CAAC;MAExD,KAAKmS,SAAS,GAAG,CAAC,EAAEC,YAAY,GAAGC,QAAQ,CAAC1X,MAAM,EAAEwX,SAAS,GAAGC,YAAY,EAAED,SAAS,IAAI,CAAC,EAAE;QAC5F,IAAI9G,KAAK,CAACvL,GAAG,CAAC9B,KAAK,CAAC,CAAC,EAAEqU,QAAQ,CAACF,SAAS,CAAC,CAACrS,GAAG,CAACnF,MAAM,CAAC,KAAK0X,QAAQ,CAACF,SAAS,CAAC,CAACrS,GAAG,EAAE;UAClFa,IAAI,GAAG0R,QAAQ,CAACF,SAAS,CAAC;UAC1B;QACF;MACF;IACF;IAEA,IAAI,CAACxR,IAAI,EAAE;MACT2K,UAAU,CAACD,KAAK,EAAE,gBAAgB,GAAGA,KAAK,CAACvL,GAAG,GAAG,GAAG,CAAC;IACvD;IAEA,IAAIuL,KAAK,CAAClQ,MAAM,KAAK,IAAI,IAAIwF,IAAI,CAACX,IAAI,KAAKqL,KAAK,CAACrL,IAAI,EAAE;MACrDsL,UAAU,CAACD,KAAK,EAAE,+BAA+B,GAAGA,KAAK,CAACvL,GAAG,GAAG,uBAAuB,GAAGa,IAAI,CAACX,IAAI,GAAG,UAAU,GAAGqL,KAAK,CAACrL,IAAI,GAAG,GAAG,CAAC;IACtI;IAEA,IAAI,CAACW,IAAI,CAACV,OAAO,CAACoL,KAAK,CAAClQ,MAAM,EAAEkQ,KAAK,CAACvL,GAAG,CAAC,EAAE;MAAE;MAC5CwL,UAAU,CAACD,KAAK,EAAE,+BAA+B,GAAGA,KAAK,CAACvL,GAAG,GAAG,gBAAgB,CAAC;IACnF,CAAC,MAAM;MACLuL,KAAK,CAAClQ,MAAM,GAAGwF,IAAI,CAACT,SAAS,CAACmL,KAAK,CAAClQ,MAAM,EAAEkQ,KAAK,CAACvL,GAAG,CAAC;MACtD,IAAIuL,KAAK,CAACsE,MAAM,KAAK,IAAI,EAAE;QACzBtE,KAAK,CAAC2E,SAAS,CAAC3E,KAAK,CAACsE,MAAM,CAAC,GAAGtE,KAAK,CAAClQ,MAAM;MAC9C;IACF;EACF;EAEA,IAAIkQ,KAAK,CAACP,QAAQ,KAAK,IAAI,EAAE;IAC3BO,KAAK,CAACP,QAAQ,CAAC,OAAO,EAAEO,KAAK,CAAC;EAChC;EACA,OAAOA,KAAK,CAACvL,GAAG,KAAK,IAAI,IAAKuL,KAAK,CAACsE,MAAM,KAAK,IAAI,IAAIuC,UAAU;AACnE;AAEA,SAASK,YAAYA,CAAClH,KAAK,EAAE;EAC3B,IAAImH,aAAa,GAAGnH,KAAK,CAAC7N,QAAQ;IAC9BmP,SAAS;IACT8F,aAAa;IACbC,aAAa;IACbC,aAAa,GAAG,KAAK;IACrBnP,EAAE;EAEN6H,KAAK,CAACS,OAAO,GAAG,IAAI;EACpBT,KAAK,CAACU,eAAe,GAAGV,KAAK,CAACR,MAAM;EACpCQ,KAAK,CAACe,MAAM,GAAGtR,MAAM,CAACoC,MAAM,CAAC,IAAI,CAAC;EAClCmO,KAAK,CAAC2E,SAAS,GAAGlV,MAAM,CAACoC,MAAM,CAAC,IAAI,CAAC;EAErC,OAAO,CAACsG,EAAE,GAAG6H,KAAK,CAAC9D,KAAK,CAAC9D,UAAU,CAAC4H,KAAK,CAAC7N,QAAQ,CAAC,MAAM,CAAC,EAAE;IAC1DuQ,mBAAmB,CAAC1C,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;IAEpC7H,EAAE,GAAG6H,KAAK,CAAC9D,KAAK,CAAC9D,UAAU,CAAC4H,KAAK,CAAC7N,QAAQ,CAAC;IAE3C,IAAI6N,KAAK,CAACJ,UAAU,GAAG,CAAC,IAAIzH,EAAE,KAAK,IAAI,UAAS;MAC9C;IACF;IAEAmP,aAAa,GAAG,IAAI;IACpBnP,EAAE,GAAG6H,KAAK,CAAC9D,KAAK,CAAC9D,UAAU,CAAC,EAAE4H,KAAK,CAAC7N,QAAQ,CAAC;IAC7CmP,SAAS,GAAGtB,KAAK,CAAC7N,QAAQ;IAE1B,OAAOgG,EAAE,KAAK,CAAC,IAAI,CAACuG,YAAY,CAACvG,EAAE,CAAC,EAAE;MACpCA,EAAE,GAAG6H,KAAK,CAAC9D,KAAK,CAAC9D,UAAU,CAAC,EAAE4H,KAAK,CAAC7N,QAAQ,CAAC;IAC/C;IAEAiV,aAAa,GAAGpH,KAAK,CAAC9D,KAAK,CAACvJ,KAAK,CAAC2O,SAAS,EAAEtB,KAAK,CAAC7N,QAAQ,CAAC;IAC5DkV,aAAa,GAAG,EAAE;IAElB,IAAID,aAAa,CAAC9X,MAAM,GAAG,CAAC,EAAE;MAC5B2Q,UAAU,CAACD,KAAK,EAAE,8DAA8D,CAAC;IACnF;IAEA,OAAO7H,EAAE,KAAK,CAAC,EAAE;MACf,OAAOsG,cAAc,CAACtG,EAAE,CAAC,EAAE;QACzBA,EAAE,GAAG6H,KAAK,CAAC9D,KAAK,CAAC9D,UAAU,CAAC,EAAE4H,KAAK,CAAC7N,QAAQ,CAAC;MAC/C;MAEA,IAAIgG,EAAE,KAAK,IAAI,UAAS;QACtB,GAAG;UAAEA,EAAE,GAAG6H,KAAK,CAAC9D,KAAK,CAAC9D,UAAU,CAAC,EAAE4H,KAAK,CAAC7N,QAAQ,CAAC;QAAE,CAAC,QAC9CgG,EAAE,KAAK,CAAC,IAAI,CAACqG,MAAM,CAACrG,EAAE,CAAC;QAC9B;MACF;MAEA,IAAIqG,MAAM,CAACrG,EAAE,CAAC,EAAE;MAEhBmJ,SAAS,GAAGtB,KAAK,CAAC7N,QAAQ;MAE1B,OAAOgG,EAAE,KAAK,CAAC,IAAI,CAACuG,YAAY,CAACvG,EAAE,CAAC,EAAE;QACpCA,EAAE,GAAG6H,KAAK,CAAC9D,KAAK,CAAC9D,UAAU,CAAC,EAAE4H,KAAK,CAAC7N,QAAQ,CAAC;MAC/C;MAEAkV,aAAa,CAACzT,IAAI,CAACoM,KAAK,CAAC9D,KAAK,CAACvJ,KAAK,CAAC2O,SAAS,EAAEtB,KAAK,CAAC7N,QAAQ,CAAC,CAAC;IAClE;IAEA,IAAIgG,EAAE,KAAK,CAAC,EAAEsK,aAAa,CAACzC,KAAK,CAAC;IAElC,IAAItC,iBAAiB,CAAClM,IAAI,CAAC2O,iBAAiB,EAAEiH,aAAa,CAAC,EAAE;MAC5DjH,iBAAiB,CAACiH,aAAa,CAAC,CAACpH,KAAK,EAAEoH,aAAa,EAAEC,aAAa,CAAC;IACvE,CAAC,MAAM;MACLnH,YAAY,CAACF,KAAK,EAAE,8BAA8B,GAAGoH,aAAa,GAAG,GAAG,CAAC;IAC3E;EACF;EAEA1E,mBAAmB,CAAC1C,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;EAEpC,IAAIA,KAAK,CAACJ,UAAU,KAAK,CAAC,IACtBI,KAAK,CAAC9D,KAAK,CAAC9D,UAAU,CAAC4H,KAAK,CAAC7N,QAAQ,CAAC,KAAS,IAAI,YACnD6N,KAAK,CAAC9D,KAAK,CAAC9D,UAAU,CAAC4H,KAAK,CAAC7N,QAAQ,GAAG,CAAC,CAAC,KAAK,IAAI,YACnD6N,KAAK,CAAC9D,KAAK,CAAC9D,UAAU,CAAC4H,KAAK,CAAC7N,QAAQ,GAAG,CAAC,CAAC,KAAK,IAAI,UAAS;IAC9D6N,KAAK,CAAC7N,QAAQ,IAAI,CAAC;IACnBuQ,mBAAmB,CAAC1C,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;EAEtC,CAAC,MAAM,IAAIsH,aAAa,EAAE;IACxBrH,UAAU,CAACD,KAAK,EAAE,iCAAiC,CAAC;EACtD;EAEA4E,WAAW,CAAC5E,KAAK,EAAEA,KAAK,CAACJ,UAAU,GAAG,CAAC,EAAE9B,iBAAiB,EAAE,KAAK,EAAE,IAAI,CAAC;EACxE4E,mBAAmB,CAAC1C,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;EAEpC,IAAIA,KAAK,CAACU,eAAe,IACrBvC,6BAA6B,CAAC/E,IAAI,CAAC4G,KAAK,CAAC9D,KAAK,CAACvJ,KAAK,CAACwU,aAAa,EAAEnH,KAAK,CAAC7N,QAAQ,CAAC,CAAC,EAAE;IACxF+N,YAAY,CAACF,KAAK,EAAE,kDAAkD,CAAC;EACzE;EAEAA,KAAK,CAACF,SAAS,CAAClM,IAAI,CAACoM,KAAK,CAAClQ,MAAM,CAAC;EAElC,IAAIkQ,KAAK,CAAC7N,QAAQ,KAAK6N,KAAK,CAAC/N,SAAS,IAAI6Q,qBAAqB,CAAC9C,KAAK,CAAC,EAAE;IAEtE,IAAIA,KAAK,CAAC9D,KAAK,CAAC9D,UAAU,CAAC4H,KAAK,CAAC7N,QAAQ,CAAC,KAAK,IAAI,UAAS;MAC1D6N,KAAK,CAAC7N,QAAQ,IAAI,CAAC;MACnBuQ,mBAAmB,CAAC1C,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;IACtC;IACA;EACF;EAEA,IAAIA,KAAK,CAAC7N,QAAQ,GAAI6N,KAAK,CAAC1Q,MAAM,GAAG,CAAE,EAAE;IACvC2Q,UAAU,CAACD,KAAK,EAAE,uDAAuD,CAAC;EAC5E,CAAC,MAAM;IACL;EACF;AACF;AAGA,SAASuH,aAAaA,CAACrL,KAAK,EAAEjJ,OAAO,EAAE;EACrCiJ,KAAK,GAAG3H,MAAM,CAAC2H,KAAK,CAAC;EACrBjJ,OAAO,GAAGA,OAAO,IAAI,CAAC,CAAC;EAEvB,IAAIiJ,KAAK,CAAC5M,MAAM,KAAK,CAAC,EAAE;IAEtB;IACA,IAAI4M,KAAK,CAAC9D,UAAU,CAAC8D,KAAK,CAAC5M,MAAM,GAAG,CAAC,CAAC,KAAK,IAAI,aAC3C4M,KAAK,CAAC9D,UAAU,CAAC8D,KAAK,CAAC5M,MAAM,GAAG,CAAC,CAAC,KAAK,IAAI,WAAU;MACvD4M,KAAK,IAAI,IAAI;IACf;;IAEA;IACA,IAAIA,KAAK,CAAC9D,UAAU,CAAC,CAAC,CAAC,KAAK,MAAM,EAAE;MAClC8D,KAAK,GAAGA,KAAK,CAACvJ,KAAK,CAAC,CAAC,CAAC;IACxB;EACF;EAEA,IAAIqN,KAAK,GAAG,IAAIX,OAAO,CAACnD,KAAK,EAAEjJ,OAAO,CAAC;EAEvC,IAAIuU,OAAO,GAAGtL,KAAK,CAACxH,OAAO,CAAC,IAAI,CAAC;EAEjC,IAAI8S,OAAO,KAAK,CAAC,CAAC,EAAE;IAClBxH,KAAK,CAAC7N,QAAQ,GAAGqV,OAAO;IACxBvH,UAAU,CAACD,KAAK,EAAE,mCAAmC,CAAC;EACxD;;EAEA;EACAA,KAAK,CAAC9D,KAAK,IAAI,IAAI;EAEnB,OAAO8D,KAAK,CAAC9D,KAAK,CAAC9D,UAAU,CAAC4H,KAAK,CAAC7N,QAAQ,CAAC,KAAK,IAAI,cAAa;IACjE6N,KAAK,CAACJ,UAAU,IAAI,CAAC;IACrBI,KAAK,CAAC7N,QAAQ,IAAI,CAAC;EACrB;EAEA,OAAO6N,KAAK,CAAC7N,QAAQ,GAAI6N,KAAK,CAAC1Q,MAAM,GAAG,CAAE,EAAE;IAC1C4X,YAAY,CAAClH,KAAK,CAAC;EACrB;EAEA,OAAOA,KAAK,CAACF,SAAS;AACxB;AAGA,SAAS2H,SAASA,CAACvL,KAAK,EAAEwL,QAAQ,EAAEzU,OAAO,EAAE;EAC3C,IAAIyU,QAAQ,KAAK,IAAI,IAAI,OAAOA,QAAQ,KAAK,QAAQ,IAAI,OAAOzU,OAAO,KAAK,WAAW,EAAE;IACvFA,OAAO,GAAGyU,QAAQ;IAClBA,QAAQ,GAAG,IAAI;EACjB;EAEA,IAAI5H,SAAS,GAAGyH,aAAa,CAACrL,KAAK,EAAEjJ,OAAO,CAAC;EAE7C,IAAI,OAAOyU,QAAQ,KAAK,UAAU,EAAE;IAClC,OAAO5H,SAAS;EAClB;EAEA,KAAK,IAAIzQ,KAAK,GAAG,CAAC,EAAEC,MAAM,GAAGwQ,SAAS,CAACxQ,MAAM,EAAED,KAAK,GAAGC,MAAM,EAAED,KAAK,IAAI,CAAC,EAAE;IACzEqY,QAAQ,CAAC5H,SAAS,CAACzQ,KAAK,CAAC,CAAC;EAC5B;AACF;AAGA,SAASsY,MAAMA,CAACzL,KAAK,EAAEjJ,OAAO,EAAE;EAC9B,IAAI6M,SAAS,GAAGyH,aAAa,CAACrL,KAAK,EAAEjJ,OAAO,CAAC;EAE7C,IAAI6M,SAAS,CAACxQ,MAAM,KAAK,CAAC,EAAE;IAC1B;IACA,OAAOsY,SAAS;EAClB,CAAC,MAAM,IAAI9H,SAAS,CAACxQ,MAAM,KAAK,CAAC,EAAE;IACjC,OAAOwQ,SAAS,CAAC,CAAC,CAAC;EACrB;EACA,MAAM,IAAIlP,SAAS,CAAC,0DAA0D,CAAC;AACjF;AAGA,IAAIiX,SAAS,GAAGJ,SAAS;AACzB,IAAIK,MAAM,GAAMH,MAAM;AAEtB,IAAII,MAAM,GAAG;EACZC,OAAO,EAAEH,SAAS;EAClBI,IAAI,EAAEH;AACP,CAAC;;AAED;;AAMA,IAAII,SAAS,GAASzY,MAAM,CAACmC,SAAS,CAACE,QAAQ;AAC/C,IAAIqW,eAAe,GAAG1Y,MAAM,CAACmC,SAAS,CAAC4K,cAAc;AAErD,IAAI4L,QAAQ,GAAoB,MAAM;AACtC,IAAIC,QAAQ,GAAoB,IAAI,CAAC,CAAC;AACtC,IAAIC,cAAc,GAAc,IAAI,CAAC,CAAC;AACtC,IAAIC,oBAAoB,GAAQ,IAAI,CAAC,CAAC;AACtC,IAAIC,UAAU,GAAkB,IAAI,CAAC,CAAC;AACtC,IAAIC,gBAAgB,GAAY,IAAI,CAAC,CAAC;AACtC,IAAIC,iBAAiB,GAAW,IAAI,CAAC,CAAC;AACtC,IAAIC,UAAU,GAAkB,IAAI,CAAC,CAAC;AACtC,IAAIC,YAAY,GAAgB,IAAI,CAAC,CAAC;AACtC,IAAIC,cAAc,GAAc,IAAI,CAAC,CAAC;AACtC,IAAIC,iBAAiB,GAAW,IAAI,CAAC,CAAC;AACtC,IAAIC,aAAa,GAAe,IAAI,CAAC,CAAC;AACtC,IAAIC,UAAU,GAAkB,IAAI,CAAC,CAAC;AACtC,IAAIC,UAAU,GAAkB,IAAI,CAAC,CAAC;AACtC,IAAIC,UAAU,GAAkB,IAAI,CAAC,CAAC;AACtC,IAAIC,WAAW,GAAiB,IAAI,CAAC,CAAC;AACtC,IAAIC,iBAAiB,GAAW,IAAI,CAAC,CAAC;AACtC,IAAIC,aAAa,GAAe,IAAI,CAAC,CAAC;AACtC,IAAIC,kBAAkB,GAAU,IAAI,CAAC,CAAC;AACtC,IAAIC,wBAAwB,GAAI,IAAI,CAAC,CAAC;AACtC,IAAIC,yBAAyB,GAAG,IAAI,CAAC,CAAC;AACtC,IAAIC,iBAAiB,GAAW,IAAI,CAAC,CAAC;AACtC,IAAIC,uBAAuB,GAAK,IAAI,CAAC,CAAC;AACtC,IAAIC,kBAAkB,GAAU,IAAI,CAAC,CAAC;AACtC,IAAIC,wBAAwB,GAAI,IAAI,CAAC,CAAC;;AAEtC,IAAIC,gBAAgB,GAAG,CAAC,CAAC;AAEzBA,gBAAgB,CAAC,IAAI,CAAC,GAAK,KAAK;AAChCA,gBAAgB,CAAC,IAAI,CAAC,GAAK,KAAK;AAChCA,gBAAgB,CAAC,IAAI,CAAC,GAAK,KAAK;AAChCA,gBAAgB,CAAC,IAAI,CAAC,GAAK,KAAK;AAChCA,gBAAgB,CAAC,IAAI,CAAC,GAAK,KAAK;AAChCA,gBAAgB,CAAC,IAAI,CAAC,GAAK,KAAK;AAChCA,gBAAgB,CAAC,IAAI,CAAC,GAAK,KAAK;AAChCA,gBAAgB,CAAC,IAAI,CAAC,GAAK,KAAK;AAChCA,gBAAgB,CAAC,IAAI,CAAC,GAAK,KAAK;AAChCA,gBAAgB,CAAC,IAAI,CAAC,GAAK,KAAK;AAChCA,gBAAgB,CAAC,IAAI,CAAC,GAAK,MAAM;AACjCA,gBAAgB,CAAC,IAAI,CAAC,GAAK,KAAK;AAChCA,gBAAgB,CAAC,IAAI,CAAC,GAAK,KAAK;AAChCA,gBAAgB,CAAC,MAAM,CAAC,GAAG,KAAK;AAChCA,gBAAgB,CAAC,MAAM,CAAC,GAAG,KAAK;AAEhC,IAAIC,0BAA0B,GAAG,CAC/B,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAC/C,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAChD;AAED,IAAIC,wBAAwB,GAAG,2CAA2C;AAE1E,SAASC,eAAeA,CAACxU,MAAM,EAAErB,GAAG,EAAE;EACpC,IAAIrE,MAAM,EAAEJ,IAAI,EAAEL,KAAK,EAAEC,MAAM,EAAEmF,GAAG,EAAEJ,KAAK,EAAEiB,IAAI;EAEjD,IAAInB,GAAG,KAAK,IAAI,EAAE,OAAO,CAAC,CAAC;EAE3BrE,MAAM,GAAG,CAAC,CAAC;EACXJ,IAAI,GAAGD,MAAM,CAACC,IAAI,CAACyE,GAAG,CAAC;EAEvB,KAAK9E,KAAK,GAAG,CAAC,EAAEC,MAAM,GAAGI,IAAI,CAACJ,MAAM,EAAED,KAAK,GAAGC,MAAM,EAAED,KAAK,IAAI,CAAC,EAAE;IAChEoF,GAAG,GAAG/E,IAAI,CAACL,KAAK,CAAC;IACjBgF,KAAK,GAAGE,MAAM,CAACJ,GAAG,CAACM,GAAG,CAAC,CAAC;IAExB,IAAIA,GAAG,CAAC9B,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE;MAC5B8B,GAAG,GAAG,oBAAoB,GAAGA,GAAG,CAAC9B,KAAK,CAAC,CAAC,CAAC;IAC3C;IACA2C,IAAI,GAAGE,MAAM,CAACoB,eAAe,CAAC,UAAU,CAAC,CAACnC,GAAG,CAAC;IAE9C,IAAIa,IAAI,IAAI6S,eAAe,CAAC3W,IAAI,CAAC8D,IAAI,CAACD,YAAY,EAAEhB,KAAK,CAAC,EAAE;MAC1DA,KAAK,GAAGiB,IAAI,CAACD,YAAY,CAAChB,KAAK,CAAC;IAClC;IAEAvE,MAAM,CAAC2E,GAAG,CAAC,GAAGJ,KAAK;EACrB;EAEA,OAAOvE,MAAM;AACf;AAEA,SAASma,SAASA,CAACC,SAAS,EAAE;EAC5B,IAAIta,MAAM,EAAEiR,MAAM,EAAEvR,MAAM;EAE1BM,MAAM,GAAGsa,SAAS,CAACpY,QAAQ,CAAC,EAAE,CAAC,CAACkH,WAAW,CAAC,CAAC;EAE7C,IAAIkR,SAAS,IAAI,IAAI,EAAE;IACrBrJ,MAAM,GAAG,GAAG;IACZvR,MAAM,GAAG,CAAC;EACZ,CAAC,MAAM,IAAI4a,SAAS,IAAI,MAAM,EAAE;IAC9BrJ,MAAM,GAAG,GAAG;IACZvR,MAAM,GAAG,CAAC;EACZ,CAAC,MAAM,IAAI4a,SAAS,IAAI,UAAU,EAAE;IAClCrJ,MAAM,GAAG,GAAG;IACZvR,MAAM,GAAG,CAAC;EACZ,CAAC,MAAM;IACL,MAAM,IAAIsB,SAAS,CAAC,+DAA+D,CAAC;EACtF;EAEA,OAAO,IAAI,GAAGiQ,MAAM,GAAGnQ,MAAM,CAACf,MAAM,CAAC,GAAG,EAAEL,MAAM,GAAGM,MAAM,CAACN,MAAM,CAAC,GAAGM,MAAM;AAC5E;AAGA,IAAIua,mBAAmB,GAAG,CAAC;EACvBC,mBAAmB,GAAG,CAAC;AAE3B,SAASC,KAAKA,CAACpX,OAAO,EAAE;EACtB,IAAI,CAACuC,MAAM,GAAUvC,OAAO,CAAC,QAAQ,CAAC,IAAIwK,QAAQ;EAClD,IAAI,CAACtK,MAAM,GAAUX,IAAI,CAACO,GAAG,CAAC,CAAC,EAAGE,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAE,CAAC;EAC1D,IAAI,CAACqX,aAAa,GAAGrX,OAAO,CAAC,eAAe,CAAC,IAAI,KAAK;EACtD,IAAI,CAACsX,WAAW,GAAKtX,OAAO,CAAC,aAAa,CAAC,IAAI,KAAK;EACpD,IAAI,CAACuX,SAAS,GAAQ9Z,MAAM,CAAC/B,SAAS,CAACsE,OAAO,CAAC,WAAW,CAAC,CAAC,GAAG,CAAC,CAAC,GAAGA,OAAO,CAAC,WAAW,CAAE;EACzF,IAAI,CAACwX,QAAQ,GAAQT,eAAe,CAAC,IAAI,CAACxU,MAAM,EAAEvC,OAAO,CAAC,QAAQ,CAAC,IAAI,IAAI,CAAC;EAC5E,IAAI,CAACyX,QAAQ,GAAQzX,OAAO,CAAC,UAAU,CAAC,IAAI,KAAK;EACjD,IAAI,CAAC0X,SAAS,GAAO1X,OAAO,CAAC,WAAW,CAAC,IAAI,EAAE;EAC/C,IAAI,CAAC2X,MAAM,GAAU3X,OAAO,CAAC,QAAQ,CAAC,IAAI,KAAK;EAC/C,IAAI,CAAC4X,YAAY,GAAI5X,OAAO,CAAC,cAAc,CAAC,IAAI,KAAK;EACrD,IAAI,CAAC6X,YAAY,GAAI7X,OAAO,CAAC,cAAc,CAAC,IAAI,KAAK;EACrD,IAAI,CAAC8X,WAAW,GAAK9X,OAAO,CAAC,aAAa,CAAC,KAAK,GAAG,GAAGmX,mBAAmB,GAAGD,mBAAmB;EAC/F,IAAI,CAACa,WAAW,GAAK/X,OAAO,CAAC,aAAa,CAAC,IAAI,KAAK;EACpD,IAAI,CAACgY,QAAQ,GAAQ,OAAOhY,OAAO,CAAC,UAAU,CAAC,KAAK,UAAU,GAAGA,OAAO,CAAC,UAAU,CAAC,GAAG,IAAI;EAE3F,IAAI,CAACyM,aAAa,GAAG,IAAI,CAAClK,MAAM,CAACkB,gBAAgB;EACjD,IAAI,CAACwU,aAAa,GAAG,IAAI,CAAC1V,MAAM,CAACmB,gBAAgB;EAEjD,IAAI,CAAClC,GAAG,GAAG,IAAI;EACf,IAAI,CAAC3E,MAAM,GAAG,EAAE;EAEhB,IAAI,CAACqb,UAAU,GAAG,EAAE;EACpB,IAAI,CAACC,cAAc,GAAG,IAAI;AAC5B;;AAEA;AACA,SAASC,YAAYA,CAACzb,MAAM,EAAE0b,MAAM,EAAE;EACpC,IAAIC,GAAG,GAAG7a,MAAM,CAACf,MAAM,CAAC,GAAG,EAAE2b,MAAM,CAAC;IAChCnZ,QAAQ,GAAG,CAAC;IACZqZ,IAAI,GAAG,CAAC,CAAC;IACT1b,MAAM,GAAG,EAAE;IACXqB,IAAI;IACJ7B,MAAM,GAAGM,MAAM,CAACN,MAAM;EAE1B,OAAO6C,QAAQ,GAAG7C,MAAM,EAAE;IACxBkc,IAAI,GAAG5b,MAAM,CAAC8E,OAAO,CAAC,IAAI,EAAEvC,QAAQ,CAAC;IACrC,IAAIqZ,IAAI,KAAK,CAAC,CAAC,EAAE;MACfra,IAAI,GAAGvB,MAAM,CAAC+C,KAAK,CAACR,QAAQ,CAAC;MAC7BA,QAAQ,GAAG7C,MAAM;IACnB,CAAC,MAAM;MACL6B,IAAI,GAAGvB,MAAM,CAAC+C,KAAK,CAACR,QAAQ,EAAEqZ,IAAI,GAAG,CAAC,CAAC;MACvCrZ,QAAQ,GAAGqZ,IAAI,GAAG,CAAC;IACrB;IAEA,IAAIra,IAAI,CAAC7B,MAAM,IAAI6B,IAAI,KAAK,IAAI,EAAErB,MAAM,IAAIyb,GAAG;IAE/Czb,MAAM,IAAIqB,IAAI;EAChB;EAEA,OAAOrB,MAAM;AACf;AAEA,SAAS2b,gBAAgBA,CAACzL,KAAK,EAAE0L,KAAK,EAAE;EACtC,OAAO,IAAI,GAAGhb,MAAM,CAACf,MAAM,CAAC,GAAG,EAAEqQ,KAAK,CAAC7M,MAAM,GAAGuY,KAAK,CAAC;AACxD;AAEA,SAASC,qBAAqBA,CAAC3L,KAAK,EAAEtN,GAAG,EAAE;EACzC,IAAIrD,KAAK,EAAEC,MAAM,EAAEgG,IAAI;EAEvB,KAAKjG,KAAK,GAAG,CAAC,EAAEC,MAAM,GAAG0Q,KAAK,CAACN,aAAa,CAACpQ,MAAM,EAAED,KAAK,GAAGC,MAAM,EAAED,KAAK,IAAI,CAAC,EAAE;IAC/EiG,IAAI,GAAG0K,KAAK,CAACN,aAAa,CAACrQ,KAAK,CAAC;IAEjC,IAAIiG,IAAI,CAACV,OAAO,CAAClC,GAAG,CAAC,EAAE;MACrB,OAAO,IAAI;IACb;EACF;EAEA,OAAO,KAAK;AACd;;AAEA;AACA,SAASkZ,YAAYA,CAAC9T,CAAC,EAAE;EACvB,OAAOA,CAAC,KAAK0Q,UAAU,IAAI1Q,CAAC,KAAKuQ,QAAQ;AAC3C;;AAEA;AACA;AACA;AACA;AACA,SAASwD,WAAWA,CAAC/T,CAAC,EAAE;EACtB,OAAS,OAAO,IAAIA,CAAC,IAAIA,CAAC,IAAI,QAAQ,IAC7B,OAAO,IAAIA,CAAC,IAAIA,CAAC,IAAI,QAAQ,IAAKA,CAAC,KAAK,MAAM,IAAIA,CAAC,KAAK,MAAO,IAC/D,OAAO,IAAIA,CAAC,IAAIA,CAAC,IAAI,QAAQ,IAAKA,CAAC,KAAKsQ,QAAS,IACjD,OAAO,IAAItQ,CAAC,IAAIA,CAAC,IAAI,QAAS;AACzC;;AAEA;AACA;AACA;AACA;AACA;AACA,SAASgU,oBAAoBA,CAAChU,CAAC,EAAE;EAC/B,OAAO+T,WAAW,CAAC/T,CAAC,CAAC,IAChBA,CAAC,KAAKsQ;EACT;EAAA,GACGtQ,CAAC,KAAKyQ,oBAAoB,IAC1BzQ,CAAC,KAAKwQ,cAAc;AAC3B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASyD,WAAWA,CAACjU,CAAC,EAAEkU,IAAI,EAAEC,OAAO,EAAE;EACrC,IAAIC,qBAAqB,GAAGJ,oBAAoB,CAAChU,CAAC,CAAC;EACnD,IAAIqU,SAAS,GAAGD,qBAAqB,IAAI,CAACN,YAAY,CAAC9T,CAAC,CAAC;EACzD,OAAO;EACL;EACAmU,OAAO;EAAG;EACRC,qBAAqB,GACnBA;EACA;EAAA,GACGpU,CAAC,KAAKkR,UAAU,IAChBlR,CAAC,KAAKyR,wBAAwB,IAC9BzR,CAAC,KAAK0R,yBAAyB,IAC/B1R,CAAC,KAAK4R,uBAAuB,IAC7B5R,CAAC,KAAK8R;;EAEb;EAAA,KACG9R,CAAC,KAAK6Q,UAAU,CAAC;EAAA,GACjB,EAAEqD,IAAI,KAAK9C,UAAU,IAAI,CAACiD,SAAS,CAAC,CAAC;EAAA,GACpCL,oBAAoB,CAACE,IAAI,CAAC,IAAI,CAACJ,YAAY,CAACI,IAAI,CAAC,IAAIlU,CAAC,KAAK6Q,UAAW,CAAC;EAAA,GACvEqD,IAAI,KAAK9C,UAAU,IAAIiD,SAAU,CAAC,CAAC;AAC3C;;AAEA;AACA,SAASC,gBAAgBA,CAACtU,CAAC,EAAE;EAC3B;EACA;EACA;EACA,OAAO+T,WAAW,CAAC/T,CAAC,CAAC,IAAIA,CAAC,KAAKsQ,QAAQ,IAClC,CAACwD,YAAY,CAAC9T,CAAC,CAAC,CAAC;EACpB;EACA;EAAA,GACGA,CAAC,KAAKmR,UAAU,IAChBnR,CAAC,KAAKuR,aAAa,IACnBvR,CAAC,KAAKoR,UAAU,IAChBpR,CAAC,KAAKkR,UAAU,IAChBlR,CAAC,KAAKyR,wBAAwB,IAC9BzR,CAAC,KAAK0R,yBAAyB,IAC/B1R,CAAC,KAAK4R,uBAAuB,IAC7B5R,CAAC,KAAK8R;EACT;EAAA,GACG9R,CAAC,KAAK6Q,UAAU,IAChB7Q,CAAC,KAAK+Q,cAAc,IACpB/Q,CAAC,KAAKiR,aAAa,IACnBjR,CAAC,KAAK2Q,gBAAgB,IACtB3Q,CAAC,KAAK6R,kBAAkB,IACxB7R,CAAC,KAAKqR,WAAW,IACjBrR,CAAC,KAAKsR,iBAAiB,IACvBtR,CAAC,KAAKgR,iBAAiB,IACvBhR,CAAC,KAAK4Q;EACT;EAAA,GACG5Q,CAAC,KAAK8Q,YAAY,IAClB9Q,CAAC,KAAKwR,kBAAkB,IACxBxR,CAAC,KAAK2R,iBAAiB;AAC9B;;AAEA;AACA,SAAS4C,eAAeA,CAACvU,CAAC,EAAE;EAC1B;EACA,OAAO,CAAC8T,YAAY,CAAC9T,CAAC,CAAC,IAAIA,CAAC,KAAKoR,UAAU;AAC7C;;AAEA;AACA,SAASoD,WAAWA,CAAC1c,MAAM,EAAEiD,GAAG,EAAE;EAChC,IAAI0Z,KAAK,GAAG3c,MAAM,CAACwI,UAAU,CAACvF,GAAG,CAAC;IAAE8H,MAAM;EAC1C,IAAI4R,KAAK,IAAI,MAAM,IAAIA,KAAK,IAAI,MAAM,IAAI1Z,GAAG,GAAG,CAAC,GAAGjD,MAAM,CAACN,MAAM,EAAE;IACjEqL,MAAM,GAAG/K,MAAM,CAACwI,UAAU,CAACvF,GAAG,GAAG,CAAC,CAAC;IACnC,IAAI8H,MAAM,IAAI,MAAM,IAAIA,MAAM,IAAI,MAAM,EAAE;MACxC;MACA,OAAO,CAAC4R,KAAK,GAAG,MAAM,IAAI,KAAK,GAAG5R,MAAM,GAAG,MAAM,GAAG,OAAO;IAC7D;EACF;EACA,OAAO4R,KAAK;AACd;;AAEA;AACA,SAASC,mBAAmBA,CAAC5c,MAAM,EAAE;EACnC,IAAI6c,cAAc,GAAG,OAAO;EAC5B,OAAOA,cAAc,CAACrT,IAAI,CAACxJ,MAAM,CAAC;AACpC;AAEA,IAAI8c,WAAW,GAAK,CAAC;EACjBC,YAAY,GAAI,CAAC;EACjBC,aAAa,GAAG,CAAC;EACjBC,YAAY,GAAI,CAAC;EACjBC,YAAY,GAAI,CAAC;;AAErB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,iBAAiBA,CAACnd,MAAM,EAAEod,cAAc,EAAEC,cAAc,EAAEtC,SAAS,EAC1EuC,iBAAiB,EAAEnC,WAAW,EAAEC,WAAW,EAAEiB,OAAO,EAAE;EAEtD,IAAIpY,CAAC;EACL,IAAIsZ,IAAI,GAAG,CAAC;EACZ,IAAIC,QAAQ,GAAG,IAAI;EACnB,IAAIC,YAAY,GAAG,KAAK;EACxB,IAAIC,eAAe,GAAG,KAAK,CAAC,CAAC;EAC7B,IAAIC,gBAAgB,GAAG5C,SAAS,KAAK,CAAC,CAAC;EACvC,IAAI6C,iBAAiB,GAAG,CAAC,CAAC,CAAC,CAAC;EAC5B,IAAIC,KAAK,GAAGrB,gBAAgB,CAACE,WAAW,CAAC1c,MAAM,EAAE,CAAC,CAAC,CAAC,IACzCyc,eAAe,CAACC,WAAW,CAAC1c,MAAM,EAAEA,MAAM,CAACN,MAAM,GAAG,CAAC,CAAC,CAAC;EAElE,IAAI0d,cAAc,IAAIhC,WAAW,EAAE;IACjC;IACA;IACA,KAAKnX,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGjE,MAAM,CAACN,MAAM,EAAE6d,IAAI,IAAI,OAAO,GAAGtZ,CAAC,IAAI,CAAC,GAAGA,CAAC,EAAE,EAAE;MAC7DsZ,IAAI,GAAGb,WAAW,CAAC1c,MAAM,EAAEiE,CAAC,CAAC;MAC7B,IAAI,CAACgY,WAAW,CAACsB,IAAI,CAAC,EAAE;QACtB,OAAOL,YAAY;MACrB;MACAW,KAAK,GAAGA,KAAK,IAAI1B,WAAW,CAACoB,IAAI,EAAEC,QAAQ,EAAEnB,OAAO,CAAC;MACrDmB,QAAQ,GAAGD,IAAI;IACjB;EACF,CAAC,MAAM;IACL;IACA,KAAKtZ,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGjE,MAAM,CAACN,MAAM,EAAE6d,IAAI,IAAI,OAAO,GAAGtZ,CAAC,IAAI,CAAC,GAAGA,CAAC,EAAE,EAAE;MAC7DsZ,IAAI,GAAGb,WAAW,CAAC1c,MAAM,EAAEiE,CAAC,CAAC;MAC7B,IAAIsZ,IAAI,KAAK7E,cAAc,EAAE;QAC3B+E,YAAY,GAAG,IAAI;QACnB;QACA,IAAIE,gBAAgB,EAAE;UACpBD,eAAe,GAAGA,eAAe;UAC/B;UACCzZ,CAAC,GAAG2Z,iBAAiB,GAAG,CAAC,GAAG7C,SAAS,IACrC/a,MAAM,CAAC4d,iBAAiB,GAAG,CAAC,CAAC,KAAK,GAAI;UACzCA,iBAAiB,GAAG3Z,CAAC;QACvB;MACF,CAAC,MAAM,IAAI,CAACgY,WAAW,CAACsB,IAAI,CAAC,EAAE;QAC7B,OAAOL,YAAY;MACrB;MACAW,KAAK,GAAGA,KAAK,IAAI1B,WAAW,CAACoB,IAAI,EAAEC,QAAQ,EAAEnB,OAAO,CAAC;MACrDmB,QAAQ,GAAGD,IAAI;IACjB;IACA;IACAG,eAAe,GAAGA,eAAe,IAAKC,gBAAgB,IACnD1Z,CAAC,GAAG2Z,iBAAiB,GAAG,CAAC,GAAG7C,SAAS,IACrC/a,MAAM,CAAC4d,iBAAiB,GAAG,CAAC,CAAC,KAAK,GAAK;EAC5C;EACA;EACA;EACA;EACA,IAAI,CAACH,YAAY,IAAI,CAACC,eAAe,EAAE;IACrC;IACA;IACA,IAAIG,KAAK,IAAI,CAACzC,WAAW,IAAI,CAACkC,iBAAiB,CAACtd,MAAM,CAAC,EAAE;MACvD,OAAO8c,WAAW;IACpB;IACA,OAAO3B,WAAW,KAAKX,mBAAmB,GAAG0C,YAAY,GAAGH,YAAY;EAC1E;EACA;EACA,IAAIM,cAAc,GAAG,CAAC,IAAIT,mBAAmB,CAAC5c,MAAM,CAAC,EAAE;IACrD,OAAOkd,YAAY;EACrB;EACA;EACA;EACA,IAAI,CAAC9B,WAAW,EAAE;IAChB,OAAOsC,eAAe,GAAGT,YAAY,GAAGD,aAAa;EACvD;EACA,OAAO7B,WAAW,KAAKX,mBAAmB,GAAG0C,YAAY,GAAGH,YAAY;AAC1E;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAASe,WAAWA,CAAC1N,KAAK,EAAEpQ,MAAM,EAAE8b,KAAK,EAAEiC,KAAK,EAAE1B,OAAO,EAAE;EACzDjM,KAAK,CAAC4N,IAAI,GAAI,YAAY;IACxB,IAAIhe,MAAM,CAACN,MAAM,KAAK,CAAC,EAAE;MACvB,OAAO0Q,KAAK,CAAC+K,WAAW,KAAKX,mBAAmB,GAAG,IAAI,GAAG,IAAI;IAChE;IACA,IAAI,CAACpK,KAAK,CAAC6K,YAAY,EAAE;MACvB,IAAIf,0BAA0B,CAACpV,OAAO,CAAC9E,MAAM,CAAC,KAAK,CAAC,CAAC,IAAIma,wBAAwB,CAAC3Q,IAAI,CAACxJ,MAAM,CAAC,EAAE;QAC9F,OAAOoQ,KAAK,CAAC+K,WAAW,KAAKX,mBAAmB,GAAI,GAAG,GAAGxa,MAAM,GAAG,GAAG,GAAK,GAAG,GAAGA,MAAM,GAAG,GAAI;MAChG;IACF;IAEA,IAAIuD,MAAM,GAAG6M,KAAK,CAAC7M,MAAM,GAAGX,IAAI,CAACO,GAAG,CAAC,CAAC,EAAE2Y,KAAK,CAAC,CAAC,CAAC;IAChD;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAIf,SAAS,GAAG3K,KAAK,CAAC2K,SAAS,KAAK,CAAC,CAAC,GAClC,CAAC,CAAC,GAAGnY,IAAI,CAACO,GAAG,CAACP,IAAI,CAACuB,GAAG,CAACiM,KAAK,CAAC2K,SAAS,EAAE,EAAE,CAAC,EAAE3K,KAAK,CAAC2K,SAAS,GAAGxX,MAAM,CAAC;;IAE1E;IACA,IAAI6Z,cAAc,GAAGW;IACnB;IAAA,GACI3N,KAAK,CAACwK,SAAS,GAAG,CAAC,CAAC,IAAIkB,KAAK,IAAI1L,KAAK,CAACwK,SAAU;IACvD,SAASqD,aAAaA,CAACje,MAAM,EAAE;MAC7B,OAAO+b,qBAAqB,CAAC3L,KAAK,EAAEpQ,MAAM,CAAC;IAC7C;IAEA,QAAQmd,iBAAiB,CAACnd,MAAM,EAAEod,cAAc,EAAEhN,KAAK,CAAC7M,MAAM,EAAEwX,SAAS,EACvEkD,aAAa,EAAE7N,KAAK,CAAC+K,WAAW,EAAE/K,KAAK,CAACgL,WAAW,IAAI,CAAC2C,KAAK,EAAE1B,OAAO,CAAC;MAEvE,KAAKS,WAAW;QACd,OAAO9c,MAAM;MACf,KAAK+c,YAAY;QACf,OAAO,GAAG,GAAG/c,MAAM,CAACgD,OAAO,CAAC,IAAI,EAAE,IAAI,CAAC,GAAG,GAAG;MAC/C,KAAKga,aAAa;QAChB,OAAO,GAAG,GAAGkB,WAAW,CAACle,MAAM,EAAEoQ,KAAK,CAAC7M,MAAM,CAAC,GAC1C4a,iBAAiB,CAAC1C,YAAY,CAACzb,MAAM,EAAEuD,MAAM,CAAC,CAAC;MACrD,KAAK0Z,YAAY;QACf,OAAO,GAAG,GAAGiB,WAAW,CAACle,MAAM,EAAEoQ,KAAK,CAAC7M,MAAM,CAAC,GAC1C4a,iBAAiB,CAAC1C,YAAY,CAAC2C,UAAU,CAACpe,MAAM,EAAE+a,SAAS,CAAC,EAAExX,MAAM,CAAC,CAAC;MAC5E,KAAK2Z,YAAY;QACf,OAAO,GAAG,GAAGmB,YAAY,CAACre,MAAM,CAAC,GAAG,GAAG;MACzC;QACE,MAAM,IAAIgB,SAAS,CAAC,wCAAwC,CAAC;IACjE;EACF,CAAC,CAAC,CAAE;AACN;;AAEA;AACA,SAASkd,WAAWA,CAACle,MAAM,EAAEqd,cAAc,EAAE;EAC3C,IAAIiB,eAAe,GAAG1B,mBAAmB,CAAC5c,MAAM,CAAC,GAAG2E,MAAM,CAAC0Y,cAAc,CAAC,GAAG,EAAE;;EAE/E;EACA,IAAIkB,IAAI,GAAYve,MAAM,CAACA,MAAM,CAACN,MAAM,GAAG,CAAC,CAAC,KAAK,IAAI;EACtD,IAAI8e,IAAI,GAAGD,IAAI,KAAKve,MAAM,CAACA,MAAM,CAACN,MAAM,GAAG,CAAC,CAAC,KAAK,IAAI,IAAIM,MAAM,KAAK,IAAI,CAAC;EAC1E,IAAIye,KAAK,GAAGD,IAAI,GAAG,GAAG,GAAID,IAAI,GAAG,EAAE,GAAG,GAAI;EAE1C,OAAOD,eAAe,GAAGG,KAAK,GAAG,IAAI;AACvC;;AAEA;AACA,SAASN,iBAAiBA,CAACne,MAAM,EAAE;EACjC,OAAOA,MAAM,CAACA,MAAM,CAACN,MAAM,GAAG,CAAC,CAAC,KAAK,IAAI,GAAGM,MAAM,CAAC+C,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG/C,MAAM;AAC1E;;AAEA;AACA;AACA,SAASoe,UAAUA,CAACpe,MAAM,EAAE0e,KAAK,EAAE;EACjC;EACA;EACA;EACA;EACA,IAAIC,MAAM,GAAG,gBAAgB;;EAE7B;EACA,IAAIze,MAAM,GAAI,YAAY;IACxB,IAAI0e,MAAM,GAAG5e,MAAM,CAAC8E,OAAO,CAAC,IAAI,CAAC;IACjC8Z,MAAM,GAAGA,MAAM,KAAK,CAAC,CAAC,GAAGA,MAAM,GAAG5e,MAAM,CAACN,MAAM;IAC/Cif,MAAM,CAACE,SAAS,GAAGD,MAAM;IACzB,OAAOE,QAAQ,CAAC9e,MAAM,CAAC+C,KAAK,CAAC,CAAC,EAAE6b,MAAM,CAAC,EAAEF,KAAK,CAAC;EACjD,CAAC,CAAC,CAAE;EACJ;EACA,IAAIK,gBAAgB,GAAG/e,MAAM,CAAC,CAAC,CAAC,KAAK,IAAI,IAAIA,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG;EAC9D,IAAIgf,YAAY;;EAEhB;EACA,IAAInb,KAAK;EACT,OAAQA,KAAK,GAAG8a,MAAM,CAAC5a,IAAI,CAAC/D,MAAM,CAAC,EAAG;IACpC,IAAIkR,MAAM,GAAGrN,KAAK,CAAC,CAAC,CAAC;MAAEtC,IAAI,GAAGsC,KAAK,CAAC,CAAC,CAAC;IACtCmb,YAAY,GAAIzd,IAAI,CAAC,CAAC,CAAC,KAAK,GAAI;IAChCrB,MAAM,IAAIgR,MAAM,IACX,CAAC6N,gBAAgB,IAAI,CAACC,YAAY,IAAIzd,IAAI,KAAK,EAAE,GAChD,IAAI,GAAG,EAAE,CAAC,GACZud,QAAQ,CAACvd,IAAI,EAAEmd,KAAK,CAAC;IACzBK,gBAAgB,GAAGC,YAAY;EACjC;EAEA,OAAO9e,MAAM;AACf;;AAEA;AACA;AACA;AACA;AACA,SAAS4e,QAAQA,CAACvd,IAAI,EAAEmd,KAAK,EAAE;EAC7B,IAAInd,IAAI,KAAK,EAAE,IAAIA,IAAI,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE,OAAOA,IAAI;;EAE/C;EACA,IAAI0d,OAAO,GAAG,QAAQ,CAAC,CAAC;EACxB,IAAIpb,KAAK;EACT;EACA,IAAI0N,KAAK,GAAG,CAAC;IAAEC,GAAG;IAAE0N,IAAI,GAAG,CAAC;IAAEtD,IAAI,GAAG,CAAC;EACtC,IAAI1b,MAAM,GAAG,EAAE;;EAEf;EACA;EACA;EACA;EACA,OAAQ2D,KAAK,GAAGob,OAAO,CAAClb,IAAI,CAACxC,IAAI,CAAC,EAAG;IACnCqa,IAAI,GAAG/X,KAAK,CAACpE,KAAK;IAClB;IACA,IAAImc,IAAI,GAAGrK,KAAK,GAAGmN,KAAK,EAAE;MACxBlN,GAAG,GAAI0N,IAAI,GAAG3N,KAAK,GAAI2N,IAAI,GAAGtD,IAAI,CAAC,CAAC;MACpC1b,MAAM,IAAI,IAAI,GAAGqB,IAAI,CAACwB,KAAK,CAACwO,KAAK,EAAEC,GAAG,CAAC;MACvC;MACAD,KAAK,GAAGC,GAAG,GAAG,CAAC,CAAC,CAAoB;IACtC;IACA0N,IAAI,GAAGtD,IAAI;EACb;;EAEA;EACA;EACA1b,MAAM,IAAI,IAAI;EACd;EACA,IAAIqB,IAAI,CAAC7B,MAAM,GAAG6R,KAAK,GAAGmN,KAAK,IAAIQ,IAAI,GAAG3N,KAAK,EAAE;IAC/CrR,MAAM,IAAIqB,IAAI,CAACwB,KAAK,CAACwO,KAAK,EAAE2N,IAAI,CAAC,GAAG,IAAI,GAAG3d,IAAI,CAACwB,KAAK,CAACmc,IAAI,GAAG,CAAC,CAAC;EACjE,CAAC,MAAM;IACLhf,MAAM,IAAIqB,IAAI,CAACwB,KAAK,CAACwO,KAAK,CAAC;EAC7B;EAEA,OAAOrR,MAAM,CAAC6C,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1B;;AAEA;AACA,SAASsb,YAAYA,CAACre,MAAM,EAAE;EAC5B,IAAIE,MAAM,GAAG,EAAE;EACf,IAAIqd,IAAI,GAAG,CAAC;EACZ,IAAI4B,SAAS;EAEb,KAAK,IAAIlb,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGjE,MAAM,CAACN,MAAM,EAAE6d,IAAI,IAAI,OAAO,GAAGtZ,CAAC,IAAI,CAAC,GAAGA,CAAC,EAAE,EAAE;IACjEsZ,IAAI,GAAGb,WAAW,CAAC1c,MAAM,EAAEiE,CAAC,CAAC;IAC7Bkb,SAAS,GAAGlF,gBAAgB,CAACsD,IAAI,CAAC;IAElC,IAAI,CAAC4B,SAAS,IAAIlD,WAAW,CAACsB,IAAI,CAAC,EAAE;MACnCrd,MAAM,IAAIF,MAAM,CAACiE,CAAC,CAAC;MACnB,IAAIsZ,IAAI,IAAI,OAAO,EAAErd,MAAM,IAAIF,MAAM,CAACiE,CAAC,GAAG,CAAC,CAAC;IAC9C,CAAC,MAAM;MACL/D,MAAM,IAAIif,SAAS,IAAI9E,SAAS,CAACkD,IAAI,CAAC;IACxC;EACF;EAEA,OAAOrd,MAAM;AACf;AAEA,SAASkf,iBAAiBA,CAAChP,KAAK,EAAE0L,KAAK,EAAExU,MAAM,EAAE;EAC/C,IAAIuK,OAAO,GAAG,EAAE;IACZ2C,IAAI,GAAMpE,KAAK,CAACvL,GAAG;IACnBpF,KAAK;IACLC,MAAM;IACNgJ,KAAK;EAET,KAAKjJ,KAAK,GAAG,CAAC,EAAEC,MAAM,GAAG4H,MAAM,CAAC5H,MAAM,EAAED,KAAK,GAAGC,MAAM,EAAED,KAAK,IAAI,CAAC,EAAE;IAClEiJ,KAAK,GAAGpB,MAAM,CAAC7H,KAAK,CAAC;IAErB,IAAI2Q,KAAK,CAACiL,QAAQ,EAAE;MAClB3S,KAAK,GAAG0H,KAAK,CAACiL,QAAQ,CAACzZ,IAAI,CAAC0F,MAAM,EAAE3C,MAAM,CAAClF,KAAK,CAAC,EAAEiJ,KAAK,CAAC;IAC3D;;IAEA;IACA,IAAI2W,SAAS,CAACjP,KAAK,EAAE0L,KAAK,EAAEpT,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC,IAC3C,OAAOA,KAAK,KAAK,WAAW,IAC5B2W,SAAS,CAACjP,KAAK,EAAE0L,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,CAAE,EAAE;MAEjD,IAAIjK,OAAO,KAAK,EAAE,EAAEA,OAAO,IAAI,GAAG,IAAI,CAACzB,KAAK,CAAC8K,YAAY,GAAG,GAAG,GAAG,EAAE,CAAC;MACrErJ,OAAO,IAAIzB,KAAK,CAAC4N,IAAI;IACvB;EACF;EAEA5N,KAAK,CAACvL,GAAG,GAAG2P,IAAI;EAChBpE,KAAK,CAAC4N,IAAI,GAAG,GAAG,GAAGnM,OAAO,GAAG,GAAG;AAClC;AAEA,SAASyN,kBAAkBA,CAAClP,KAAK,EAAE0L,KAAK,EAAExU,MAAM,EAAErG,OAAO,EAAE;EACzD,IAAI4Q,OAAO,GAAG,EAAE;IACZ2C,IAAI,GAAMpE,KAAK,CAACvL,GAAG;IACnBpF,KAAK;IACLC,MAAM;IACNgJ,KAAK;EAET,KAAKjJ,KAAK,GAAG,CAAC,EAAEC,MAAM,GAAG4H,MAAM,CAAC5H,MAAM,EAAED,KAAK,GAAGC,MAAM,EAAED,KAAK,IAAI,CAAC,EAAE;IAClEiJ,KAAK,GAAGpB,MAAM,CAAC7H,KAAK,CAAC;IAErB,IAAI2Q,KAAK,CAACiL,QAAQ,EAAE;MAClB3S,KAAK,GAAG0H,KAAK,CAACiL,QAAQ,CAACzZ,IAAI,CAAC0F,MAAM,EAAE3C,MAAM,CAAClF,KAAK,CAAC,EAAEiJ,KAAK,CAAC;IAC3D;;IAEA;IACA,IAAI2W,SAAS,CAACjP,KAAK,EAAE0L,KAAK,GAAG,CAAC,EAAEpT,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,CAAC,IAC1D,OAAOA,KAAK,KAAK,WAAW,IAC5B2W,SAAS,CAACjP,KAAK,EAAE0L,KAAK,GAAG,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,CAAE,EAAE;MAEhE,IAAI,CAAC7a,OAAO,IAAI4Q,OAAO,KAAK,EAAE,EAAE;QAC9BA,OAAO,IAAIgK,gBAAgB,CAACzL,KAAK,EAAE0L,KAAK,CAAC;MAC3C;MAEA,IAAI1L,KAAK,CAAC4N,IAAI,IAAItF,cAAc,KAAKtI,KAAK,CAAC4N,IAAI,CAACxV,UAAU,CAAC,CAAC,CAAC,EAAE;QAC7DqJ,OAAO,IAAI,GAAG;MAChB,CAAC,MAAM;QACLA,OAAO,IAAI,IAAI;MACjB;MAEAA,OAAO,IAAIzB,KAAK,CAAC4N,IAAI;IACvB;EACF;EAEA5N,KAAK,CAACvL,GAAG,GAAG2P,IAAI;EAChBpE,KAAK,CAAC4N,IAAI,GAAGnM,OAAO,IAAI,IAAI,CAAC,CAAC;AAChC;AAEA,SAAS0N,gBAAgBA,CAACnP,KAAK,EAAE0L,KAAK,EAAExU,MAAM,EAAE;EAC9C,IAAIuK,OAAO,GAAS,EAAE;IAClB2C,IAAI,GAAYpE,KAAK,CAACvL,GAAG;IACzB2a,aAAa,GAAG3f,MAAM,CAACC,IAAI,CAACwH,MAAM,CAAC;IACnC7H,KAAK;IACLC,MAAM;IACN+f,SAAS;IACTC,WAAW;IACXC,UAAU;EAEd,KAAKlgB,KAAK,GAAG,CAAC,EAAEC,MAAM,GAAG8f,aAAa,CAAC9f,MAAM,EAAED,KAAK,GAAGC,MAAM,EAAED,KAAK,IAAI,CAAC,EAAE;IAEzEkgB,UAAU,GAAG,EAAE;IACf,IAAI9N,OAAO,KAAK,EAAE,EAAE8N,UAAU,IAAI,IAAI;IAEtC,IAAIvP,KAAK,CAAC8K,YAAY,EAAEyE,UAAU,IAAI,GAAG;IAEzCF,SAAS,GAAGD,aAAa,CAAC/f,KAAK,CAAC;IAChCigB,WAAW,GAAGpY,MAAM,CAACmY,SAAS,CAAC;IAE/B,IAAIrP,KAAK,CAACiL,QAAQ,EAAE;MAClBqE,WAAW,GAAGtP,KAAK,CAACiL,QAAQ,CAACzZ,IAAI,CAAC0F,MAAM,EAAEmY,SAAS,EAAEC,WAAW,CAAC;IACnE;IAEA,IAAI,CAACL,SAAS,CAACjP,KAAK,EAAE0L,KAAK,EAAE2D,SAAS,EAAE,KAAK,EAAE,KAAK,CAAC,EAAE;MACrD,SAAS,CAAC;IACZ;IAEA,IAAIrP,KAAK,CAAC4N,IAAI,CAACte,MAAM,GAAG,IAAI,EAAEigB,UAAU,IAAI,IAAI;IAEhDA,UAAU,IAAIvP,KAAK,CAAC4N,IAAI,IAAI5N,KAAK,CAAC8K,YAAY,GAAG,GAAG,GAAG,EAAE,CAAC,GAAG,GAAG,IAAI9K,KAAK,CAAC8K,YAAY,GAAG,EAAE,GAAG,GAAG,CAAC;IAElG,IAAI,CAACmE,SAAS,CAACjP,KAAK,EAAE0L,KAAK,EAAE4D,WAAW,EAAE,KAAK,EAAE,KAAK,CAAC,EAAE;MACvD,SAAS,CAAC;IACZ;IAEAC,UAAU,IAAIvP,KAAK,CAAC4N,IAAI;;IAExB;IACAnM,OAAO,IAAI8N,UAAU;EACvB;EAEAvP,KAAK,CAACvL,GAAG,GAAG2P,IAAI;EAChBpE,KAAK,CAAC4N,IAAI,GAAG,GAAG,GAAGnM,OAAO,GAAG,GAAG;AAClC;AAEA,SAAS+N,iBAAiBA,CAACxP,KAAK,EAAE0L,KAAK,EAAExU,MAAM,EAAErG,OAAO,EAAE;EACxD,IAAI4Q,OAAO,GAAS,EAAE;IAClB2C,IAAI,GAAYpE,KAAK,CAACvL,GAAG;IACzB2a,aAAa,GAAG3f,MAAM,CAACC,IAAI,CAACwH,MAAM,CAAC;IACnC7H,KAAK;IACLC,MAAM;IACN+f,SAAS;IACTC,WAAW;IACXG,YAAY;IACZF,UAAU;;EAEd;EACA,IAAIvP,KAAK,CAAC0K,QAAQ,KAAK,IAAI,EAAE;IAC3B;IACA0E,aAAa,CAACM,IAAI,CAAC,CAAC;EACtB,CAAC,MAAM,IAAI,OAAO1P,KAAK,CAAC0K,QAAQ,KAAK,UAAU,EAAE;IAC/C;IACA0E,aAAa,CAACM,IAAI,CAAC1P,KAAK,CAAC0K,QAAQ,CAAC;EACpC,CAAC,MAAM,IAAI1K,KAAK,CAAC0K,QAAQ,EAAE;IACzB;IACA,MAAM,IAAI9Z,SAAS,CAAC,0CAA0C,CAAC;EACjE;EAEA,KAAKvB,KAAK,GAAG,CAAC,EAAEC,MAAM,GAAG8f,aAAa,CAAC9f,MAAM,EAAED,KAAK,GAAGC,MAAM,EAAED,KAAK,IAAI,CAAC,EAAE;IACzEkgB,UAAU,GAAG,EAAE;IAEf,IAAI,CAAC1e,OAAO,IAAI4Q,OAAO,KAAK,EAAE,EAAE;MAC9B8N,UAAU,IAAI9D,gBAAgB,CAACzL,KAAK,EAAE0L,KAAK,CAAC;IAC9C;IAEA2D,SAAS,GAAGD,aAAa,CAAC/f,KAAK,CAAC;IAChCigB,WAAW,GAAGpY,MAAM,CAACmY,SAAS,CAAC;IAE/B,IAAIrP,KAAK,CAACiL,QAAQ,EAAE;MAClBqE,WAAW,GAAGtP,KAAK,CAACiL,QAAQ,CAACzZ,IAAI,CAAC0F,MAAM,EAAEmY,SAAS,EAAEC,WAAW,CAAC;IACnE;IAEA,IAAI,CAACL,SAAS,CAACjP,KAAK,EAAE0L,KAAK,GAAG,CAAC,EAAE2D,SAAS,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,EAAE;MAC7D,SAAS,CAAC;IACZ;IAEAI,YAAY,GAAIzP,KAAK,CAACvL,GAAG,KAAK,IAAI,IAAIuL,KAAK,CAACvL,GAAG,KAAK,GAAG,IACvCuL,KAAK,CAAC4N,IAAI,IAAI5N,KAAK,CAAC4N,IAAI,CAACte,MAAM,GAAG,IAAK;IAEvD,IAAImgB,YAAY,EAAE;MAChB,IAAIzP,KAAK,CAAC4N,IAAI,IAAItF,cAAc,KAAKtI,KAAK,CAAC4N,IAAI,CAACxV,UAAU,CAAC,CAAC,CAAC,EAAE;QAC7DmX,UAAU,IAAI,GAAG;MACnB,CAAC,MAAM;QACLA,UAAU,IAAI,IAAI;MACpB;IACF;IAEAA,UAAU,IAAIvP,KAAK,CAAC4N,IAAI;IAExB,IAAI6B,YAAY,EAAE;MAChBF,UAAU,IAAI9D,gBAAgB,CAACzL,KAAK,EAAE0L,KAAK,CAAC;IAC9C;IAEA,IAAI,CAACuD,SAAS,CAACjP,KAAK,EAAE0L,KAAK,GAAG,CAAC,EAAE4D,WAAW,EAAE,IAAI,EAAEG,YAAY,CAAC,EAAE;MACjE,SAAS,CAAC;IACZ;IAEA,IAAIzP,KAAK,CAAC4N,IAAI,IAAItF,cAAc,KAAKtI,KAAK,CAAC4N,IAAI,CAACxV,UAAU,CAAC,CAAC,CAAC,EAAE;MAC7DmX,UAAU,IAAI,GAAG;IACnB,CAAC,MAAM;MACLA,UAAU,IAAI,IAAI;IACpB;IAEAA,UAAU,IAAIvP,KAAK,CAAC4N,IAAI;;IAExB;IACAnM,OAAO,IAAI8N,UAAU;EACvB;EAEAvP,KAAK,CAACvL,GAAG,GAAG2P,IAAI;EAChBpE,KAAK,CAAC4N,IAAI,GAAGnM,OAAO,IAAI,IAAI,CAAC,CAAC;AAChC;AAEA,SAASkO,UAAUA,CAAC3P,KAAK,EAAE9I,MAAM,EAAEZ,QAAQ,EAAE;EAC3C,IAAImL,OAAO,EAAEuF,QAAQ,EAAE3X,KAAK,EAAEC,MAAM,EAAEgG,IAAI,EAAEjB,KAAK;EAEjD2S,QAAQ,GAAG1Q,QAAQ,GAAG0J,KAAK,CAACkL,aAAa,GAAGlL,KAAK,CAACN,aAAa;EAE/D,KAAKrQ,KAAK,GAAG,CAAC,EAAEC,MAAM,GAAG0X,QAAQ,CAAC1X,MAAM,EAAED,KAAK,GAAGC,MAAM,EAAED,KAAK,IAAI,CAAC,EAAE;IACpEiG,IAAI,GAAG0R,QAAQ,CAAC3X,KAAK,CAAC;IAEtB,IAAI,CAACiG,IAAI,CAACP,UAAU,IAAKO,IAAI,CAACN,SAAS,MAClC,CAACM,IAAI,CAACP,UAAU,IAAM,OAAOmC,MAAM,KAAK,QAAQ,IAAMA,MAAM,YAAY5B,IAAI,CAACP,UAAY,CAAC,KAC1F,CAACO,IAAI,CAACN,SAAS,IAAKM,IAAI,CAACN,SAAS,CAACkC,MAAM,CAAC,CAAC,EAAE;MAEhD,IAAIZ,QAAQ,EAAE;QACZ,IAAIhB,IAAI,CAACF,KAAK,IAAIE,IAAI,CAACJ,aAAa,EAAE;UACpC8K,KAAK,CAACvL,GAAG,GAAGa,IAAI,CAACJ,aAAa,CAACgC,MAAM,CAAC;QACxC,CAAC,MAAM;UACL8I,KAAK,CAACvL,GAAG,GAAGa,IAAI,CAACb,GAAG;QACtB;MACF,CAAC,MAAM;QACLuL,KAAK,CAACvL,GAAG,GAAG,GAAG;MACjB;MAEA,IAAIa,IAAI,CAACL,SAAS,EAAE;QAClBZ,KAAK,GAAG2L,KAAK,CAACyK,QAAQ,CAACnV,IAAI,CAACb,GAAG,CAAC,IAAIa,IAAI,CAACH,YAAY;QAErD,IAAI+S,SAAS,CAAC1W,IAAI,CAAC8D,IAAI,CAACL,SAAS,CAAC,KAAK,mBAAmB,EAAE;UAC1DwM,OAAO,GAAGnM,IAAI,CAACL,SAAS,CAACiC,MAAM,EAAE7C,KAAK,CAAC;QACzC,CAAC,MAAM,IAAI8T,eAAe,CAAC3W,IAAI,CAAC8D,IAAI,CAACL,SAAS,EAAEZ,KAAK,CAAC,EAAE;UACtDoN,OAAO,GAAGnM,IAAI,CAACL,SAAS,CAACZ,KAAK,CAAC,CAAC6C,MAAM,EAAE7C,KAAK,CAAC;QAChD,CAAC,MAAM;UACL,MAAM,IAAIzD,SAAS,CAAC,IAAI,GAAG0E,IAAI,CAACb,GAAG,GAAG,8BAA8B,GAAGJ,KAAK,GAAG,SAAS,CAAC;QAC3F;QAEA2L,KAAK,CAAC4N,IAAI,GAAGnM,OAAO;MACtB;MAEA,OAAO,IAAI;IACb;EACF;EAEA,OAAO,KAAK;AACd;;AAEA;AACA;AACA;AACA,SAASwN,SAASA,CAACjP,KAAK,EAAE0L,KAAK,EAAExU,MAAM,EAAE0Y,KAAK,EAAE/e,OAAO,EAAE8c,KAAK,EAAEkC,UAAU,EAAE;EAC1E7P,KAAK,CAACvL,GAAG,GAAG,IAAI;EAChBuL,KAAK,CAAC4N,IAAI,GAAG1W,MAAM;EAEnB,IAAI,CAACyY,UAAU,CAAC3P,KAAK,EAAE9I,MAAM,EAAE,KAAK,CAAC,EAAE;IACrCyY,UAAU,CAAC3P,KAAK,EAAE9I,MAAM,EAAE,IAAI,CAAC;EACjC;EAEA,IAAI5B,IAAI,GAAG4S,SAAS,CAAC1W,IAAI,CAACwO,KAAK,CAAC4N,IAAI,CAAC;EACrC,IAAI3B,OAAO,GAAG2D,KAAK;EACnB,IAAIE,MAAM;EAEV,IAAIF,KAAK,EAAE;IACTA,KAAK,GAAI5P,KAAK,CAACwK,SAAS,GAAG,CAAC,IAAIxK,KAAK,CAACwK,SAAS,GAAGkB,KAAM;EAC1D;EAEA,IAAIqE,aAAa,GAAGza,IAAI,KAAK,iBAAiB,IAAIA,IAAI,KAAK,gBAAgB;IACvE0a,cAAc;IACdC,SAAS;EAEb,IAAIF,aAAa,EAAE;IACjBC,cAAc,GAAGhQ,KAAK,CAACmL,UAAU,CAACzW,OAAO,CAACwC,MAAM,CAAC;IACjD+Y,SAAS,GAAGD,cAAc,KAAK,CAAC,CAAC;EACnC;EAEA,IAAKhQ,KAAK,CAACvL,GAAG,KAAK,IAAI,IAAIuL,KAAK,CAACvL,GAAG,KAAK,GAAG,IAAKwb,SAAS,IAAKjQ,KAAK,CAAC7M,MAAM,KAAK,CAAC,IAAIuY,KAAK,GAAG,CAAE,EAAE;IAC/F7a,OAAO,GAAG,KAAK;EACjB;EAEA,IAAIof,SAAS,IAAIjQ,KAAK,CAACoL,cAAc,CAAC4E,cAAc,CAAC,EAAE;IACrDhQ,KAAK,CAAC4N,IAAI,GAAG,OAAO,GAAGoC,cAAc;EACvC,CAAC,MAAM;IACL,IAAID,aAAa,IAAIE,SAAS,IAAI,CAACjQ,KAAK,CAACoL,cAAc,CAAC4E,cAAc,CAAC,EAAE;MACvEhQ,KAAK,CAACoL,cAAc,CAAC4E,cAAc,CAAC,GAAG,IAAI;IAC7C;IACA,IAAI1a,IAAI,KAAK,iBAAiB,EAAE;MAC9B,IAAIsa,KAAK,IAAKngB,MAAM,CAACC,IAAI,CAACsQ,KAAK,CAAC4N,IAAI,CAAC,CAACte,MAAM,KAAK,CAAE,EAAE;QACnDkgB,iBAAiB,CAACxP,KAAK,EAAE0L,KAAK,EAAE1L,KAAK,CAAC4N,IAAI,EAAE/c,OAAO,CAAC;QACpD,IAAIof,SAAS,EAAE;UACbjQ,KAAK,CAAC4N,IAAI,GAAG,OAAO,GAAGoC,cAAc,GAAGhQ,KAAK,CAAC4N,IAAI;QACpD;MACF,CAAC,MAAM;QACLuB,gBAAgB,CAACnP,KAAK,EAAE0L,KAAK,EAAE1L,KAAK,CAAC4N,IAAI,CAAC;QAC1C,IAAIqC,SAAS,EAAE;UACbjQ,KAAK,CAAC4N,IAAI,GAAG,OAAO,GAAGoC,cAAc,GAAG,GAAG,GAAGhQ,KAAK,CAAC4N,IAAI;QAC1D;MACF;IACF,CAAC,MAAM,IAAItY,IAAI,KAAK,gBAAgB,EAAE;MACpC,IAAIsa,KAAK,IAAK5P,KAAK,CAAC4N,IAAI,CAACte,MAAM,KAAK,CAAE,EAAE;QACtC,IAAI0Q,KAAK,CAACsK,aAAa,IAAI,CAACuF,UAAU,IAAInE,KAAK,GAAG,CAAC,EAAE;UACnDwD,kBAAkB,CAAClP,KAAK,EAAE0L,KAAK,GAAG,CAAC,EAAE1L,KAAK,CAAC4N,IAAI,EAAE/c,OAAO,CAAC;QAC3D,CAAC,MAAM;UACLqe,kBAAkB,CAAClP,KAAK,EAAE0L,KAAK,EAAE1L,KAAK,CAAC4N,IAAI,EAAE/c,OAAO,CAAC;QACvD;QACA,IAAIof,SAAS,EAAE;UACbjQ,KAAK,CAAC4N,IAAI,GAAG,OAAO,GAAGoC,cAAc,GAAGhQ,KAAK,CAAC4N,IAAI;QACpD;MACF,CAAC,MAAM;QACLoB,iBAAiB,CAAChP,KAAK,EAAE0L,KAAK,EAAE1L,KAAK,CAAC4N,IAAI,CAAC;QAC3C,IAAIqC,SAAS,EAAE;UACbjQ,KAAK,CAAC4N,IAAI,GAAG,OAAO,GAAGoC,cAAc,GAAG,GAAG,GAAGhQ,KAAK,CAAC4N,IAAI;QAC1D;MACF;IACF,CAAC,MAAM,IAAItY,IAAI,KAAK,iBAAiB,EAAE;MACrC,IAAI0K,KAAK,CAACvL,GAAG,KAAK,GAAG,EAAE;QACrBiZ,WAAW,CAAC1N,KAAK,EAAEA,KAAK,CAAC4N,IAAI,EAAElC,KAAK,EAAEiC,KAAK,EAAE1B,OAAO,CAAC;MACvD;IACF,CAAC,MAAM,IAAI3W,IAAI,KAAK,oBAAoB,EAAE;MACxC,OAAO,KAAK;IACd,CAAC,MAAM;MACL,IAAI0K,KAAK,CAACuK,WAAW,EAAE,OAAO,KAAK;MACnC,MAAM,IAAI3Z,SAAS,CAAC,yCAAyC,GAAG0E,IAAI,CAAC;IACvE;IAEA,IAAI0K,KAAK,CAACvL,GAAG,KAAK,IAAI,IAAIuL,KAAK,CAACvL,GAAG,KAAK,GAAG,EAAE;MAC3C;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACAqb,MAAM,GAAGI,SAAS,CAChBlQ,KAAK,CAACvL,GAAG,CAAC,CAAC,CAAC,KAAK,GAAG,GAAGuL,KAAK,CAACvL,GAAG,CAAC9B,KAAK,CAAC,CAAC,CAAC,GAAGqN,KAAK,CAACvL,GACpD,CAAC,CAAC7B,OAAO,CAAC,IAAI,EAAE,KAAK,CAAC;MAEtB,IAAIoN,KAAK,CAACvL,GAAG,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;QACxBqb,MAAM,GAAG,GAAG,GAAGA,MAAM;MACvB,CAAC,MAAM,IAAIA,MAAM,CAACnd,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,KAAK,oBAAoB,EAAE;QACvDmd,MAAM,GAAG,IAAI,GAAGA,MAAM,CAACnd,KAAK,CAAC,EAAE,CAAC;MAClC,CAAC,MAAM;QACLmd,MAAM,GAAG,IAAI,GAAGA,MAAM,GAAG,GAAG;MAC9B;MAEA9P,KAAK,CAAC4N,IAAI,GAAGkC,MAAM,GAAG,GAAG,GAAG9P,KAAK,CAAC4N,IAAI;IACxC;EACF;EAEA,OAAO,IAAI;AACb;AAEA,SAASuC,sBAAsBA,CAACjZ,MAAM,EAAE8I,KAAK,EAAE;EAC7C,IAAIoQ,OAAO,GAAG,EAAE;IACZC,iBAAiB,GAAG,EAAE;IACtBhhB,KAAK;IACLC,MAAM;EAEVghB,WAAW,CAACpZ,MAAM,EAAEkZ,OAAO,EAAEC,iBAAiB,CAAC;EAE/C,KAAKhhB,KAAK,GAAG,CAAC,EAAEC,MAAM,GAAG+gB,iBAAiB,CAAC/gB,MAAM,EAAED,KAAK,GAAGC,MAAM,EAAED,KAAK,IAAI,CAAC,EAAE;IAC7E2Q,KAAK,CAACmL,UAAU,CAACvX,IAAI,CAACwc,OAAO,CAACC,iBAAiB,CAAChhB,KAAK,CAAC,CAAC,CAAC;EAC1D;EACA2Q,KAAK,CAACoL,cAAc,GAAG,IAAIpc,KAAK,CAACM,MAAM,CAAC;AAC1C;AAEA,SAASghB,WAAWA,CAACpZ,MAAM,EAAEkZ,OAAO,EAAEC,iBAAiB,EAAE;EACvD,IAAIjB,aAAa,EACb/f,KAAK,EACLC,MAAM;EAEV,IAAI4H,MAAM,KAAK,IAAI,IAAI,OAAOA,MAAM,KAAK,QAAQ,EAAE;IACjD7H,KAAK,GAAG+gB,OAAO,CAAC1b,OAAO,CAACwC,MAAM,CAAC;IAC/B,IAAI7H,KAAK,KAAK,CAAC,CAAC,EAAE;MAChB,IAAIghB,iBAAiB,CAAC3b,OAAO,CAACrF,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE;QAC3CghB,iBAAiB,CAACzc,IAAI,CAACvE,KAAK,CAAC;MAC/B;IACF,CAAC,MAAM;MACL+gB,OAAO,CAACxc,IAAI,CAACsD,MAAM,CAAC;MAEpB,IAAIlI,KAAK,CAACC,OAAO,CAACiI,MAAM,CAAC,EAAE;QACzB,KAAK7H,KAAK,GAAG,CAAC,EAAEC,MAAM,GAAG4H,MAAM,CAAC5H,MAAM,EAAED,KAAK,GAAGC,MAAM,EAAED,KAAK,IAAI,CAAC,EAAE;UAClEihB,WAAW,CAACpZ,MAAM,CAAC7H,KAAK,CAAC,EAAE+gB,OAAO,EAAEC,iBAAiB,CAAC;QACxD;MACF,CAAC,MAAM;QACLjB,aAAa,GAAG3f,MAAM,CAACC,IAAI,CAACwH,MAAM,CAAC;QAEnC,KAAK7H,KAAK,GAAG,CAAC,EAAEC,MAAM,GAAG8f,aAAa,CAAC9f,MAAM,EAAED,KAAK,GAAGC,MAAM,EAAED,KAAK,IAAI,CAAC,EAAE;UACzEihB,WAAW,CAACpZ,MAAM,CAACkY,aAAa,CAAC/f,KAAK,CAAC,CAAC,EAAE+gB,OAAO,EAAEC,iBAAiB,CAAC;QACvE;MACF;IACF;EACF;AACF;AAEA,SAASE,MAAMA,CAACrU,KAAK,EAAEjJ,OAAO,EAAE;EAC9BA,OAAO,GAAGA,OAAO,IAAI,CAAC,CAAC;EAEvB,IAAI+M,KAAK,GAAG,IAAIqK,KAAK,CAACpX,OAAO,CAAC;EAE9B,IAAI,CAAC+M,KAAK,CAAC4K,MAAM,EAAEuF,sBAAsB,CAACjU,KAAK,EAAE8D,KAAK,CAAC;EAEvD,IAAI1H,KAAK,GAAG4D,KAAK;EAEjB,IAAI8D,KAAK,CAACiL,QAAQ,EAAE;IAClB3S,KAAK,GAAG0H,KAAK,CAACiL,QAAQ,CAACzZ,IAAI,CAAC;MAAE,EAAE,EAAE8G;IAAM,CAAC,EAAE,EAAE,EAAEA,KAAK,CAAC;EACvD;EAEA,IAAI2W,SAAS,CAACjP,KAAK,EAAE,CAAC,EAAE1H,KAAK,EAAE,IAAI,EAAE,IAAI,CAAC,EAAE,OAAO0H,KAAK,CAAC4N,IAAI,GAAG,IAAI;EAEpE,OAAO,EAAE;AACX;AAEA,IAAI4C,MAAM,GAAGD,MAAM;AAEnB,IAAIE,MAAM,GAAG;EACZ7C,IAAI,EAAE4C;AACP,CAAC;AAED,SAASE,OAAOA,CAACC,IAAI,EAAEC,EAAE,EAAE;EACzB,OAAO,YAAY;IACjB,MAAM,IAAIrf,KAAK,CAAC,gBAAgB,GAAGof,IAAI,GAAG,4BAA4B,GACpE,WAAW,GAAGC,EAAE,GAAG,yCAAyC,CAAC;EACjE,CAAC;AACH;AAGA,IAAIC,IAAI,GAAkBvb,IAAI;AAC9B,IAAIwb,MAAM,GAAgBtb,MAAM;AAChC,IAAIub,eAAe,GAAOja,QAAQ;AAClC,IAAIka,WAAW,GAAWhX,IAAI;AAC9B,IAAIiX,WAAW,GAAWhX,IAAI;AAC9B,IAAIiX,cAAc,GAAQzT,QAAQ;AAClC,IAAIwK,IAAI,GAAkBF,MAAM,CAACE,IAAI;AACrC,IAAID,OAAO,GAAeD,MAAM,CAACC,OAAO;AACxC,IAAI4F,IAAI,GAAkB6C,MAAM,CAAC7C,IAAI;AACrC,IAAIuD,aAAa,GAASvgB,SAAS;;AAEnC;AACA,IAAIwgB,KAAK,GAAG;EACVzY,MAAM,EAAKA,MAAM;EACjBoB,KAAK,EAAMA,KAAK;EAChB5F,GAAG,EAAQA,GAAG;EACdkd,IAAI,EAAOla,KAAK;EAChBiG,KAAK,EAAMA,KAAK;EAChBI,GAAG,EAAQA,GAAG;EACdjC,SAAS,EAAEA,SAAS;EACpB3D,IAAI,EAAOA,IAAI;EACfc,GAAG,EAAQA,GAAG;EACd+C,KAAK,EAAMA,KAAK;EAChBuB,IAAI,EAAOA,IAAI;EACfnG,GAAG,EAAQA,GAAG;EACdnE,GAAG,EAAQA;AACb,CAAC;;AAED;AACA,IAAI4e,QAAQ,GAAcZ,OAAO,CAAC,UAAU,EAAE,MAAM,CAAC;AACrD,IAAIa,WAAW,GAAWb,OAAO,CAAC,aAAa,EAAE,SAAS,CAAC;AAC3D,IAAIc,QAAQ,GAAcd,OAAO,CAAC,UAAU,EAAE,MAAM,CAAC;AAErD,IAAIe,MAAM,GAAG;EACZZ,IAAI,EAAEA,IAAI;EACVC,MAAM,EAAEA,MAAM;EACdC,eAAe,EAAEA,eAAe;EAChCC,WAAW,EAAEA,WAAW;EACxBC,WAAW,EAAEA,WAAW;EACxBC,cAAc,EAAEA,cAAc;EAC9BjJ,IAAI,EAAEA,IAAI;EACVD,OAAO,EAAEA,OAAO;EAChB4F,IAAI,EAAEA,IAAI;EACVuD,aAAa,EAAEA,aAAa;EAC5BC,KAAK,EAAEA,KAAK;EACZE,QAAQ,EAAEA,QAAQ;EAClBC,WAAW,EAAEA,WAAW;EACxBC,QAAQ,EAAEA;AACX,CAAC;AAED,eAAeC,MAAM;AACrB,SAASR,WAAW,EAAEC,cAAc,EAAEH,eAAe,EAAEC,WAAW,EAAEF,MAAM,EAAED,IAAI,EAAEM,aAAa,EAAEvD,IAAI,EAAE3F,IAAI,EAAED,OAAO,EAAEwJ,QAAQ,EAAEF,QAAQ,EAAEC,WAAW,EAAEH,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}