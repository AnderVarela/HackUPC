{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.validateSchemaDeps = exports.validatePropertyDeps = exports.error = void 0;\nconst codegen_1 = require(\"../../compile/codegen\");\nconst util_1 = require(\"../../compile/util\");\nconst code_1 = require(\"../code\");\nexports.error = {\n  message: ({\n    params: {\n      property,\n      depsCount,\n      deps\n    }\n  }) => {\n    const property_ies = depsCount === 1 ? \"property\" : \"properties\";\n    return (0, codegen_1.str)`must have ${property_ies} ${deps} when property ${property} is present`;\n  },\n  params: ({\n    params: {\n      property,\n      depsCount,\n      deps,\n      missingProperty\n    }\n  }) => (0, codegen_1._)`{property: ${property},\n    missingProperty: ${missingProperty},\n    depsCount: ${depsCount},\n    deps: ${deps}}` // TODO change to reference\n};\nconst def = {\n  keyword: \"dependencies\",\n  type: \"object\",\n  schemaType: \"object\",\n  error: exports.error,\n  code(cxt) {\n    const [propDeps, schDeps] = splitDependencies(cxt);\n    validatePropertyDeps(cxt, propDeps);\n    validateSchemaDeps(cxt, schDeps);\n  }\n};\nfunction splitDependencies({\n  schema\n}) {\n  const propertyDeps = {};\n  const schemaDeps = {};\n  for (const key in schema) {\n    if (key === \"__proto__\") continue;\n    const deps = Array.isArray(schema[key]) ? propertyDeps : schemaDeps;\n    deps[key] = schema[key];\n  }\n  return [propertyDeps, schemaDeps];\n}\nfunction validatePropertyDeps(cxt, propertyDeps = cxt.schema) {\n  const {\n    gen,\n    data,\n    it\n  } = cxt;\n  if (Object.keys(propertyDeps).length === 0) return;\n  const missing = gen.let(\"missing\");\n  for (const prop in propertyDeps) {\n    const deps = propertyDeps[prop];\n    if (deps.length === 0) continue;\n    const hasProperty = (0, code_1.propertyInData)(gen, data, prop, it.opts.ownProperties);\n    cxt.setParams({\n      property: prop,\n      depsCount: deps.length,\n      deps: deps.join(\", \")\n    });\n    if (it.allErrors) {\n      gen.if(hasProperty, () => {\n        for (const depProp of deps) {\n          (0, code_1.checkReportMissingProp)(cxt, depProp);\n        }\n      });\n    } else {\n      gen.if((0, codegen_1._)`${hasProperty} && (${(0, code_1.checkMissingProp)(cxt, deps, missing)})`);\n      (0, code_1.reportMissingProp)(cxt, missing);\n      gen.else();\n    }\n  }\n}\nexports.validatePropertyDeps = validatePropertyDeps;\nfunction validateSchemaDeps(cxt, schemaDeps = cxt.schema) {\n  const {\n    gen,\n    data,\n    keyword,\n    it\n  } = cxt;\n  const valid = gen.name(\"valid\");\n  for (const prop in schemaDeps) {\n    if ((0, util_1.alwaysValidSchema)(it, schemaDeps[prop])) continue;\n    gen.if((0, code_1.propertyInData)(gen, data, prop, it.opts.ownProperties), () => {\n      const schCxt = cxt.subschema({\n        keyword,\n        schemaProp: prop\n      }, valid);\n      cxt.mergeValidEvaluated(schCxt, valid);\n    }, () => gen.var(valid, true) // TODO var\n    );\n    cxt.ok(valid);\n  }\n}\nexports.validateSchemaDeps = validateSchemaDeps;\nexports.default = def;","map":{"version":3,"names":["codegen_1","require","util_1","code_1","exports","error","message","params","property","depsCount","deps","property_ies","str","missingProperty","_","def","keyword","type","schemaType","code","cxt","propDeps","schDeps","splitDependencies","validatePropertyDeps","validateSchemaDeps","schema","propertyDeps","schemaDeps","key","Array","isArray","gen","data","it","Object","keys","length","missing","let","prop","hasProperty","propertyInData","opts","ownProperties","setParams","join","allErrors","if","depProp","checkReportMissingProp","checkMissingProp","reportMissingProp","else","valid","name","alwaysValidSchema","schCxt","subschema","schemaProp","mergeValidEvaluated","var","ok","default"],"sources":["C:\\Users\\chest\\OneDrive\\Documentos\\GitHub\\HackUPC\\frontend\\node_modules\\ajv-formats\\node_modules\\ajv\\lib\\vocabularies\\applicator\\dependencies.ts"],"sourcesContent":["import type {\n  CodeKeywordDefinition,\n  ErrorObject,\n  KeywordErrorDefinition,\n  SchemaMap,\n  AnySchema,\n} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, str} from \"../../compile/codegen\"\nimport {alwaysValidSchema} from \"../../compile/util\"\nimport {checkReportMissingProp, checkMissingProp, reportMissingProp, propertyInData} from \"../code\"\n\nexport type PropertyDependencies = {[K in string]?: string[]}\n\nexport interface DependenciesErrorParams {\n  property: string\n  missingProperty: string\n  depsCount: number\n  deps: string // TODO change to string[]\n}\n\ntype SchemaDependencies = SchemaMap\n\nexport type DependenciesError = ErrorObject<\n  \"dependencies\",\n  DependenciesErrorParams,\n  {[K in string]?: string[] | AnySchema}\n>\n\nexport const error: KeywordErrorDefinition = {\n  message: ({params: {property, depsCount, deps}}) => {\n    const property_ies = depsCount === 1 ? \"property\" : \"properties\"\n    return str`must have ${property_ies} ${deps} when property ${property} is present`\n  },\n  params: ({params: {property, depsCount, deps, missingProperty}}) =>\n    _`{property: ${property},\n    missingProperty: ${missingProperty},\n    depsCount: ${depsCount},\n    deps: ${deps}}`, // TODO change to reference\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"dependencies\",\n  type: \"object\",\n  schemaType: \"object\",\n  error,\n  code(cxt: KeywordCxt) {\n    const [propDeps, schDeps] = splitDependencies(cxt)\n    validatePropertyDeps(cxt, propDeps)\n    validateSchemaDeps(cxt, schDeps)\n  },\n}\n\nfunction splitDependencies({schema}: KeywordCxt): [PropertyDependencies, SchemaDependencies] {\n  const propertyDeps: PropertyDependencies = {}\n  const schemaDeps: SchemaDependencies = {}\n  for (const key in schema) {\n    if (key === \"__proto__\") continue\n    const deps = Array.isArray(schema[key]) ? propertyDeps : schemaDeps\n    deps[key] = schema[key]\n  }\n  return [propertyDeps, schemaDeps]\n}\n\nexport function validatePropertyDeps(\n  cxt: KeywordCxt,\n  propertyDeps: {[K in string]?: string[]} = cxt.schema\n): void {\n  const {gen, data, it} = cxt\n  if (Object.keys(propertyDeps).length === 0) return\n  const missing = gen.let(\"missing\")\n  for (const prop in propertyDeps) {\n    const deps = propertyDeps[prop] as string[]\n    if (deps.length === 0) continue\n    const hasProperty = propertyInData(gen, data, prop, it.opts.ownProperties)\n    cxt.setParams({\n      property: prop,\n      depsCount: deps.length,\n      deps: deps.join(\", \"),\n    })\n    if (it.allErrors) {\n      gen.if(hasProperty, () => {\n        for (const depProp of deps) {\n          checkReportMissingProp(cxt, depProp)\n        }\n      })\n    } else {\n      gen.if(_`${hasProperty} && (${checkMissingProp(cxt, deps, missing)})`)\n      reportMissingProp(cxt, missing)\n      gen.else()\n    }\n  }\n}\n\nexport function validateSchemaDeps(cxt: KeywordCxt, schemaDeps: SchemaMap = cxt.schema): void {\n  const {gen, data, keyword, it} = cxt\n  const valid = gen.name(\"valid\")\n  for (const prop in schemaDeps) {\n    if (alwaysValidSchema(it, schemaDeps[prop] as AnySchema)) continue\n    gen.if(\n      propertyInData(gen, data, prop, it.opts.ownProperties),\n      () => {\n        const schCxt = cxt.subschema({keyword, schemaProp: prop}, valid)\n        cxt.mergeValidEvaluated(schCxt, valid)\n      },\n      () => gen.var(valid, true) // TODO var\n    )\n    cxt.ok(valid)\n  }\n}\n\nexport default def\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}