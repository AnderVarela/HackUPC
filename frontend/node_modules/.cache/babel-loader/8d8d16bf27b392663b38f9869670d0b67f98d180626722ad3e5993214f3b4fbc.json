{"ast":null,"code":"'use strict';\n\nvar os = require('os');\nvar fs = require('fs');\nvar child = require('child_process');\nvar DEFAULT_RESOLV_FILE = '/etc/resolv.conf';\nfunction getInterfaceName() {\n  var val = 'eth';\n  var platform = os.platform();\n  if (platform === 'darwin') {\n    val = 'en';\n  } else if (platform === 'win32') {\n    val = null;\n  }\n  return val;\n}\nfunction getIfconfigCMD() {\n  if (os.platform() === 'win32') {\n    return 'ipconfig/all';\n  }\n  return '/sbin/ifconfig';\n}\n\n// typeof os.networkInterfaces family is a number (v18.0.0)\n// types: 'IPv4' | 'IPv6' => 4 | 6\n// @see https://github.com/nodejs/node/issues/42861\nfunction matchName(actualFamily, expectedFamily) {\n  if (expectedFamily === 'IPv4') {\n    return actualFamily === 'IPv4' || actualFamily === 4;\n  }\n  if (expectedFamily === 'IPv6') {\n    return actualFamily === 'IPv6' || actualFamily === 6;\n  }\n  return actualFamily === expectedFamily;\n}\n\n/**\n * Get all addresses.\n *\n * @param {String} [interfaceName] interface name, default is 'eth' on linux, 'en' on mac os.\n * @param {Function(err, addr)} callback\n *  - {Object} addr {\n *    - {String} ip\n *    - {String} ipv6\n *    - {String} mac\n *  }\n */\nfunction address(interfaceName, callback) {\n  if (typeof interfaceName === 'function') {\n    callback = interfaceName;\n    interfaceName = null;\n  }\n  var addr = {\n    ip: address.ip(interfaceName),\n    ipv6: address.ipv6(interfaceName),\n    mac: null\n  };\n  address.mac(interfaceName, function (err, mac) {\n    if (mac) {\n      addr.mac = mac;\n    }\n    callback(err, addr);\n  });\n}\naddress.interface = function (family, name) {\n  var interfaces = os.networkInterfaces();\n  var noName = !name;\n  name = name || getInterfaceName();\n  family = family || 'IPv4';\n  for (var i = -1; i < 8; i++) {\n    var interfaceName = name + (i >= 0 ? i : ''); // support 'lo' and 'lo0'\n    var items = interfaces[interfaceName];\n    if (items) {\n      for (var j = 0; j < items.length; j++) {\n        var item = items[j];\n        if (matchName(item.family, family)) {\n          return item;\n        }\n      }\n    }\n  }\n  if (noName) {\n    // filter all loopback or local addresses\n    for (var k in interfaces) {\n      var items = interfaces[k];\n      for (var i = 0; i < items.length; i++) {\n        var item = items[i];\n        // all 127 addresses are local and should be ignored\n        if (matchName(item.family, family) && !item.address.startsWith('127.')) {\n          return item;\n        }\n      }\n    }\n  }\n  return;\n};\n\n/**\n * Get current machine IPv4\n *\n * @param {String} [interfaceName] interface name, default is 'eth' on linux, 'en' on mac os.\n * @return {String} IP address\n */\naddress.ip = function (interfaceName) {\n  var item = address.interface('IPv4', interfaceName);\n  return item && item.address;\n};\n\n/**\n * Get current machine IPv6\n *\n * @param {String} [interfaceName] interface name, default is 'eth' on linux, 'en' on mac os.\n * @return {String} IP address\n */\naddress.ipv6 = function (interfaceName) {\n  var item = address.interface('IPv6', interfaceName);\n  return item && item.address;\n};\n\n// osx start line 'en0: flags=8863<UP,BROADCAST,SMART,RUNNING,SIMPLEX,MULTICAST> mtu 1500'\n// linux start line 'eth0      Link encap:Ethernet  HWaddr 00:16:3E:00:0A:29  '\nvar MAC_OSX_START_LINE = /^(\\w+)\\:\\s+flags=/;\nvar MAC_LINUX_START_LINE = /^(\\w+)\\s{2,}link encap:\\w+/i;\n\n// ether 78:ca:39:b0:e6:7d\n// HWaddr 00:16:3E:00:0A:29\nvar MAC_RE = address.MAC_RE = /(?:ether|HWaddr)\\s+((?:[a-z0-9]{2}\\:){5}[a-z0-9]{2})/i;\n\n// osx: inet 192.168.2.104 netmask 0xffffff00 broadcast 192.168.2.255\n// linux: inet addr:10.125.5.202  Bcast:10.125.15.255  Mask:255.255.240.0\nvar MAC_IP_RE = address.MAC_IP_RE = /inet\\s(?:addr\\:)?(\\d+\\.\\d+\\.\\d+\\.\\d+)/;\nfunction getMAC(content, interfaceName, matchIP) {\n  var lines = content.split('\\n');\n  for (var i = 0; i < lines.length; i++) {\n    var line = lines[i].trimRight();\n    var m = MAC_OSX_START_LINE.exec(line) || MAC_LINUX_START_LINE.exec(line);\n    if (!m) {\n      continue;\n    }\n\n    // check interface name\n    var name = m[1];\n    if (name.indexOf(interfaceName) !== 0) {\n      continue;\n    }\n    var ip = null;\n    var mac = null;\n    var match = MAC_RE.exec(line);\n    if (match) {\n      mac = match[1];\n    }\n    i++;\n    while (true) {\n      line = lines[i];\n      if (!line || MAC_OSX_START_LINE.exec(line) || MAC_LINUX_START_LINE.exec(line)) {\n        i--;\n        break; // hit next interface, handle next interface\n      }\n      if (!mac) {\n        match = MAC_RE.exec(line);\n        if (match) {\n          mac = match[1];\n        }\n      }\n      if (!ip) {\n        match = MAC_IP_RE.exec(line);\n        if (match) {\n          ip = match[1];\n        }\n      }\n      i++;\n    }\n    if (ip === matchIP) {\n      return mac;\n    }\n  }\n}\n\n/**\n * Get current machine MAC address\n *\n * @param {String} [interfaceName] interface name, default is 'eth' on linux, 'en' on mac os.\n * @param {Function(err, address)} callback\n */\naddress.mac = function (interfaceName, callback) {\n  if (typeof interfaceName === 'function') {\n    callback = interfaceName;\n    interfaceName = null;\n  }\n  interfaceName = interfaceName || getInterfaceName();\n  var item = address.interface('IPv4', interfaceName);\n  if (!item) {\n    return callback();\n  }\n\n  // https://github.com/nodejs/node/issues/13581\n  // bug in node 7.x and <= 8.4.0\n  if (!process.env.CI && (item.mac === 'ff:00:00:00:00:00' || item.mac === '00:00:00:00:00:00')) {\n    // wrong address, ignore it\n    item.mac = '';\n  }\n  if (item.mac) {\n    return callback(null, item.mac);\n  }\n  child.exec(getIfconfigCMD(), {\n    timeout: 5000\n  }, function (err, stdout, stderr) {\n    if (err || !stdout) {\n      return callback(err);\n    }\n    var mac = getMAC(stdout || '', interfaceName, item.address);\n    callback(null, mac);\n  });\n};\n\n// nameserver 172.24.102.254\nvar DNS_SERVER_RE = /^nameserver\\s+(\\d+\\.\\d+\\.\\d+\\.\\d+)$/i;\n\n/**\n * Get DNS servers.\n *\n * @param {String} [filepath] resolv config file path. default is '/etc/resolv.conf'.\n * @param {Function(err, servers)} callback\n */\naddress.dns = function (filepath, callback) {\n  if (typeof filepath === 'function') {\n    callback = filepath;\n    filepath = null;\n  }\n  filepath = filepath || DEFAULT_RESOLV_FILE;\n  fs.readFile(filepath, 'utf8', function (err, content) {\n    if (err) {\n      return callback(err);\n    }\n    var servers = [];\n    content = content || '';\n    var lines = content.split('\\n');\n    for (var i = 0; i < lines.length; i++) {\n      var line = lines[i].trim();\n      var m = DNS_SERVER_RE.exec(line);\n      if (m) {\n        servers.push(m[1]);\n      }\n    }\n    callback(null, servers);\n  });\n};\nmodule.exports = address;","map":{"version":3,"names":["os","require","fs","child","DEFAULT_RESOLV_FILE","getInterfaceName","val","platform","getIfconfigCMD","matchName","actualFamily","expectedFamily","address","interfaceName","callback","addr","ip","ipv6","mac","err","interface","family","name","interfaces","networkInterfaces","noName","i","items","j","length","item","k","startsWith","MAC_OSX_START_LINE","MAC_LINUX_START_LINE","MAC_RE","MAC_IP_RE","getMAC","content","matchIP","lines","split","line","trimRight","m","exec","indexOf","match","process","env","CI","timeout","stdout","stderr","DNS_SERVER_RE","dns","filepath","readFile","servers","trim","push","module","exports"],"sources":["C:/Users/chest/OneDrive/Documentos/GitHub/HackUPC/frontend/node_modules/address/lib/address.js"],"sourcesContent":["'use strict';\n\nvar os = require('os');\nvar fs = require('fs');\nvar child = require('child_process');\n\nvar DEFAULT_RESOLV_FILE = '/etc/resolv.conf';\n\nfunction getInterfaceName() {\n  var val = 'eth';\n  var platform = os.platform();\n  if (platform === 'darwin') {\n    val = 'en';\n  } else if (platform === 'win32') {\n    val = null;\n  }\n  return val;\n}\n\nfunction getIfconfigCMD() {\n  if (os.platform() === 'win32') {\n    return 'ipconfig/all';\n  }\n  return '/sbin/ifconfig';\n}\n\n// typeof os.networkInterfaces family is a number (v18.0.0)\n// types: 'IPv4' | 'IPv6' => 4 | 6\n// @see https://github.com/nodejs/node/issues/42861\nfunction matchName(actualFamily, expectedFamily) {\n  if (expectedFamily === 'IPv4') {\n    return actualFamily === 'IPv4' || actualFamily === 4;\n  }\n  if (expectedFamily === 'IPv6') {\n    return actualFamily === 'IPv6' || actualFamily === 6;\n  }\n  return actualFamily === expectedFamily;\n}\n\n/**\n * Get all addresses.\n *\n * @param {String} [interfaceName] interface name, default is 'eth' on linux, 'en' on mac os.\n * @param {Function(err, addr)} callback\n *  - {Object} addr {\n *    - {String} ip\n *    - {String} ipv6\n *    - {String} mac\n *  }\n */\nfunction address(interfaceName, callback) {\n  if (typeof interfaceName === 'function') {\n    callback = interfaceName;\n    interfaceName = null;\n  }\n\n  var addr = {\n    ip: address.ip(interfaceName),\n    ipv6: address.ipv6(interfaceName),\n    mac: null\n  };\n  address.mac(interfaceName, function (err, mac) {\n    if (mac) {\n      addr.mac = mac;\n    }\n    callback(err, addr);\n  });\n}\n\naddress.interface = function (family, name) {\n  var interfaces = os.networkInterfaces();\n  var noName = !name;\n  name = name || getInterfaceName();\n  family = family || 'IPv4';\n  for (var i = -1; i < 8; i++) {\n    var interfaceName = name + (i >= 0 ? i : ''); // support 'lo' and 'lo0'\n    var items = interfaces[interfaceName];\n    if (items) {\n      for (var j = 0; j < items.length; j++) {\n        var item = items[j];\n        if (matchName(item.family, family)) {\n          return item;\n        }\n      }\n    }\n  }\n\n  if (noName) {\n    // filter all loopback or local addresses\n    for (var k in interfaces) {\n      var items = interfaces[k];\n      for (var i = 0; i < items.length; i++) {\n        var item = items[i];\n        // all 127 addresses are local and should be ignored\n        if (matchName(item.family, family) && !item.address.startsWith('127.')) {\n          return item;\n        }\n      }\n    }\n  }\n  return;\n};\n\n/**\n * Get current machine IPv4\n *\n * @param {String} [interfaceName] interface name, default is 'eth' on linux, 'en' on mac os.\n * @return {String} IP address\n */\naddress.ip = function (interfaceName) {\n  var item = address.interface('IPv4', interfaceName);\n  return item && item.address;\n};\n\n/**\n * Get current machine IPv6\n *\n * @param {String} [interfaceName] interface name, default is 'eth' on linux, 'en' on mac os.\n * @return {String} IP address\n */\naddress.ipv6 = function (interfaceName) {\n  var item = address.interface('IPv6', interfaceName);\n  return item && item.address;\n};\n\n// osx start line 'en0: flags=8863<UP,BROADCAST,SMART,RUNNING,SIMPLEX,MULTICAST> mtu 1500'\n// linux start line 'eth0      Link encap:Ethernet  HWaddr 00:16:3E:00:0A:29  '\nvar MAC_OSX_START_LINE = /^(\\w+)\\:\\s+flags=/;\nvar MAC_LINUX_START_LINE = /^(\\w+)\\s{2,}link encap:\\w+/i;\n\n// ether 78:ca:39:b0:e6:7d\n// HWaddr 00:16:3E:00:0A:29\nvar MAC_RE = address.MAC_RE = /(?:ether|HWaddr)\\s+((?:[a-z0-9]{2}\\:){5}[a-z0-9]{2})/i;\n\n// osx: inet 192.168.2.104 netmask 0xffffff00 broadcast 192.168.2.255\n// linux: inet addr:10.125.5.202  Bcast:10.125.15.255  Mask:255.255.240.0\nvar MAC_IP_RE = address.MAC_IP_RE = /inet\\s(?:addr\\:)?(\\d+\\.\\d+\\.\\d+\\.\\d+)/;\n\nfunction getMAC(content, interfaceName, matchIP) {\n  var lines = content.split('\\n');\n  for (var i = 0; i < lines.length; i++) {\n    var line = lines[i].trimRight();\n    var m = MAC_OSX_START_LINE.exec(line) || MAC_LINUX_START_LINE.exec(line);\n    if (!m) {\n      continue;\n    }\n\n    // check interface name\n    var name = m[1];\n    if (name.indexOf(interfaceName) !== 0) {\n      continue;\n    }\n\n    var ip = null;\n    var mac = null;\n    var match = MAC_RE.exec(line);\n    if (match) {\n      mac = match[1];\n    }\n\n    i++;\n    while (true) {\n      line = lines[i];\n      if (!line || MAC_OSX_START_LINE.exec(line) || MAC_LINUX_START_LINE.exec(line)) {\n        i--;\n        break; // hit next interface, handle next interface\n      }\n      if (!mac) {\n        match = MAC_RE.exec(line);\n        if (match) {\n          mac = match[1];\n        }\n      }\n\n      if (!ip) {\n        match = MAC_IP_RE.exec(line);\n        if (match) {\n          ip = match[1];\n        }\n      }\n\n      i++;\n    }\n\n    if (ip === matchIP) {\n      return mac;\n    }\n  }\n}\n\n/**\n * Get current machine MAC address\n *\n * @param {String} [interfaceName] interface name, default is 'eth' on linux, 'en' on mac os.\n * @param {Function(err, address)} callback\n */\naddress.mac = function (interfaceName, callback) {\n  if (typeof interfaceName === 'function') {\n    callback = interfaceName;\n    interfaceName = null;\n  }\n  interfaceName = interfaceName || getInterfaceName();\n  var item = address.interface('IPv4', interfaceName);\n  if (!item) {\n    return callback();\n  }\n\n  // https://github.com/nodejs/node/issues/13581\n  // bug in node 7.x and <= 8.4.0\n  if (!process.env.CI && (item.mac === 'ff:00:00:00:00:00' || item.mac === '00:00:00:00:00:00')) {\n    // wrong address, ignore it\n    item.mac = '';\n  }\n\n  if (item.mac) {\n    return callback(null, item.mac);\n  }\n\n  child.exec(getIfconfigCMD(), {timeout: 5000}, function (err, stdout, stderr) {\n    if (err || !stdout) {\n      return callback(err);\n    }\n\n    var mac = getMAC(stdout || '', interfaceName, item.address);\n    callback(null, mac);\n  });\n};\n\n// nameserver 172.24.102.254\nvar DNS_SERVER_RE = /^nameserver\\s+(\\d+\\.\\d+\\.\\d+\\.\\d+)$/i;\n\n/**\n * Get DNS servers.\n *\n * @param {String} [filepath] resolv config file path. default is '/etc/resolv.conf'.\n * @param {Function(err, servers)} callback\n */\naddress.dns = function (filepath, callback) {\n  if (typeof filepath === 'function') {\n    callback = filepath;\n    filepath = null;\n  }\n  filepath = filepath || DEFAULT_RESOLV_FILE;\n  fs.readFile(filepath, 'utf8', function (err, content) {\n    if (err) {\n      return callback(err);\n    }\n    var servers = [];\n    content = content || '';\n    var lines = content.split('\\n');\n    for (var i = 0; i < lines.length; i++) {\n      var line = lines[i].trim();\n      var m = DNS_SERVER_RE.exec(line);\n      if (m) {\n        servers.push(m[1]);\n      }\n    }\n\n    callback(null, servers);\n  });\n};\n\nmodule.exports = address;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}