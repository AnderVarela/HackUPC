{"ast":null,"code":"function e(e, t) {\n  var n = Object(t).className,\n    r = Object(t).attr || \"blank\",\n    o = Object(t).force;\n  try {\n    if (e.querySelector(\":blank\"), !o) return;\n  } catch (e) {}\n  var a,\n    i,\n    c,\n    s = (e.ownerDocument || e).defaultView;\n  d(s.HTMLInputElement), d(s.HTMLSelectElement), d(s.HTMLTextAreaElement), a = s.HTMLOptionElement, i = Object.getOwnPropertyDescriptor(a.prototype, \"selected\"), c = i.set, i.set = function (t) {\n    c.apply(this, arguments);\n    var n = e.createEvent(\"Event\");\n    n.initEvent(\"change\", !0, !0), this.dispatchEvent(n);\n  }, Object.defineProperty(a.prototype, \"selected\", i);\n  var l = /^(INPUT|SELECT|TEXTAREA)$/;\n  function p() {\n    this.value || \"SELECT\" === this.nodeName && this.options[this.selectedIndex].value ? (r && this.removeAttribute(r), n && this.classList.remove(n), this.removeAttribute(\"blank\")) : (r && this.setAttribute(\"blank\", r), n && this.classList.add(n));\n  }\n  function d(e) {\n    var t = Object.getOwnPropertyDescriptor(e.prototype, \"value\"),\n      n = t.set;\n    t.set = function (e) {\n      n.apply(this, arguments), p.apply(this);\n    }, Object.defineProperty(e.prototype, \"value\", t);\n  }\n  Array.prototype.forEach.call(e.querySelectorAll(\"INPUT,SELECT,TEXTAREA\"), function (e) {\n    \"SELECT\" === e.nodeName ? e.addEventListener(\"change\", p) : e.addEventListener(\"input\", p), p.call(e);\n  }), new MutationObserver(function (e) {\n    e.forEach(function (e) {\n      Array.prototype.forEach.call(e.addedNodes || [], function (e) {\n        1 === e.nodeType && l.test(e.nodeName) && (\"SELECT\" === e.nodeName ? e.addEventListener(\"change\", p) : e.addEventListener(\"input\", p), p.call(e));\n      }), Array.prototype.forEach.call(e.removedNodes || [], function (e) {\n        1 === e.nodeType && l.test(e.nodeName) && (\"SELECT\" === e.nodeName ? e.removeEventListener(\"change\", p) : e.removeEventListener(\"input\", p));\n      });\n    });\n  }).observe(e, {\n    childList: !0,\n    subtree: !0\n  });\n}\nexport { e as default };","map":{"version":3,"names":["e","t","n","Object","className","r","attr","o","force","querySelector","a","i","c","s","ownerDocument","defaultView","d","HTMLInputElement","HTMLSelectElement","HTMLTextAreaElement","HTMLOptionElement","getOwnPropertyDescriptor","prototype","set","apply","arguments","createEvent","initEvent","dispatchEvent","defineProperty","l","p","value","nodeName","options","selectedIndex","removeAttribute","classList","remove","setAttribute","add","Array","forEach","call","querySelectorAll","addEventListener","MutationObserver","addedNodes","nodeType","test","removedNodes","removeEventListener","observe","childList","subtree","default"],"sources":["C:\\Users\\chest\\OneDrive\\Documentos\\GitHub\\HackUPC\\frontend\\node_modules\\css-blank-pseudo\\src\\browser.js"],"sourcesContent":["/* global MutationObserver */\nexport default function cssBlankPseudo(document, opts) {\n\t// configuration\n\tconst className = Object(opts).className;\n\tconst attr = Object(opts).attr || 'blank';\n\tconst force = Object(opts).force;\n\n\ttry {\n\t\tdocument.querySelector(':blank');\n\n\t\tif (!force) {\n\t\t\treturn;\n\t\t}\n\t} catch (ignoredError) { /* do nothing and continue */ }\n\n\t// observe value changes on <input>, <select>, and <textarea>\n\tconst window = (document.ownerDocument || document).defaultView;\n\n\tobserveValueOfHTMLElement(window.HTMLInputElement);\n\tobserveValueOfHTMLElement(window.HTMLSelectElement);\n\tobserveValueOfHTMLElement(window.HTMLTextAreaElement);\n\tobserveSelectedOfHTMLElement(window.HTMLOptionElement);\n\n\t// form control elements selector\n\tconst selector = 'INPUT,SELECT,TEXTAREA';\n\tconst selectorRegExp = /^(INPUT|SELECT|TEXTAREA)$/;\n\n\t// conditionally update all form control elements\n\tArray.prototype.forEach.call(\n\t\tdocument.querySelectorAll(selector),\n\t\tnode => {\n\t\t\tif (node.nodeName === 'SELECT') {\n\t\t\t\tnode.addEventListener('change', configureCssBlankAttribute);\n\t\t\t} else {\n\t\t\t\tnode.addEventListener('input', configureCssBlankAttribute);\n\t\t\t}\n\n\t\t\tconfigureCssBlankAttribute.call(node);\n\t\t},\n\t);\n\n\t// conditionally observe added or unobserve removed form control elements\n\tnew MutationObserver(mutationsList => {\n\t\tmutationsList.forEach(mutation => {\n\t\t\tArray.prototype.forEach.call(\n\t\t\t\tmutation.addedNodes || [],\n\t\t\t\tnode => {\n\t\t\t\t\tif (node.nodeType === 1 && selectorRegExp.test(node.nodeName)) {\n\t\t\t\t\t\tif (node.nodeName === 'SELECT') {\n\t\t\t\t\t\t\tnode.addEventListener('change', configureCssBlankAttribute);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tnode.addEventListener('input', configureCssBlankAttribute);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconfigureCssBlankAttribute.call(node);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t);\n\n\t\t\tArray.prototype.forEach.call(\n\t\t\t\tmutation.removedNodes || [],\n\t\t\t\tnode => {\n\t\t\t\t\tif (node.nodeType === 1 && selectorRegExp.test(node.nodeName)) {\n\t\t\t\t\t\tif (node.nodeName === 'SELECT') {\n\t\t\t\t\t\t\tnode.removeEventListener('change', configureCssBlankAttribute);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tnode.removeEventListener('input', configureCssBlankAttribute);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t);\n\t\t});\n\t}).observe(document, { childList: true, subtree: true });\n\n\t// update a form control elementâ€™s css-blank attribute\n\tfunction configureCssBlankAttribute () {\n\t\tif (this.value || this.nodeName === 'SELECT' && this.options[this.selectedIndex].value) {\n\t\t\tif (attr) {\n\t\t\t\tthis.removeAttribute(attr);\n\t\t\t}\n\n\t\t\tif (className) {\n\t\t\t\tthis.classList.remove(className);\n\t\t\t}\n\t\t\tthis.removeAttribute('blank');\n\t\t} else {\n\t\t\tif (attr) {\n\t\t\t\tthis.setAttribute('blank', attr);\n\t\t\t}\n\n\t\t\tif (className) {\n\t\t\t\tthis.classList.add(className);\n\t\t\t}\n\t\t}\n\t}\n\n\t// observe changes to the \"value\" property on an HTML Element\n\tfunction observeValueOfHTMLElement (HTMLElement) {\n\t\tconst descriptor = Object.getOwnPropertyDescriptor(HTMLElement.prototype, 'value');\n\t\tconst nativeSet = descriptor.set;\n\n\t\tdescriptor.set = function set (value) { // eslint-disable-line no-unused-vars\n\t\t\tnativeSet.apply(this, arguments);\n\n\t\t\tconfigureCssBlankAttribute.apply(this);\n\t\t};\n\n\t\tObject.defineProperty(HTMLElement.prototype, 'value', descriptor);\n\t}\n\n\t// observe changes to the \"selected\" property on an HTML Element\n\tfunction observeSelectedOfHTMLElement (HTMLElement) {\n\t\tconst descriptor = Object.getOwnPropertyDescriptor(HTMLElement.prototype, 'selected');\n\t\tconst nativeSet = descriptor.set;\n\n\t\tdescriptor.set = function set (value) { // eslint-disable-line no-unused-vars\n\t\t\tnativeSet.apply(this, arguments);\n\n\t\t\tconst event = document.createEvent('Event');\n\t\t\tevent.initEvent('change', true, true);\n\t\t\tthis.dispatchEvent(event);\n\t\t};\n\n\t\tObject.defineProperty(HTMLElement.prototype, 'selected', descriptor);\n\t}\n}\n"],"mappings":"AACe,SAASA,EAAeA,CAAA,EAAUC,CAAA;EAAA,IAE1CC,CAAA,GAAYC,MAAA,CAAOF,CAAA,EAAMG,SAAA;IACzBC,CAAA,GAAOF,MAAA,CAAOF,CAAA,EAAMK,IAAA,IAAQ;IAC5BC,CAAA,GAAQJ,MAAA,CAAOF,CAAA,EAAMO,KAAA;EAAA;IAAA,IAG1BR,CAAA,CAASS,aAAA,CAAc,YAElBF,CAAA;EAAA,CAGJ,QAAOP,CAAA;EAAA,IAkG8BU,CAAA;IAChCC,CAAA;IACAC,CAAA;IAjGDC,CAAA,IAAUb,CAAA,CAASc,aAAA,IAAiBd,CAAA,EAAUe,WAAA;EAEpDC,CAAA,CAA0BH,CAAA,CAAOI,gBAAA,GACjCD,CAAA,CAA0BH,CAAA,CAAOK,iBAAA,GACjCF,CAAA,CAA0BH,CAAA,CAAOM,mBAAA,GA2FMT,CAAA,GA1FVG,CAAA,CAAOO,iBAAA,EA2F7BT,CAAA,GAAaR,MAAA,CAAOkB,wBAAA,CAAyBX,CAAA,CAAYY,SAAA,EAAW,aACpEV,CAAA,GAAYD,CAAA,CAAWY,GAAA,EAE7BZ,CAAA,CAAWY,GAAA,GAAM,UAActB,CAAA;IAC9BW,CAAA,CAAUY,KAAA,CAAM,MAAMC,SAAA;IAAA,IAEhBvB,CAAA,GAAQF,CAAA,CAAS0B,WAAA,CAAY;IACnCxB,CAAA,CAAMyB,SAAA,CAAU,WAAU,IAAM,SAC3BC,aAAA,CAAc1B,CAAA;EAAA,GAGpBC,MAAA,CAAO0B,cAAA,CAAenB,CAAA,CAAYY,SAAA,EAAW,YAAYX,CAAA;EAAA,IAlGpDmB,CAAA,GAAiB;EAAA,SAkDdC,EAAA;IACJ,KAAKC,KAAA,IAA2B,aAAlB,KAAKC,QAAA,IAAyB,KAAKC,OAAA,CAAQ,KAAKC,aAAA,EAAeH,KAAA,IAC5E3B,CAAA,SACE+B,eAAA,CAAgB/B,CAAA,GAGlBH,CAAA,SACEmC,SAAA,CAAUC,MAAA,CAAOpC,CAAA,QAElBkC,eAAA,CAAgB,aAEjB/B,CAAA,SACEkC,YAAA,CAAa,SAASlC,CAAA,GAGxBH,CAAA,SACEmC,SAAA,CAAUG,GAAA,CAAItC,CAAA;EAAA;EAAA,SAMbc,EAA2BhB,CAAA;IAAA,IAC7BC,CAAA,GAAaE,MAAA,CAAOkB,wBAAA,CAAyBrB,CAAA,CAAYsB,SAAA,EAAW;MACpEpB,CAAA,GAAYD,CAAA,CAAWsB,GAAA;IAE7BtB,CAAA,CAAWsB,GAAA,GAAM,UAAcvB,CAAA;MAC9BE,CAAA,CAAUsB,KAAA,CAAM,MAAMC,SAAA,GAEtBM,CAAA,CAA2BP,KAAA,CAAM;IAAA,GAGlCrB,MAAA,CAAO0B,cAAA,CAAe7B,CAAA,CAAYsB,SAAA,EAAW,SAASrB,CAAA;EAAA;EA/EvDwC,KAAA,CAAMnB,SAAA,CAAUoB,OAAA,CAAQC,IAAA,CACvB3C,CAAA,CAAS4C,gBAAA,CALO,0BAMhB,UAAA5C,CAAA;IACuB,aAAlBA,CAAA,CAAKiC,QAAA,GACRjC,CAAA,CAAK6C,gBAAA,CAAiB,UAAUd,CAAA,IAEhC/B,CAAA,CAAK6C,gBAAA,CAAiB,SAASd,CAAA,GAGhCA,CAAA,CAA2BY,IAAA,CAAK3C,CAAA;EAAA,QAK9B8C,gBAAA,CAAiB,UAAA9C,CAAA;IACpBA,CAAA,CAAc0C,OAAA,CAAQ,UAAA1C,CAAA;MACrByC,KAAA,CAAMnB,SAAA,CAAUoB,OAAA,CAAQC,IAAA,CACvB3C,CAAA,CAAS+C,UAAA,IAAc,IACvB,UAAA/C,CAAA;QACuB,MAAlBA,CAAA,CAAKgD,QAAA,IAAkBlB,CAAA,CAAemB,IAAA,CAAKjD,CAAA,CAAKiC,QAAA,MAC7B,aAAlBjC,CAAA,CAAKiC,QAAA,GACRjC,CAAA,CAAK6C,gBAAA,CAAiB,UAAUd,CAAA,IAEhC/B,CAAA,CAAK6C,gBAAA,CAAiB,SAASd,CAAA,GAGhCA,CAAA,CAA2BY,IAAA,CAAK3C,CAAA;MAAA,IAKnCyC,KAAA,CAAMnB,SAAA,CAAUoB,OAAA,CAAQC,IAAA,CACvB3C,CAAA,CAASkD,YAAA,IAAgB,IACzB,UAAAlD,CAAA;QACuB,MAAlBA,CAAA,CAAKgD,QAAA,IAAkBlB,CAAA,CAAemB,IAAA,CAAKjD,CAAA,CAAKiC,QAAA,MAC7B,aAAlBjC,CAAA,CAAKiC,QAAA,GACRjC,CAAA,CAAKmD,mBAAA,CAAoB,UAAUpB,CAAA,IAEnC/B,CAAA,CAAKmD,mBAAA,CAAoB,SAASpB,CAAA;MAAA;IAAA;EAAA,GAMrCqB,OAAA,CAAQpD,CAAA,EAAU;IAAEqD,SAAA,GAAW;IAAMC,OAAA,GAAS;EAAA;AAAA;AAAA,SAAAtD,CAAA,IAAAuD,OAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}