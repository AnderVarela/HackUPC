{"ast":null,"code":"// @ts-check\n\n/**\n * CommanderError class\n * @class\n */\nclass CommanderError extends Error {\n  /**\n   * Constructs the CommanderError class\n   * @param {number} exitCode suggested exit code which could be used with process.exit\n   * @param {string} code an id string representing the error\n   * @param {string} message human-readable description of the error\n   * @constructor\n   */\n  constructor(exitCode, code, message) {\n    super(message);\n    // properly capture stack trace in Node.js\n    Error.captureStackTrace(this, this.constructor);\n    this.name = this.constructor.name;\n    this.code = code;\n    this.exitCode = exitCode;\n    this.nestedError = undefined;\n  }\n}\n\n/**\n * InvalidArgumentError class\n * @class\n */\nclass InvalidArgumentError extends CommanderError {\n  /**\n   * Constructs the InvalidArgumentError class\n   * @param {string} [message] explanation of why argument is invalid\n   * @constructor\n   */\n  constructor(message) {\n    super(1, 'commander.invalidArgument', message);\n    // properly capture stack trace in Node.js\n    Error.captureStackTrace(this, this.constructor);\n    this.name = this.constructor.name;\n  }\n}\nexports.CommanderError = CommanderError;\nexports.InvalidArgumentError = InvalidArgumentError;","map":{"version":3,"names":["CommanderError","Error","constructor","exitCode","code","message","captureStackTrace","name","nestedError","undefined","InvalidArgumentError","exports"],"sources":["C:/Users/chest/OneDrive/Documentos/GitHub/HackUPC/frontend/node_modules/commander/lib/error.js"],"sourcesContent":["// @ts-check\n\n/**\n * CommanderError class\n * @class\n */\nclass CommanderError extends Error {\n  /**\n   * Constructs the CommanderError class\n   * @param {number} exitCode suggested exit code which could be used with process.exit\n   * @param {string} code an id string representing the error\n   * @param {string} message human-readable description of the error\n   * @constructor\n   */\n  constructor(exitCode, code, message) {\n    super(message);\n    // properly capture stack trace in Node.js\n    Error.captureStackTrace(this, this.constructor);\n    this.name = this.constructor.name;\n    this.code = code;\n    this.exitCode = exitCode;\n    this.nestedError = undefined;\n  }\n}\n\n/**\n * InvalidArgumentError class\n * @class\n */\nclass InvalidArgumentError extends CommanderError {\n  /**\n   * Constructs the InvalidArgumentError class\n   * @param {string} [message] explanation of why argument is invalid\n   * @constructor\n   */\n  constructor(message) {\n    super(1, 'commander.invalidArgument', message);\n    // properly capture stack trace in Node.js\n    Error.captureStackTrace(this, this.constructor);\n    this.name = this.constructor.name;\n  }\n}\n\nexports.CommanderError = CommanderError;\nexports.InvalidArgumentError = InvalidArgumentError;\n"],"mappings":"AAAA;;AAEA;AACA;AACA;AACA;AACA,MAAMA,cAAc,SAASC,KAAK,CAAC;EACjC;AACF;AACA;AACA;AACA;AACA;AACA;EACEC,WAAWA,CAACC,QAAQ,EAAEC,IAAI,EAAEC,OAAO,EAAE;IACnC,KAAK,CAACA,OAAO,CAAC;IACd;IACAJ,KAAK,CAACK,iBAAiB,CAAC,IAAI,EAAE,IAAI,CAACJ,WAAW,CAAC;IAC/C,IAAI,CAACK,IAAI,GAAG,IAAI,CAACL,WAAW,CAACK,IAAI;IACjC,IAAI,CAACH,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACD,QAAQ,GAAGA,QAAQ;IACxB,IAAI,CAACK,WAAW,GAAGC,SAAS;EAC9B;AACF;;AAEA;AACA;AACA;AACA;AACA,MAAMC,oBAAoB,SAASV,cAAc,CAAC;EAChD;AACF;AACA;AACA;AACA;EACEE,WAAWA,CAACG,OAAO,EAAE;IACnB,KAAK,CAAC,CAAC,EAAE,2BAA2B,EAAEA,OAAO,CAAC;IAC9C;IACAJ,KAAK,CAACK,iBAAiB,CAAC,IAAI,EAAE,IAAI,CAACJ,WAAW,CAAC;IAC/C,IAAI,CAACK,IAAI,GAAG,IAAI,CAACL,WAAW,CAACK,IAAI;EACnC;AACF;AAEAI,OAAO,CAACX,cAAc,GAAGA,cAAc;AACvCW,OAAO,CAACD,oBAAoB,GAAGA,oBAAoB","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}