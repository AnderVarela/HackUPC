{"ast":null,"code":"/*!\n * compression\n * Copyright(c) 2010 Sencha Inc.\n * Copyright(c) 2011 TJ Holowaychuk\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module dependencies.\n * @private\n */\nvar accepts = require('accepts');\nvar Buffer = require('safe-buffer').Buffer;\nvar bytes = require('bytes');\nvar compressible = require('compressible');\nvar debug = require('debug')('compression');\nvar onHeaders = require('on-headers');\nvar vary = require('vary');\nvar zlib = require('zlib');\n\n/**\n * Module exports.\n */\n\nmodule.exports = compression;\nmodule.exports.filter = shouldCompress;\n\n/**\n * Module variables.\n * @private\n */\n\nvar cacheControlNoTransformRegExp = /(?:^|,)\\s*?no-transform\\s*?(?:,|$)/;\n\n/**\n * Compress response data with gzip / deflate.\n *\n * @param {Object} [options]\n * @return {Function} middleware\n * @public\n */\n\nfunction compression(options) {\n  var opts = options || {};\n\n  // options\n  var filter = opts.filter || shouldCompress;\n  var threshold = bytes.parse(opts.threshold);\n  if (threshold == null) {\n    threshold = 1024;\n  }\n  return function compression(req, res, next) {\n    var ended = false;\n    var length;\n    var listeners = [];\n    var stream;\n    var _end = res.end;\n    var _on = res.on;\n    var _write = res.write;\n\n    // flush\n    res.flush = function flush() {\n      if (stream) {\n        stream.flush();\n      }\n    };\n\n    // proxy\n\n    res.write = function write(chunk, encoding) {\n      if (ended) {\n        return false;\n      }\n      if (!this._header) {\n        this._implicitHeader();\n      }\n      return stream ? stream.write(toBuffer(chunk, encoding)) : _write.call(this, chunk, encoding);\n    };\n    res.end = function end(chunk, encoding) {\n      if (ended) {\n        return false;\n      }\n      if (!this._header) {\n        // estimate the length\n        if (!this.getHeader('Content-Length')) {\n          length = chunkLength(chunk, encoding);\n        }\n        this._implicitHeader();\n      }\n      if (!stream) {\n        return _end.call(this, chunk, encoding);\n      }\n\n      // mark ended\n      ended = true;\n\n      // write Buffer for Node.js 0.8\n      return chunk ? stream.end(toBuffer(chunk, encoding)) : stream.end();\n    };\n    res.on = function on(type, listener) {\n      if (!listeners || type !== 'drain') {\n        return _on.call(this, type, listener);\n      }\n      if (stream) {\n        return stream.on(type, listener);\n      }\n\n      // buffer listeners for future stream\n      listeners.push([type, listener]);\n      return this;\n    };\n    function nocompress(msg) {\n      debug('no compression: %s', msg);\n      addListeners(res, _on, listeners);\n      listeners = null;\n    }\n    onHeaders(res, function onResponseHeaders() {\n      // determine if request is filtered\n      if (!filter(req, res)) {\n        nocompress('filtered');\n        return;\n      }\n\n      // determine if the entity should be transformed\n      if (!shouldTransform(req, res)) {\n        nocompress('no transform');\n        return;\n      }\n\n      // vary\n      vary(res, 'Accept-Encoding');\n\n      // content-length below threshold\n      if (Number(res.getHeader('Content-Length')) < threshold || length < threshold) {\n        nocompress('size below threshold');\n        return;\n      }\n      var encoding = res.getHeader('Content-Encoding') || 'identity';\n\n      // already encoded\n      if (encoding !== 'identity') {\n        nocompress('already encoded');\n        return;\n      }\n\n      // head\n      if (req.method === 'HEAD') {\n        nocompress('HEAD request');\n        return;\n      }\n\n      // compression method\n      var accept = accepts(req);\n      var method = accept.encoding(['gzip', 'deflate', 'identity']);\n\n      // we really don't prefer deflate\n      if (method === 'deflate' && accept.encoding(['gzip'])) {\n        method = accept.encoding(['gzip', 'identity']);\n      }\n\n      // negotiation failed\n      if (!method || method === 'identity') {\n        nocompress('not acceptable');\n        return;\n      }\n\n      // compression stream\n      debug('%s compression', method);\n      stream = method === 'gzip' ? zlib.createGzip(opts) : zlib.createDeflate(opts);\n\n      // add buffered listeners to stream\n      addListeners(stream, stream.on, listeners);\n\n      // header fields\n      res.setHeader('Content-Encoding', method);\n      res.removeHeader('Content-Length');\n\n      // compression\n      stream.on('data', function onStreamData(chunk) {\n        if (_write.call(res, chunk) === false) {\n          stream.pause();\n        }\n      });\n      stream.on('end', function onStreamEnd() {\n        _end.call(res);\n      });\n      _on.call(res, 'drain', function onResponseDrain() {\n        stream.resume();\n      });\n    });\n    next();\n  };\n}\n\n/**\n * Add bufferred listeners to stream\n * @private\n */\n\nfunction addListeners(stream, on, listeners) {\n  for (var i = 0; i < listeners.length; i++) {\n    on.apply(stream, listeners[i]);\n  }\n}\n\n/**\n * Get the length of a given chunk\n */\n\nfunction chunkLength(chunk, encoding) {\n  if (!chunk) {\n    return 0;\n  }\n  return !Buffer.isBuffer(chunk) ? Buffer.byteLength(chunk, encoding) : chunk.length;\n}\n\n/**\n * Default filter function.\n * @private\n */\n\nfunction shouldCompress(req, res) {\n  var type = res.getHeader('Content-Type');\n  if (type === undefined || !compressible(type)) {\n    debug('%s not compressible', type);\n    return false;\n  }\n  return true;\n}\n\n/**\n * Determine if the entity should be transformed.\n * @private\n */\n\nfunction shouldTransform(req, res) {\n  var cacheControl = res.getHeader('Cache-Control');\n\n  // Don't compress for Cache-Control: no-transform\n  // https://tools.ietf.org/html/rfc7234#section-5.2.2.4\n  return !cacheControl || !cacheControlNoTransformRegExp.test(cacheControl);\n}\n\n/**\n * Coerce arguments to Buffer\n * @private\n */\n\nfunction toBuffer(chunk, encoding) {\n  return !Buffer.isBuffer(chunk) ? Buffer.from(chunk, encoding) : chunk;\n}","map":{"version":3,"names":["accepts","require","Buffer","bytes","compressible","debug","onHeaders","vary","zlib","module","exports","compression","filter","shouldCompress","cacheControlNoTransformRegExp","options","opts","threshold","parse","req","res","next","ended","length","listeners","stream","_end","end","_on","on","_write","write","flush","chunk","encoding","_header","_implicitHeader","toBuffer","call","getHeader","chunkLength","type","listener","push","nocompress","msg","addListeners","onResponseHeaders","shouldTransform","Number","method","accept","createGzip","createDeflate","setHeader","removeHeader","onStreamData","pause","onStreamEnd","onResponseDrain","resume","i","apply","isBuffer","byteLength","undefined","cacheControl","test","from"],"sources":["C:/Users/chest/OneDrive/Documentos/GitHub/HackUPC/frontend/node_modules/compression/index.js"],"sourcesContent":["/*!\n * compression\n * Copyright(c) 2010 Sencha Inc.\n * Copyright(c) 2011 TJ Holowaychuk\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar accepts = require('accepts')\nvar Buffer = require('safe-buffer').Buffer\nvar bytes = require('bytes')\nvar compressible = require('compressible')\nvar debug = require('debug')('compression')\nvar onHeaders = require('on-headers')\nvar vary = require('vary')\nvar zlib = require('zlib')\n\n/**\n * Module exports.\n */\n\nmodule.exports = compression\nmodule.exports.filter = shouldCompress\n\n/**\n * Module variables.\n * @private\n */\n\nvar cacheControlNoTransformRegExp = /(?:^|,)\\s*?no-transform\\s*?(?:,|$)/\n\n/**\n * Compress response data with gzip / deflate.\n *\n * @param {Object} [options]\n * @return {Function} middleware\n * @public\n */\n\nfunction compression (options) {\n  var opts = options || {}\n\n  // options\n  var filter = opts.filter || shouldCompress\n  var threshold = bytes.parse(opts.threshold)\n\n  if (threshold == null) {\n    threshold = 1024\n  }\n\n  return function compression (req, res, next) {\n    var ended = false\n    var length\n    var listeners = []\n    var stream\n\n    var _end = res.end\n    var _on = res.on\n    var _write = res.write\n\n    // flush\n    res.flush = function flush () {\n      if (stream) {\n        stream.flush()\n      }\n    }\n\n    // proxy\n\n    res.write = function write (chunk, encoding) {\n      if (ended) {\n        return false\n      }\n\n      if (!this._header) {\n        this._implicitHeader()\n      }\n\n      return stream\n        ? stream.write(toBuffer(chunk, encoding))\n        : _write.call(this, chunk, encoding)\n    }\n\n    res.end = function end (chunk, encoding) {\n      if (ended) {\n        return false\n      }\n\n      if (!this._header) {\n        // estimate the length\n        if (!this.getHeader('Content-Length')) {\n          length = chunkLength(chunk, encoding)\n        }\n\n        this._implicitHeader()\n      }\n\n      if (!stream) {\n        return _end.call(this, chunk, encoding)\n      }\n\n      // mark ended\n      ended = true\n\n      // write Buffer for Node.js 0.8\n      return chunk\n        ? stream.end(toBuffer(chunk, encoding))\n        : stream.end()\n    }\n\n    res.on = function on (type, listener) {\n      if (!listeners || type !== 'drain') {\n        return _on.call(this, type, listener)\n      }\n\n      if (stream) {\n        return stream.on(type, listener)\n      }\n\n      // buffer listeners for future stream\n      listeners.push([type, listener])\n\n      return this\n    }\n\n    function nocompress (msg) {\n      debug('no compression: %s', msg)\n      addListeners(res, _on, listeners)\n      listeners = null\n    }\n\n    onHeaders(res, function onResponseHeaders () {\n      // determine if request is filtered\n      if (!filter(req, res)) {\n        nocompress('filtered')\n        return\n      }\n\n      // determine if the entity should be transformed\n      if (!shouldTransform(req, res)) {\n        nocompress('no transform')\n        return\n      }\n\n      // vary\n      vary(res, 'Accept-Encoding')\n\n      // content-length below threshold\n      if (Number(res.getHeader('Content-Length')) < threshold || length < threshold) {\n        nocompress('size below threshold')\n        return\n      }\n\n      var encoding = res.getHeader('Content-Encoding') || 'identity'\n\n      // already encoded\n      if (encoding !== 'identity') {\n        nocompress('already encoded')\n        return\n      }\n\n      // head\n      if (req.method === 'HEAD') {\n        nocompress('HEAD request')\n        return\n      }\n\n      // compression method\n      var accept = accepts(req)\n      var method = accept.encoding(['gzip', 'deflate', 'identity'])\n\n      // we really don't prefer deflate\n      if (method === 'deflate' && accept.encoding(['gzip'])) {\n        method = accept.encoding(['gzip', 'identity'])\n      }\n\n      // negotiation failed\n      if (!method || method === 'identity') {\n        nocompress('not acceptable')\n        return\n      }\n\n      // compression stream\n      debug('%s compression', method)\n      stream = method === 'gzip'\n        ? zlib.createGzip(opts)\n        : zlib.createDeflate(opts)\n\n      // add buffered listeners to stream\n      addListeners(stream, stream.on, listeners)\n\n      // header fields\n      res.setHeader('Content-Encoding', method)\n      res.removeHeader('Content-Length')\n\n      // compression\n      stream.on('data', function onStreamData (chunk) {\n        if (_write.call(res, chunk) === false) {\n          stream.pause()\n        }\n      })\n\n      stream.on('end', function onStreamEnd () {\n        _end.call(res)\n      })\n\n      _on.call(res, 'drain', function onResponseDrain () {\n        stream.resume()\n      })\n    })\n\n    next()\n  }\n}\n\n/**\n * Add bufferred listeners to stream\n * @private\n */\n\nfunction addListeners (stream, on, listeners) {\n  for (var i = 0; i < listeners.length; i++) {\n    on.apply(stream, listeners[i])\n  }\n}\n\n/**\n * Get the length of a given chunk\n */\n\nfunction chunkLength (chunk, encoding) {\n  if (!chunk) {\n    return 0\n  }\n\n  return !Buffer.isBuffer(chunk)\n    ? Buffer.byteLength(chunk, encoding)\n    : chunk.length\n}\n\n/**\n * Default filter function.\n * @private\n */\n\nfunction shouldCompress (req, res) {\n  var type = res.getHeader('Content-Type')\n\n  if (type === undefined || !compressible(type)) {\n    debug('%s not compressible', type)\n    return false\n  }\n\n  return true\n}\n\n/**\n * Determine if the entity should be transformed.\n * @private\n */\n\nfunction shouldTransform (req, res) {\n  var cacheControl = res.getHeader('Cache-Control')\n\n  // Don't compress for Cache-Control: no-transform\n  // https://tools.ietf.org/html/rfc7234#section-5.2.2.4\n  return !cacheControl ||\n    !cacheControlNoTransformRegExp.test(cacheControl)\n}\n\n/**\n * Coerce arguments to Buffer\n * @private\n */\n\nfunction toBuffer (chunk, encoding) {\n  return !Buffer.isBuffer(chunk)\n    ? Buffer.from(chunk, encoding)\n    : chunk\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}