{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst utils_1 = require(\"@typescript-eslint/utils\");\nconst util_1 = require(\"../util\");\nexports.default = (0, util_1.createRule)({\n  name: 'prefer-literal-enum-member',\n  meta: {\n    type: 'suggestion',\n    docs: {\n      description: 'Require all enum members to be literal values',\n      recommended: 'strict',\n      requiresTypeChecking: false\n    },\n    messages: {\n      notLiteral: `Explicit enum value must only be a literal value (string, number, boolean, etc).`\n    },\n    schema: [{\n      type: 'object',\n      properties: {\n        allowBitwiseExpressions: {\n          type: 'boolean'\n        }\n      },\n      additionalProperties: false\n    }]\n  },\n  defaultOptions: [{\n    allowBitwiseExpressions: false\n  }],\n  create(context, [{\n    allowBitwiseExpressions\n  }]) {\n    return {\n      TSEnumMember(node) {\n        // If there is no initializer, then this node is just the name of the member, so ignore.\n        if (node.initializer == null) {\n          return;\n        }\n        // any old literal\n        if (node.initializer.type === utils_1.AST_NODE_TYPES.Literal) {\n          return;\n        }\n        // TemplateLiteral without expressions\n        if (node.initializer.type === utils_1.AST_NODE_TYPES.TemplateLiteral && node.initializer.expressions.length === 0) {\n          return;\n        }\n        // -1 and +1\n        if (node.initializer.type === utils_1.AST_NODE_TYPES.UnaryExpression && node.initializer.argument.type === utils_1.AST_NODE_TYPES.Literal && (['+', '-'].includes(node.initializer.operator) || allowBitwiseExpressions && node.initializer.operator === '~')) {\n          return;\n        }\n        if (allowBitwiseExpressions && node.initializer.type === utils_1.AST_NODE_TYPES.BinaryExpression && ['|', '&', '^', '<<', '>>', '>>>'].includes(node.initializer.operator) && node.initializer.left.type === utils_1.AST_NODE_TYPES.Literal && node.initializer.right.type === utils_1.AST_NODE_TYPES.Literal) {\n          return;\n        }\n        context.report({\n          node: node.id,\n          messageId: 'notLiteral'\n        });\n      }\n    };\n  }\n});","map":{"version":3,"names":["utils_1","require","util_1","exports","default","createRule","name","meta","type","docs","description","recommended","requiresTypeChecking","messages","notLiteral","schema","properties","allowBitwiseExpressions","additionalProperties","defaultOptions","create","context","TSEnumMember","node","initializer","AST_NODE_TYPES","Literal","TemplateLiteral","expressions","length","UnaryExpression","argument","includes","operator","BinaryExpression","left","right","report","id","messageId"],"sources":["../../src/rules/prefer-literal-enum-member.ts"],"sourcesContent":[null],"mappings":";;;;;AAAA,MAAAA,OAAA,GAAAC,OAAA;AAEA,MAAAC,MAAA,GAAAD,OAAA;AAEAE,OAAA,CAAAC,OAAA,GAAe,IAAAF,MAAA,CAAAG,UAAU,EAAC;EACxBC,IAAI,EAAE,4BAA4B;EAClCC,IAAI,EAAE;IACJC,IAAI,EAAE,YAAY;IAClBC,IAAI,EAAE;MACJC,WAAW,EAAE,+CAA+C;MAC5DC,WAAW,EAAE,QAAQ;MACrBC,oBAAoB,EAAE;KACvB;IACDC,QAAQ,EAAE;MACRC,UAAU,EAAE;KACb;IACDC,MAAM,EAAE,CACN;MACEP,IAAI,EAAE,QAAQ;MACdQ,UAAU,EAAE;QACVC,uBAAuB,EAAE;UACvBT,IAAI,EAAE;;OAET;MACDU,oBAAoB,EAAE;KACvB;GAEJ;EACDC,cAAc,EAAE,CACd;IACEF,uBAAuB,EAAE;GAC1B,CACF;EACDG,MAAMA,CAACC,OAAO,EAAE,CAAC;IAAEJ;EAAuB,CAAE,CAAC;IAC3C,OAAO;MACLK,YAAYA,CAACC,IAAI;QACf;QACA,IAAIA,IAAI,CAACC,WAAW,IAAI,IAAI,EAAE;UAC5B;;QAEF;QACA,IAAID,IAAI,CAACC,WAAW,CAAChB,IAAI,KAAKR,OAAA,CAAAyB,cAAc,CAACC,OAAO,EAAE;UACpD;;QAEF;QACA,IACEH,IAAI,CAACC,WAAW,CAAChB,IAAI,KAAKR,OAAA,CAAAyB,cAAc,CAACE,eAAe,IACxDJ,IAAI,CAACC,WAAW,CAACI,WAAW,CAACC,MAAM,KAAK,CAAC,EACzC;UACA;;QAEF;QACA,IACEN,IAAI,CAACC,WAAW,CAAChB,IAAI,KAAKR,OAAA,CAAAyB,cAAc,CAACK,eAAe,IACxDP,IAAI,CAACC,WAAW,CAACO,QAAQ,CAACvB,IAAI,KAAKR,OAAA,CAAAyB,cAAc,CAACC,OAAO,KACxD,CAAC,GAAG,EAAE,GAAG,CAAC,CAACM,QAAQ,CAACT,IAAI,CAACC,WAAW,CAACS,QAAQ,CAAC,IAC5ChB,uBAAuB,IAAIM,IAAI,CAACC,WAAW,CAACS,QAAQ,KAAK,GAAI,CAAC,EACjE;UACA;;QAGF,IACEhB,uBAAuB,IACvBM,IAAI,CAACC,WAAW,CAAChB,IAAI,KAAKR,OAAA,CAAAyB,cAAc,CAACS,gBAAgB,IACzD,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,CAAC,CAACF,QAAQ,CACzCT,IAAI,CAACC,WAAW,CAACS,QAAQ,CAC1B,IACDV,IAAI,CAACC,WAAW,CAACW,IAAI,CAAC3B,IAAI,KAAKR,OAAA,CAAAyB,cAAc,CAACC,OAAO,IACrDH,IAAI,CAACC,WAAW,CAACY,KAAK,CAAC5B,IAAI,KAAKR,OAAA,CAAAyB,cAAc,CAACC,OAAO,EACtD;UACA;;QAGFL,OAAO,CAACgB,MAAM,CAAC;UACbd,IAAI,EAAEA,IAAI,CAACe,EAAE;UACbC,SAAS,EAAE;SACZ,CAAC;MACJ;KACD;EACH;CACD,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}