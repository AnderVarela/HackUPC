{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = asyncify;\nvar _initialParams = require('./internal/initialParams.js');\nvar _initialParams2 = _interopRequireDefault(_initialParams);\nvar _setImmediate = require('./internal/setImmediate.js');\nvar _setImmediate2 = _interopRequireDefault(_setImmediate);\nvar _wrapAsync = require('./internal/wrapAsync.js');\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\n/**\n * Take a sync function and make it async, passing its return value to a\n * callback. This is useful for plugging sync functions into a waterfall,\n * series, or other async functions. Any arguments passed to the generated\n * function will be passed to the wrapped function (except for the final\n * callback argument). Errors thrown will be passed to the callback.\n *\n * If the function passed to `asyncify` returns a Promise, that promises's\n * resolved/rejected state will be used to call the callback, rather than simply\n * the synchronous return value.\n *\n * This also means you can asyncify ES2017 `async` functions.\n *\n * @name asyncify\n * @static\n * @memberOf module:Utils\n * @method\n * @alias wrapSync\n * @category Util\n * @param {Function} func - The synchronous function, or Promise-returning\n * function to convert to an {@link AsyncFunction}.\n * @returns {AsyncFunction} An asynchronous wrapper of the `func`. To be\n * invoked with `(args..., callback)`.\n * @example\n *\n * // passing a regular synchronous function\n * async.waterfall([\n *     async.apply(fs.readFile, filename, \"utf8\"),\n *     async.asyncify(JSON.parse),\n *     function (data, next) {\n *         // data is the result of parsing the text.\n *         // If there was a parsing error, it would have been caught.\n *     }\n * ], callback);\n *\n * // passing a function returning a promise\n * async.waterfall([\n *     async.apply(fs.readFile, filename, \"utf8\"),\n *     async.asyncify(function (contents) {\n *         return db.model.create(contents);\n *     }),\n *     function (model, next) {\n *         // `model` is the instantiated model object.\n *         // If there was an error, this function would be skipped.\n *     }\n * ], callback);\n *\n * // es2017 example, though `asyncify` is not needed if your JS environment\n * // supports async functions out of the box\n * var q = async.queue(async.asyncify(async function(file) {\n *     var intermediateStep = await processFile(file);\n *     return await somePromise(intermediateStep)\n * }));\n *\n * q.push(files);\n */\nfunction asyncify(func) {\n  if ((0, _wrapAsync.isAsync)(func)) {\n    return function (...args /*, callback*/) {\n      const callback = args.pop();\n      const promise = func.apply(this, args);\n      return handlePromise(promise, callback);\n    };\n  }\n  return (0, _initialParams2.default)(function (args, callback) {\n    var result;\n    try {\n      result = func.apply(this, args);\n    } catch (e) {\n      return callback(e);\n    }\n    // if result is Promise object\n    if (result && typeof result.then === 'function') {\n      return handlePromise(result, callback);\n    } else {\n      callback(null, result);\n    }\n  });\n}\nfunction handlePromise(promise, callback) {\n  return promise.then(value => {\n    invokeCallback(callback, null, value);\n  }, err => {\n    invokeCallback(callback, err && (err instanceof Error || err.message) ? err : new Error(err));\n  });\n}\nfunction invokeCallback(callback, error, value) {\n  try {\n    callback(error, value);\n  } catch (err) {\n    (0, _setImmediate2.default)(e => {\n      throw e;\n    }, err);\n  }\n}\nmodule.exports = exports.default;","map":{"version":3,"names":["Object","defineProperty","exports","value","default","asyncify","_initialParams","require","_initialParams2","_interopRequireDefault","_setImmediate","_setImmediate2","_wrapAsync","obj","__esModule","func","isAsync","args","callback","pop","promise","apply","handlePromise","result","e","then","invokeCallback","err","Error","message","error","module"],"sources":["C:/Users/chest/OneDrive/Documentos/GitHub/HackUPC/frontend/node_modules/async/wrapSync.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = asyncify;\n\nvar _initialParams = require('./internal/initialParams.js');\n\nvar _initialParams2 = _interopRequireDefault(_initialParams);\n\nvar _setImmediate = require('./internal/setImmediate.js');\n\nvar _setImmediate2 = _interopRequireDefault(_setImmediate);\n\nvar _wrapAsync = require('./internal/wrapAsync.js');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Take a sync function and make it async, passing its return value to a\n * callback. This is useful for plugging sync functions into a waterfall,\n * series, or other async functions. Any arguments passed to the generated\n * function will be passed to the wrapped function (except for the final\n * callback argument). Errors thrown will be passed to the callback.\n *\n * If the function passed to `asyncify` returns a Promise, that promises's\n * resolved/rejected state will be used to call the callback, rather than simply\n * the synchronous return value.\n *\n * This also means you can asyncify ES2017 `async` functions.\n *\n * @name asyncify\n * @static\n * @memberOf module:Utils\n * @method\n * @alias wrapSync\n * @category Util\n * @param {Function} func - The synchronous function, or Promise-returning\n * function to convert to an {@link AsyncFunction}.\n * @returns {AsyncFunction} An asynchronous wrapper of the `func`. To be\n * invoked with `(args..., callback)`.\n * @example\n *\n * // passing a regular synchronous function\n * async.waterfall([\n *     async.apply(fs.readFile, filename, \"utf8\"),\n *     async.asyncify(JSON.parse),\n *     function (data, next) {\n *         // data is the result of parsing the text.\n *         // If there was a parsing error, it would have been caught.\n *     }\n * ], callback);\n *\n * // passing a function returning a promise\n * async.waterfall([\n *     async.apply(fs.readFile, filename, \"utf8\"),\n *     async.asyncify(function (contents) {\n *         return db.model.create(contents);\n *     }),\n *     function (model, next) {\n *         // `model` is the instantiated model object.\n *         // If there was an error, this function would be skipped.\n *     }\n * ], callback);\n *\n * // es2017 example, though `asyncify` is not needed if your JS environment\n * // supports async functions out of the box\n * var q = async.queue(async.asyncify(async function(file) {\n *     var intermediateStep = await processFile(file);\n *     return await somePromise(intermediateStep)\n * }));\n *\n * q.push(files);\n */\nfunction asyncify(func) {\n    if ((0, _wrapAsync.isAsync)(func)) {\n        return function (...args /*, callback*/) {\n            const callback = args.pop();\n            const promise = func.apply(this, args);\n            return handlePromise(promise, callback);\n        };\n    }\n\n    return (0, _initialParams2.default)(function (args, callback) {\n        var result;\n        try {\n            result = func.apply(this, args);\n        } catch (e) {\n            return callback(e);\n        }\n        // if result is Promise object\n        if (result && typeof result.then === 'function') {\n            return handlePromise(result, callback);\n        } else {\n            callback(null, result);\n        }\n    });\n}\n\nfunction handlePromise(promise, callback) {\n    return promise.then(value => {\n        invokeCallback(callback, null, value);\n    }, err => {\n        invokeCallback(callback, err && (err instanceof Error || err.message) ? err : new Error(err));\n    });\n}\n\nfunction invokeCallback(callback, error, value) {\n    try {\n        callback(error, value);\n    } catch (err) {\n        (0, _setImmediate2.default)(e => {\n            throw e;\n        }, err);\n    }\n}\nmodule.exports = exports.default;"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EACzCC,KAAK,EAAE;AACX,CAAC,CAAC;AACFD,OAAO,CAACE,OAAO,GAAGC,QAAQ;AAE1B,IAAIC,cAAc,GAAGC,OAAO,CAAC,6BAA6B,CAAC;AAE3D,IAAIC,eAAe,GAAGC,sBAAsB,CAACH,cAAc,CAAC;AAE5D,IAAII,aAAa,GAAGH,OAAO,CAAC,4BAA4B,CAAC;AAEzD,IAAII,cAAc,GAAGF,sBAAsB,CAACC,aAAa,CAAC;AAE1D,IAAIE,UAAU,GAAGL,OAAO,CAAC,yBAAyB,CAAC;AAEnD,SAASE,sBAAsBA,CAACI,GAAG,EAAE;EAAE,OAAOA,GAAG,IAAIA,GAAG,CAACC,UAAU,GAAGD,GAAG,GAAG;IAAET,OAAO,EAAES;EAAI,CAAC;AAAE;;AAE9F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASR,QAAQA,CAACU,IAAI,EAAE;EACpB,IAAI,CAAC,CAAC,EAAEH,UAAU,CAACI,OAAO,EAAED,IAAI,CAAC,EAAE;IAC/B,OAAO,UAAU,GAAGE,IAAI,CAAC,gBAAgB;MACrC,MAAMC,QAAQ,GAAGD,IAAI,CAACE,GAAG,CAAC,CAAC;MAC3B,MAAMC,OAAO,GAAGL,IAAI,CAACM,KAAK,CAAC,IAAI,EAAEJ,IAAI,CAAC;MACtC,OAAOK,aAAa,CAACF,OAAO,EAAEF,QAAQ,CAAC;IAC3C,CAAC;EACL;EAEA,OAAO,CAAC,CAAC,EAAEV,eAAe,CAACJ,OAAO,EAAE,UAAUa,IAAI,EAAEC,QAAQ,EAAE;IAC1D,IAAIK,MAAM;IACV,IAAI;MACAA,MAAM,GAAGR,IAAI,CAACM,KAAK,CAAC,IAAI,EAAEJ,IAAI,CAAC;IACnC,CAAC,CAAC,OAAOO,CAAC,EAAE;MACR,OAAON,QAAQ,CAACM,CAAC,CAAC;IACtB;IACA;IACA,IAAID,MAAM,IAAI,OAAOA,MAAM,CAACE,IAAI,KAAK,UAAU,EAAE;MAC7C,OAAOH,aAAa,CAACC,MAAM,EAAEL,QAAQ,CAAC;IAC1C,CAAC,MAAM;MACHA,QAAQ,CAAC,IAAI,EAAEK,MAAM,CAAC;IAC1B;EACJ,CAAC,CAAC;AACN;AAEA,SAASD,aAAaA,CAACF,OAAO,EAAEF,QAAQ,EAAE;EACtC,OAAOE,OAAO,CAACK,IAAI,CAACtB,KAAK,IAAI;IACzBuB,cAAc,CAACR,QAAQ,EAAE,IAAI,EAAEf,KAAK,CAAC;EACzC,CAAC,EAAEwB,GAAG,IAAI;IACND,cAAc,CAACR,QAAQ,EAAES,GAAG,KAAKA,GAAG,YAAYC,KAAK,IAAID,GAAG,CAACE,OAAO,CAAC,GAAGF,GAAG,GAAG,IAAIC,KAAK,CAACD,GAAG,CAAC,CAAC;EACjG,CAAC,CAAC;AACN;AAEA,SAASD,cAAcA,CAACR,QAAQ,EAAEY,KAAK,EAAE3B,KAAK,EAAE;EAC5C,IAAI;IACAe,QAAQ,CAACY,KAAK,EAAE3B,KAAK,CAAC;EAC1B,CAAC,CAAC,OAAOwB,GAAG,EAAE;IACV,CAAC,CAAC,EAAEhB,cAAc,CAACP,OAAO,EAAEoB,CAAC,IAAI;MAC7B,MAAMA,CAAC;IACX,CAAC,EAAEG,GAAG,CAAC;EACX;AACJ;AACAI,MAAM,CAAC7B,OAAO,GAAGA,OAAO,CAACE,OAAO","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}