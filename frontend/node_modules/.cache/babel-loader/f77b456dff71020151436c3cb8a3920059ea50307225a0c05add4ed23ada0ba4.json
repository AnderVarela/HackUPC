{"ast":null,"code":"'use strict';\n\nconst PROPERTIES = ['rss', 'heapTotal', 'heapUsed', 'external'];\nlet memory;\nmodule.exports = {\n  initialise,\n  update,\n  report\n};\nfunction initialise() {\n  memory = PROPERTIES.reduce((result, name) => {\n    result[name] = {\n      sum: 0,\n      hwm: 0\n    };\n    return result;\n  }, {\n    count: 0\n  });\n}\nfunction update() {\n  const currentMemory = process.memoryUsage();\n  PROPERTIES.forEach(name => updateProperty(name, currentMemory));\n}\nfunction updateProperty(name, currentMemory) {\n  const m = memory[name];\n  const c = currentMemory[name];\n  m.sum += c;\n  if (c > m.hwm) {\n    m.hwm = c;\n  }\n}\nfunction report() {\n  PROPERTIES.forEach(name => reportProperty(name));\n}\nfunction reportProperty(name) {\n  const m = memory[name];\n  // eslint-disable-next-line no-console\n  console.log(`mean ${name}: ${m.sum / memory.count}; hwm: ${m.hwm}`);\n}","map":{"version":3,"names":["PROPERTIES","memory","module","exports","initialise","update","report","reduce","result","name","sum","hwm","count","currentMemory","process","memoryUsage","forEach","updateProperty","m","c","reportProperty","console","log"],"sources":["C:/Users/chest/OneDrive/Documentos/GitHub/HackUPC/frontend/node_modules/bfj/src/memory.js"],"sourcesContent":["'use strict'\n\nconst PROPERTIES = [ 'rss', 'heapTotal', 'heapUsed', 'external' ]\n\nlet memory\n\nmodule.exports = {\n  initialise,\n  update,\n  report\n}\n\nfunction initialise () {\n  memory = PROPERTIES.reduce((result, name) => {\n    result[name] = {\n      sum: 0,\n      hwm: 0\n    }\n    return result\n  }, { count: 0 })\n}\n\nfunction update () {\n  const currentMemory = process.memoryUsage()\n  PROPERTIES.forEach(name => updateProperty(name, currentMemory))\n}\n\nfunction updateProperty (name, currentMemory) {\n  const m = memory[name]\n  const c = currentMemory[name]\n  m.sum += c\n  if (c > m.hwm) {\n    m.hwm = c\n  }\n}\n\nfunction report () {\n  PROPERTIES.forEach(name => reportProperty(name))\n}\n\nfunction reportProperty (name) {\n  const m = memory[name]\n  // eslint-disable-next-line no-console\n  console.log(`mean ${name}: ${m.sum / memory.count}; hwm: ${m.hwm}`)\n}\n"],"mappings":"AAAA,YAAY;;AAEZ,MAAMA,UAAU,GAAG,CAAE,KAAK,EAAE,WAAW,EAAE,UAAU,EAAE,UAAU,CAAE;AAEjE,IAAIC,MAAM;AAEVC,MAAM,CAACC,OAAO,GAAG;EACfC,UAAU;EACVC,MAAM;EACNC;AACF,CAAC;AAED,SAASF,UAAUA,CAAA,EAAI;EACrBH,MAAM,GAAGD,UAAU,CAACO,MAAM,CAAC,CAACC,MAAM,EAAEC,IAAI,KAAK;IAC3CD,MAAM,CAACC,IAAI,CAAC,GAAG;MACbC,GAAG,EAAE,CAAC;MACNC,GAAG,EAAE;IACP,CAAC;IACD,OAAOH,MAAM;EACf,CAAC,EAAE;IAAEI,KAAK,EAAE;EAAE,CAAC,CAAC;AAClB;AAEA,SAASP,MAAMA,CAAA,EAAI;EACjB,MAAMQ,aAAa,GAAGC,OAAO,CAACC,WAAW,CAAC,CAAC;EAC3Cf,UAAU,CAACgB,OAAO,CAACP,IAAI,IAAIQ,cAAc,CAACR,IAAI,EAAEI,aAAa,CAAC,CAAC;AACjE;AAEA,SAASI,cAAcA,CAAER,IAAI,EAAEI,aAAa,EAAE;EAC5C,MAAMK,CAAC,GAAGjB,MAAM,CAACQ,IAAI,CAAC;EACtB,MAAMU,CAAC,GAAGN,aAAa,CAACJ,IAAI,CAAC;EAC7BS,CAAC,CAACR,GAAG,IAAIS,CAAC;EACV,IAAIA,CAAC,GAAGD,CAAC,CAACP,GAAG,EAAE;IACbO,CAAC,CAACP,GAAG,GAAGQ,CAAC;EACX;AACF;AAEA,SAASb,MAAMA,CAAA,EAAI;EACjBN,UAAU,CAACgB,OAAO,CAACP,IAAI,IAAIW,cAAc,CAACX,IAAI,CAAC,CAAC;AAClD;AAEA,SAASW,cAAcA,CAAEX,IAAI,EAAE;EAC7B,MAAMS,CAAC,GAAGjB,MAAM,CAACQ,IAAI,CAAC;EACtB;EACAY,OAAO,CAACC,GAAG,CAAE,QAAOb,IAAK,KAAIS,CAAC,CAACR,GAAG,GAAGT,MAAM,CAACW,KAAM,UAASM,CAAC,CAACP,GAAI,EAAC,CAAC;AACrE","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}