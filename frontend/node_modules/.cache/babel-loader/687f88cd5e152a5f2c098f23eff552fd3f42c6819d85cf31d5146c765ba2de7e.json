{"ast":null,"code":"/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar util = require('./util');\nvar has = Object.prototype.hasOwnProperty;\nvar hasNativeMap = typeof Map !== \"undefined\";\n\n/**\n * A data structure which is a combination of an array and a set. Adding a new\n * member is O(1), testing for membership is O(1), and finding the index of an\n * element is O(1). Removing elements from the set is not supported. Only\n * strings are supported for membership.\n */\nfunction ArraySet() {\n  this._array = [];\n  this._set = hasNativeMap ? new Map() : Object.create(null);\n}\n\n/**\n * Static method for creating ArraySet instances from an existing array.\n */\nArraySet.fromArray = function ArraySet_fromArray(aArray, aAllowDuplicates) {\n  var set = new ArraySet();\n  for (var i = 0, len = aArray.length; i < len; i++) {\n    set.add(aArray[i], aAllowDuplicates);\n  }\n  return set;\n};\n\n/**\n * Return how many unique items are in this ArraySet. If duplicates have been\n * added, than those do not count towards the size.\n *\n * @returns Number\n */\nArraySet.prototype.size = function ArraySet_size() {\n  return hasNativeMap ? this._set.size : Object.getOwnPropertyNames(this._set).length;\n};\n\n/**\n * Add the given string to this set.\n *\n * @param String aStr\n */\nArraySet.prototype.add = function ArraySet_add(aStr, aAllowDuplicates) {\n  var sStr = hasNativeMap ? aStr : util.toSetString(aStr);\n  var isDuplicate = hasNativeMap ? this.has(aStr) : has.call(this._set, sStr);\n  var idx = this._array.length;\n  if (!isDuplicate || aAllowDuplicates) {\n    this._array.push(aStr);\n  }\n  if (!isDuplicate) {\n    if (hasNativeMap) {\n      this._set.set(aStr, idx);\n    } else {\n      this._set[sStr] = idx;\n    }\n  }\n};\n\n/**\n * Is the given string a member of this set?\n *\n * @param String aStr\n */\nArraySet.prototype.has = function ArraySet_has(aStr) {\n  if (hasNativeMap) {\n    return this._set.has(aStr);\n  } else {\n    var sStr = util.toSetString(aStr);\n    return has.call(this._set, sStr);\n  }\n};\n\n/**\n * What is the index of the given string in the array?\n *\n * @param String aStr\n */\nArraySet.prototype.indexOf = function ArraySet_indexOf(aStr) {\n  if (hasNativeMap) {\n    var idx = this._set.get(aStr);\n    if (idx >= 0) {\n      return idx;\n    }\n  } else {\n    var sStr = util.toSetString(aStr);\n    if (has.call(this._set, sStr)) {\n      return this._set[sStr];\n    }\n  }\n  throw new Error('\"' + aStr + '\" is not in the set.');\n};\n\n/**\n * What is the element at the given index?\n *\n * @param Number aIdx\n */\nArraySet.prototype.at = function ArraySet_at(aIdx) {\n  if (aIdx >= 0 && aIdx < this._array.length) {\n    return this._array[aIdx];\n  }\n  throw new Error('No element indexed by ' + aIdx);\n};\n\n/**\n * Returns the array representation of this set (which has the proper indices\n * indicated by indexOf). Note that this is a copy of the internal array used\n * for storing the members so that no one can mess with internal state.\n */\nArraySet.prototype.toArray = function ArraySet_toArray() {\n  return this._array.slice();\n};\nexports.ArraySet = ArraySet;","map":{"version":3,"names":["util","require","has","Object","prototype","hasOwnProperty","hasNativeMap","Map","ArraySet","_array","_set","create","fromArray","ArraySet_fromArray","aArray","aAllowDuplicates","set","i","len","length","add","size","ArraySet_size","getOwnPropertyNames","ArraySet_add","aStr","sStr","toSetString","isDuplicate","call","idx","push","ArraySet_has","indexOf","ArraySet_indexOf","get","Error","at","ArraySet_at","aIdx","toArray","ArraySet_toArray","slice","exports"],"sources":["C:/Users/chest/OneDrive/Documentos/GitHub/HackUPC/frontend/node_modules/clean-css/node_modules/source-map/lib/array-set.js"],"sourcesContent":["/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar util = require('./util');\nvar has = Object.prototype.hasOwnProperty;\nvar hasNativeMap = typeof Map !== \"undefined\";\n\n/**\n * A data structure which is a combination of an array and a set. Adding a new\n * member is O(1), testing for membership is O(1), and finding the index of an\n * element is O(1). Removing elements from the set is not supported. Only\n * strings are supported for membership.\n */\nfunction ArraySet() {\n  this._array = [];\n  this._set = hasNativeMap ? new Map() : Object.create(null);\n}\n\n/**\n * Static method for creating ArraySet instances from an existing array.\n */\nArraySet.fromArray = function ArraySet_fromArray(aArray, aAllowDuplicates) {\n  var set = new ArraySet();\n  for (var i = 0, len = aArray.length; i < len; i++) {\n    set.add(aArray[i], aAllowDuplicates);\n  }\n  return set;\n};\n\n/**\n * Return how many unique items are in this ArraySet. If duplicates have been\n * added, than those do not count towards the size.\n *\n * @returns Number\n */\nArraySet.prototype.size = function ArraySet_size() {\n  return hasNativeMap ? this._set.size : Object.getOwnPropertyNames(this._set).length;\n};\n\n/**\n * Add the given string to this set.\n *\n * @param String aStr\n */\nArraySet.prototype.add = function ArraySet_add(aStr, aAllowDuplicates) {\n  var sStr = hasNativeMap ? aStr : util.toSetString(aStr);\n  var isDuplicate = hasNativeMap ? this.has(aStr) : has.call(this._set, sStr);\n  var idx = this._array.length;\n  if (!isDuplicate || aAllowDuplicates) {\n    this._array.push(aStr);\n  }\n  if (!isDuplicate) {\n    if (hasNativeMap) {\n      this._set.set(aStr, idx);\n    } else {\n      this._set[sStr] = idx;\n    }\n  }\n};\n\n/**\n * Is the given string a member of this set?\n *\n * @param String aStr\n */\nArraySet.prototype.has = function ArraySet_has(aStr) {\n  if (hasNativeMap) {\n    return this._set.has(aStr);\n  } else {\n    var sStr = util.toSetString(aStr);\n    return has.call(this._set, sStr);\n  }\n};\n\n/**\n * What is the index of the given string in the array?\n *\n * @param String aStr\n */\nArraySet.prototype.indexOf = function ArraySet_indexOf(aStr) {\n  if (hasNativeMap) {\n    var idx = this._set.get(aStr);\n    if (idx >= 0) {\n        return idx;\n    }\n  } else {\n    var sStr = util.toSetString(aStr);\n    if (has.call(this._set, sStr)) {\n      return this._set[sStr];\n    }\n  }\n\n  throw new Error('\"' + aStr + '\" is not in the set.');\n};\n\n/**\n * What is the element at the given index?\n *\n * @param Number aIdx\n */\nArraySet.prototype.at = function ArraySet_at(aIdx) {\n  if (aIdx >= 0 && aIdx < this._array.length) {\n    return this._array[aIdx];\n  }\n  throw new Error('No element indexed by ' + aIdx);\n};\n\n/**\n * Returns the array representation of this set (which has the proper indices\n * indicated by indexOf). Note that this is a copy of the internal array used\n * for storing the members so that no one can mess with internal state.\n */\nArraySet.prototype.toArray = function ArraySet_toArray() {\n  return this._array.slice();\n};\n\nexports.ArraySet = ArraySet;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}