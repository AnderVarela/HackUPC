{"ast":null,"code":"'use strict';\n\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar hasOwn = require('../internals/has-own-property');\nvar $SyntaxError = SyntaxError;\nvar $parseInt = parseInt;\nvar fromCharCode = String.fromCharCode;\nvar at = uncurryThis(''.charAt);\nvar slice = uncurryThis(''.slice);\nvar exec = uncurryThis(/./.exec);\nvar codePoints = {\n  '\\\\\"': '\"',\n  '\\\\\\\\': '\\\\',\n  '\\\\/': '/',\n  '\\\\b': '\\b',\n  '\\\\f': '\\f',\n  '\\\\n': '\\n',\n  '\\\\r': '\\r',\n  '\\\\t': '\\t'\n};\nvar IS_4_HEX_DIGITS = /^[\\da-f]{4}$/i;\n// eslint-disable-next-line regexp/no-control-character -- safe\nvar IS_C0_CONTROL_CODE = /^[\\u0000-\\u001F]$/;\nmodule.exports = function (source, i) {\n  var unterminated = true;\n  var value = '';\n  while (i < source.length) {\n    var chr = at(source, i);\n    if (chr === '\\\\') {\n      var twoChars = slice(source, i, i + 2);\n      if (hasOwn(codePoints, twoChars)) {\n        value += codePoints[twoChars];\n        i += 2;\n      } else if (twoChars === '\\\\u') {\n        i += 2;\n        var fourHexDigits = slice(source, i, i + 4);\n        if (!exec(IS_4_HEX_DIGITS, fourHexDigits)) throw new $SyntaxError('Bad Unicode escape at: ' + i);\n        value += fromCharCode($parseInt(fourHexDigits, 16));\n        i += 4;\n      } else throw new $SyntaxError('Unknown escape sequence: \"' + twoChars + '\"');\n    } else if (chr === '\"') {\n      unterminated = false;\n      i++;\n      break;\n    } else {\n      if (exec(IS_C0_CONTROL_CODE, chr)) throw new $SyntaxError('Bad control character in string literal at: ' + i);\n      value += chr;\n      i++;\n    }\n  }\n  if (unterminated) throw new $SyntaxError('Unterminated string at: ' + i);\n  return {\n    value: value,\n    end: i\n  };\n};","map":{"version":3,"names":["uncurryThis","require","hasOwn","$SyntaxError","SyntaxError","$parseInt","parseInt","fromCharCode","String","at","charAt","slice","exec","codePoints","IS_4_HEX_DIGITS","IS_C0_CONTROL_CODE","module","exports","source","i","unterminated","value","length","chr","twoChars","fourHexDigits","end"],"sources":["C:/Users/chest/OneDrive/Documentos/GitHub/HackUPC/frontend/node_modules/core-js/internals/parse-json-string.js"],"sourcesContent":["'use strict';\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar hasOwn = require('../internals/has-own-property');\n\nvar $SyntaxError = SyntaxError;\nvar $parseInt = parseInt;\nvar fromCharCode = String.fromCharCode;\nvar at = uncurryThis(''.charAt);\nvar slice = uncurryThis(''.slice);\nvar exec = uncurryThis(/./.exec);\n\nvar codePoints = {\n  '\\\\\"': '\"',\n  '\\\\\\\\': '\\\\',\n  '\\\\/': '/',\n  '\\\\b': '\\b',\n  '\\\\f': '\\f',\n  '\\\\n': '\\n',\n  '\\\\r': '\\r',\n  '\\\\t': '\\t'\n};\n\nvar IS_4_HEX_DIGITS = /^[\\da-f]{4}$/i;\n// eslint-disable-next-line regexp/no-control-character -- safe\nvar IS_C0_CONTROL_CODE = /^[\\u0000-\\u001F]$/;\n\nmodule.exports = function (source, i) {\n  var unterminated = true;\n  var value = '';\n  while (i < source.length) {\n    var chr = at(source, i);\n    if (chr === '\\\\') {\n      var twoChars = slice(source, i, i + 2);\n      if (hasOwn(codePoints, twoChars)) {\n        value += codePoints[twoChars];\n        i += 2;\n      } else if (twoChars === '\\\\u') {\n        i += 2;\n        var fourHexDigits = slice(source, i, i + 4);\n        if (!exec(IS_4_HEX_DIGITS, fourHexDigits)) throw new $SyntaxError('Bad Unicode escape at: ' + i);\n        value += fromCharCode($parseInt(fourHexDigits, 16));\n        i += 4;\n      } else throw new $SyntaxError('Unknown escape sequence: \"' + twoChars + '\"');\n    } else if (chr === '\"') {\n      unterminated = false;\n      i++;\n      break;\n    } else {\n      if (exec(IS_C0_CONTROL_CODE, chr)) throw new $SyntaxError('Bad control character in string literal at: ' + i);\n      value += chr;\n      i++;\n    }\n  }\n  if (unterminated) throw new $SyntaxError('Unterminated string at: ' + i);\n  return { value: value, end: i };\n};\n"],"mappings":"AAAA,YAAY;;AACZ,IAAIA,WAAW,GAAGC,OAAO,CAAC,oCAAoC,CAAC;AAC/D,IAAIC,MAAM,GAAGD,OAAO,CAAC,+BAA+B,CAAC;AAErD,IAAIE,YAAY,GAAGC,WAAW;AAC9B,IAAIC,SAAS,GAAGC,QAAQ;AACxB,IAAIC,YAAY,GAAGC,MAAM,CAACD,YAAY;AACtC,IAAIE,EAAE,GAAGT,WAAW,CAAC,EAAE,CAACU,MAAM,CAAC;AAC/B,IAAIC,KAAK,GAAGX,WAAW,CAAC,EAAE,CAACW,KAAK,CAAC;AACjC,IAAIC,IAAI,GAAGZ,WAAW,CAAC,GAAG,CAACY,IAAI,CAAC;AAEhC,IAAIC,UAAU,GAAG;EACf,KAAK,EAAE,GAAG;EACV,MAAM,EAAE,IAAI;EACZ,KAAK,EAAE,GAAG;EACV,KAAK,EAAE,IAAI;EACX,KAAK,EAAE,IAAI;EACX,KAAK,EAAE,IAAI;EACX,KAAK,EAAE,IAAI;EACX,KAAK,EAAE;AACT,CAAC;AAED,IAAIC,eAAe,GAAG,eAAe;AACrC;AACA,IAAIC,kBAAkB,GAAG,mBAAmB;AAE5CC,MAAM,CAACC,OAAO,GAAG,UAAUC,MAAM,EAAEC,CAAC,EAAE;EACpC,IAAIC,YAAY,GAAG,IAAI;EACvB,IAAIC,KAAK,GAAG,EAAE;EACd,OAAOF,CAAC,GAAGD,MAAM,CAACI,MAAM,EAAE;IACxB,IAAIC,GAAG,GAAGd,EAAE,CAACS,MAAM,EAAEC,CAAC,CAAC;IACvB,IAAII,GAAG,KAAK,IAAI,EAAE;MAChB,IAAIC,QAAQ,GAAGb,KAAK,CAACO,MAAM,EAAEC,CAAC,EAAEA,CAAC,GAAG,CAAC,CAAC;MACtC,IAAIjB,MAAM,CAACW,UAAU,EAAEW,QAAQ,CAAC,EAAE;QAChCH,KAAK,IAAIR,UAAU,CAACW,QAAQ,CAAC;QAC7BL,CAAC,IAAI,CAAC;MACR,CAAC,MAAM,IAAIK,QAAQ,KAAK,KAAK,EAAE;QAC7BL,CAAC,IAAI,CAAC;QACN,IAAIM,aAAa,GAAGd,KAAK,CAACO,MAAM,EAAEC,CAAC,EAAEA,CAAC,GAAG,CAAC,CAAC;QAC3C,IAAI,CAACP,IAAI,CAACE,eAAe,EAAEW,aAAa,CAAC,EAAE,MAAM,IAAItB,YAAY,CAAC,yBAAyB,GAAGgB,CAAC,CAAC;QAChGE,KAAK,IAAId,YAAY,CAACF,SAAS,CAACoB,aAAa,EAAE,EAAE,CAAC,CAAC;QACnDN,CAAC,IAAI,CAAC;MACR,CAAC,MAAM,MAAM,IAAIhB,YAAY,CAAC,4BAA4B,GAAGqB,QAAQ,GAAG,GAAG,CAAC;IAC9E,CAAC,MAAM,IAAID,GAAG,KAAK,GAAG,EAAE;MACtBH,YAAY,GAAG,KAAK;MACpBD,CAAC,EAAE;MACH;IACF,CAAC,MAAM;MACL,IAAIP,IAAI,CAACG,kBAAkB,EAAEQ,GAAG,CAAC,EAAE,MAAM,IAAIpB,YAAY,CAAC,8CAA8C,GAAGgB,CAAC,CAAC;MAC7GE,KAAK,IAAIE,GAAG;MACZJ,CAAC,EAAE;IACL;EACF;EACA,IAAIC,YAAY,EAAE,MAAM,IAAIjB,YAAY,CAAC,0BAA0B,GAAGgB,CAAC,CAAC;EACxE,OAAO;IAAEE,KAAK,EAAEA,KAAK;IAAEK,GAAG,EAAEP;EAAE,CAAC;AACjC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}