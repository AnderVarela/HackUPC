{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst utils_1 = require(\"@typescript-eslint/utils\");\nconst util = __importStar(require(\"../util\"));\nexports.default = util.createRule({\n  name: 'consistent-type-definitions',\n  meta: {\n    type: 'suggestion',\n    docs: {\n      description: 'Enforce type definitions to consistently use either `interface` or `type`',\n      recommended: 'strict'\n    },\n    messages: {\n      interfaceOverType: 'Use an `interface` instead of a `type`.',\n      typeOverInterface: 'Use a `type` instead of an `interface`.'\n    },\n    schema: [{\n      enum: ['interface', 'type']\n    }],\n    fixable: 'code'\n  },\n  defaultOptions: ['interface'],\n  create(context, [option]) {\n    const sourceCode = context.getSourceCode();\n    /**\n     * Iterates from the highest parent to the currently traversed node\n     * to determine whether any node in tree is globally declared module declaration\n     */\n    function isCurrentlyTraversedNodeWithinModuleDeclaration() {\n      return context.getAncestors().some(node => node.type === utils_1.AST_NODE_TYPES.TSModuleDeclaration && node.declare && node.global);\n    }\n    return Object.assign(Object.assign({}, option === 'interface' && {\n      \"TSTypeAliasDeclaration[typeAnnotation.type='TSTypeLiteral']\"(node) {\n        context.report({\n          node: node.id,\n          messageId: 'interfaceOverType',\n          fix(fixer) {\n            var _a;\n            const typeNode = (_a = node.typeParameters) !== null && _a !== void 0 ? _a : node.id;\n            const fixes = [];\n            const firstToken = sourceCode.getTokenBefore(node.id);\n            if (firstToken) {\n              fixes.push(fixer.replaceText(firstToken, 'interface'));\n              fixes.push(fixer.replaceTextRange([typeNode.range[1], node.typeAnnotation.range[0]], ' '));\n            }\n            const afterToken = sourceCode.getTokenAfter(node.typeAnnotation);\n            if (afterToken && afterToken.type === utils_1.AST_TOKEN_TYPES.Punctuator && afterToken.value === ';') {\n              fixes.push(fixer.remove(afterToken));\n            }\n            return fixes;\n          }\n        });\n      }\n    }), option === 'type' && {\n      TSInterfaceDeclaration(node) {\n        const fix = isCurrentlyTraversedNodeWithinModuleDeclaration() ? null : fixer => {\n          var _a, _b;\n          const typeNode = (_a = node.typeParameters) !== null && _a !== void 0 ? _a : node.id;\n          const fixes = [];\n          const firstToken = sourceCode.getTokenBefore(node.id);\n          if (firstToken) {\n            fixes.push(fixer.replaceText(firstToken, 'type'));\n            fixes.push(fixer.replaceTextRange([typeNode.range[1], node.body.range[0]], ' = '));\n          }\n          if (node.extends) {\n            node.extends.forEach(heritage => {\n              const typeIdentifier = sourceCode.getText(heritage);\n              fixes.push(fixer.insertTextAfter(node.body, ` & ${typeIdentifier}`));\n            });\n          }\n          if (((_b = node.parent) === null || _b === void 0 ? void 0 : _b.type) === utils_1.AST_NODE_TYPES.ExportDefaultDeclaration) {\n            fixes.push(fixer.removeRange([node.parent.range[0], node.range[0]]), fixer.insertTextAfter(node.body, `\\nexport default ${node.id.name}`));\n          }\n          return fixes;\n        };\n        context.report({\n          node: node.id,\n          messageId: 'typeOverInterface',\n          /**\n           * remove automatically fix when the interface is within a declare global\n           * @see {@link https://github.com/typescript-eslint/typescript-eslint/issues/2707}\n           */\n          fix\n        });\n      }\n    });\n  }\n});","map":{"version":3,"names":["utils_1","require","util","__importStar","exports","default","createRule","name","meta","type","docs","description","recommended","messages","interfaceOverType","typeOverInterface","schema","enum","fixable","defaultOptions","create","context","option","sourceCode","getSourceCode","isCurrentlyTraversedNodeWithinModuleDeclaration","getAncestors","some","node","AST_NODE_TYPES","TSModuleDeclaration","declare","global","Object","assign","TSTypeAliasDeclaration[typeAnnotation.type='TSTypeLiteral']","report","id","messageId","fix","fixer","typeNode","_a","typeParameters","fixes","firstToken","getTokenBefore","push","replaceText","replaceTextRange","range","typeAnnotation","afterToken","getTokenAfter","AST_TOKEN_TYPES","Punctuator","value","remove","TSInterfaceDeclaration","body","extends","forEach","heritage","typeIdentifier","getText","insertTextAfter","_b","parent","ExportDefaultDeclaration","removeRange"],"sources":["../../src/rules/consistent-type-definitions.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}