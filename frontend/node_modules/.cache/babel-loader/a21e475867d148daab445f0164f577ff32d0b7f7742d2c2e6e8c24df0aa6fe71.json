{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst utils_1 = require(\"@typescript-eslint/utils\");\nconst util = __importStar(require(\"../util\"));\nexports.default = util.createRule({\n  name: 'no-non-null-assertion',\n  meta: {\n    type: 'problem',\n    docs: {\n      description: 'Disallow non-null assertions using the `!` postfix operator',\n      recommended: 'warn'\n    },\n    hasSuggestions: true,\n    messages: {\n      noNonNull: 'Forbidden non-null assertion.',\n      suggestOptionalChain: 'Consider using the optional chain operator `?.` instead. This operator includes runtime checks, so it is safer than the compile-only non-null assertion operator.'\n    },\n    schema: []\n  },\n  defaultOptions: [],\n  create(context) {\n    const sourceCode = context.getSourceCode();\n    return {\n      TSNonNullExpression(node) {\n        var _a, _b;\n        const suggest = [];\n        function convertTokenToOptional(replacement) {\n          return fixer => {\n            const operator = sourceCode.getTokenAfter(node.expression, util.isNonNullAssertionPunctuator);\n            if (operator) {\n              return fixer.replaceText(operator, replacement);\n            }\n            return null;\n          };\n        }\n        function removeToken() {\n          return fixer => {\n            const operator = sourceCode.getTokenAfter(node.expression, util.isNonNullAssertionPunctuator);\n            if (operator) {\n              return fixer.remove(operator);\n            }\n            return null;\n          };\n        }\n        if (((_a = node.parent) === null || _a === void 0 ? void 0 : _a.type) === utils_1.AST_NODE_TYPES.MemberExpression && node.parent.object === node) {\n          if (!node.parent.optional) {\n            if (node.parent.computed) {\n              // it is x![y]?.z\n              suggest.push({\n                messageId: 'suggestOptionalChain',\n                fix: convertTokenToOptional('?.')\n              });\n            } else {\n              // it is x!.y?.z\n              suggest.push({\n                messageId: 'suggestOptionalChain',\n                fix: convertTokenToOptional('?')\n              });\n            }\n          } else {\n            if (node.parent.computed) {\n              // it is x!?.[y].z\n              suggest.push({\n                messageId: 'suggestOptionalChain',\n                fix: removeToken()\n              });\n            } else {\n              // it is x!?.y.z\n              suggest.push({\n                messageId: 'suggestOptionalChain',\n                fix: removeToken()\n              });\n            }\n          }\n        } else if (((_b = node.parent) === null || _b === void 0 ? void 0 : _b.type) === utils_1.AST_NODE_TYPES.CallExpression && node.parent.callee === node) {\n          if (!node.parent.optional) {\n            // it is x.y?.z!()\n            suggest.push({\n              messageId: 'suggestOptionalChain',\n              fix: convertTokenToOptional('?.')\n            });\n          } else {\n            // it is x.y.z!?.()\n            suggest.push({\n              messageId: 'suggestOptionalChain',\n              fix: removeToken()\n            });\n          }\n        }\n        context.report({\n          node,\n          messageId: 'noNonNull',\n          suggest\n        });\n      }\n    };\n  }\n});","map":{"version":3,"names":["utils_1","require","util","__importStar","exports","default","createRule","name","meta","type","docs","description","recommended","hasSuggestions","messages","noNonNull","suggestOptionalChain","schema","defaultOptions","create","context","sourceCode","getSourceCode","TSNonNullExpression","node","suggest","convertTokenToOptional","replacement","fixer","operator","getTokenAfter","expression","isNonNullAssertionPunctuator","replaceText","removeToken","remove","_a","parent","AST_NODE_TYPES","MemberExpression","object","optional","computed","push","messageId","fix","_b","CallExpression","callee","report"],"sources":["../../src/rules/no-non-null-assertion.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}