{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst utils_1 = require(\"@typescript-eslint/utils\");\nconst util = __importStar(require(\"../util\"));\nexports.default = util.createRule({\n  name: 'typedef',\n  meta: {\n    docs: {\n      description: 'Require type annotations in certain places',\n      recommended: false\n    },\n    messages: {\n      expectedTypedef: 'Expected a type annotation.',\n      expectedTypedefNamed: 'Expected {{name}} to have a type annotation.'\n    },\n    schema: [{\n      type: 'object',\n      properties: {\n        [\"arrayDestructuring\" /* OptionKeys.ArrayDestructuring */]: {\n          type: 'boolean'\n        },\n        [\"arrowParameter\" /* OptionKeys.ArrowParameter */]: {\n          type: 'boolean'\n        },\n        [\"memberVariableDeclaration\" /* OptionKeys.MemberVariableDeclaration */]: {\n          type: 'boolean'\n        },\n        [\"objectDestructuring\" /* OptionKeys.ObjectDestructuring */]: {\n          type: 'boolean'\n        },\n        [\"parameter\" /* OptionKeys.Parameter */]: {\n          type: 'boolean'\n        },\n        [\"propertyDeclaration\" /* OptionKeys.PropertyDeclaration */]: {\n          type: 'boolean'\n        },\n        [\"variableDeclaration\" /* OptionKeys.VariableDeclaration */]: {\n          type: 'boolean'\n        },\n        [\"variableDeclarationIgnoreFunction\" /* OptionKeys.VariableDeclarationIgnoreFunction */]: {\n          type: 'boolean'\n        }\n      }\n    }],\n    type: 'suggestion'\n  },\n  defaultOptions: [{\n    [\"arrayDestructuring\" /* OptionKeys.ArrayDestructuring */]: false,\n    [\"arrowParameter\" /* OptionKeys.ArrowParameter */]: false,\n    [\"memberVariableDeclaration\" /* OptionKeys.MemberVariableDeclaration */]: false,\n    [\"objectDestructuring\" /* OptionKeys.ObjectDestructuring */]: false,\n    [\"parameter\" /* OptionKeys.Parameter */]: false,\n    [\"propertyDeclaration\" /* OptionKeys.PropertyDeclaration */]: false,\n    [\"variableDeclaration\" /* OptionKeys.VariableDeclaration */]: false,\n    [\"variableDeclarationIgnoreFunction\" /* OptionKeys.VariableDeclarationIgnoreFunction */]: false\n  }],\n  create(context, [{\n    arrayDestructuring,\n    arrowParameter,\n    memberVariableDeclaration,\n    objectDestructuring,\n    parameter,\n    propertyDeclaration,\n    variableDeclaration,\n    variableDeclarationIgnoreFunction\n  }]) {\n    function report(location, name) {\n      context.report({\n        node: location,\n        messageId: name ? 'expectedTypedefNamed' : 'expectedTypedef',\n        data: {\n          name\n        }\n      });\n    }\n    function getNodeName(node) {\n      return node.type === utils_1.AST_NODE_TYPES.Identifier ? node.name : undefined;\n    }\n    function isForOfStatementContext(node) {\n      let current = node.parent;\n      while (current) {\n        switch (current.type) {\n          case utils_1.AST_NODE_TYPES.VariableDeclarator:\n          case utils_1.AST_NODE_TYPES.VariableDeclaration:\n          case utils_1.AST_NODE_TYPES.ObjectPattern:\n          case utils_1.AST_NODE_TYPES.ArrayPattern:\n          case utils_1.AST_NODE_TYPES.Property:\n            current = current.parent;\n            break;\n          case utils_1.AST_NODE_TYPES.ForOfStatement:\n            return true;\n          default:\n            current = undefined;\n        }\n      }\n      return false;\n    }\n    function checkParameters(params) {\n      for (const param of params) {\n        let annotationNode;\n        switch (param.type) {\n          case utils_1.AST_NODE_TYPES.AssignmentPattern:\n            annotationNode = param.left;\n            break;\n          case utils_1.AST_NODE_TYPES.TSParameterProperty:\n            annotationNode = param.parameter;\n            // Check TS parameter property with default value like `constructor(private param: string = 'something') {}`\n            if (annotationNode && annotationNode.type === utils_1.AST_NODE_TYPES.AssignmentPattern) {\n              annotationNode = annotationNode.left;\n            }\n            break;\n          default:\n            annotationNode = param;\n            break;\n        }\n        if (annotationNode !== undefined && !annotationNode.typeAnnotation) {\n          report(param, getNodeName(param));\n        }\n      }\n    }\n    function isVariableDeclarationIgnoreFunction(node) {\n      return variableDeclarationIgnoreFunction === true && (node.type === utils_1.AST_NODE_TYPES.ArrowFunctionExpression || node.type === utils_1.AST_NODE_TYPES.FunctionExpression);\n    }\n    function isAncestorHasTypeAnnotation(node) {\n      let ancestor = node.parent;\n      while (ancestor) {\n        if ((ancestor.type === utils_1.AST_NODE_TYPES.ObjectPattern || ancestor.type === utils_1.AST_NODE_TYPES.ArrayPattern) && ancestor.typeAnnotation) {\n          return true;\n        }\n        ancestor = ancestor.parent;\n      }\n      return false;\n    }\n    return Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({}, arrayDestructuring && {\n      ArrayPattern(node) {\n        var _a, _b;\n        if (((_a = node.parent) === null || _a === void 0 ? void 0 : _a.type) === utils_1.AST_NODE_TYPES.RestElement && node.parent.typeAnnotation) {\n          return;\n        }\n        if (!node.typeAnnotation && !isForOfStatementContext(node) && !isAncestorHasTypeAnnotation(node) && ((_b = node.parent) === null || _b === void 0 ? void 0 : _b.type) !== utils_1.AST_NODE_TYPES.AssignmentExpression) {\n          report(node);\n        }\n      }\n    }), arrowParameter && {\n      ArrowFunctionExpression(node) {\n        checkParameters(node.params);\n      }\n    }), memberVariableDeclaration && {\n      PropertyDefinition(node) {\n        if (!(node.value && isVariableDeclarationIgnoreFunction(node.value)) && !node.typeAnnotation) {\n          report(node, node.key.type === utils_1.AST_NODE_TYPES.Identifier ? node.key.name : undefined);\n        }\n      }\n    }), parameter && {\n      'FunctionDeclaration, FunctionExpression'(node) {\n        checkParameters(node.params);\n      }\n    }), objectDestructuring && {\n      ObjectPattern(node) {\n        if (!node.typeAnnotation && !isForOfStatementContext(node) && !isAncestorHasTypeAnnotation(node)) {\n          report(node);\n        }\n      }\n    }), propertyDeclaration && {\n      'TSIndexSignature, TSPropertySignature'(node) {\n        if (!node.typeAnnotation) {\n          report(node, node.type === utils_1.AST_NODE_TYPES.TSPropertySignature ? getNodeName(node.key) : undefined);\n        }\n      }\n    }), {\n      VariableDeclarator(node) {\n        if (!variableDeclaration || node.id.typeAnnotation || node.id.type === utils_1.AST_NODE_TYPES.ArrayPattern && !arrayDestructuring || node.id.type === utils_1.AST_NODE_TYPES.ObjectPattern && !objectDestructuring || node.init && isVariableDeclarationIgnoreFunction(node.init)) {\n          return;\n        }\n        let current = node.parent;\n        while (current) {\n          switch (current.type) {\n            case utils_1.AST_NODE_TYPES.VariableDeclaration:\n              // Keep looking upwards\n              current = current.parent;\n              break;\n            case utils_1.AST_NODE_TYPES.ForOfStatement:\n            case utils_1.AST_NODE_TYPES.ForInStatement:\n              // Stop traversing and don't report an error\n              return;\n            default:\n              // Stop traversing\n              current = undefined;\n              break;\n          }\n        }\n        report(node, getNodeName(node.id));\n      }\n    });\n  }\n});","map":{"version":3,"names":["utils_1","require","util","__importStar","exports","default","createRule","name","meta","docs","description","recommended","messages","expectedTypedef","expectedTypedefNamed","schema","type","properties","defaultOptions","create","context","arrayDestructuring","arrowParameter","memberVariableDeclaration","objectDestructuring","parameter","propertyDeclaration","variableDeclaration","variableDeclarationIgnoreFunction","report","location","node","messageId","data","getNodeName","AST_NODE_TYPES","Identifier","undefined","isForOfStatementContext","current","parent","VariableDeclarator","VariableDeclaration","ObjectPattern","ArrayPattern","Property","ForOfStatement","checkParameters","params","param","annotationNode","AssignmentPattern","left","TSParameterProperty","typeAnnotation","isVariableDeclarationIgnoreFunction","ArrowFunctionExpression","FunctionExpression","isAncestorHasTypeAnnotation","ancestor","Object","assign","_a","RestElement","_b","AssignmentExpression","PropertyDefinition","value","key","FunctionDeclaration, FunctionExpression","TSIndexSignature, TSPropertySignature","TSPropertySignature","id","init","ForInStatement"],"sources":["../../src/rules/typedef.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}