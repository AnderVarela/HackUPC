{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.default = getChangedFilesPromise;\nfunction _chalk() {\n  const data = _interopRequireDefault(require('chalk'));\n  _chalk = function () {\n    return data;\n  };\n  return data;\n}\nfunction _jestChangedFiles() {\n  const data = require('jest-changed-files');\n  _jestChangedFiles = function () {\n    return data;\n  };\n  return data;\n}\nfunction _jestMessageUtil() {\n  const data = require('jest-message-util');\n  _jestMessageUtil = function () {\n    return data;\n  };\n  return data;\n}\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nfunction getChangedFilesPromise(globalConfig, configs) {\n  if (globalConfig.onlyChanged) {\n    const allRootsForAllProjects = configs.reduce((roots, config) => {\n      if (config.roots) {\n        roots.push(...config.roots);\n      }\n      return roots;\n    }, []);\n    return (0, _jestChangedFiles().getChangedFilesForRoots)(allRootsForAllProjects, {\n      changedSince: globalConfig.changedSince,\n      lastCommit: globalConfig.lastCommit,\n      withAncestor: globalConfig.changedFilesWithAncestor\n    }).catch(e => {\n      const message = (0, _jestMessageUtil().formatExecError)(e, configs[0], {\n        noStackTrace: true\n      }).split('\\n').filter(line => !line.includes('Command failed:')).join('\\n');\n      console.error(_chalk().default.red(`\\n\\n${message}`));\n      process.exit(1);\n    });\n  }\n  return undefined;\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","default","getChangedFilesPromise","_chalk","data","_interopRequireDefault","require","_jestChangedFiles","_jestMessageUtil","obj","__esModule","globalConfig","configs","onlyChanged","allRootsForAllProjects","reduce","roots","config","push","getChangedFilesForRoots","changedSince","lastCommit","withAncestor","changedFilesWithAncestor","catch","e","message","formatExecError","noStackTrace","split","filter","line","includes","join","console","error","red","process","exit","undefined"],"sources":["C:/Users/chest/OneDrive/Documentos/GitHub/HackUPC/frontend/node_modules/@jest/core/build/getChangedFilesPromise.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.default = getChangedFilesPromise;\n\nfunction _chalk() {\n  const data = _interopRequireDefault(require('chalk'));\n\n  _chalk = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _jestChangedFiles() {\n  const data = require('jest-changed-files');\n\n  _jestChangedFiles = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _jestMessageUtil() {\n  const data = require('jest-message-util');\n\n  _jestMessageUtil = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {default: obj};\n}\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nfunction getChangedFilesPromise(globalConfig, configs) {\n  if (globalConfig.onlyChanged) {\n    const allRootsForAllProjects = configs.reduce((roots, config) => {\n      if (config.roots) {\n        roots.push(...config.roots);\n      }\n\n      return roots;\n    }, []);\n    return (0, _jestChangedFiles().getChangedFilesForRoots)(\n      allRootsForAllProjects,\n      {\n        changedSince: globalConfig.changedSince,\n        lastCommit: globalConfig.lastCommit,\n        withAncestor: globalConfig.changedFilesWithAncestor\n      }\n    ).catch(e => {\n      const message = (0, _jestMessageUtil().formatExecError)(e, configs[0], {\n        noStackTrace: true\n      })\n        .split('\\n')\n        .filter(line => !line.includes('Command failed:'))\n        .join('\\n');\n      console.error(_chalk().default.red(`\\n\\n${message}`));\n      process.exit(1);\n    });\n  }\n\n  return undefined;\n}\n"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAC3CC,KAAK,EAAE;AACT,CAAC,CAAC;AACFD,OAAO,CAACE,OAAO,GAAGC,sBAAsB;AAExC,SAASC,MAAMA,CAAA,EAAG;EAChB,MAAMC,IAAI,GAAGC,sBAAsB,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC;EAErDH,MAAM,GAAG,SAAAA,CAAA,EAAY;IACnB,OAAOC,IAAI;EACb,CAAC;EAED,OAAOA,IAAI;AACb;AAEA,SAASG,iBAAiBA,CAAA,EAAG;EAC3B,MAAMH,IAAI,GAAGE,OAAO,CAAC,oBAAoB,CAAC;EAE1CC,iBAAiB,GAAG,SAAAA,CAAA,EAAY;IAC9B,OAAOH,IAAI;EACb,CAAC;EAED,OAAOA,IAAI;AACb;AAEA,SAASI,gBAAgBA,CAAA,EAAG;EAC1B,MAAMJ,IAAI,GAAGE,OAAO,CAAC,mBAAmB,CAAC;EAEzCE,gBAAgB,GAAG,SAAAA,CAAA,EAAY;IAC7B,OAAOJ,IAAI;EACb,CAAC;EAED,OAAOA,IAAI;AACb;AAEA,SAASC,sBAAsBA,CAACI,GAAG,EAAE;EACnC,OAAOA,GAAG,IAAIA,GAAG,CAACC,UAAU,GAAGD,GAAG,GAAG;IAACR,OAAO,EAAEQ;EAAG,CAAC;AACrD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAASP,sBAAsBA,CAACS,YAAY,EAAEC,OAAO,EAAE;EACrD,IAAID,YAAY,CAACE,WAAW,EAAE;IAC5B,MAAMC,sBAAsB,GAAGF,OAAO,CAACG,MAAM,CAAC,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC/D,IAAIA,MAAM,CAACD,KAAK,EAAE;QAChBA,KAAK,CAACE,IAAI,CAAC,GAAGD,MAAM,CAACD,KAAK,CAAC;MAC7B;MAEA,OAAOA,KAAK;IACd,CAAC,EAAE,EAAE,CAAC;IACN,OAAO,CAAC,CAAC,EAAET,iBAAiB,CAAC,CAAC,CAACY,uBAAuB,EACpDL,sBAAsB,EACtB;MACEM,YAAY,EAAET,YAAY,CAACS,YAAY;MACvCC,UAAU,EAAEV,YAAY,CAACU,UAAU;MACnCC,YAAY,EAAEX,YAAY,CAACY;IAC7B,CACF,CAAC,CAACC,KAAK,CAACC,CAAC,IAAI;MACX,MAAMC,OAAO,GAAG,CAAC,CAAC,EAAElB,gBAAgB,CAAC,CAAC,CAACmB,eAAe,EAAEF,CAAC,EAAEb,OAAO,CAAC,CAAC,CAAC,EAAE;QACrEgB,YAAY,EAAE;MAChB,CAAC,CAAC,CACCC,KAAK,CAAC,IAAI,CAAC,CACXC,MAAM,CAACC,IAAI,IAAI,CAACA,IAAI,CAACC,QAAQ,CAAC,iBAAiB,CAAC,CAAC,CACjDC,IAAI,CAAC,IAAI,CAAC;MACbC,OAAO,CAACC,KAAK,CAAChC,MAAM,CAAC,CAAC,CAACF,OAAO,CAACmC,GAAG,CAAE,OAAMV,OAAQ,EAAC,CAAC,CAAC;MACrDW,OAAO,CAACC,IAAI,CAAC,CAAC,CAAC;IACjB,CAAC,CAAC;EACJ;EAEA,OAAOC,SAAS;AAClB","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}