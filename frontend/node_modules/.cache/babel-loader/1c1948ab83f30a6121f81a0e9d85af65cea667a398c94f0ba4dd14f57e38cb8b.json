{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst utils_1 = require(\"@typescript-eslint/utils\");\nconst util = __importStar(require(\"../util\"));\nconst printNodeModifiers = (node, final) => {\n  var _a;\n  return `${(_a = node.accessibility) !== null && _a !== void 0 ? _a : ''}${node.static ? ' static' : ''} ${final} `.trimStart();\n};\nconst isSupportedLiteral = node => {\n  if (node.type === utils_1.AST_NODE_TYPES.Literal) {\n    return true;\n  }\n  if (node.type === utils_1.AST_NODE_TYPES.TaggedTemplateExpression || node.type === utils_1.AST_NODE_TYPES.TemplateLiteral) {\n    return ('quasi' in node ? node.quasi.quasis : node.quasis).length === 1;\n  }\n  return false;\n};\nexports.default = util.createRule({\n  name: 'class-literal-property-style',\n  meta: {\n    type: 'problem',\n    docs: {\n      description: 'Enforce that literals on classes are exposed in a consistent style',\n      recommended: 'strict'\n    },\n    hasSuggestions: true,\n    messages: {\n      preferFieldStyle: 'Literals should be exposed using readonly fields.',\n      preferFieldStyleSuggestion: 'Replace the literals with readonly fields.',\n      preferGetterStyle: 'Literals should be exposed using getters.',\n      preferGetterStyleSuggestion: 'Replace the literals with getters.'\n    },\n    schema: [{\n      enum: ['fields', 'getters']\n    }]\n  },\n  defaultOptions: ['fields'],\n  create(context, [style]) {\n    return Object.assign(Object.assign({}, style === 'fields' && {\n      MethodDefinition(node) {\n        if (node.kind !== 'get' || !node.value.body || !node.value.body.body.length) {\n          return;\n        }\n        const [statement] = node.value.body.body;\n        if (statement.type !== utils_1.AST_NODE_TYPES.ReturnStatement) {\n          return;\n        }\n        const {\n          argument\n        } = statement;\n        if (!argument || !isSupportedLiteral(argument)) {\n          return;\n        }\n        context.report({\n          node: node.key,\n          messageId: 'preferFieldStyle',\n          suggest: [{\n            messageId: 'preferFieldStyleSuggestion',\n            fix(fixer) {\n              const sourceCode = context.getSourceCode();\n              const name = sourceCode.getText(node.key);\n              let text = '';\n              text += printNodeModifiers(node, 'readonly');\n              text += node.computed ? `[${name}]` : name;\n              text += ` = ${sourceCode.getText(argument)};`;\n              return fixer.replaceText(node, text);\n            }\n          }]\n        });\n      }\n    }), style === 'getters' && {\n      PropertyDefinition(node) {\n        if (!node.readonly || node.declare) {\n          return;\n        }\n        const {\n          value\n        } = node;\n        if (!value || !isSupportedLiteral(value)) {\n          return;\n        }\n        context.report({\n          node: node.key,\n          messageId: 'preferGetterStyle',\n          suggest: [{\n            messageId: 'preferGetterStyleSuggestion',\n            fix(fixer) {\n              const sourceCode = context.getSourceCode();\n              const name = sourceCode.getText(node.key);\n              let text = '';\n              text += printNodeModifiers(node, 'get');\n              text += node.computed ? `[${name}]` : name;\n              text += `() { return ${sourceCode.getText(value)}; }`;\n              return fixer.replaceText(node, text);\n            }\n          }]\n        });\n      }\n    });\n  }\n});","map":{"version":3,"names":["utils_1","require","util","__importStar","printNodeModifiers","node","final","_a","accessibility","static","trimStart","isSupportedLiteral","type","AST_NODE_TYPES","Literal","TaggedTemplateExpression","TemplateLiteral","quasi","quasis","length","exports","default","createRule","name","meta","docs","description","recommended","hasSuggestions","messages","preferFieldStyle","preferFieldStyleSuggestion","preferGetterStyle","preferGetterStyleSuggestion","schema","enum","defaultOptions","create","context","style","Object","assign","MethodDefinition","kind","value","body","statement","ReturnStatement","argument","report","key","messageId","suggest","fix","fixer","sourceCode","getSourceCode","getText","text","computed","replaceText","PropertyDefinition","readonly","declare"],"sources":["../../src/rules/class-literal-property-style.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}