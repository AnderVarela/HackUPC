{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst utils_1 = require(\"@typescript-eslint/utils\");\nconst util = __importStar(require(\"../util\"));\nexports.default = util.createRule({\n  name: 'no-import-type-side-effects',\n  meta: {\n    type: 'problem',\n    docs: {\n      description: 'Enforce the use of top-level import type qualifier when an import only has specifiers with inline type qualifiers',\n      recommended: false\n    },\n    fixable: 'code',\n    messages: {\n      useTopLevelQualifier: 'TypeScript will only remove the inline type specifiers which will leave behind a side effect import at runtime. Convert this to a top-level type qualifier to properly remove the entire import.'\n    },\n    schema: []\n  },\n  defaultOptions: [],\n  create(context) {\n    const sourceCode = context.getSourceCode();\n    return {\n      'ImportDeclaration[importKind!=\"type\"]'(node) {\n        if (node.specifiers.length === 0) {\n          return;\n        }\n        const specifiers = [];\n        for (const specifier of node.specifiers) {\n          if (specifier.type !== utils_1.AST_NODE_TYPES.ImportSpecifier || specifier.importKind !== 'type') {\n            return;\n          }\n          specifiers.push(specifier);\n        }\n        context.report({\n          node,\n          messageId: 'useTopLevelQualifier',\n          fix(fixer) {\n            const fixes = [];\n            for (const specifier of specifiers) {\n              const qualifier = util.nullThrows(sourceCode.getFirstToken(specifier, util.isTypeKeyword), util.NullThrowsReasons.MissingToken('type keyword', 'import specifier'));\n              fixes.push(fixer.removeRange([qualifier.range[0], specifier.imported.range[0]]));\n            }\n            const importKeyword = util.nullThrows(sourceCode.getFirstToken(node, util.isImportKeyword), util.NullThrowsReasons.MissingToken('import keyword', 'import'));\n            fixes.push(fixer.insertTextAfter(importKeyword, ' type'));\n            return fixes;\n          }\n        });\n      }\n    };\n  }\n});","map":{"version":3,"names":["utils_1","require","util","__importStar","exports","default","createRule","name","meta","type","docs","description","recommended","fixable","messages","useTopLevelQualifier","schema","defaultOptions","create","context","sourceCode","getSourceCode","ImportDeclaration[importKind!=\"type\"]","node","specifiers","length","specifier","AST_NODE_TYPES","ImportSpecifier","importKind","push","report","messageId","fix","fixer","fixes","qualifier","nullThrows","getFirstToken","isTypeKeyword","NullThrowsReasons","MissingToken","removeRange","range","imported","importKeyword","isImportKeyword","insertTextAfter"],"sources":["../../src/rules/no-import-type-side-effects.ts"],"sourcesContent":[null],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,MAAAA,OAAA,GAAAC,OAAA;AAEA,MAAAC,IAAA,GAAAC,YAAA,CAAAF,OAAA;AAKAG,OAAA,CAAAC,OAAA,GAAeH,IAAI,CAACI,UAAU,CAAsB;EAClDC,IAAI,EAAE,6BAA6B;EACnCC,IAAI,EAAE;IACJC,IAAI,EAAE,SAAS;IACfC,IAAI,EAAE;MACJC,WAAW,EACT,mHAAmH;MACrHC,WAAW,EAAE;KACd;IACDC,OAAO,EAAE,MAAM;IACfC,QAAQ,EAAE;MACRC,oBAAoB,EAClB;KACH;IACDC,MAAM,EAAE;GACT;EACDC,cAAc,EAAE,EAAE;EAClBC,MAAMA,CAACC,OAAO;IACZ,MAAMC,UAAU,GAAGD,OAAO,CAACE,aAAa,EAAE;IAC1C,OAAO;MACL,uCAAuCC,CACrCC,IAAgC;QAEhC,IAAIA,IAAI,CAACC,UAAU,CAACC,MAAM,KAAK,CAAC,EAAE;UAChC;;QAGF,MAAMD,UAAU,GAA+B,EAAE;QACjD,KAAK,MAAME,SAAS,IAAIH,IAAI,CAACC,UAAU,EAAE;UACvC,IACEE,SAAS,CAACjB,IAAI,KAAKT,OAAA,CAAA2B,cAAc,CAACC,eAAe,IACjDF,SAAS,CAACG,UAAU,KAAK,MAAM,EAC/B;YACA;;UAEFL,UAAU,CAACM,IAAI,CAACJ,SAAS,CAAC;;QAG5BP,OAAO,CAACY,MAAM,CAAC;UACbR,IAAI;UACJS,SAAS,EAAE,sBAAsB;UACjCC,GAAGA,CAACC,KAAK;YACP,MAAMC,KAAK,GAAuB,EAAE;YACpC,KAAK,MAAMT,SAAS,IAAIF,UAAU,EAAE;cAClC,MAAMY,SAAS,GAAGlC,IAAI,CAACmC,UAAU,CAC/BjB,UAAU,CAACkB,aAAa,CAACZ,SAAS,EAAExB,IAAI,CAACqC,aAAa,CAAC,EACvDrC,IAAI,CAACsC,iBAAiB,CAACC,YAAY,CACjC,cAAc,EACd,kBAAkB,CACnB,CACF;cACDN,KAAK,CAACL,IAAI,CACRI,KAAK,CAACQ,WAAW,CAAC,CAChBN,SAAS,CAACO,KAAK,CAAC,CAAC,CAAC,EAClBjB,SAAS,CAACkB,QAAQ,CAACD,KAAK,CAAC,CAAC,CAAC,CAC5B,CAAC,CACH;;YAGH,MAAME,aAAa,GAAG3C,IAAI,CAACmC,UAAU,CACnCjB,UAAU,CAACkB,aAAa,CAACf,IAAI,EAAErB,IAAI,CAAC4C,eAAe,CAAC,EACpD5C,IAAI,CAACsC,iBAAiB,CAACC,YAAY,CAAC,gBAAgB,EAAE,QAAQ,CAAC,CAChE;YACDN,KAAK,CAACL,IAAI,CAACI,KAAK,CAACa,eAAe,CAACF,aAAa,EAAE,OAAO,CAAC,CAAC;YAEzD,OAAOV,KAAK;UACd;SACD,CAAC;MACJ;KACD;EACH;CACD,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}