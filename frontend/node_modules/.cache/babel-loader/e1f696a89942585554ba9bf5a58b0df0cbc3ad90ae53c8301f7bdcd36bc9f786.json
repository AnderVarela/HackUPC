{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isTypeTemplateLiteralType = exports.isTypeBigIntLiteralType = exports.typeIsOrHasBaseType = exports.isAnyOrAnyArrayTypeDiscriminated = exports.AnyType = exports.isTypeUnknownArrayType = exports.isTypeAnyArrayType = exports.isTypeAnyType = exports.isTypeReferenceType = exports.isTypeUnknownType = exports.isTypeNeverType = exports.isTypeArrayTypeOrUnionOfArrayTypes = exports.isNullableType = void 0;\nconst debug_1 = __importDefault(require(\"debug\"));\nconst tsutils_1 = require(\"tsutils\");\nconst ts = __importStar(require(\"typescript\"));\nconst getTypeArguments_1 = require(\"./getTypeArguments\");\nconst typeFlagUtils_1 = require(\"./typeFlagUtils\");\nconst log = (0, debug_1.default)('typescript-eslint:eslint-plugin:utils:types');\n/**\n * Checks if the given type is (or accepts) nullable\n * @param isReceiver true if the type is a receiving type (i.e. the type of a called function's parameter)\n */\nfunction isNullableType(type, {\n  isReceiver = false,\n  allowUndefined = true\n} = {}) {\n  const flags = (0, typeFlagUtils_1.getTypeFlags)(type);\n  if (isReceiver && flags & (ts.TypeFlags.Any | ts.TypeFlags.Unknown)) {\n    return true;\n  }\n  if (allowUndefined) {\n    return (flags & (ts.TypeFlags.Null | ts.TypeFlags.Undefined)) !== 0;\n  } else {\n    return (flags & ts.TypeFlags.Null) !== 0;\n  }\n}\nexports.isNullableType = isNullableType;\n/**\n * Checks if the given type is either an array type,\n * or a union made up solely of array types.\n */\nfunction isTypeArrayTypeOrUnionOfArrayTypes(type, checker) {\n  for (const t of (0, tsutils_1.unionTypeParts)(type)) {\n    if (!checker.isArrayType(t)) {\n      return false;\n    }\n  }\n  return true;\n}\nexports.isTypeArrayTypeOrUnionOfArrayTypes = isTypeArrayTypeOrUnionOfArrayTypes;\n/**\n * @returns true if the type is `never`\n */\nfunction isTypeNeverType(type) {\n  return (0, typeFlagUtils_1.isTypeFlagSet)(type, ts.TypeFlags.Never);\n}\nexports.isTypeNeverType = isTypeNeverType;\n/**\n * @returns true if the type is `unknown`\n */\nfunction isTypeUnknownType(type) {\n  return (0, typeFlagUtils_1.isTypeFlagSet)(type, ts.TypeFlags.Unknown);\n}\nexports.isTypeUnknownType = isTypeUnknownType;\n// https://github.com/microsoft/TypeScript/blob/42aa18bf442c4df147e30deaf27261a41cbdc617/src/compiler/types.ts#L5157\nconst Nullable = ts.TypeFlags.Undefined | ts.TypeFlags.Null;\n// https://github.com/microsoft/TypeScript/blob/42aa18bf442c4df147e30deaf27261a41cbdc617/src/compiler/types.ts#L5187\nconst ObjectFlagsType = ts.TypeFlags.Any | Nullable | ts.TypeFlags.Never | ts.TypeFlags.Object | ts.TypeFlags.Union | ts.TypeFlags.Intersection;\nfunction isTypeReferenceType(type) {\n  if ((type.flags & ObjectFlagsType) === 0) {\n    return false;\n  }\n  const objectTypeFlags = type.objectFlags;\n  return (objectTypeFlags & ts.ObjectFlags.Reference) !== 0;\n}\nexports.isTypeReferenceType = isTypeReferenceType;\n/**\n * @returns true if the type is `any`\n */\nfunction isTypeAnyType(type) {\n  if ((0, typeFlagUtils_1.isTypeFlagSet)(type, ts.TypeFlags.Any)) {\n    if (type.intrinsicName === 'error') {\n      log('Found an \"error\" any type');\n    }\n    return true;\n  }\n  return false;\n}\nexports.isTypeAnyType = isTypeAnyType;\n/**\n * @returns true if the type is `any[]`\n */\nfunction isTypeAnyArrayType(type, checker) {\n  return checker.isArrayType(type) && isTypeAnyType(\n  // getTypeArguments was only added in TS3.7\n  (0, getTypeArguments_1.getTypeArguments)(type, checker)[0]);\n}\nexports.isTypeAnyArrayType = isTypeAnyArrayType;\n/**\n * @returns true if the type is `unknown[]`\n */\nfunction isTypeUnknownArrayType(type, checker) {\n  return checker.isArrayType(type) && isTypeUnknownType(\n  // getTypeArguments was only added in TS3.7\n  (0, getTypeArguments_1.getTypeArguments)(type, checker)[0]);\n}\nexports.isTypeUnknownArrayType = isTypeUnknownArrayType;\nvar AnyType;\n(function (AnyType) {\n  AnyType[AnyType[\"Any\"] = 0] = \"Any\";\n  AnyType[AnyType[\"AnyArray\"] = 1] = \"AnyArray\";\n  AnyType[AnyType[\"Safe\"] = 2] = \"Safe\";\n})(AnyType || (exports.AnyType = AnyType = {}));\n/**\n * @returns `AnyType.Any` if the type is `any`, `AnyType.AnyArray` if the type is `any[]` or `readonly any[]`,\n *          otherwise it returns `AnyType.Safe`.\n */\nfunction isAnyOrAnyArrayTypeDiscriminated(node, checker) {\n  const type = checker.getTypeAtLocation(node);\n  if (isTypeAnyType(type)) {\n    return AnyType.Any;\n  }\n  if (isTypeAnyArrayType(type, checker)) {\n    return AnyType.AnyArray;\n  }\n  return AnyType.Safe;\n}\nexports.isAnyOrAnyArrayTypeDiscriminated = isAnyOrAnyArrayTypeDiscriminated;\n/**\n * @returns Whether a type is an instance of the parent type, including for the parent's base types.\n */\nfunction typeIsOrHasBaseType(type, parentType) {\n  const parentSymbol = parentType.getSymbol();\n  if (!type.getSymbol() || !parentSymbol) {\n    return false;\n  }\n  const typeAndBaseTypes = [type];\n  const ancestorTypes = type.getBaseTypes();\n  if (ancestorTypes) {\n    typeAndBaseTypes.push(...ancestorTypes);\n  }\n  for (const baseType of typeAndBaseTypes) {\n    const baseSymbol = baseType.getSymbol();\n    if (baseSymbol && baseSymbol.name === parentSymbol.name) {\n      return true;\n    }\n  }\n  return false;\n}\nexports.typeIsOrHasBaseType = typeIsOrHasBaseType;\nfunction isTypeBigIntLiteralType(type) {\n  return (0, typeFlagUtils_1.isTypeFlagSet)(type, ts.TypeFlags.BigIntLiteral);\n}\nexports.isTypeBigIntLiteralType = isTypeBigIntLiteralType;\nfunction isTypeTemplateLiteralType(type) {\n  return (0, typeFlagUtils_1.isTypeFlagSet)(type, ts.TypeFlags.TemplateLiteral);\n}\nexports.isTypeTemplateLiteralType = isTypeTemplateLiteralType;","map":{"version":3,"names":["debug_1","__importDefault","require","tsutils_1","ts","__importStar","getTypeArguments_1","typeFlagUtils_1","log","default","isNullableType","type","isReceiver","allowUndefined","flags","getTypeFlags","TypeFlags","Any","Unknown","Null","Undefined","exports","isTypeArrayTypeOrUnionOfArrayTypes","checker","t","unionTypeParts","isArrayType","isTypeNeverType","isTypeFlagSet","Never","isTypeUnknownType","Nullable","ObjectFlagsType","Object","Union","Intersection","isTypeReferenceType","objectTypeFlags","objectFlags","ObjectFlags","Reference","isTypeAnyType","intrinsicName","isTypeAnyArrayType","getTypeArguments","isTypeUnknownArrayType","AnyType","isAnyOrAnyArrayTypeDiscriminated","node","getTypeAtLocation","AnyArray","Safe","typeIsOrHasBaseType","parentType","parentSymbol","getSymbol","typeAndBaseTypes","ancestorTypes","getBaseTypes","push","baseType","baseSymbol","name","isTypeBigIntLiteralType","BigIntLiteral","isTypeTemplateLiteralType","TemplateLiteral"],"sources":["../src/predicates.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}