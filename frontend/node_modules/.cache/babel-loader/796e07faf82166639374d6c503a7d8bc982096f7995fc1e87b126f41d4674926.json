{"ast":null,"code":"'use strict';\n\nconst fs = require('fs');\nconst shebangCommand = require('shebang-command');\nfunction readShebang(command) {\n  // Read the first 150 bytes from the file\n  const size = 150;\n  const buffer = Buffer.alloc(size);\n  let fd;\n  try {\n    fd = fs.openSync(command, 'r');\n    fs.readSync(fd, buffer, 0, size, 0);\n    fs.closeSync(fd);\n  } catch (e) {/* Empty */}\n\n  // Attempt to extract shebang (null is returned if not a shebang)\n  return shebangCommand(buffer.toString());\n}\nmodule.exports = readShebang;","map":{"version":3,"names":["fs","require","shebangCommand","readShebang","command","size","buffer","Buffer","alloc","fd","openSync","readSync","closeSync","e","toString","module","exports"],"sources":["C:/Users/chest/OneDrive/Documentos/GitHub/HackUPC/frontend/node_modules/cross-spawn/lib/util/readShebang.js"],"sourcesContent":["'use strict';\n\nconst fs = require('fs');\nconst shebangCommand = require('shebang-command');\n\nfunction readShebang(command) {\n    // Read the first 150 bytes from the file\n    const size = 150;\n    const buffer = Buffer.alloc(size);\n\n    let fd;\n\n    try {\n        fd = fs.openSync(command, 'r');\n        fs.readSync(fd, buffer, 0, size, 0);\n        fs.closeSync(fd);\n    } catch (e) { /* Empty */ }\n\n    // Attempt to extract shebang (null is returned if not a shebang)\n    return shebangCommand(buffer.toString());\n}\n\nmodule.exports = readShebang;\n"],"mappings":"AAAA,YAAY;;AAEZ,MAAMA,EAAE,GAAGC,OAAO,CAAC,IAAI,CAAC;AACxB,MAAMC,cAAc,GAAGD,OAAO,CAAC,iBAAiB,CAAC;AAEjD,SAASE,WAAWA,CAACC,OAAO,EAAE;EAC1B;EACA,MAAMC,IAAI,GAAG,GAAG;EAChB,MAAMC,MAAM,GAAGC,MAAM,CAACC,KAAK,CAACH,IAAI,CAAC;EAEjC,IAAII,EAAE;EAEN,IAAI;IACAA,EAAE,GAAGT,EAAE,CAACU,QAAQ,CAACN,OAAO,EAAE,GAAG,CAAC;IAC9BJ,EAAE,CAACW,QAAQ,CAACF,EAAE,EAAEH,MAAM,EAAE,CAAC,EAAED,IAAI,EAAE,CAAC,CAAC;IACnCL,EAAE,CAACY,SAAS,CAACH,EAAE,CAAC;EACpB,CAAC,CAAC,OAAOI,CAAC,EAAE,CAAE;;EAEd;EACA,OAAOX,cAAc,CAACI,MAAM,CAACQ,QAAQ,CAAC,CAAC,CAAC;AAC5C;AAEAC,MAAM,CAACC,OAAO,GAAGb,WAAW","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}