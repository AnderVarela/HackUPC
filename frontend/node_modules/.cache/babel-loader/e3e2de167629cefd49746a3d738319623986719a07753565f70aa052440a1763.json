{"ast":null,"code":"'use strict';\n\nvar inspect = require('object-inspect');\nvar IsDetachedBuffer = require('es-abstract/2023/IsDetachedBuffer');\nvar forEach = require('for-each');\nvar v = require('es-value-fixtures');\nvar byteLength = require('array-buffer-byte-length');\nmodule.exports = function runTests(slice, t) {\n  forEach(v.primitives.concat(v.objects), function (nonAB) {\n    t['throws'](function () {\n      slice(nonAB);\n    }, TypeError, inspect(nonAB) + ' is not an ArrayBuffer');\n  });\n  t.test('ArrayBuffers', {\n    skip: typeof ArrayBuffer === 'undefined'\n  }, function (st) {\n    var ab = new ArrayBuffer(0);\n    st.equal(IsDetachedBuffer(ab), false, 'ArrayBuffer is not detached');\n    try {\n      var nb = slice(ab);\n    } catch (e) {\n      if (e instanceof SyntaxError) {\n        st.skip('Detaching ArrayBuffer is not supported');\n        return st.end();\n      }\n      console.log(e.stack);\n    }\n    st.notEqual(nb, ab, 'new ArrayBuffer is not the same as the original');\n    st.equal(IsDetachedBuffer(ab), false, 'old ArrayBuffer is not detached');\n    st.equal(IsDetachedBuffer(nb), false, 'new ArrayBuffer is not detached');\n    var ab2 = new ArrayBuffer(8);\n    st.equal(byteLength(ab2), 8, 'original ArrayBuffer has length 8');\n    try {\n      var nbLen = slice(ab2, 4);\n    } catch (e) {\n      if (e instanceof SyntaxError) {\n        st.skip('Detaching ArrayBuffer is not supported');\n        return st.end();\n      }\n    }\n    st.equal(IsDetachedBuffer(ab2), false, 'old ArrayBuffer is not detached');\n    st.equal(IsDetachedBuffer(nbLen), false, 'new ArrayBuffer is not detached');\n    st.equal(byteLength(ab2), 8, 'original ArrayBuffer has length 8');\n    st.equal(byteLength(nbLen), 4, 'newly sliced ArrayBuffer has length 4');\n    var one = new ArrayBuffer(1);\n    var arr = new Uint8Array(one);\n    arr[0] = 123;\n    var two = slice(one);\n    var arr2 = new Uint8Array(two);\n    arr2[0] = 234;\n    st.deepEqual(arr, new Uint8Array([123]), 'original buffer is unchanged');\n    st.deepEqual(arr2, new Uint8Array([234]), 'sliced buffer is changed');\n    return st.end();\n  });\n  t.test('SharedArrayBuffers', {\n    skip: typeof SharedArrayBuffer === 'undefined'\n  }, function (st) {\n    var sab = new SharedArrayBuffer(0);\n    st['throws'](function () {\n      slice(sab);\n    }, TypeError, inspect(sab) + ' is not an ArrayBuffer');\n    st.end();\n  });\n};","map":{"version":3,"names":["inspect","require","IsDetachedBuffer","forEach","v","byteLength","module","exports","runTests","slice","t","primitives","concat","objects","nonAB","TypeError","test","skip","ArrayBuffer","st","ab","equal","nb","e","SyntaxError","end","console","log","stack","notEqual","ab2","nbLen","one","arr","Uint8Array","two","arr2","deepEqual","SharedArrayBuffer","sab"],"sources":["C:/Users/chest/OneDrive/Documentos/GitHub/HackUPC/frontend/node_modules/arraybuffer.prototype.slice/test/tests.js"],"sourcesContent":["'use strict';\n\nvar inspect = require('object-inspect');\nvar IsDetachedBuffer = require('es-abstract/2023/IsDetachedBuffer');\n\nvar forEach = require('for-each');\nvar v = require('es-value-fixtures');\n\nvar byteLength = require('array-buffer-byte-length');\n\nmodule.exports = function runTests(slice, t) {\n\tforEach(v.primitives.concat(v.objects), function (nonAB) {\n\t\tt['throws'](\n\t\t\tfunction () { slice(nonAB); },\n\t\t\tTypeError,\n\t\t\tinspect(nonAB) + ' is not an ArrayBuffer'\n\t\t);\n\t});\n\n\tt.test('ArrayBuffers', { skip: typeof ArrayBuffer === 'undefined' }, function (st) {\n\t\tvar ab = new ArrayBuffer(0);\n\n\t\tst.equal(IsDetachedBuffer(ab), false, 'ArrayBuffer is not detached');\n\n\t\ttry {\n\t\t\tvar nb = slice(ab);\n\t\t} catch (e) {\n\t\t\tif (e instanceof SyntaxError) {\n\t\t\t\tst.skip('Detaching ArrayBuffer is not supported');\n\t\t\t\treturn st.end();\n\t\t\t}\n\t\t\tconsole.log(e.stack);\n\t\t}\n\n\t\tst.notEqual(nb, ab, 'new ArrayBuffer is not the same as the original');\n\t\tst.equal(IsDetachedBuffer(ab), false, 'old ArrayBuffer is not detached');\n\t\tst.equal(IsDetachedBuffer(nb), false, 'new ArrayBuffer is not detached');\n\n\t\tvar ab2 = new ArrayBuffer(8);\n\t\tst.equal(byteLength(ab2), 8, 'original ArrayBuffer has length 8');\n\t\ttry {\n\t\t\tvar nbLen = slice(ab2, 4);\n\t\t} catch (e) {\n\t\t\tif (e instanceof SyntaxError) {\n\t\t\t\tst.skip('Detaching ArrayBuffer is not supported');\n\t\t\t\treturn st.end();\n\t\t\t}\n\t\t}\n\t\tst.equal(IsDetachedBuffer(ab2), false, 'old ArrayBuffer is not detached');\n\t\tst.equal(IsDetachedBuffer(nbLen), false, 'new ArrayBuffer is not detached');\n\n\t\tst.equal(byteLength(ab2), 8, 'original ArrayBuffer has length 8');\n\t\tst.equal(byteLength(nbLen), 4, 'newly sliced ArrayBuffer has length 4');\n\n\t\tvar one = new ArrayBuffer(1);\n\t\tvar arr = new Uint8Array(one);\n\t\tarr[0] = 123;\n\n\t\tvar two = slice(one);\n\n\t\tvar arr2 = new Uint8Array(two);\n\t\tarr2[0] = 234;\n\n\t\tst.deepEqual(arr, new Uint8Array([123]), 'original buffer is unchanged');\n\t\tst.deepEqual(arr2, new Uint8Array([234]), 'sliced buffer is changed');\n\n\t\treturn st.end();\n\t});\n\n\tt.test('SharedArrayBuffers', { skip: typeof SharedArrayBuffer === 'undefined' }, function (st) {\n\t\tvar sab = new SharedArrayBuffer(0);\n\n\t\tst['throws'](\n\t\t\tfunction () { slice(sab); },\n\t\t\tTypeError,\n\t\t\tinspect(sab) + ' is not an ArrayBuffer'\n\t\t);\n\n\t\tst.end();\n\t});\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}