{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\n/**\n * Edge 16 & 17 do not infer function.name from variable assignment.\n * All other `function.name` behavior works fine, so we can skip most of @babel/transform-function-name.\n * @see https://kangax.github.io/compat-table/es6/#test-function_name_property_variables_(function)\n *\n * Note: contrary to various Github issues, Edge 16+ *does* correctly infer the name of Arrow Functions.\n * The variable declarator name inference issue only affects function expressions, so that's all we fix here.\n *\n * A Note on Minification: Terser undoes this transform *by default* unless `keep_fnames` is set to true.\n * There is by design - if Function.name is critical to your application, you must configure\n * your minifier to preserve function names.\n */\nvar _default = ({\n  types: t\n}) => ({\n  name: \"transform-edge-function-name\",\n  visitor: {\n    FunctionExpression: {\n      exit(path) {\n        if (!path.node.id && t.isIdentifier(path.parent.id)) {\n          const id = t.cloneNode(path.parent.id);\n          const binding = path.scope.getBinding(id.name); // if the binding gets reassigned anywhere, rename it\n\n          if (binding == null ? void 0 : binding.constantViolations.length) {\n            path.scope.rename(id.name);\n          }\n          path.node.id = id;\n        }\n      }\n    }\n  }\n});\nexports.default = _default;\nmodule.exports = exports.default;","map":{"version":3,"names":["exports","__esModule","default","_default","types","t","name","visitor","FunctionExpression","exit","path","node","id","isIdentifier","parent","cloneNode","binding","scope","getBinding","constantViolations","length","rename","module"],"sources":["C:/Users/chest/OneDrive/Documentos/GitHub/HackUPC/frontend/node_modules/@babel/preset-modules/lib/plugins/transform-edge-function-name/index.js"],"sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\n/**\n * Edge 16 & 17 do not infer function.name from variable assignment.\n * All other `function.name` behavior works fine, so we can skip most of @babel/transform-function-name.\n * @see https://kangax.github.io/compat-table/es6/#test-function_name_property_variables_(function)\n *\n * Note: contrary to various Github issues, Edge 16+ *does* correctly infer the name of Arrow Functions.\n * The variable declarator name inference issue only affects function expressions, so that's all we fix here.\n *\n * A Note on Minification: Terser undoes this transform *by default* unless `keep_fnames` is set to true.\n * There is by design - if Function.name is critical to your application, you must configure\n * your minifier to preserve function names.\n */\nvar _default = ({\n  types: t\n}) => ({\n  name: \"transform-edge-function-name\",\n  visitor: {\n    FunctionExpression: {\n      exit(path) {\n        if (!path.node.id && t.isIdentifier(path.parent.id)) {\n          const id = t.cloneNode(path.parent.id);\n          const binding = path.scope.getBinding(id.name); // if the binding gets reassigned anywhere, rename it\n\n          if (binding == null ? void 0 : binding.constantViolations.length) {\n            path.scope.rename(id.name);\n          }\n\n          path.node.id = id;\n        }\n      }\n\n    }\n  }\n});\n\nexports.default = _default;\nmodule.exports = exports.default;"],"mappings":"AAAA,YAAY;;AAEZA,OAAO,CAACC,UAAU,GAAG,IAAI;AACzBD,OAAO,CAACE,OAAO,GAAG,KAAK,CAAC;;AAExB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIC,QAAQ,GAAGA,CAAC;EACdC,KAAK,EAAEC;AACT,CAAC,MAAM;EACLC,IAAI,EAAE,8BAA8B;EACpCC,OAAO,EAAE;IACPC,kBAAkB,EAAE;MAClBC,IAAIA,CAACC,IAAI,EAAE;QACT,IAAI,CAACA,IAAI,CAACC,IAAI,CAACC,EAAE,IAAIP,CAAC,CAACQ,YAAY,CAACH,IAAI,CAACI,MAAM,CAACF,EAAE,CAAC,EAAE;UACnD,MAAMA,EAAE,GAAGP,CAAC,CAACU,SAAS,CAACL,IAAI,CAACI,MAAM,CAACF,EAAE,CAAC;UACtC,MAAMI,OAAO,GAAGN,IAAI,CAACO,KAAK,CAACC,UAAU,CAACN,EAAE,CAACN,IAAI,CAAC,CAAC,CAAC;;UAEhD,IAAIU,OAAO,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,OAAO,CAACG,kBAAkB,CAACC,MAAM,EAAE;YAChEV,IAAI,CAACO,KAAK,CAACI,MAAM,CAACT,EAAE,CAACN,IAAI,CAAC;UAC5B;UAEAI,IAAI,CAACC,IAAI,CAACC,EAAE,GAAGA,EAAE;QACnB;MACF;IAEF;EACF;AACF,CAAC,CAAC;AAEFZ,OAAO,CAACE,OAAO,GAAGC,QAAQ;AAC1BmB,MAAM,CAACtB,OAAO,GAAGA,OAAO,CAACE,OAAO","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}