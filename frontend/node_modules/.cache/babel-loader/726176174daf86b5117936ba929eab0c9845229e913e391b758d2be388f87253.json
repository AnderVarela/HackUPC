{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MissingRefError = exports.ValidationError = exports.CodeGen = exports.Name = exports.nil = exports.stringify = exports.str = exports._ = exports.KeywordCxt = exports.Ajv2020 = void 0;\nconst core_1 = require(\"./core\");\nconst draft2020_1 = require(\"./vocabularies/draft2020\");\nconst discriminator_1 = require(\"./vocabularies/discriminator\");\nconst json_schema_2020_12_1 = require(\"./refs/json-schema-2020-12\");\nconst META_SCHEMA_ID = \"https://json-schema.org/draft/2020-12/schema\";\nclass Ajv2020 extends core_1.default {\n  constructor(opts = {}) {\n    super({\n      ...opts,\n      dynamicRef: true,\n      next: true,\n      unevaluated: true\n    });\n  }\n  _addVocabularies() {\n    super._addVocabularies();\n    draft2020_1.default.forEach(v => this.addVocabulary(v));\n    if (this.opts.discriminator) this.addKeyword(discriminator_1.default);\n  }\n  _addDefaultMetaSchema() {\n    super._addDefaultMetaSchema();\n    const {\n      $data,\n      meta\n    } = this.opts;\n    if (!meta) return;\n    json_schema_2020_12_1.default.call(this, $data);\n    this.refs[\"http://json-schema.org/schema\"] = META_SCHEMA_ID;\n  }\n  defaultMeta() {\n    return this.opts.defaultMeta = super.defaultMeta() || (this.getSchema(META_SCHEMA_ID) ? META_SCHEMA_ID : undefined);\n  }\n}\nexports.Ajv2020 = Ajv2020;\nmodule.exports = exports = Ajv2020;\nmodule.exports.Ajv2020 = Ajv2020;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = Ajv2020;\nvar validate_1 = require(\"./compile/validate\");\nObject.defineProperty(exports, \"KeywordCxt\", {\n  enumerable: true,\n  get: function () {\n    return validate_1.KeywordCxt;\n  }\n});\nvar codegen_1 = require(\"./compile/codegen\");\nObject.defineProperty(exports, \"_\", {\n  enumerable: true,\n  get: function () {\n    return codegen_1._;\n  }\n});\nObject.defineProperty(exports, \"str\", {\n  enumerable: true,\n  get: function () {\n    return codegen_1.str;\n  }\n});\nObject.defineProperty(exports, \"stringify\", {\n  enumerable: true,\n  get: function () {\n    return codegen_1.stringify;\n  }\n});\nObject.defineProperty(exports, \"nil\", {\n  enumerable: true,\n  get: function () {\n    return codegen_1.nil;\n  }\n});\nObject.defineProperty(exports, \"Name\", {\n  enumerable: true,\n  get: function () {\n    return codegen_1.Name;\n  }\n});\nObject.defineProperty(exports, \"CodeGen\", {\n  enumerable: true,\n  get: function () {\n    return codegen_1.CodeGen;\n  }\n});\nvar validation_error_1 = require(\"./runtime/validation_error\");\nObject.defineProperty(exports, \"ValidationError\", {\n  enumerable: true,\n  get: function () {\n    return validation_error_1.default;\n  }\n});\nvar ref_error_1 = require(\"./compile/ref_error\");\nObject.defineProperty(exports, \"MissingRefError\", {\n  enumerable: true,\n  get: function () {\n    return ref_error_1.default;\n  }\n});","map":{"version":3,"names":["core_1","require","draft2020_1","discriminator_1","json_schema_2020_12_1","META_SCHEMA_ID","Ajv2020","default","constructor","opts","dynamicRef","next","unevaluated","_addVocabularies","forEach","v","addVocabulary","discriminator","addKeyword","_addDefaultMetaSchema","$data","meta","call","refs","defaultMeta","getSchema","undefined","exports","module","Object","defineProperty","value","validate_1","enumerable","get","KeywordCxt","codegen_1","_","str","stringify","nil","Name","CodeGen","validation_error_1","ref_error_1"],"sources":["C:\\Users\\chest\\OneDrive\\Documentos\\GitHub\\HackUPC\\frontend\\node_modules\\css-minimizer-webpack-plugin\\node_modules\\ajv\\lib\\2020.ts"],"sourcesContent":["import type {AnySchemaObject} from \"./types\"\nimport AjvCore, {Options} from \"./core\"\n\nimport draft2020Vocabularies from \"./vocabularies/draft2020\"\nimport discriminator from \"./vocabularies/discriminator\"\nimport addMetaSchema2020 from \"./refs/json-schema-2020-12\"\n\nconst META_SCHEMA_ID = \"https://json-schema.org/draft/2020-12/schema\"\n\nexport class Ajv2020 extends AjvCore {\n  constructor(opts: Options = {}) {\n    super({\n      ...opts,\n      dynamicRef: true,\n      next: true,\n      unevaluated: true,\n    })\n  }\n\n  _addVocabularies(): void {\n    super._addVocabularies()\n    draft2020Vocabularies.forEach((v) => this.addVocabulary(v))\n    if (this.opts.discriminator) this.addKeyword(discriminator)\n  }\n\n  _addDefaultMetaSchema(): void {\n    super._addDefaultMetaSchema()\n    const {$data, meta} = this.opts\n    if (!meta) return\n    addMetaSchema2020.call(this, $data)\n    this.refs[\"http://json-schema.org/schema\"] = META_SCHEMA_ID\n  }\n\n  defaultMeta(): string | AnySchemaObject | undefined {\n    return (this.opts.defaultMeta =\n      super.defaultMeta() || (this.getSchema(META_SCHEMA_ID) ? META_SCHEMA_ID : undefined))\n  }\n}\n\nmodule.exports = exports = Ajv2020\nmodule.exports.Ajv2020 = Ajv2020\nObject.defineProperty(exports, \"__esModule\", {value: true})\n\nexport default Ajv2020\n\nexport {\n  Format,\n  FormatDefinition,\n  AsyncFormatDefinition,\n  KeywordDefinition,\n  KeywordErrorDefinition,\n  CodeKeywordDefinition,\n  MacroKeywordDefinition,\n  FuncKeywordDefinition,\n  Vocabulary,\n  Schema,\n  SchemaObject,\n  AnySchemaObject,\n  AsyncSchema,\n  AnySchema,\n  ValidateFunction,\n  AsyncValidateFunction,\n  ErrorObject,\n  ErrorNoParams,\n} from \"./types\"\n\nexport {Plugin, Options, CodeOptions, InstanceOptions, Logger, ErrorsTextOptions} from \"./core\"\nexport {SchemaCxt, SchemaObjCxt} from \"./compile\"\nexport {KeywordCxt} from \"./compile/validate\"\nexport {DefinedError} from \"./vocabularies/errors\"\nexport {JSONType} from \"./compile/rules\"\nexport {JSONSchemaType} from \"./types/json-schema\"\nexport {_, str, stringify, nil, Name, Code, CodeGen, CodeGenOptions} from \"./compile/codegen\"\nexport {default as ValidationError} from \"./runtime/validation_error\"\nexport {default as MissingRefError} from \"./compile/ref_error\"\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}