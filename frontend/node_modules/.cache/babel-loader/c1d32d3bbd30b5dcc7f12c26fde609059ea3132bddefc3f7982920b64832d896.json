{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.computeAriaBusy = computeAriaBusy;\nexports.computeAriaChecked = computeAriaChecked;\nexports.computeAriaCurrent = computeAriaCurrent;\nexports.computeAriaExpanded = computeAriaExpanded;\nexports.computeAriaPressed = computeAriaPressed;\nexports.computeAriaSelected = computeAriaSelected;\nexports.computeAriaValueMax = computeAriaValueMax;\nexports.computeAriaValueMin = computeAriaValueMin;\nexports.computeAriaValueNow = computeAriaValueNow;\nexports.computeAriaValueText = computeAriaValueText;\nexports.computeHeadingLevel = computeHeadingLevel;\nexports.getImplicitAriaRoles = getImplicitAriaRoles;\nexports.getRoles = getRoles;\nexports.isInaccessible = isInaccessible;\nexports.isSubtreeInaccessible = isSubtreeInaccessible;\nexports.logRoles = void 0;\nexports.prettyRoles = prettyRoles;\nvar _ariaQuery = require(\"aria-query\");\nvar _domAccessibilityApi = require(\"dom-accessibility-api\");\nvar _prettyDom = require(\"./pretty-dom\");\nvar _config = require(\"./config\");\nconst elementRoleList = buildElementRoleList(_ariaQuery.elementRoles);\n\n/**\n * @param {Element} element -\n * @returns {boolean} - `true` if `element` and its subtree are inaccessible\n */\nfunction isSubtreeInaccessible(element) {\n  if (element.hidden === true) {\n    return true;\n  }\n  if (element.getAttribute('aria-hidden') === 'true') {\n    return true;\n  }\n  const window = element.ownerDocument.defaultView;\n  if (window.getComputedStyle(element).display === 'none') {\n    return true;\n  }\n  return false;\n}\n\n/**\n * Partial implementation https://www.w3.org/TR/wai-aria-1.2/#tree_exclusion\n * which should only be used for elements with a non-presentational role i.e.\n * `role=\"none\"` and `role=\"presentation\"` will not be excluded.\n *\n * Implements aria-hidden semantics (i.e. parent overrides child)\n * Ignores \"Child Presentational: True\" characteristics\n *\n * @param {Element} element -\n * @param {object} [options] -\n * @param {function (element: Element): boolean} options.isSubtreeInaccessible -\n * can be used to return cached results from previous isSubtreeInaccessible calls\n * @returns {boolean} true if excluded, otherwise false\n */\nfunction isInaccessible(element, options = {}) {\n  const {\n    isSubtreeInaccessible: isSubtreeInaccessibleImpl = isSubtreeInaccessible\n  } = options;\n  const window = element.ownerDocument.defaultView;\n  // since visibility is inherited we can exit early\n  if (window.getComputedStyle(element).visibility === 'hidden') {\n    return true;\n  }\n  let currentElement = element;\n  while (currentElement) {\n    if (isSubtreeInaccessibleImpl(currentElement)) {\n      return true;\n    }\n    currentElement = currentElement.parentElement;\n  }\n  return false;\n}\nfunction getImplicitAriaRoles(currentNode) {\n  // eslint bug here:\n  // eslint-disable-next-line no-unused-vars\n  for (const {\n    match,\n    roles\n  } of elementRoleList) {\n    if (match(currentNode)) {\n      return [...roles];\n    }\n  }\n  return [];\n}\nfunction buildElementRoleList(elementRolesMap) {\n  function makeElementSelector({\n    name,\n    attributes\n  }) {\n    return `${name}${attributes.map(({\n      name: attributeName,\n      value,\n      constraints = []\n    }) => {\n      const shouldNotExist = constraints.indexOf('undefined') !== -1;\n      const shouldBeNonEmpty = constraints.indexOf('set') !== -1;\n      const hasExplicitValue = typeof value !== 'undefined';\n      if (hasExplicitValue) {\n        return `[${attributeName}=\"${value}\"]`;\n      } else if (shouldNotExist) {\n        return `:not([${attributeName}])`;\n      } else if (shouldBeNonEmpty) {\n        return `[${attributeName}]:not([${attributeName}=\"\"])`;\n      }\n      return `[${attributeName}]`;\n    }).join('')}`;\n  }\n  function getSelectorSpecificity({\n    attributes = []\n  }) {\n    return attributes.length;\n  }\n  function bySelectorSpecificity({\n    specificity: leftSpecificity\n  }, {\n    specificity: rightSpecificity\n  }) {\n    return rightSpecificity - leftSpecificity;\n  }\n  function match(element) {\n    let {\n      attributes = []\n    } = element;\n\n    // https://github.com/testing-library/dom-testing-library/issues/814\n    const typeTextIndex = attributes.findIndex(attribute => attribute.value && attribute.name === 'type' && attribute.value === 'text');\n    if (typeTextIndex >= 0) {\n      // not using splice to not mutate the attributes array\n      attributes = [...attributes.slice(0, typeTextIndex), ...attributes.slice(typeTextIndex + 1)];\n    }\n    const selector = makeElementSelector({\n      ...element,\n      attributes\n    });\n    return node => {\n      if (typeTextIndex >= 0 && node.type !== 'text') {\n        return false;\n      }\n      return node.matches(selector);\n    };\n  }\n  let result = [];\n\n  // eslint bug here:\n  // eslint-disable-next-line no-unused-vars\n  for (const [element, roles] of elementRolesMap.entries()) {\n    result = [...result, {\n      match: match(element),\n      roles: Array.from(roles),\n      specificity: getSelectorSpecificity(element)\n    }];\n  }\n  return result.sort(bySelectorSpecificity);\n}\nfunction getRoles(container, {\n  hidden = false\n} = {}) {\n  function flattenDOM(node) {\n    return [node, ...Array.from(node.children).reduce((acc, child) => [...acc, ...flattenDOM(child)], [])];\n  }\n  return flattenDOM(container).filter(element => {\n    return hidden === false ? isInaccessible(element) === false : true;\n  }).reduce((acc, node) => {\n    let roles = [];\n    // TODO: This violates html-aria which does not allow any role on every element\n    if (node.hasAttribute('role')) {\n      roles = node.getAttribute('role').split(' ').slice(0, 1);\n    } else {\n      roles = getImplicitAriaRoles(node);\n    }\n    return roles.reduce((rolesAcc, role) => Array.isArray(rolesAcc[role]) ? {\n      ...rolesAcc,\n      [role]: [...rolesAcc[role], node]\n    } : {\n      ...rolesAcc,\n      [role]: [node]\n    }, acc);\n  }, {});\n}\nfunction prettyRoles(dom, {\n  hidden,\n  includeDescription\n}) {\n  const roles = getRoles(dom, {\n    hidden\n  });\n  // We prefer to skip generic role, we don't recommend it\n  return Object.entries(roles).filter(([role]) => role !== 'generic').map(([role, elements]) => {\n    const delimiterBar = '-'.repeat(50);\n    const elementsString = elements.map(el => {\n      const nameString = `Name \"${(0, _domAccessibilityApi.computeAccessibleName)(el, {\n        computedStyleSupportsPseudoElements: (0, _config.getConfig)().computedStyleSupportsPseudoElements\n      })}\":\\n`;\n      const domString = (0, _prettyDom.prettyDOM)(el.cloneNode(false));\n      if (includeDescription) {\n        const descriptionString = `Description \"${(0, _domAccessibilityApi.computeAccessibleDescription)(el, {\n          computedStyleSupportsPseudoElements: (0, _config.getConfig)().computedStyleSupportsPseudoElements\n        })}\":\\n`;\n        return `${nameString}${descriptionString}${domString}`;\n      }\n      return `${nameString}${domString}`;\n    }).join('\\n\\n');\n    return `${role}:\\n\\n${elementsString}\\n\\n${delimiterBar}`;\n  }).join('\\n');\n}\nconst logRoles = (dom, {\n  hidden = false\n} = {}) => console.log(prettyRoles(dom, {\n  hidden\n}));\n\n/**\n * @param {Element} element -\n * @returns {boolean | undefined} - false/true if (not)selected, undefined if not selectable\n */\nexports.logRoles = logRoles;\nfunction computeAriaSelected(element) {\n  // implicit value from html-aam mappings: https://www.w3.org/TR/html-aam-1.0/#html-attribute-state-and-property-mappings\n  // https://www.w3.org/TR/html-aam-1.0/#details-id-97\n  if (element.tagName === 'OPTION') {\n    return element.selected;\n  }\n\n  // explicit value\n  return checkBooleanAttribute(element, 'aria-selected');\n}\n\n/**\n * @param {Element} element -\n * @returns {boolean} -\n */\nfunction computeAriaBusy(element) {\n  // https://www.w3.org/TR/wai-aria-1.1/#aria-busy\n  return element.getAttribute('aria-busy') === 'true';\n}\n\n/**\n * @param {Element} element -\n * @returns {boolean | undefined} - false/true if (not)checked, undefined if not checked-able\n */\nfunction computeAriaChecked(element) {\n  // implicit value from html-aam mappings: https://www.w3.org/TR/html-aam-1.0/#html-attribute-state-and-property-mappings\n  // https://www.w3.org/TR/html-aam-1.0/#details-id-56\n  // https://www.w3.org/TR/html-aam-1.0/#details-id-67\n  if ('indeterminate' in element && element.indeterminate) {\n    return undefined;\n  }\n  if ('checked' in element) {\n    return element.checked;\n  }\n\n  // explicit value\n  return checkBooleanAttribute(element, 'aria-checked');\n}\n\n/**\n * @param {Element} element -\n * @returns {boolean | undefined} - false/true if (not)pressed, undefined if not press-able\n */\nfunction computeAriaPressed(element) {\n  // https://www.w3.org/TR/wai-aria-1.1/#aria-pressed\n  return checkBooleanAttribute(element, 'aria-pressed');\n}\n\n/**\n * @param {Element} element -\n * @returns {boolean | string | null} -\n */\nfunction computeAriaCurrent(element) {\n  // https://www.w3.org/TR/wai-aria-1.1/#aria-current\n  return checkBooleanAttribute(element, 'aria-current') ?? element.getAttribute('aria-current') ?? false;\n}\n\n/**\n * @param {Element} element -\n * @returns {boolean | undefined} - false/true if (not)expanded, undefined if not expand-able\n */\nfunction computeAriaExpanded(element) {\n  // https://www.w3.org/TR/wai-aria-1.1/#aria-expanded\n  return checkBooleanAttribute(element, 'aria-expanded');\n}\nfunction checkBooleanAttribute(element, attribute) {\n  const attributeValue = element.getAttribute(attribute);\n  if (attributeValue === 'true') {\n    return true;\n  }\n  if (attributeValue === 'false') {\n    return false;\n  }\n  return undefined;\n}\n\n/**\n * @param {Element} element -\n * @returns {number | undefined} - number if implicit heading or aria-level present, otherwise undefined\n */\nfunction computeHeadingLevel(element) {\n  // https://w3c.github.io/html-aam/#el-h1-h6\n  // https://w3c.github.io/html-aam/#el-h1-h6\n  const implicitHeadingLevels = {\n    H1: 1,\n    H2: 2,\n    H3: 3,\n    H4: 4,\n    H5: 5,\n    H6: 6\n  };\n  // explicit aria-level value\n  // https://www.w3.org/TR/wai-aria-1.2/#aria-level\n  const ariaLevelAttribute = element.getAttribute('aria-level') && Number(element.getAttribute('aria-level'));\n  return ariaLevelAttribute || implicitHeadingLevels[element.tagName];\n}\n\n/**\n * @param {Element} element -\n * @returns {number | undefined} -\n */\nfunction computeAriaValueNow(element) {\n  const valueNow = element.getAttribute('aria-valuenow');\n  return valueNow === null ? undefined : +valueNow;\n}\n\n/**\n * @param {Element} element -\n * @returns {number | undefined} -\n */\nfunction computeAriaValueMax(element) {\n  const valueMax = element.getAttribute('aria-valuemax');\n  return valueMax === null ? undefined : +valueMax;\n}\n\n/**\n * @param {Element} element -\n * @returns {number | undefined} -\n */\nfunction computeAriaValueMin(element) {\n  const valueMin = element.getAttribute('aria-valuemin');\n  return valueMin === null ? undefined : +valueMin;\n}\n\n/**\n * @param {Element} element -\n * @returns {string | undefined} -\n */\nfunction computeAriaValueText(element) {\n  const valueText = element.getAttribute('aria-valuetext');\n  return valueText === null ? undefined : valueText;\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","computeAriaBusy","computeAriaChecked","computeAriaCurrent","computeAriaExpanded","computeAriaPressed","computeAriaSelected","computeAriaValueMax","computeAriaValueMin","computeAriaValueNow","computeAriaValueText","computeHeadingLevel","getImplicitAriaRoles","getRoles","isInaccessible","isSubtreeInaccessible","logRoles","prettyRoles","_ariaQuery","require","_domAccessibilityApi","_prettyDom","_config","elementRoleList","buildElementRoleList","elementRoles","element","hidden","getAttribute","window","ownerDocument","defaultView","getComputedStyle","display","options","isSubtreeInaccessibleImpl","visibility","currentElement","parentElement","currentNode","match","roles","elementRolesMap","makeElementSelector","name","attributes","map","attributeName","constraints","shouldNotExist","indexOf","shouldBeNonEmpty","hasExplicitValue","join","getSelectorSpecificity","length","bySelectorSpecificity","specificity","leftSpecificity","rightSpecificity","typeTextIndex","findIndex","attribute","slice","selector","node","type","matches","result","entries","Array","from","sort","container","flattenDOM","children","reduce","acc","child","filter","hasAttribute","split","rolesAcc","role","isArray","dom","includeDescription","elements","delimiterBar","repeat","elementsString","el","nameString","computeAccessibleName","computedStyleSupportsPseudoElements","getConfig","domString","prettyDOM","cloneNode","descriptionString","computeAccessibleDescription","console","log","tagName","selected","checkBooleanAttribute","indeterminate","undefined","checked","attributeValue","implicitHeadingLevels","H1","H2","H3","H4","H5","H6","ariaLevelAttribute","Number","valueNow","valueMax","valueMin","valueText"],"sources":["C:/Users/chest/OneDrive/Documentos/GitHub/HackUPC/frontend/node_modules/@testing-library/dom/dist/role-helpers.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.computeAriaBusy = computeAriaBusy;\nexports.computeAriaChecked = computeAriaChecked;\nexports.computeAriaCurrent = computeAriaCurrent;\nexports.computeAriaExpanded = computeAriaExpanded;\nexports.computeAriaPressed = computeAriaPressed;\nexports.computeAriaSelected = computeAriaSelected;\nexports.computeAriaValueMax = computeAriaValueMax;\nexports.computeAriaValueMin = computeAriaValueMin;\nexports.computeAriaValueNow = computeAriaValueNow;\nexports.computeAriaValueText = computeAriaValueText;\nexports.computeHeadingLevel = computeHeadingLevel;\nexports.getImplicitAriaRoles = getImplicitAriaRoles;\nexports.getRoles = getRoles;\nexports.isInaccessible = isInaccessible;\nexports.isSubtreeInaccessible = isSubtreeInaccessible;\nexports.logRoles = void 0;\nexports.prettyRoles = prettyRoles;\nvar _ariaQuery = require(\"aria-query\");\nvar _domAccessibilityApi = require(\"dom-accessibility-api\");\nvar _prettyDom = require(\"./pretty-dom\");\nvar _config = require(\"./config\");\nconst elementRoleList = buildElementRoleList(_ariaQuery.elementRoles);\n\n/**\n * @param {Element} element -\n * @returns {boolean} - `true` if `element` and its subtree are inaccessible\n */\nfunction isSubtreeInaccessible(element) {\n  if (element.hidden === true) {\n    return true;\n  }\n  if (element.getAttribute('aria-hidden') === 'true') {\n    return true;\n  }\n  const window = element.ownerDocument.defaultView;\n  if (window.getComputedStyle(element).display === 'none') {\n    return true;\n  }\n  return false;\n}\n\n/**\n * Partial implementation https://www.w3.org/TR/wai-aria-1.2/#tree_exclusion\n * which should only be used for elements with a non-presentational role i.e.\n * `role=\"none\"` and `role=\"presentation\"` will not be excluded.\n *\n * Implements aria-hidden semantics (i.e. parent overrides child)\n * Ignores \"Child Presentational: True\" characteristics\n *\n * @param {Element} element -\n * @param {object} [options] -\n * @param {function (element: Element): boolean} options.isSubtreeInaccessible -\n * can be used to return cached results from previous isSubtreeInaccessible calls\n * @returns {boolean} true if excluded, otherwise false\n */\nfunction isInaccessible(element, options = {}) {\n  const {\n    isSubtreeInaccessible: isSubtreeInaccessibleImpl = isSubtreeInaccessible\n  } = options;\n  const window = element.ownerDocument.defaultView;\n  // since visibility is inherited we can exit early\n  if (window.getComputedStyle(element).visibility === 'hidden') {\n    return true;\n  }\n  let currentElement = element;\n  while (currentElement) {\n    if (isSubtreeInaccessibleImpl(currentElement)) {\n      return true;\n    }\n    currentElement = currentElement.parentElement;\n  }\n  return false;\n}\nfunction getImplicitAriaRoles(currentNode) {\n  // eslint bug here:\n  // eslint-disable-next-line no-unused-vars\n  for (const {\n    match,\n    roles\n  } of elementRoleList) {\n    if (match(currentNode)) {\n      return [...roles];\n    }\n  }\n  return [];\n}\nfunction buildElementRoleList(elementRolesMap) {\n  function makeElementSelector({\n    name,\n    attributes\n  }) {\n    return `${name}${attributes.map(({\n      name: attributeName,\n      value,\n      constraints = []\n    }) => {\n      const shouldNotExist = constraints.indexOf('undefined') !== -1;\n      const shouldBeNonEmpty = constraints.indexOf('set') !== -1;\n      const hasExplicitValue = typeof value !== 'undefined';\n      if (hasExplicitValue) {\n        return `[${attributeName}=\"${value}\"]`;\n      } else if (shouldNotExist) {\n        return `:not([${attributeName}])`;\n      } else if (shouldBeNonEmpty) {\n        return `[${attributeName}]:not([${attributeName}=\"\"])`;\n      }\n      return `[${attributeName}]`;\n    }).join('')}`;\n  }\n  function getSelectorSpecificity({\n    attributes = []\n  }) {\n    return attributes.length;\n  }\n  function bySelectorSpecificity({\n    specificity: leftSpecificity\n  }, {\n    specificity: rightSpecificity\n  }) {\n    return rightSpecificity - leftSpecificity;\n  }\n  function match(element) {\n    let {\n      attributes = []\n    } = element;\n\n    // https://github.com/testing-library/dom-testing-library/issues/814\n    const typeTextIndex = attributes.findIndex(attribute => attribute.value && attribute.name === 'type' && attribute.value === 'text');\n    if (typeTextIndex >= 0) {\n      // not using splice to not mutate the attributes array\n      attributes = [...attributes.slice(0, typeTextIndex), ...attributes.slice(typeTextIndex + 1)];\n    }\n    const selector = makeElementSelector({\n      ...element,\n      attributes\n    });\n    return node => {\n      if (typeTextIndex >= 0 && node.type !== 'text') {\n        return false;\n      }\n      return node.matches(selector);\n    };\n  }\n  let result = [];\n\n  // eslint bug here:\n  // eslint-disable-next-line no-unused-vars\n  for (const [element, roles] of elementRolesMap.entries()) {\n    result = [...result, {\n      match: match(element),\n      roles: Array.from(roles),\n      specificity: getSelectorSpecificity(element)\n    }];\n  }\n  return result.sort(bySelectorSpecificity);\n}\nfunction getRoles(container, {\n  hidden = false\n} = {}) {\n  function flattenDOM(node) {\n    return [node, ...Array.from(node.children).reduce((acc, child) => [...acc, ...flattenDOM(child)], [])];\n  }\n  return flattenDOM(container).filter(element => {\n    return hidden === false ? isInaccessible(element) === false : true;\n  }).reduce((acc, node) => {\n    let roles = [];\n    // TODO: This violates html-aria which does not allow any role on every element\n    if (node.hasAttribute('role')) {\n      roles = node.getAttribute('role').split(' ').slice(0, 1);\n    } else {\n      roles = getImplicitAriaRoles(node);\n    }\n    return roles.reduce((rolesAcc, role) => Array.isArray(rolesAcc[role]) ? {\n      ...rolesAcc,\n      [role]: [...rolesAcc[role], node]\n    } : {\n      ...rolesAcc,\n      [role]: [node]\n    }, acc);\n  }, {});\n}\nfunction prettyRoles(dom, {\n  hidden,\n  includeDescription\n}) {\n  const roles = getRoles(dom, {\n    hidden\n  });\n  // We prefer to skip generic role, we don't recommend it\n  return Object.entries(roles).filter(([role]) => role !== 'generic').map(([role, elements]) => {\n    const delimiterBar = '-'.repeat(50);\n    const elementsString = elements.map(el => {\n      const nameString = `Name \"${(0, _domAccessibilityApi.computeAccessibleName)(el, {\n        computedStyleSupportsPseudoElements: (0, _config.getConfig)().computedStyleSupportsPseudoElements\n      })}\":\\n`;\n      const domString = (0, _prettyDom.prettyDOM)(el.cloneNode(false));\n      if (includeDescription) {\n        const descriptionString = `Description \"${(0, _domAccessibilityApi.computeAccessibleDescription)(el, {\n          computedStyleSupportsPseudoElements: (0, _config.getConfig)().computedStyleSupportsPseudoElements\n        })}\":\\n`;\n        return `${nameString}${descriptionString}${domString}`;\n      }\n      return `${nameString}${domString}`;\n    }).join('\\n\\n');\n    return `${role}:\\n\\n${elementsString}\\n\\n${delimiterBar}`;\n  }).join('\\n');\n}\nconst logRoles = (dom, {\n  hidden = false\n} = {}) => console.log(prettyRoles(dom, {\n  hidden\n}));\n\n/**\n * @param {Element} element -\n * @returns {boolean | undefined} - false/true if (not)selected, undefined if not selectable\n */\nexports.logRoles = logRoles;\nfunction computeAriaSelected(element) {\n  // implicit value from html-aam mappings: https://www.w3.org/TR/html-aam-1.0/#html-attribute-state-and-property-mappings\n  // https://www.w3.org/TR/html-aam-1.0/#details-id-97\n  if (element.tagName === 'OPTION') {\n    return element.selected;\n  }\n\n  // explicit value\n  return checkBooleanAttribute(element, 'aria-selected');\n}\n\n/**\n * @param {Element} element -\n * @returns {boolean} -\n */\nfunction computeAriaBusy(element) {\n  // https://www.w3.org/TR/wai-aria-1.1/#aria-busy\n  return element.getAttribute('aria-busy') === 'true';\n}\n\n/**\n * @param {Element} element -\n * @returns {boolean | undefined} - false/true if (not)checked, undefined if not checked-able\n */\nfunction computeAriaChecked(element) {\n  // implicit value from html-aam mappings: https://www.w3.org/TR/html-aam-1.0/#html-attribute-state-and-property-mappings\n  // https://www.w3.org/TR/html-aam-1.0/#details-id-56\n  // https://www.w3.org/TR/html-aam-1.0/#details-id-67\n  if ('indeterminate' in element && element.indeterminate) {\n    return undefined;\n  }\n  if ('checked' in element) {\n    return element.checked;\n  }\n\n  // explicit value\n  return checkBooleanAttribute(element, 'aria-checked');\n}\n\n/**\n * @param {Element} element -\n * @returns {boolean | undefined} - false/true if (not)pressed, undefined if not press-able\n */\nfunction computeAriaPressed(element) {\n  // https://www.w3.org/TR/wai-aria-1.1/#aria-pressed\n  return checkBooleanAttribute(element, 'aria-pressed');\n}\n\n/**\n * @param {Element} element -\n * @returns {boolean | string | null} -\n */\nfunction computeAriaCurrent(element) {\n  // https://www.w3.org/TR/wai-aria-1.1/#aria-current\n  return checkBooleanAttribute(element, 'aria-current') ?? element.getAttribute('aria-current') ?? false;\n}\n\n/**\n * @param {Element} element -\n * @returns {boolean | undefined} - false/true if (not)expanded, undefined if not expand-able\n */\nfunction computeAriaExpanded(element) {\n  // https://www.w3.org/TR/wai-aria-1.1/#aria-expanded\n  return checkBooleanAttribute(element, 'aria-expanded');\n}\nfunction checkBooleanAttribute(element, attribute) {\n  const attributeValue = element.getAttribute(attribute);\n  if (attributeValue === 'true') {\n    return true;\n  }\n  if (attributeValue === 'false') {\n    return false;\n  }\n  return undefined;\n}\n\n/**\n * @param {Element} element -\n * @returns {number | undefined} - number if implicit heading or aria-level present, otherwise undefined\n */\nfunction computeHeadingLevel(element) {\n  // https://w3c.github.io/html-aam/#el-h1-h6\n  // https://w3c.github.io/html-aam/#el-h1-h6\n  const implicitHeadingLevels = {\n    H1: 1,\n    H2: 2,\n    H3: 3,\n    H4: 4,\n    H5: 5,\n    H6: 6\n  };\n  // explicit aria-level value\n  // https://www.w3.org/TR/wai-aria-1.2/#aria-level\n  const ariaLevelAttribute = element.getAttribute('aria-level') && Number(element.getAttribute('aria-level'));\n  return ariaLevelAttribute || implicitHeadingLevels[element.tagName];\n}\n\n/**\n * @param {Element} element -\n * @returns {number | undefined} -\n */\nfunction computeAriaValueNow(element) {\n  const valueNow = element.getAttribute('aria-valuenow');\n  return valueNow === null ? undefined : +valueNow;\n}\n\n/**\n * @param {Element} element -\n * @returns {number | undefined} -\n */\nfunction computeAriaValueMax(element) {\n  const valueMax = element.getAttribute('aria-valuemax');\n  return valueMax === null ? undefined : +valueMax;\n}\n\n/**\n * @param {Element} element -\n * @returns {number | undefined} -\n */\nfunction computeAriaValueMin(element) {\n  const valueMin = element.getAttribute('aria-valuemin');\n  return valueMin === null ? undefined : +valueMin;\n}\n\n/**\n * @param {Element} element -\n * @returns {string | undefined} -\n */\nfunction computeAriaValueText(element) {\n  const valueText = element.getAttribute('aria-valuetext');\n  return valueText === null ? undefined : valueText;\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}