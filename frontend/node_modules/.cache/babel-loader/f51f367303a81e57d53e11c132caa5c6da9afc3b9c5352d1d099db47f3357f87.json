{"ast":null,"code":"'use strict';\n\nvar aCallable = require('../internals/a-callable');\nvar anObject = require('../internals/an-object');\nvar call = require('../internals/function-call');\nvar toIntegerOrInfinity = require('../internals/to-integer-or-infinity');\nvar getIteratorDirect = require('../internals/get-iterator-direct');\nvar INVALID_SIZE = 'Invalid size';\nvar $RangeError = RangeError;\nvar $TypeError = TypeError;\nvar max = Math.max;\nvar SetRecord = function (set, intSize) {\n  this.set = set;\n  this.size = max(intSize, 0);\n  this.has = aCallable(set.has);\n  this.keys = aCallable(set.keys);\n};\nSetRecord.prototype = {\n  getIterator: function () {\n    return getIteratorDirect(anObject(call(this.keys, this.set)));\n  },\n  includes: function (it) {\n    return call(this.has, this.set, it);\n  }\n};\n\n// `GetSetRecord` abstract operation\n// https://tc39.es/proposal-set-methods/#sec-getsetrecord\nmodule.exports = function (obj) {\n  anObject(obj);\n  var numSize = +obj.size;\n  // NOTE: If size is undefined, then numSize will be NaN\n  // eslint-disable-next-line no-self-compare -- NaN check\n  if (numSize !== numSize) throw new $TypeError(INVALID_SIZE);\n  var intSize = toIntegerOrInfinity(numSize);\n  if (intSize < 0) throw new $RangeError(INVALID_SIZE);\n  return new SetRecord(obj, intSize);\n};","map":{"version":3,"names":["aCallable","require","anObject","call","toIntegerOrInfinity","getIteratorDirect","INVALID_SIZE","$RangeError","RangeError","$TypeError","TypeError","max","Math","SetRecord","set","intSize","size","has","keys","prototype","getIterator","includes","it","module","exports","obj","numSize"],"sources":["C:/Users/chest/OneDrive/Documentos/GitHub/HackUPC/frontend/node_modules/core-js-pure/internals/get-set-record.js"],"sourcesContent":["'use strict';\nvar aCallable = require('../internals/a-callable');\nvar anObject = require('../internals/an-object');\nvar call = require('../internals/function-call');\nvar toIntegerOrInfinity = require('../internals/to-integer-or-infinity');\nvar getIteratorDirect = require('../internals/get-iterator-direct');\n\nvar INVALID_SIZE = 'Invalid size';\nvar $RangeError = RangeError;\nvar $TypeError = TypeError;\nvar max = Math.max;\n\nvar SetRecord = function (set, intSize) {\n  this.set = set;\n  this.size = max(intSize, 0);\n  this.has = aCallable(set.has);\n  this.keys = aCallable(set.keys);\n};\n\nSetRecord.prototype = {\n  getIterator: function () {\n    return getIteratorDirect(anObject(call(this.keys, this.set)));\n  },\n  includes: function (it) {\n    return call(this.has, this.set, it);\n  }\n};\n\n// `GetSetRecord` abstract operation\n// https://tc39.es/proposal-set-methods/#sec-getsetrecord\nmodule.exports = function (obj) {\n  anObject(obj);\n  var numSize = +obj.size;\n  // NOTE: If size is undefined, then numSize will be NaN\n  // eslint-disable-next-line no-self-compare -- NaN check\n  if (numSize !== numSize) throw new $TypeError(INVALID_SIZE);\n  var intSize = toIntegerOrInfinity(numSize);\n  if (intSize < 0) throw new $RangeError(INVALID_SIZE);\n  return new SetRecord(obj, intSize);\n};\n"],"mappings":"AAAA,YAAY;;AACZ,IAAIA,SAAS,GAAGC,OAAO,CAAC,yBAAyB,CAAC;AAClD,IAAIC,QAAQ,GAAGD,OAAO,CAAC,wBAAwB,CAAC;AAChD,IAAIE,IAAI,GAAGF,OAAO,CAAC,4BAA4B,CAAC;AAChD,IAAIG,mBAAmB,GAAGH,OAAO,CAAC,qCAAqC,CAAC;AACxE,IAAII,iBAAiB,GAAGJ,OAAO,CAAC,kCAAkC,CAAC;AAEnE,IAAIK,YAAY,GAAG,cAAc;AACjC,IAAIC,WAAW,GAAGC,UAAU;AAC5B,IAAIC,UAAU,GAAGC,SAAS;AAC1B,IAAIC,GAAG,GAAGC,IAAI,CAACD,GAAG;AAElB,IAAIE,SAAS,GAAG,SAAAA,CAAUC,GAAG,EAAEC,OAAO,EAAE;EACtC,IAAI,CAACD,GAAG,GAAGA,GAAG;EACd,IAAI,CAACE,IAAI,GAAGL,GAAG,CAACI,OAAO,EAAE,CAAC,CAAC;EAC3B,IAAI,CAACE,GAAG,GAAGjB,SAAS,CAACc,GAAG,CAACG,GAAG,CAAC;EAC7B,IAAI,CAACC,IAAI,GAAGlB,SAAS,CAACc,GAAG,CAACI,IAAI,CAAC;AACjC,CAAC;AAEDL,SAAS,CAACM,SAAS,GAAG;EACpBC,WAAW,EAAE,SAAAA,CAAA,EAAY;IACvB,OAAOf,iBAAiB,CAACH,QAAQ,CAACC,IAAI,CAAC,IAAI,CAACe,IAAI,EAAE,IAAI,CAACJ,GAAG,CAAC,CAAC,CAAC;EAC/D,CAAC;EACDO,QAAQ,EAAE,SAAAA,CAAUC,EAAE,EAAE;IACtB,OAAOnB,IAAI,CAAC,IAAI,CAACc,GAAG,EAAE,IAAI,CAACH,GAAG,EAAEQ,EAAE,CAAC;EACrC;AACF,CAAC;;AAED;AACA;AACAC,MAAM,CAACC,OAAO,GAAG,UAAUC,GAAG,EAAE;EAC9BvB,QAAQ,CAACuB,GAAG,CAAC;EACb,IAAIC,OAAO,GAAG,CAACD,GAAG,CAACT,IAAI;EACvB;EACA;EACA,IAAIU,OAAO,KAAKA,OAAO,EAAE,MAAM,IAAIjB,UAAU,CAACH,YAAY,CAAC;EAC3D,IAAIS,OAAO,GAAGX,mBAAmB,CAACsB,OAAO,CAAC;EAC1C,IAAIX,OAAO,GAAG,CAAC,EAAE,MAAM,IAAIR,WAAW,CAACD,YAAY,CAAC;EACpD,OAAO,IAAIO,SAAS,CAACY,GAAG,EAAEV,OAAO,CAAC;AACpC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}