{"ast":null,"code":"\"use strict\";\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n  return _typeof(obj);\n}\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.decode = decode;\nvar decoder = _interopRequireWildcard(require(\"./decoder\"));\nvar t = _interopRequireWildcard(require(\"@webassemblyjs/ast\"));\nfunction _getRequireWildcardCache(nodeInterop) {\n  if (typeof WeakMap !== \"function\") return null;\n  var cacheBabelInterop = new WeakMap();\n  var cacheNodeInterop = new WeakMap();\n  return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n  })(nodeInterop);\n}\nfunction _interopRequireWildcard(obj, nodeInterop) {\n  if (!nodeInterop && obj && obj.__esModule) {\n    return obj;\n  }\n  if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") {\n    return {\n      \"default\": obj\n    };\n  }\n  var cache = _getRequireWildcardCache(nodeInterop);\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n  for (var key in obj) {\n    if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n  newObj[\"default\"] = obj;\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n  return newObj;\n}\n\n/**\n * TODO(sven): I added initial props, but we should rather fix\n * https://github.com/xtuc/webassemblyjs/issues/405\n */\nvar defaultDecoderOpts = {\n  dump: false,\n  ignoreCodeSection: false,\n  ignoreDataSection: false,\n  ignoreCustomNameSection: false\n}; // traverses the AST, locating function name metadata, which is then\n// used to update index-based identifiers with function names\n\nfunction restoreFunctionNames(ast) {\n  var functionNames = [];\n  t.traverse(ast, {\n    FunctionNameMetadata: function FunctionNameMetadata(_ref) {\n      var node = _ref.node;\n      functionNames.push({\n        name: node.value,\n        index: node.index\n      });\n    }\n  });\n  if (functionNames.length === 0) {\n    return;\n  }\n  t.traverse(ast, {\n    Func: function (_Func) {\n      function Func(_x) {\n        return _Func.apply(this, arguments);\n      }\n      Func.toString = function () {\n        return _Func.toString();\n      };\n      return Func;\n    }(function (_ref2) {\n      var node = _ref2.node;\n      // $FlowIgnore\n      var nodeName = node.name;\n      var indexBasedFunctionName = nodeName.value;\n      var index = Number(indexBasedFunctionName.replace(\"func_\", \"\"));\n      var functionName = functionNames.find(function (f) {\n        return f.index === index;\n      });\n      if (functionName) {\n        var oldValue = nodeName.value;\n        nodeName.value = functionName.name; // $FlowIgnore\n\n        nodeName.numeric = oldValue; // $FlowIgnore\n\n        delete nodeName.raw;\n      }\n    }),\n    // Also update the reference in the export\n    ModuleExport: function (_ModuleExport) {\n      function ModuleExport(_x2) {\n        return _ModuleExport.apply(this, arguments);\n      }\n      ModuleExport.toString = function () {\n        return _ModuleExport.toString();\n      };\n      return ModuleExport;\n    }(function (_ref3) {\n      var node = _ref3.node;\n      if (node.descr.exportType === \"Func\") {\n        // $FlowIgnore\n        var nodeName = node.descr.id;\n        var index = nodeName.value;\n        var functionName = functionNames.find(function (f) {\n          return f.index === index;\n        });\n        if (functionName) {\n          node.descr.id = t.identifier(functionName.name);\n        }\n      }\n    }),\n    ModuleImport: function (_ModuleImport) {\n      function ModuleImport(_x3) {\n        return _ModuleImport.apply(this, arguments);\n      }\n      ModuleImport.toString = function () {\n        return _ModuleImport.toString();\n      };\n      return ModuleImport;\n    }(function (_ref4) {\n      var node = _ref4.node;\n      if (node.descr.type === \"FuncImportDescr\") {\n        // $FlowIgnore\n        var indexBasedFunctionName = node.descr.id;\n        var index = Number(indexBasedFunctionName.replace(\"func_\", \"\"));\n        var functionName = functionNames.find(function (f) {\n          return f.index === index;\n        });\n        if (functionName) {\n          // $FlowIgnore\n          node.descr.id = t.identifier(functionName.name);\n        }\n      }\n    }),\n    CallInstruction: function (_CallInstruction) {\n      function CallInstruction(_x4) {\n        return _CallInstruction.apply(this, arguments);\n      }\n      CallInstruction.toString = function () {\n        return _CallInstruction.toString();\n      };\n      return CallInstruction;\n    }(function (nodePath) {\n      var node = nodePath.node;\n      var index = node.index.value;\n      var functionName = functionNames.find(function (f) {\n        return f.index === index;\n      });\n      if (functionName) {\n        var oldValue = node.index;\n        node.index = t.identifier(functionName.name);\n        node.numeric = oldValue; // $FlowIgnore\n\n        delete node.raw;\n      }\n    })\n  });\n}\nfunction restoreLocalNames(ast) {\n  var localNames = [];\n  t.traverse(ast, {\n    LocalNameMetadata: function LocalNameMetadata(_ref5) {\n      var node = _ref5.node;\n      localNames.push({\n        name: node.value,\n        localIndex: node.localIndex,\n        functionIndex: node.functionIndex\n      });\n    }\n  });\n  if (localNames.length === 0) {\n    return;\n  }\n  t.traverse(ast, {\n    Func: function (_Func2) {\n      function Func(_x5) {\n        return _Func2.apply(this, arguments);\n      }\n      Func.toString = function () {\n        return _Func2.toString();\n      };\n      return Func;\n    }(function (_ref6) {\n      var node = _ref6.node;\n      var signature = node.signature;\n      if (signature.type !== \"Signature\") {\n        return;\n      } // $FlowIgnore\n\n      var nodeName = node.name;\n      var indexBasedFunctionName = nodeName.value;\n      var functionIndex = Number(indexBasedFunctionName.replace(\"func_\", \"\"));\n      signature.params.forEach(function (param, paramIndex) {\n        var paramName = localNames.find(function (f) {\n          return f.localIndex === paramIndex && f.functionIndex === functionIndex;\n        });\n        if (paramName && paramName.name !== \"\") {\n          param.id = paramName.name;\n        }\n      });\n    })\n  });\n}\nfunction restoreModuleName(ast) {\n  t.traverse(ast, {\n    ModuleNameMetadata: function (_ModuleNameMetadata) {\n      function ModuleNameMetadata(_x6) {\n        return _ModuleNameMetadata.apply(this, arguments);\n      }\n      ModuleNameMetadata.toString = function () {\n        return _ModuleNameMetadata.toString();\n      };\n      return ModuleNameMetadata;\n    }(function (moduleNameMetadataPath) {\n      // update module\n      t.traverse(ast, {\n        Module: function (_Module) {\n          function Module(_x7) {\n            return _Module.apply(this, arguments);\n          }\n          Module.toString = function () {\n            return _Module.toString();\n          };\n          return Module;\n        }(function (_ref7) {\n          var node = _ref7.node;\n          var name = moduleNameMetadataPath.node.value; // compatiblity with wast-parser\n\n          if (name === \"\") {\n            name = null;\n          }\n          node.id = name;\n        })\n      });\n    })\n  });\n}\nfunction decode(buf, customOpts) {\n  var opts = Object.assign({}, defaultDecoderOpts, customOpts);\n  var ast = decoder.decode(buf, opts);\n  if (opts.ignoreCustomNameSection === false) {\n    restoreFunctionNames(ast);\n    restoreLocalNames(ast);\n    restoreModuleName(ast);\n  }\n  return ast;\n}","map":{"version":3,"names":["_typeof","obj","Symbol","iterator","constructor","prototype","Object","defineProperty","exports","value","decode","decoder","_interopRequireWildcard","require","t","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","__esModule","cache","has","get","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","key","hasOwnProperty","call","desc","set","defaultDecoderOpts","dump","ignoreCodeSection","ignoreDataSection","ignoreCustomNameSection","restoreFunctionNames","ast","functionNames","traverse","FunctionNameMetadata","_ref","node","push","name","index","length","Func","_Func","_x","apply","arguments","toString","_ref2","nodeName","indexBasedFunctionName","Number","replace","functionName","find","f","oldValue","numeric","raw","ModuleExport","_ModuleExport","_x2","_ref3","descr","exportType","id","identifier","ModuleImport","_ModuleImport","_x3","_ref4","type","CallInstruction","_CallInstruction","_x4","nodePath","restoreLocalNames","localNames","LocalNameMetadata","_ref5","localIndex","functionIndex","_Func2","_x5","_ref6","signature","params","forEach","param","paramIndex","paramName","restoreModuleName","ModuleNameMetadata","_ModuleNameMetadata","_x6","moduleNameMetadataPath","Module","_Module","_x7","_ref7","buf","customOpts","opts","assign"],"sources":["C:/Users/chest/OneDrive/Documentos/GitHub/HackUPC/frontend/node_modules/@webassemblyjs/wasm-parser/lib/index.js"],"sourcesContent":["\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.decode = decode;\n\nvar decoder = _interopRequireWildcard(require(\"./decoder\"));\n\nvar t = _interopRequireWildcard(require(\"@webassemblyjs/ast\"));\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n/**\n * TODO(sven): I added initial props, but we should rather fix\n * https://github.com/xtuc/webassemblyjs/issues/405\n */\nvar defaultDecoderOpts = {\n  dump: false,\n  ignoreCodeSection: false,\n  ignoreDataSection: false,\n  ignoreCustomNameSection: false\n}; // traverses the AST, locating function name metadata, which is then\n// used to update index-based identifiers with function names\n\nfunction restoreFunctionNames(ast) {\n  var functionNames = [];\n  t.traverse(ast, {\n    FunctionNameMetadata: function FunctionNameMetadata(_ref) {\n      var node = _ref.node;\n      functionNames.push({\n        name: node.value,\n        index: node.index\n      });\n    }\n  });\n\n  if (functionNames.length === 0) {\n    return;\n  }\n\n  t.traverse(ast, {\n    Func: function (_Func) {\n      function Func(_x) {\n        return _Func.apply(this, arguments);\n      }\n\n      Func.toString = function () {\n        return _Func.toString();\n      };\n\n      return Func;\n    }(function (_ref2) {\n      var node = _ref2.node;\n      // $FlowIgnore\n      var nodeName = node.name;\n      var indexBasedFunctionName = nodeName.value;\n      var index = Number(indexBasedFunctionName.replace(\"func_\", \"\"));\n      var functionName = functionNames.find(function (f) {\n        return f.index === index;\n      });\n\n      if (functionName) {\n        var oldValue = nodeName.value;\n        nodeName.value = functionName.name; // $FlowIgnore\n\n        nodeName.numeric = oldValue; // $FlowIgnore\n\n        delete nodeName.raw;\n      }\n    }),\n    // Also update the reference in the export\n    ModuleExport: function (_ModuleExport) {\n      function ModuleExport(_x2) {\n        return _ModuleExport.apply(this, arguments);\n      }\n\n      ModuleExport.toString = function () {\n        return _ModuleExport.toString();\n      };\n\n      return ModuleExport;\n    }(function (_ref3) {\n      var node = _ref3.node;\n\n      if (node.descr.exportType === \"Func\") {\n        // $FlowIgnore\n        var nodeName = node.descr.id;\n        var index = nodeName.value;\n        var functionName = functionNames.find(function (f) {\n          return f.index === index;\n        });\n\n        if (functionName) {\n          node.descr.id = t.identifier(functionName.name);\n        }\n      }\n    }),\n    ModuleImport: function (_ModuleImport) {\n      function ModuleImport(_x3) {\n        return _ModuleImport.apply(this, arguments);\n      }\n\n      ModuleImport.toString = function () {\n        return _ModuleImport.toString();\n      };\n\n      return ModuleImport;\n    }(function (_ref4) {\n      var node = _ref4.node;\n\n      if (node.descr.type === \"FuncImportDescr\") {\n        // $FlowIgnore\n        var indexBasedFunctionName = node.descr.id;\n        var index = Number(indexBasedFunctionName.replace(\"func_\", \"\"));\n        var functionName = functionNames.find(function (f) {\n          return f.index === index;\n        });\n\n        if (functionName) {\n          // $FlowIgnore\n          node.descr.id = t.identifier(functionName.name);\n        }\n      }\n    }),\n    CallInstruction: function (_CallInstruction) {\n      function CallInstruction(_x4) {\n        return _CallInstruction.apply(this, arguments);\n      }\n\n      CallInstruction.toString = function () {\n        return _CallInstruction.toString();\n      };\n\n      return CallInstruction;\n    }(function (nodePath) {\n      var node = nodePath.node;\n      var index = node.index.value;\n      var functionName = functionNames.find(function (f) {\n        return f.index === index;\n      });\n\n      if (functionName) {\n        var oldValue = node.index;\n        node.index = t.identifier(functionName.name);\n        node.numeric = oldValue; // $FlowIgnore\n\n        delete node.raw;\n      }\n    })\n  });\n}\n\nfunction restoreLocalNames(ast) {\n  var localNames = [];\n  t.traverse(ast, {\n    LocalNameMetadata: function LocalNameMetadata(_ref5) {\n      var node = _ref5.node;\n      localNames.push({\n        name: node.value,\n        localIndex: node.localIndex,\n        functionIndex: node.functionIndex\n      });\n    }\n  });\n\n  if (localNames.length === 0) {\n    return;\n  }\n\n  t.traverse(ast, {\n    Func: function (_Func2) {\n      function Func(_x5) {\n        return _Func2.apply(this, arguments);\n      }\n\n      Func.toString = function () {\n        return _Func2.toString();\n      };\n\n      return Func;\n    }(function (_ref6) {\n      var node = _ref6.node;\n      var signature = node.signature;\n\n      if (signature.type !== \"Signature\") {\n        return;\n      } // $FlowIgnore\n\n\n      var nodeName = node.name;\n      var indexBasedFunctionName = nodeName.value;\n      var functionIndex = Number(indexBasedFunctionName.replace(\"func_\", \"\"));\n      signature.params.forEach(function (param, paramIndex) {\n        var paramName = localNames.find(function (f) {\n          return f.localIndex === paramIndex && f.functionIndex === functionIndex;\n        });\n\n        if (paramName && paramName.name !== \"\") {\n          param.id = paramName.name;\n        }\n      });\n    })\n  });\n}\n\nfunction restoreModuleName(ast) {\n  t.traverse(ast, {\n    ModuleNameMetadata: function (_ModuleNameMetadata) {\n      function ModuleNameMetadata(_x6) {\n        return _ModuleNameMetadata.apply(this, arguments);\n      }\n\n      ModuleNameMetadata.toString = function () {\n        return _ModuleNameMetadata.toString();\n      };\n\n      return ModuleNameMetadata;\n    }(function (moduleNameMetadataPath) {\n      // update module\n      t.traverse(ast, {\n        Module: function (_Module) {\n          function Module(_x7) {\n            return _Module.apply(this, arguments);\n          }\n\n          Module.toString = function () {\n            return _Module.toString();\n          };\n\n          return Module;\n        }(function (_ref7) {\n          var node = _ref7.node;\n          var name = moduleNameMetadataPath.node.value; // compatiblity with wast-parser\n\n          if (name === \"\") {\n            name = null;\n          }\n\n          node.id = name;\n        })\n      });\n    })\n  });\n}\n\nfunction decode(buf, customOpts) {\n  var opts = Object.assign({}, defaultDecoderOpts, customOpts);\n  var ast = decoder.decode(buf, opts);\n\n  if (opts.ignoreCustomNameSection === false) {\n    restoreFunctionNames(ast);\n    restoreLocalNames(ast);\n    restoreModuleName(ast);\n  }\n\n  return ast;\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}