{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _helperCompilationTargets = require(\"@babel/helper-compilation-targets\");\nvar _helperPluginUtils = require(\"@babel/helper-plugin-utils\");\nvar _helperFunctionName = require(\"@babel/helper-function-name\");\nvar _default = exports.default = (0, _helperPluginUtils.declare)(api => {\n  api.assertVersion(7);\n  const supportUnicodeId = !(0, _helperCompilationTargets.isRequired)(\"transform-unicode-escapes\", api.targets());\n  return {\n    name: \"transform-function-name\",\n    visitor: {\n      FunctionExpression: {\n        exit(path) {\n          if (path.key !== \"value\" && !path.parentPath.isObjectProperty()) {\n            const replacement = (0, _helperFunctionName.default)(path);\n            if (replacement) path.replaceWith(replacement);\n          }\n        }\n      },\n      ObjectProperty(path) {\n        const value = path.get(\"value\");\n        if (value.isFunction()) {\n          const newNode = (0, _helperFunctionName.default)(value, false, supportUnicodeId);\n          if (newNode) value.replaceWith(newNode);\n        }\n      }\n    }\n  };\n});","map":{"version":3,"names":["_helperCompilationTargets","require","_helperPluginUtils","_helperFunctionName","_default","exports","default","declare","api","assertVersion","supportUnicodeId","isRequired","targets","name","visitor","FunctionExpression","exit","path","key","parentPath","isObjectProperty","replacement","replaceWith","ObjectProperty","value","get","isFunction","newNode"],"sources":["C:\\Users\\chest\\OneDrive\\Documentos\\GitHub\\HackUPC\\frontend\\node_modules\\@babel\\plugin-transform-function-name\\src\\index.ts"],"sourcesContent":["import { isRequired } from \"@babel/helper-compilation-targets\";\nimport { declare } from \"@babel/helper-plugin-utils\";\nimport nameFunction from \"@babel/helper-function-name\";\n\nexport default declare(api => {\n  api.assertVersion(REQUIRED_VERSION(7));\n  const supportUnicodeId = !isRequired(\n    \"transform-unicode-escapes\",\n    api.targets(),\n  );\n\n  return {\n    name: \"transform-function-name\",\n\n    visitor: {\n      FunctionExpression: {\n        exit(path) {\n          if (path.key !== \"value\" && !path.parentPath.isObjectProperty()) {\n            const replacement = nameFunction(path);\n            if (replacement) path.replaceWith(replacement);\n          }\n        },\n      },\n\n      ObjectProperty(path) {\n        const value = path.get(\"value\");\n        if (value.isFunction()) {\n          const newNode = nameFunction(\n            // @ts-expect-error Fixme: should check ArrowFunctionExpression\n            value,\n            false,\n            supportUnicodeId,\n          );\n          if (newNode) value.replaceWith(newNode);\n        }\n      },\n    },\n  };\n});\n"],"mappings":";;;;;;AAAA,IAAAA,yBAAA,GAAAC,OAAA;AACA,IAAAC,kBAAA,GAAAD,OAAA;AACA,IAAAE,mBAAA,GAAAF,OAAA;AAAuD,IAAAG,QAAA,GAAAC,OAAA,CAAAC,OAAA,GAExC,IAAAJ,kBAAA,CAAAK,OAAO,EAACC,GAAG,IAAI;EAC5BA,GAAG,CAACC,aAAa,CAAkB,CAAE,CAAC;EACtC,MAAMC,gBAAgB,GAAG,CAAC,IAAAV,yBAAA,CAAAW,UAAU,EAClC,2BAA2B,EAC3BH,GAAG,CAACI,OAAO,CAAC,CACd,CAAC;EAED,OAAO;IACLC,IAAI,EAAE,yBAAyB;IAE/BC,OAAO,EAAE;MACPC,kBAAkB,EAAE;QAClBC,IAAIA,CAACC,IAAI,EAAE;UACT,IAAIA,IAAI,CAACC,GAAG,KAAK,OAAO,IAAI,CAACD,IAAI,CAACE,UAAU,CAACC,gBAAgB,CAAC,CAAC,EAAE;YAC/D,MAAMC,WAAW,GAAG,IAAAlB,mBAAA,CAAAG,OAAY,EAACW,IAAI,CAAC;YACtC,IAAII,WAAW,EAAEJ,IAAI,CAACK,WAAW,CAACD,WAAW,CAAC;UAChD;QACF;MACF,CAAC;MAEDE,cAAcA,CAACN,IAAI,EAAE;QACnB,MAAMO,KAAK,GAAGP,IAAI,CAACQ,GAAG,CAAC,OAAO,CAAC;QAC/B,IAAID,KAAK,CAACE,UAAU,CAAC,CAAC,EAAE;UACtB,MAAMC,OAAO,GAAG,IAAAxB,mBAAA,CAAAG,OAAY,EAE1BkB,KAAK,EACL,KAAK,EACLd,gBACF,CAAC;UACD,IAAIiB,OAAO,EAAEH,KAAK,CAACF,WAAW,CAACK,OAAO,CAAC;QACzC;MACF;IACF;EACF,CAAC;AACH,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}