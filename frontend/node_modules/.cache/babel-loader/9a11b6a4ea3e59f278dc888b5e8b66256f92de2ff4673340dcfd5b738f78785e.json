{"ast":null,"code":"import { timeData } from './time-data.generated';\n/**\n * Returns the best matching date time pattern if a date time skeleton\n * pattern is provided with a locale. Follows the Unicode specification:\n * https://www.unicode.org/reports/tr35/tr35-dates.html#table-mapping-requested-time-skeletons-to-patterns\n * @param skeleton date time skeleton pattern that possibly includes j, J or C\n * @param locale\n */\nexport function getBestPattern(skeleton, locale) {\n  var skeletonCopy = '';\n  for (var patternPos = 0; patternPos < skeleton.length; patternPos++) {\n    var patternChar = skeleton.charAt(patternPos);\n    if (patternChar === 'j') {\n      var extraLength = 0;\n      while (patternPos + 1 < skeleton.length && skeleton.charAt(patternPos + 1) === patternChar) {\n        extraLength++;\n        patternPos++;\n      }\n      var hourLen = 1 + (extraLength & 1);\n      var dayPeriodLen = extraLength < 2 ? 1 : 3 + (extraLength >> 1);\n      var dayPeriodChar = 'a';\n      var hourChar = getDefaultHourSymbolFromLocale(locale);\n      if (hourChar == 'H' || hourChar == 'k') {\n        dayPeriodLen = 0;\n      }\n      while (dayPeriodLen-- > 0) {\n        skeletonCopy += dayPeriodChar;\n      }\n      while (hourLen-- > 0) {\n        skeletonCopy = hourChar + skeletonCopy;\n      }\n    } else if (patternChar === 'J') {\n      skeletonCopy += 'H';\n    } else {\n      skeletonCopy += patternChar;\n    }\n  }\n  return skeletonCopy;\n}\n/**\n * Maps the [hour cycle type](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/Locale/hourCycle)\n * of the given `locale` to the corresponding time pattern.\n * @param locale\n */\nfunction getDefaultHourSymbolFromLocale(locale) {\n  var hourCycle = locale.hourCycle;\n  if (hourCycle === undefined &&\n  // @ts-ignore hourCycle(s) is not identified yet\n  locale.hourCycles &&\n  // @ts-ignore\n  locale.hourCycles.length) {\n    // @ts-ignore\n    hourCycle = locale.hourCycles[0];\n  }\n  if (hourCycle) {\n    switch (hourCycle) {\n      case 'h24':\n        return 'k';\n      case 'h23':\n        return 'H';\n      case 'h12':\n        return 'h';\n      case 'h11':\n        return 'K';\n      default:\n        throw new Error('Invalid hourCycle');\n    }\n  }\n  // TODO: Once hourCycle is fully supported remove the following with data generation\n  var languageTag = locale.language;\n  var regionTag;\n  if (languageTag !== 'root') {\n    regionTag = locale.maximize().region;\n  }\n  var hourCycles = timeData[regionTag || ''] || timeData[languageTag || ''] || timeData[\"\".concat(languageTag, \"-001\")] || timeData['001'];\n  return hourCycles[0];\n}","map":{"version":3,"names":["timeData","getBestPattern","skeleton","locale","skeletonCopy","patternPos","length","patternChar","charAt","extraLength","hourLen","dayPeriodLen","dayPeriodChar","hourChar","getDefaultHourSymbolFromLocale","hourCycle","undefined","hourCycles","Error","languageTag","language","regionTag","maximize","region","concat"],"sources":["C:/Users/chest/OneDrive/Documentos/GitHub/HackUPC/frontend/node_modules/@formatjs/icu-messageformat-parser/lib/date-time-pattern-generator.js"],"sourcesContent":["import { timeData } from './time-data.generated';\n/**\n * Returns the best matching date time pattern if a date time skeleton\n * pattern is provided with a locale. Follows the Unicode specification:\n * https://www.unicode.org/reports/tr35/tr35-dates.html#table-mapping-requested-time-skeletons-to-patterns\n * @param skeleton date time skeleton pattern that possibly includes j, J or C\n * @param locale\n */\nexport function getBestPattern(skeleton, locale) {\n    var skeletonCopy = '';\n    for (var patternPos = 0; patternPos < skeleton.length; patternPos++) {\n        var patternChar = skeleton.charAt(patternPos);\n        if (patternChar === 'j') {\n            var extraLength = 0;\n            while (patternPos + 1 < skeleton.length &&\n                skeleton.charAt(patternPos + 1) === patternChar) {\n                extraLength++;\n                patternPos++;\n            }\n            var hourLen = 1 + (extraLength & 1);\n            var dayPeriodLen = extraLength < 2 ? 1 : 3 + (extraLength >> 1);\n            var dayPeriodChar = 'a';\n            var hourChar = getDefaultHourSymbolFromLocale(locale);\n            if (hourChar == 'H' || hourChar == 'k') {\n                dayPeriodLen = 0;\n            }\n            while (dayPeriodLen-- > 0) {\n                skeletonCopy += dayPeriodChar;\n            }\n            while (hourLen-- > 0) {\n                skeletonCopy = hourChar + skeletonCopy;\n            }\n        }\n        else if (patternChar === 'J') {\n            skeletonCopy += 'H';\n        }\n        else {\n            skeletonCopy += patternChar;\n        }\n    }\n    return skeletonCopy;\n}\n/**\n * Maps the [hour cycle type](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/Locale/hourCycle)\n * of the given `locale` to the corresponding time pattern.\n * @param locale\n */\nfunction getDefaultHourSymbolFromLocale(locale) {\n    var hourCycle = locale.hourCycle;\n    if (hourCycle === undefined &&\n        // @ts-ignore hourCycle(s) is not identified yet\n        locale.hourCycles &&\n        // @ts-ignore\n        locale.hourCycles.length) {\n        // @ts-ignore\n        hourCycle = locale.hourCycles[0];\n    }\n    if (hourCycle) {\n        switch (hourCycle) {\n            case 'h24':\n                return 'k';\n            case 'h23':\n                return 'H';\n            case 'h12':\n                return 'h';\n            case 'h11':\n                return 'K';\n            default:\n                throw new Error('Invalid hourCycle');\n        }\n    }\n    // TODO: Once hourCycle is fully supported remove the following with data generation\n    var languageTag = locale.language;\n    var regionTag;\n    if (languageTag !== 'root') {\n        regionTag = locale.maximize().region;\n    }\n    var hourCycles = timeData[regionTag || ''] ||\n        timeData[languageTag || ''] ||\n        timeData[\"\".concat(languageTag, \"-001\")] ||\n        timeData['001'];\n    return hourCycles[0];\n}\n"],"mappings":"AAAA,SAASA,QAAQ,QAAQ,uBAAuB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,cAAcA,CAACC,QAAQ,EAAEC,MAAM,EAAE;EAC7C,IAAIC,YAAY,GAAG,EAAE;EACrB,KAAK,IAAIC,UAAU,GAAG,CAAC,EAAEA,UAAU,GAAGH,QAAQ,CAACI,MAAM,EAAED,UAAU,EAAE,EAAE;IACjE,IAAIE,WAAW,GAAGL,QAAQ,CAACM,MAAM,CAACH,UAAU,CAAC;IAC7C,IAAIE,WAAW,KAAK,GAAG,EAAE;MACrB,IAAIE,WAAW,GAAG,CAAC;MACnB,OAAOJ,UAAU,GAAG,CAAC,GAAGH,QAAQ,CAACI,MAAM,IACnCJ,QAAQ,CAACM,MAAM,CAACH,UAAU,GAAG,CAAC,CAAC,KAAKE,WAAW,EAAE;QACjDE,WAAW,EAAE;QACbJ,UAAU,EAAE;MAChB;MACA,IAAIK,OAAO,GAAG,CAAC,IAAID,WAAW,GAAG,CAAC,CAAC;MACnC,IAAIE,YAAY,GAAGF,WAAW,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,IAAIA,WAAW,IAAI,CAAC,CAAC;MAC/D,IAAIG,aAAa,GAAG,GAAG;MACvB,IAAIC,QAAQ,GAAGC,8BAA8B,CAACX,MAAM,CAAC;MACrD,IAAIU,QAAQ,IAAI,GAAG,IAAIA,QAAQ,IAAI,GAAG,EAAE;QACpCF,YAAY,GAAG,CAAC;MACpB;MACA,OAAOA,YAAY,EAAE,GAAG,CAAC,EAAE;QACvBP,YAAY,IAAIQ,aAAa;MACjC;MACA,OAAOF,OAAO,EAAE,GAAG,CAAC,EAAE;QAClBN,YAAY,GAAGS,QAAQ,GAAGT,YAAY;MAC1C;IACJ,CAAC,MACI,IAAIG,WAAW,KAAK,GAAG,EAAE;MAC1BH,YAAY,IAAI,GAAG;IACvB,CAAC,MACI;MACDA,YAAY,IAAIG,WAAW;IAC/B;EACJ;EACA,OAAOH,YAAY;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,SAASU,8BAA8BA,CAACX,MAAM,EAAE;EAC5C,IAAIY,SAAS,GAAGZ,MAAM,CAACY,SAAS;EAChC,IAAIA,SAAS,KAAKC,SAAS;EACvB;EACAb,MAAM,CAACc,UAAU;EACjB;EACAd,MAAM,CAACc,UAAU,CAACX,MAAM,EAAE;IAC1B;IACAS,SAAS,GAAGZ,MAAM,CAACc,UAAU,CAAC,CAAC,CAAC;EACpC;EACA,IAAIF,SAAS,EAAE;IACX,QAAQA,SAAS;MACb,KAAK,KAAK;QACN,OAAO,GAAG;MACd,KAAK,KAAK;QACN,OAAO,GAAG;MACd,KAAK,KAAK;QACN,OAAO,GAAG;MACd,KAAK,KAAK;QACN,OAAO,GAAG;MACd;QACI,MAAM,IAAIG,KAAK,CAAC,mBAAmB,CAAC;IAC5C;EACJ;EACA;EACA,IAAIC,WAAW,GAAGhB,MAAM,CAACiB,QAAQ;EACjC,IAAIC,SAAS;EACb,IAAIF,WAAW,KAAK,MAAM,EAAE;IACxBE,SAAS,GAAGlB,MAAM,CAACmB,QAAQ,CAAC,CAAC,CAACC,MAAM;EACxC;EACA,IAAIN,UAAU,GAAGjB,QAAQ,CAACqB,SAAS,IAAI,EAAE,CAAC,IACtCrB,QAAQ,CAACmB,WAAW,IAAI,EAAE,CAAC,IAC3BnB,QAAQ,CAAC,EAAE,CAACwB,MAAM,CAACL,WAAW,EAAE,MAAM,CAAC,CAAC,IACxCnB,QAAQ,CAAC,KAAK,CAAC;EACnB,OAAOiB,UAAU,CAAC,CAAC,CAAC;AACxB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}