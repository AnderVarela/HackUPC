{"ast":null,"code":"'use strict';\n\nmodule.exports = function defFunc(ajv) {\n  var transform = {\n    trimLeft: function (value) {\n      return value.replace(/^[\\s]+/, '');\n    },\n    trimRight: function (value) {\n      return value.replace(/[\\s]+$/, '');\n    },\n    trim: function (value) {\n      return value.trim();\n    },\n    toLowerCase: function (value) {\n      return value.toLowerCase();\n    },\n    toUpperCase: function (value) {\n      return value.toUpperCase();\n    },\n    toEnumCase: function (value, cfg) {\n      return cfg.hash[makeHashTableKey(value)] || value;\n    }\n  };\n  defFunc.definition = {\n    type: 'string',\n    errors: false,\n    modifying: true,\n    valid: true,\n    compile: function (schema, parentSchema) {\n      var cfg;\n      if (schema.indexOf('toEnumCase') !== -1) {\n        // build hash table to enum values\n        cfg = {\n          hash: {}\n        };\n\n        // requires `enum` in schema\n        if (!parentSchema.enum) throw new Error('Missing enum. To use `transform:[\"toEnumCase\"]`, `enum:[...]` is required.');\n        for (var i = parentSchema.enum.length; i--; i) {\n          var v = parentSchema.enum[i];\n          if (typeof v !== 'string') continue;\n          var k = makeHashTableKey(v);\n          // requires all `enum` values have unique keys\n          if (cfg.hash[k]) throw new Error('Invalid enum uniqueness. To use `transform:[\"toEnumCase\"]`, all values must be unique when case insensitive.');\n          cfg.hash[k] = v;\n        }\n      }\n      return function (data, dataPath, object, key) {\n        // skip if value only\n        if (!object) return;\n\n        // apply transform in order provided\n        for (var j = 0, l = schema.length; j < l; j++) data = transform[schema[j]](data, cfg);\n        object[key] = data;\n      };\n    },\n    metaSchema: {\n      type: 'array',\n      items: {\n        type: 'string',\n        enum: ['trimLeft', 'trimRight', 'trim', 'toLowerCase', 'toUpperCase', 'toEnumCase']\n      }\n    }\n  };\n  ajv.addKeyword('transform', defFunc.definition);\n  return ajv;\n  function makeHashTableKey(value) {\n    return value.toLowerCase();\n  }\n};","map":{"version":3,"names":["module","exports","defFunc","ajv","transform","trimLeft","value","replace","trimRight","trim","toLowerCase","toUpperCase","toEnumCase","cfg","hash","makeHashTableKey","definition","type","errors","modifying","valid","compile","schema","parentSchema","indexOf","enum","Error","i","length","v","k","data","dataPath","object","key","j","l","metaSchema","items","addKeyword"],"sources":["C:/Users/chest/OneDrive/Documentos/GitHub/HackUPC/frontend/node_modules/ajv-keywords/keywords/transform.js"],"sourcesContent":["'use strict';\n\nmodule.exports = function defFunc (ajv) {\n  var transform = {\n    trimLeft: function (value) {\n      return value.replace(/^[\\s]+/, '');\n    },\n    trimRight: function (value) {\n      return value.replace(/[\\s]+$/, '');\n    },\n    trim: function (value) {\n      return value.trim();\n    },\n    toLowerCase: function (value) {\n      return value.toLowerCase();\n    },\n    toUpperCase: function (value) {\n      return value.toUpperCase();\n    },\n    toEnumCase: function (value, cfg) {\n      return cfg.hash[makeHashTableKey(value)] || value;\n    }\n  };\n\n  defFunc.definition = {\n    type: 'string',\n    errors: false,\n    modifying: true,\n    valid: true,\n    compile: function (schema, parentSchema) {\n      var cfg;\n\n      if (schema.indexOf('toEnumCase') !== -1) {\n        // build hash table to enum values\n        cfg = {hash: {}};\n\n        // requires `enum` in schema\n        if (!parentSchema.enum)\n          throw new Error('Missing enum. To use `transform:[\"toEnumCase\"]`, `enum:[...]` is required.');\n        for (var i = parentSchema.enum.length; i--; i) {\n          var v = parentSchema.enum[i];\n          if (typeof v !== 'string') continue;\n          var k = makeHashTableKey(v);\n          // requires all `enum` values have unique keys\n          if (cfg.hash[k])\n            throw new Error('Invalid enum uniqueness. To use `transform:[\"toEnumCase\"]`, all values must be unique when case insensitive.');\n          cfg.hash[k] = v;\n        }\n      }\n\n      return function (data, dataPath, object, key) {\n        // skip if value only\n        if (!object) return;\n\n        // apply transform in order provided\n        for (var j = 0, l = schema.length; j < l; j++)\n          data = transform[schema[j]](data, cfg);\n\n        object[key] = data;\n      };\n    },\n    metaSchema: {\n      type: 'array',\n      items: {\n        type: 'string',\n        enum: [\n          'trimLeft', 'trimRight', 'trim',\n          'toLowerCase', 'toUpperCase', 'toEnumCase'\n        ]\n      }\n    }\n  };\n\n  ajv.addKeyword('transform', defFunc.definition);\n  return ajv;\n\n  function makeHashTableKey (value) {\n    return value.toLowerCase();\n  }\n};\n"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,OAAO,GAAG,SAASC,OAAOA,CAAEC,GAAG,EAAE;EACtC,IAAIC,SAAS,GAAG;IACdC,QAAQ,EAAE,SAAAA,CAAUC,KAAK,EAAE;MACzB,OAAOA,KAAK,CAACC,OAAO,CAAC,QAAQ,EAAE,EAAE,CAAC;IACpC,CAAC;IACDC,SAAS,EAAE,SAAAA,CAAUF,KAAK,EAAE;MAC1B,OAAOA,KAAK,CAACC,OAAO,CAAC,QAAQ,EAAE,EAAE,CAAC;IACpC,CAAC;IACDE,IAAI,EAAE,SAAAA,CAAUH,KAAK,EAAE;MACrB,OAAOA,KAAK,CAACG,IAAI,CAAC,CAAC;IACrB,CAAC;IACDC,WAAW,EAAE,SAAAA,CAAUJ,KAAK,EAAE;MAC5B,OAAOA,KAAK,CAACI,WAAW,CAAC,CAAC;IAC5B,CAAC;IACDC,WAAW,EAAE,SAAAA,CAAUL,KAAK,EAAE;MAC5B,OAAOA,KAAK,CAACK,WAAW,CAAC,CAAC;IAC5B,CAAC;IACDC,UAAU,EAAE,SAAAA,CAAUN,KAAK,EAAEO,GAAG,EAAE;MAChC,OAAOA,GAAG,CAACC,IAAI,CAACC,gBAAgB,CAACT,KAAK,CAAC,CAAC,IAAIA,KAAK;IACnD;EACF,CAAC;EAEDJ,OAAO,CAACc,UAAU,GAAG;IACnBC,IAAI,EAAE,QAAQ;IACdC,MAAM,EAAE,KAAK;IACbC,SAAS,EAAE,IAAI;IACfC,KAAK,EAAE,IAAI;IACXC,OAAO,EAAE,SAAAA,CAAUC,MAAM,EAAEC,YAAY,EAAE;MACvC,IAAIV,GAAG;MAEP,IAAIS,MAAM,CAACE,OAAO,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,EAAE;QACvC;QACAX,GAAG,GAAG;UAACC,IAAI,EAAE,CAAC;QAAC,CAAC;;QAEhB;QACA,IAAI,CAACS,YAAY,CAACE,IAAI,EACpB,MAAM,IAAIC,KAAK,CAAC,4EAA4E,CAAC;QAC/F,KAAK,IAAIC,CAAC,GAAGJ,YAAY,CAACE,IAAI,CAACG,MAAM,EAAED,CAAC,EAAE,EAAEA,CAAC,EAAE;UAC7C,IAAIE,CAAC,GAAGN,YAAY,CAACE,IAAI,CAACE,CAAC,CAAC;UAC5B,IAAI,OAAOE,CAAC,KAAK,QAAQ,EAAE;UAC3B,IAAIC,CAAC,GAAGf,gBAAgB,CAACc,CAAC,CAAC;UAC3B;UACA,IAAIhB,GAAG,CAACC,IAAI,CAACgB,CAAC,CAAC,EACb,MAAM,IAAIJ,KAAK,CAAC,8GAA8G,CAAC;UACjIb,GAAG,CAACC,IAAI,CAACgB,CAAC,CAAC,GAAGD,CAAC;QACjB;MACF;MAEA,OAAO,UAAUE,IAAI,EAAEC,QAAQ,EAAEC,MAAM,EAAEC,GAAG,EAAE;QAC5C;QACA,IAAI,CAACD,MAAM,EAAE;;QAEb;QACA,KAAK,IAAIE,CAAC,GAAG,CAAC,EAAEC,CAAC,GAAGd,MAAM,CAACM,MAAM,EAAEO,CAAC,GAAGC,CAAC,EAAED,CAAC,EAAE,EAC3CJ,IAAI,GAAG3B,SAAS,CAACkB,MAAM,CAACa,CAAC,CAAC,CAAC,CAACJ,IAAI,EAAElB,GAAG,CAAC;QAExCoB,MAAM,CAACC,GAAG,CAAC,GAAGH,IAAI;MACpB,CAAC;IACH,CAAC;IACDM,UAAU,EAAE;MACVpB,IAAI,EAAE,OAAO;MACbqB,KAAK,EAAE;QACLrB,IAAI,EAAE,QAAQ;QACdQ,IAAI,EAAE,CACJ,UAAU,EAAE,WAAW,EAAE,MAAM,EAC/B,aAAa,EAAE,aAAa,EAAE,YAAY;MAE9C;IACF;EACF,CAAC;EAEDtB,GAAG,CAACoC,UAAU,CAAC,WAAW,EAAErC,OAAO,CAACc,UAAU,CAAC;EAC/C,OAAOb,GAAG;EAEV,SAASY,gBAAgBA,CAAET,KAAK,EAAE;IAChC,OAAOA,KAAK,CAACI,WAAW,CAAC,CAAC;EAC5B;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}