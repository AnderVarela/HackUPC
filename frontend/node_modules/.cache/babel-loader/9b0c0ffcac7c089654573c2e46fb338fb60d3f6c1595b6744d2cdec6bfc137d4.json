{"ast":null,"code":"'use strict';\n\n/**\n * Create a method that will retrieve the given field from an object where that field has a function value\n * @param {string} field The field to consider\n * @returns {function(object):function} A method that gets functions from the given field\n */\nfunction getFieldAsFn(field) {\n  return function getFromValue(value) {\n    return !!value && typeof value === 'object' && typeof value[field] === 'function' && value[field];\n  };\n}\nmodule.exports = getFieldAsFn;","map":{"version":3,"names":["getFieldAsFn","field","getFromValue","value","module","exports"],"sources":["C:/Users/chest/OneDrive/Documentos/GitHub/HackUPC/frontend/node_modules/adjust-sourcemap-loader/lib/process/get-field-as-fn.js"],"sourcesContent":["'use strict';\n\n/**\n * Create a method that will retrieve the given field from an object where that field has a function value\n * @param {string} field The field to consider\n * @returns {function(object):function} A method that gets functions from the given field\n */\nfunction getFieldAsFn(field) {\n  return function getFromValue(value) {\n    return !!value && (typeof value === 'object') && (typeof value[field] === 'function') && value[field];\n  };\n}\n\nmodule.exports = getFieldAsFn;"],"mappings":"AAAA,YAAY;;AAEZ;AACA;AACA;AACA;AACA;AACA,SAASA,YAAYA,CAACC,KAAK,EAAE;EAC3B,OAAO,SAASC,YAAYA,CAACC,KAAK,EAAE;IAClC,OAAO,CAAC,CAACA,KAAK,IAAK,OAAOA,KAAK,KAAK,QAAS,IAAK,OAAOA,KAAK,CAACF,KAAK,CAAC,KAAK,UAAW,IAAIE,KAAK,CAACF,KAAK,CAAC;EACvG,CAAC;AACH;AAEAG,MAAM,CAACC,OAAO,GAAGL,YAAY","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}