{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.makeEmptyAggregatedTestResult = exports.createEmptyTestResult = exports.buildFailureTestResult = exports.addResult = void 0;\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nconst makeEmptyAggregatedTestResult = () => ({\n  numFailedTestSuites: 0,\n  numFailedTests: 0,\n  numPassedTestSuites: 0,\n  numPassedTests: 0,\n  numPendingTestSuites: 0,\n  numPendingTests: 0,\n  numRuntimeErrorTestSuites: 0,\n  numTodoTests: 0,\n  numTotalTestSuites: 0,\n  numTotalTests: 0,\n  openHandles: [],\n  snapshot: {\n    added: 0,\n    didUpdate: false,\n    // is set only after the full run\n    failure: false,\n    filesAdded: 0,\n    // combines individual test results + removed files after the full run\n    filesRemoved: 0,\n    filesRemovedList: [],\n    filesUnmatched: 0,\n    filesUpdated: 0,\n    matched: 0,\n    total: 0,\n    unchecked: 0,\n    uncheckedKeysByFile: [],\n    unmatched: 0,\n    updated: 0\n  },\n  startTime: 0,\n  success: true,\n  testResults: [],\n  wasInterrupted: false\n});\nexports.makeEmptyAggregatedTestResult = makeEmptyAggregatedTestResult;\nconst buildFailureTestResult = (testPath, err) => ({\n  console: undefined,\n  displayName: undefined,\n  failureMessage: null,\n  leaks: false,\n  numFailingTests: 0,\n  numPassingTests: 0,\n  numPendingTests: 0,\n  numTodoTests: 0,\n  openHandles: [],\n  perfStats: {\n    end: 0,\n    runtime: 0,\n    slow: false,\n    start: 0\n  },\n  skipped: false,\n  snapshot: {\n    added: 0,\n    fileDeleted: false,\n    matched: 0,\n    unchecked: 0,\n    uncheckedKeys: [],\n    unmatched: 0,\n    updated: 0\n  },\n  testExecError: err,\n  testFilePath: testPath,\n  testResults: []\n}); // Add individual test result to an aggregated test result\n\nexports.buildFailureTestResult = buildFailureTestResult;\nconst addResult = (aggregatedResults, testResult) => {\n  // `todos` are new as of Jest 24, and not all runners return it.\n  // Set it to `0` to avoid `NaN`\n  if (!testResult.numTodoTests) {\n    testResult.numTodoTests = 0;\n  }\n  aggregatedResults.testResults.push(testResult);\n  aggregatedResults.numTotalTests += testResult.numPassingTests + testResult.numFailingTests + testResult.numPendingTests + testResult.numTodoTests;\n  aggregatedResults.numFailedTests += testResult.numFailingTests;\n  aggregatedResults.numPassedTests += testResult.numPassingTests;\n  aggregatedResults.numPendingTests += testResult.numPendingTests;\n  aggregatedResults.numTodoTests += testResult.numTodoTests;\n  if (testResult.testExecError) {\n    aggregatedResults.numRuntimeErrorTestSuites++;\n  }\n  if (testResult.skipped) {\n    aggregatedResults.numPendingTestSuites++;\n  } else if (testResult.numFailingTests > 0 || testResult.testExecError) {\n    aggregatedResults.numFailedTestSuites++;\n  } else {\n    aggregatedResults.numPassedTestSuites++;\n  } // Snapshot data\n\n  if (testResult.snapshot.added) {\n    aggregatedResults.snapshot.filesAdded++;\n  }\n  if (testResult.snapshot.fileDeleted) {\n    aggregatedResults.snapshot.filesRemoved++;\n  }\n  if (testResult.snapshot.unmatched) {\n    aggregatedResults.snapshot.filesUnmatched++;\n  }\n  if (testResult.snapshot.updated) {\n    aggregatedResults.snapshot.filesUpdated++;\n  }\n  aggregatedResults.snapshot.added += testResult.snapshot.added;\n  aggregatedResults.snapshot.matched += testResult.snapshot.matched;\n  aggregatedResults.snapshot.unchecked += testResult.snapshot.unchecked;\n  if (testResult.snapshot.uncheckedKeys && testResult.snapshot.uncheckedKeys.length > 0) {\n    aggregatedResults.snapshot.uncheckedKeysByFile.push({\n      filePath: testResult.testFilePath,\n      keys: testResult.snapshot.uncheckedKeys\n    });\n  }\n  aggregatedResults.snapshot.unmatched += testResult.snapshot.unmatched;\n  aggregatedResults.snapshot.updated += testResult.snapshot.updated;\n  aggregatedResults.snapshot.total += testResult.snapshot.added + testResult.snapshot.matched + testResult.snapshot.unmatched + testResult.snapshot.updated;\n};\nexports.addResult = addResult;\nconst createEmptyTestResult = () => ({\n  leaks: false,\n  // That's legacy code, just adding it as needed for typing\n  numFailingTests: 0,\n  numPassingTests: 0,\n  numPendingTests: 0,\n  numTodoTests: 0,\n  openHandles: [],\n  perfStats: {\n    end: 0,\n    runtime: 0,\n    slow: false,\n    start: 0\n  },\n  skipped: false,\n  snapshot: {\n    added: 0,\n    fileDeleted: false,\n    matched: 0,\n    unchecked: 0,\n    uncheckedKeys: [],\n    unmatched: 0,\n    updated: 0\n  },\n  testFilePath: '',\n  testResults: []\n});\nexports.createEmptyTestResult = createEmptyTestResult;","map":{"version":3,"names":["Object","defineProperty","exports","value","makeEmptyAggregatedTestResult","createEmptyTestResult","buildFailureTestResult","addResult","numFailedTestSuites","numFailedTests","numPassedTestSuites","numPassedTests","numPendingTestSuites","numPendingTests","numRuntimeErrorTestSuites","numTodoTests","numTotalTestSuites","numTotalTests","openHandles","snapshot","added","didUpdate","failure","filesAdded","filesRemoved","filesRemovedList","filesUnmatched","filesUpdated","matched","total","unchecked","uncheckedKeysByFile","unmatched","updated","startTime","success","testResults","wasInterrupted","testPath","err","console","undefined","displayName","failureMessage","leaks","numFailingTests","numPassingTests","perfStats","end","runtime","slow","start","skipped","fileDeleted","uncheckedKeys","testExecError","testFilePath","aggregatedResults","testResult","push","length","filePath","keys"],"sources":["C:/Users/chest/OneDrive/Documentos/GitHub/HackUPC/frontend/node_modules/@jest/test-result/build/helpers.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.makeEmptyAggregatedTestResult =\n  exports.createEmptyTestResult =\n  exports.buildFailureTestResult =\n  exports.addResult =\n    void 0;\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nconst makeEmptyAggregatedTestResult = () => ({\n  numFailedTestSuites: 0,\n  numFailedTests: 0,\n  numPassedTestSuites: 0,\n  numPassedTests: 0,\n  numPendingTestSuites: 0,\n  numPendingTests: 0,\n  numRuntimeErrorTestSuites: 0,\n  numTodoTests: 0,\n  numTotalTestSuites: 0,\n  numTotalTests: 0,\n  openHandles: [],\n  snapshot: {\n    added: 0,\n    didUpdate: false,\n    // is set only after the full run\n    failure: false,\n    filesAdded: 0,\n    // combines individual test results + removed files after the full run\n    filesRemoved: 0,\n    filesRemovedList: [],\n    filesUnmatched: 0,\n    filesUpdated: 0,\n    matched: 0,\n    total: 0,\n    unchecked: 0,\n    uncheckedKeysByFile: [],\n    unmatched: 0,\n    updated: 0\n  },\n  startTime: 0,\n  success: true,\n  testResults: [],\n  wasInterrupted: false\n});\n\nexports.makeEmptyAggregatedTestResult = makeEmptyAggregatedTestResult;\n\nconst buildFailureTestResult = (testPath, err) => ({\n  console: undefined,\n  displayName: undefined,\n  failureMessage: null,\n  leaks: false,\n  numFailingTests: 0,\n  numPassingTests: 0,\n  numPendingTests: 0,\n  numTodoTests: 0,\n  openHandles: [],\n  perfStats: {\n    end: 0,\n    runtime: 0,\n    slow: false,\n    start: 0\n  },\n  skipped: false,\n  snapshot: {\n    added: 0,\n    fileDeleted: false,\n    matched: 0,\n    unchecked: 0,\n    uncheckedKeys: [],\n    unmatched: 0,\n    updated: 0\n  },\n  testExecError: err,\n  testFilePath: testPath,\n  testResults: []\n}); // Add individual test result to an aggregated test result\n\nexports.buildFailureTestResult = buildFailureTestResult;\n\nconst addResult = (aggregatedResults, testResult) => {\n  // `todos` are new as of Jest 24, and not all runners return it.\n  // Set it to `0` to avoid `NaN`\n  if (!testResult.numTodoTests) {\n    testResult.numTodoTests = 0;\n  }\n\n  aggregatedResults.testResults.push(testResult);\n  aggregatedResults.numTotalTests +=\n    testResult.numPassingTests +\n    testResult.numFailingTests +\n    testResult.numPendingTests +\n    testResult.numTodoTests;\n  aggregatedResults.numFailedTests += testResult.numFailingTests;\n  aggregatedResults.numPassedTests += testResult.numPassingTests;\n  aggregatedResults.numPendingTests += testResult.numPendingTests;\n  aggregatedResults.numTodoTests += testResult.numTodoTests;\n\n  if (testResult.testExecError) {\n    aggregatedResults.numRuntimeErrorTestSuites++;\n  }\n\n  if (testResult.skipped) {\n    aggregatedResults.numPendingTestSuites++;\n  } else if (testResult.numFailingTests > 0 || testResult.testExecError) {\n    aggregatedResults.numFailedTestSuites++;\n  } else {\n    aggregatedResults.numPassedTestSuites++;\n  } // Snapshot data\n\n  if (testResult.snapshot.added) {\n    aggregatedResults.snapshot.filesAdded++;\n  }\n\n  if (testResult.snapshot.fileDeleted) {\n    aggregatedResults.snapshot.filesRemoved++;\n  }\n\n  if (testResult.snapshot.unmatched) {\n    aggregatedResults.snapshot.filesUnmatched++;\n  }\n\n  if (testResult.snapshot.updated) {\n    aggregatedResults.snapshot.filesUpdated++;\n  }\n\n  aggregatedResults.snapshot.added += testResult.snapshot.added;\n  aggregatedResults.snapshot.matched += testResult.snapshot.matched;\n  aggregatedResults.snapshot.unchecked += testResult.snapshot.unchecked;\n\n  if (\n    testResult.snapshot.uncheckedKeys &&\n    testResult.snapshot.uncheckedKeys.length > 0\n  ) {\n    aggregatedResults.snapshot.uncheckedKeysByFile.push({\n      filePath: testResult.testFilePath,\n      keys: testResult.snapshot.uncheckedKeys\n    });\n  }\n\n  aggregatedResults.snapshot.unmatched += testResult.snapshot.unmatched;\n  aggregatedResults.snapshot.updated += testResult.snapshot.updated;\n  aggregatedResults.snapshot.total +=\n    testResult.snapshot.added +\n    testResult.snapshot.matched +\n    testResult.snapshot.unmatched +\n    testResult.snapshot.updated;\n};\n\nexports.addResult = addResult;\n\nconst createEmptyTestResult = () => ({\n  leaks: false,\n  // That's legacy code, just adding it as needed for typing\n  numFailingTests: 0,\n  numPassingTests: 0,\n  numPendingTests: 0,\n  numTodoTests: 0,\n  openHandles: [],\n  perfStats: {\n    end: 0,\n    runtime: 0,\n    slow: false,\n    start: 0\n  },\n  skipped: false,\n  snapshot: {\n    added: 0,\n    fileDeleted: false,\n    matched: 0,\n    unchecked: 0,\n    uncheckedKeys: [],\n    unmatched: 0,\n    updated: 0\n  },\n  testFilePath: '',\n  testResults: []\n});\n\nexports.createEmptyTestResult = createEmptyTestResult;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}