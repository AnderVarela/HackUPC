{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst codegen_1 = require(\"../../compile/codegen\");\nconst ops = codegen_1.operators;\nconst KWDs = {\n  maximum: {\n    okStr: \"<=\",\n    ok: ops.LTE,\n    fail: ops.GT\n  },\n  minimum: {\n    okStr: \">=\",\n    ok: ops.GTE,\n    fail: ops.LT\n  },\n  exclusiveMaximum: {\n    okStr: \"<\",\n    ok: ops.LT,\n    fail: ops.GTE\n  },\n  exclusiveMinimum: {\n    okStr: \">\",\n    ok: ops.GT,\n    fail: ops.LTE\n  }\n};\nconst error = {\n  message: ({\n    keyword,\n    schemaCode\n  }) => (0, codegen_1.str)`must be ${KWDs[keyword].okStr} ${schemaCode}`,\n  params: ({\n    keyword,\n    schemaCode\n  }) => (0, codegen_1._)`{comparison: ${KWDs[keyword].okStr}, limit: ${schemaCode}}`\n};\nconst def = {\n  keyword: Object.keys(KWDs),\n  type: \"number\",\n  schemaType: \"number\",\n  $data: true,\n  error,\n  code(cxt) {\n    const {\n      keyword,\n      data,\n      schemaCode\n    } = cxt;\n    cxt.fail$data((0, codegen_1._)`${data} ${KWDs[keyword].fail} ${schemaCode} || isNaN(${data})`);\n  }\n};\nexports.default = def;","map":{"version":3,"names":["codegen_1","require","ops","operators","KWDs","maximum","okStr","ok","LTE","fail","GT","minimum","GTE","LT","exclusiveMaximum","exclusiveMinimum","error","message","keyword","schemaCode","str","params","_","def","Object","keys","type","schemaType","$data","code","cxt","data","fail$data","exports","default"],"sources":["C:\\Users\\chest\\OneDrive\\Documentos\\GitHub\\HackUPC\\frontend\\node_modules\\css-minimizer-webpack-plugin\\node_modules\\ajv\\lib\\vocabularies\\validation\\limitNumber.ts"],"sourcesContent":["import type {CodeKeywordDefinition, ErrorObject, KeywordErrorDefinition} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, str, operators, Code} from \"../../compile/codegen\"\n\nconst ops = operators\n\ntype Kwd = \"maximum\" | \"minimum\" | \"exclusiveMaximum\" | \"exclusiveMinimum\"\n\ntype Comparison = \"<=\" | \">=\" | \"<\" | \">\"\n\nconst KWDs: {[K in Kwd]: {okStr: Comparison; ok: Code; fail: Code}} = {\n  maximum: {okStr: \"<=\", ok: ops.LTE, fail: ops.GT},\n  minimum: {okStr: \">=\", ok: ops.GTE, fail: ops.LT},\n  exclusiveMaximum: {okStr: \"<\", ok: ops.LT, fail: ops.GTE},\n  exclusiveMinimum: {okStr: \">\", ok: ops.GT, fail: ops.LTE},\n}\n\nexport type LimitNumberError = ErrorObject<\n  Kwd,\n  {limit: number; comparison: Comparison},\n  number | {$data: string}\n>\n\nconst error: KeywordErrorDefinition = {\n  message: ({keyword, schemaCode}) => str`must be ${KWDs[keyword as Kwd].okStr} ${schemaCode}`,\n  params: ({keyword, schemaCode}) =>\n    _`{comparison: ${KWDs[keyword as Kwd].okStr}, limit: ${schemaCode}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: Object.keys(KWDs),\n  type: \"number\",\n  schemaType: \"number\",\n  $data: true,\n  error,\n  code(cxt: KeywordCxt) {\n    const {keyword, data, schemaCode} = cxt\n    cxt.fail$data(_`${data} ${KWDs[keyword as Kwd].fail} ${schemaCode} || isNaN(${data})`)\n  },\n}\n\nexport default def\n"],"mappings":";;;;;AAEA,MAAAA,SAAA,GAAAC,OAAA;AAEA,MAAMC,GAAG,GAAGF,SAAA,CAAAG,SAAS;AAMrB,MAAMC,IAAI,GAA4D;EACpEC,OAAO,EAAE;IAACC,KAAK,EAAE,IAAI;IAAEC,EAAE,EAAEL,GAAG,CAACM,GAAG;IAAEC,IAAI,EAAEP,GAAG,CAACQ;EAAE,CAAC;EACjDC,OAAO,EAAE;IAACL,KAAK,EAAE,IAAI;IAAEC,EAAE,EAAEL,GAAG,CAACU,GAAG;IAAEH,IAAI,EAAEP,GAAG,CAACW;EAAE,CAAC;EACjDC,gBAAgB,EAAE;IAACR,KAAK,EAAE,GAAG;IAAEC,EAAE,EAAEL,GAAG,CAACW,EAAE;IAAEJ,IAAI,EAAEP,GAAG,CAACU;EAAG,CAAC;EACzDG,gBAAgB,EAAE;IAACT,KAAK,EAAE,GAAG;IAAEC,EAAE,EAAEL,GAAG,CAACQ,EAAE;IAAED,IAAI,EAAEP,GAAG,CAACM;EAAG;CACzD;AAQD,MAAMQ,KAAK,GAA2B;EACpCC,OAAO,EAAEA,CAAC;IAACC,OAAO;IAAEC;EAAU,CAAC,KAAK,IAAAnB,SAAA,CAAAoB,GAAG,YAAWhB,IAAI,CAACc,OAAc,CAAC,CAACZ,KAAK,IAAIa,UAAU,EAAE;EAC5FE,MAAM,EAAEA,CAAC;IAACH,OAAO;IAAEC;EAAU,CAAC,KAC5B,IAAAnB,SAAA,CAAAsB,CAAC,iBAAgBlB,IAAI,CAACc,OAAc,CAAC,CAACZ,KAAK,YAAYa,UAAU;CACpE;AAED,MAAMI,GAAG,GAA0B;EACjCL,OAAO,EAAEM,MAAM,CAACC,IAAI,CAACrB,IAAI,CAAC;EAC1BsB,IAAI,EAAE,QAAQ;EACdC,UAAU,EAAE,QAAQ;EACpBC,KAAK,EAAE,IAAI;EACXZ,KAAK;EACLa,IAAIA,CAACC,GAAe;IAClB,MAAM;MAACZ,OAAO;MAAEa,IAAI;MAAEZ;IAAU,CAAC,GAAGW,GAAG;IACvCA,GAAG,CAACE,SAAS,CAAC,IAAAhC,SAAA,CAAAsB,CAAC,IAAGS,IAAI,IAAI3B,IAAI,CAACc,OAAc,CAAC,CAACT,IAAI,IAAIU,UAAU,aAAaY,IAAI,GAAG,CAAC;EACxF;CACD;AAEDE,OAAA,CAAAC,OAAA,GAAeX,GAAG","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}