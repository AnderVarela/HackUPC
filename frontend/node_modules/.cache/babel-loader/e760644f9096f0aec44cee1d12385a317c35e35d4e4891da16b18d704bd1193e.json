{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst codegen_1 = require(\"../../compile/codegen\");\nconst util_1 = require(\"../../compile/util\");\nconst ucs2length_1 = require(\"../../runtime/ucs2length\");\nconst error = {\n  message({\n    keyword,\n    schemaCode\n  }) {\n    const comp = keyword === \"maxLength\" ? \"more\" : \"fewer\";\n    return (0, codegen_1.str)`must NOT have ${comp} than ${schemaCode} characters`;\n  },\n  params: ({\n    schemaCode\n  }) => (0, codegen_1._)`{limit: ${schemaCode}}`\n};\nconst def = {\n  keyword: [\"maxLength\", \"minLength\"],\n  type: \"string\",\n  schemaType: \"number\",\n  $data: true,\n  error,\n  code(cxt) {\n    const {\n      keyword,\n      data,\n      schemaCode,\n      it\n    } = cxt;\n    const op = keyword === \"maxLength\" ? codegen_1.operators.GT : codegen_1.operators.LT;\n    const len = it.opts.unicode === false ? (0, codegen_1._)`${data}.length` : (0, codegen_1._)`${(0, util_1.useFunc)(cxt.gen, ucs2length_1.default)}(${data})`;\n    cxt.fail$data((0, codegen_1._)`${len} ${op} ${schemaCode}`);\n  }\n};\nexports.default = def;","map":{"version":3,"names":["codegen_1","require","util_1","ucs2length_1","error","message","keyword","schemaCode","comp","str","params","_","def","type","schemaType","$data","code","cxt","data","it","op","operators","GT","LT","len","opts","unicode","useFunc","gen","default","fail$data","exports"],"sources":["C:\\Users\\chest\\OneDrive\\Documentos\\GitHub\\HackUPC\\frontend\\node_modules\\css-minimizer-webpack-plugin\\node_modules\\ajv\\lib\\vocabularies\\validation\\limitLength.ts"],"sourcesContent":["import type {CodeKeywordDefinition, KeywordErrorDefinition} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, str, operators} from \"../../compile/codegen\"\nimport {useFunc} from \"../../compile/util\"\nimport ucs2length from \"../../runtime/ucs2length\"\n\nconst error: KeywordErrorDefinition = {\n  message({keyword, schemaCode}) {\n    const comp = keyword === \"maxLength\" ? \"more\" : \"fewer\"\n    return str`must NOT have ${comp} than ${schemaCode} characters`\n  },\n  params: ({schemaCode}) => _`{limit: ${schemaCode}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: [\"maxLength\", \"minLength\"],\n  type: \"string\",\n  schemaType: \"number\",\n  $data: true,\n  error,\n  code(cxt: KeywordCxt) {\n    const {keyword, data, schemaCode, it} = cxt\n    const op = keyword === \"maxLength\" ? operators.GT : operators.LT\n    const len =\n      it.opts.unicode === false ? _`${data}.length` : _`${useFunc(cxt.gen, ucs2length)}(${data})`\n    cxt.fail$data(_`${len} ${op} ${schemaCode}`)\n  },\n}\n\nexport default def\n"],"mappings":";;;;;AAEA,MAAAA,SAAA,GAAAC,OAAA;AACA,MAAAC,MAAA,GAAAD,OAAA;AACA,MAAAE,YAAA,GAAAF,OAAA;AAEA,MAAMG,KAAK,GAA2B;EACpCC,OAAOA,CAAC;IAACC,OAAO;IAAEC;EAAU,CAAC;IAC3B,MAAMC,IAAI,GAAGF,OAAO,KAAK,WAAW,GAAG,MAAM,GAAG,OAAO;IACvD,OAAO,IAAAN,SAAA,CAAAS,GAAG,kBAAiBD,IAAI,SAASD,UAAU,aAAa;EACjE,CAAC;EACDG,MAAM,EAAEA,CAAC;IAACH;EAAU,CAAC,KAAK,IAAAP,SAAA,CAAAW,CAAC,YAAWJ,UAAU;CACjD;AAED,MAAMK,GAAG,GAA0B;EACjCN,OAAO,EAAE,CAAC,WAAW,EAAE,WAAW,CAAC;EACnCO,IAAI,EAAE,QAAQ;EACdC,UAAU,EAAE,QAAQ;EACpBC,KAAK,EAAE,IAAI;EACXX,KAAK;EACLY,IAAIA,CAACC,GAAe;IAClB,MAAM;MAACX,OAAO;MAAEY,IAAI;MAAEX,UAAU;MAAEY;IAAE,CAAC,GAAGF,GAAG;IAC3C,MAAMG,EAAE,GAAGd,OAAO,KAAK,WAAW,GAAGN,SAAA,CAAAqB,SAAS,CAACC,EAAE,GAAGtB,SAAA,CAAAqB,SAAS,CAACE,EAAE;IAChE,MAAMC,GAAG,GACPL,EAAE,CAACM,IAAI,CAACC,OAAO,KAAK,KAAK,GAAG,IAAA1B,SAAA,CAAAW,CAAC,IAAGO,IAAI,SAAS,GAAG,IAAAlB,SAAA,CAAAW,CAAC,IAAG,IAAAT,MAAA,CAAAyB,OAAO,EAACV,GAAG,CAACW,GAAG,EAAEzB,YAAA,CAAA0B,OAAU,CAAC,IAAIX,IAAI,GAAG;IAC7FD,GAAG,CAACa,SAAS,CAAC,IAAA9B,SAAA,CAAAW,CAAC,IAAGa,GAAG,IAAIJ,EAAE,IAAIb,UAAU,EAAE,CAAC;EAC9C;CACD;AAEDwB,OAAA,CAAAF,OAAA,GAAejB,GAAG","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}