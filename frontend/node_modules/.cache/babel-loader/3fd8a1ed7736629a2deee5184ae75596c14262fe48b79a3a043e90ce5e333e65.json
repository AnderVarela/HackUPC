{"ast":null,"code":"'use strict';\n\nconst isWin = process.platform === 'win32';\nfunction notFoundError(original, syscall) {\n  return Object.assign(new Error(`${syscall} ${original.command} ENOENT`), {\n    code: 'ENOENT',\n    errno: 'ENOENT',\n    syscall: `${syscall} ${original.command}`,\n    path: original.command,\n    spawnargs: original.args\n  });\n}\nfunction hookChildProcess(cp, parsed) {\n  if (!isWin) {\n    return;\n  }\n  const originalEmit = cp.emit;\n  cp.emit = function (name, arg1) {\n    // If emitting \"exit\" event and exit code is 1, we need to check if\n    // the command exists and emit an \"error\" instead\n    // See https://github.com/IndigoUnited/node-cross-spawn/issues/16\n    if (name === 'exit') {\n      const err = verifyENOENT(arg1, parsed, 'spawn');\n      if (err) {\n        return originalEmit.call(cp, 'error', err);\n      }\n    }\n    return originalEmit.apply(cp, arguments); // eslint-disable-line prefer-rest-params\n  };\n}\nfunction verifyENOENT(status, parsed) {\n  if (isWin && status === 1 && !parsed.file) {\n    return notFoundError(parsed.original, 'spawn');\n  }\n  return null;\n}\nfunction verifyENOENTSync(status, parsed) {\n  if (isWin && status === 1 && !parsed.file) {\n    return notFoundError(parsed.original, 'spawnSync');\n  }\n  return null;\n}\nmodule.exports = {\n  hookChildProcess,\n  verifyENOENT,\n  verifyENOENTSync,\n  notFoundError\n};","map":{"version":3,"names":["isWin","process","platform","notFoundError","original","syscall","Object","assign","Error","command","code","errno","path","spawnargs","args","hookChildProcess","cp","parsed","originalEmit","emit","name","arg1","err","verifyENOENT","call","apply","arguments","status","file","verifyENOENTSync","module","exports"],"sources":["C:/Users/chest/OneDrive/Documentos/GitHub/HackUPC/frontend/node_modules/cross-spawn/lib/enoent.js"],"sourcesContent":["'use strict';\n\nconst isWin = process.platform === 'win32';\n\nfunction notFoundError(original, syscall) {\n    return Object.assign(new Error(`${syscall} ${original.command} ENOENT`), {\n        code: 'ENOENT',\n        errno: 'ENOENT',\n        syscall: `${syscall} ${original.command}`,\n        path: original.command,\n        spawnargs: original.args,\n    });\n}\n\nfunction hookChildProcess(cp, parsed) {\n    if (!isWin) {\n        return;\n    }\n\n    const originalEmit = cp.emit;\n\n    cp.emit = function (name, arg1) {\n        // If emitting \"exit\" event and exit code is 1, we need to check if\n        // the command exists and emit an \"error\" instead\n        // See https://github.com/IndigoUnited/node-cross-spawn/issues/16\n        if (name === 'exit') {\n            const err = verifyENOENT(arg1, parsed, 'spawn');\n\n            if (err) {\n                return originalEmit.call(cp, 'error', err);\n            }\n        }\n\n        return originalEmit.apply(cp, arguments); // eslint-disable-line prefer-rest-params\n    };\n}\n\nfunction verifyENOENT(status, parsed) {\n    if (isWin && status === 1 && !parsed.file) {\n        return notFoundError(parsed.original, 'spawn');\n    }\n\n    return null;\n}\n\nfunction verifyENOENTSync(status, parsed) {\n    if (isWin && status === 1 && !parsed.file) {\n        return notFoundError(parsed.original, 'spawnSync');\n    }\n\n    return null;\n}\n\nmodule.exports = {\n    hookChildProcess,\n    verifyENOENT,\n    verifyENOENTSync,\n    notFoundError,\n};\n"],"mappings":"AAAA,YAAY;;AAEZ,MAAMA,KAAK,GAAGC,OAAO,CAACC,QAAQ,KAAK,OAAO;AAE1C,SAASC,aAAaA,CAACC,QAAQ,EAAEC,OAAO,EAAE;EACtC,OAAOC,MAAM,CAACC,MAAM,CAAC,IAAIC,KAAK,CAAE,GAAEH,OAAQ,IAAGD,QAAQ,CAACK,OAAQ,SAAQ,CAAC,EAAE;IACrEC,IAAI,EAAE,QAAQ;IACdC,KAAK,EAAE,QAAQ;IACfN,OAAO,EAAG,GAAEA,OAAQ,IAAGD,QAAQ,CAACK,OAAQ,EAAC;IACzCG,IAAI,EAAER,QAAQ,CAACK,OAAO;IACtBI,SAAS,EAAET,QAAQ,CAACU;EACxB,CAAC,CAAC;AACN;AAEA,SAASC,gBAAgBA,CAACC,EAAE,EAAEC,MAAM,EAAE;EAClC,IAAI,CAACjB,KAAK,EAAE;IACR;EACJ;EAEA,MAAMkB,YAAY,GAAGF,EAAE,CAACG,IAAI;EAE5BH,EAAE,CAACG,IAAI,GAAG,UAAUC,IAAI,EAAEC,IAAI,EAAE;IAC5B;IACA;IACA;IACA,IAAID,IAAI,KAAK,MAAM,EAAE;MACjB,MAAME,GAAG,GAAGC,YAAY,CAACF,IAAI,EAAEJ,MAAM,EAAE,OAAO,CAAC;MAE/C,IAAIK,GAAG,EAAE;QACL,OAAOJ,YAAY,CAACM,IAAI,CAACR,EAAE,EAAE,OAAO,EAAEM,GAAG,CAAC;MAC9C;IACJ;IAEA,OAAOJ,YAAY,CAACO,KAAK,CAACT,EAAE,EAAEU,SAAS,CAAC,CAAC,CAAC;EAC9C,CAAC;AACL;AAEA,SAASH,YAAYA,CAACI,MAAM,EAAEV,MAAM,EAAE;EAClC,IAAIjB,KAAK,IAAI2B,MAAM,KAAK,CAAC,IAAI,CAACV,MAAM,CAACW,IAAI,EAAE;IACvC,OAAOzB,aAAa,CAACc,MAAM,CAACb,QAAQ,EAAE,OAAO,CAAC;EAClD;EAEA,OAAO,IAAI;AACf;AAEA,SAASyB,gBAAgBA,CAACF,MAAM,EAAEV,MAAM,EAAE;EACtC,IAAIjB,KAAK,IAAI2B,MAAM,KAAK,CAAC,IAAI,CAACV,MAAM,CAACW,IAAI,EAAE;IACvC,OAAOzB,aAAa,CAACc,MAAM,CAACb,QAAQ,EAAE,WAAW,CAAC;EACtD;EAEA,OAAO,IAAI;AACf;AAEA0B,MAAM,CAACC,OAAO,GAAG;EACbhB,gBAAgB;EAChBQ,YAAY;EACZM,gBAAgB;EAChB1B;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}