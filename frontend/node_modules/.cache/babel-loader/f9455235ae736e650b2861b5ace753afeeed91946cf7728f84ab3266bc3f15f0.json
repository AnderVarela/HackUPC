{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst utils_1 = require(\"@typescript-eslint/utils\");\nconst util = __importStar(require(\"../util\"));\nexports.default = util.createRule({\n  name: 'no-require-imports',\n  meta: {\n    type: 'problem',\n    docs: {\n      description: 'Disallow invocation of `require()`',\n      recommended: false\n    },\n    schema: [],\n    messages: {\n      noRequireImports: 'A `require()` style import is forbidden.'\n    }\n  },\n  defaultOptions: [],\n  create(context) {\n    return {\n      'CallExpression[callee.name=\"require\"]'(node) {\n        const variable = utils_1.ASTUtils.findVariable(context.getScope(), 'require');\n        // ignore non-global require usage as it's something user-land custom instead\n        // of the commonjs standard\n        if (!(variable === null || variable === void 0 ? void 0 : variable.identifiers.length)) {\n          context.report({\n            node,\n            messageId: 'noRequireImports'\n          });\n        }\n      },\n      TSExternalModuleReference(node) {\n        context.report({\n          node,\n          messageId: 'noRequireImports'\n        });\n      }\n    };\n  }\n});","map":{"version":3,"names":["utils_1","require","util","__importStar","exports","default","createRule","name","meta","type","docs","description","recommended","schema","messages","noRequireImports","defaultOptions","create","context","CallExpression[callee.name=\"require\"]","node","variable","ASTUtils","findVariable","getScope","identifiers","length","report","messageId","TSExternalModuleReference"],"sources":["../../src/rules/no-require-imports.ts"],"sourcesContent":[null],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,MAAAA,OAAA,GAAAC,OAAA;AAEA,MAAAC,IAAA,GAAAC,YAAA,CAAAF,OAAA;AAEAG,OAAA,CAAAC,OAAA,GAAeH,IAAI,CAACI,UAAU,CAAC;EAC7BC,IAAI,EAAE,oBAAoB;EAC1BC,IAAI,EAAE;IACJC,IAAI,EAAE,SAAS;IACfC,IAAI,EAAE;MACJC,WAAW,EAAE,oCAAoC;MACjDC,WAAW,EAAE;KACd;IACDC,MAAM,EAAE,EAAE;IACVC,QAAQ,EAAE;MACRC,gBAAgB,EAAE;;GAErB;EACDC,cAAc,EAAE,EAAE;EAClBC,MAAMA,CAACC,OAAO;IACZ,OAAO;MACL,uCAAuCC,CACrCC,IAA6B;QAE7B,MAAMC,QAAQ,GAAGrB,OAAA,CAAAsB,QAAQ,CAACC,YAAY,CAACL,OAAO,CAACM,QAAQ,EAAE,EAAE,SAAS,CAAC;QAErE;QACA;QACA,IAAI,EAACH,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEI,WAAW,CAACC,MAAM,GAAE;UACjCR,OAAO,CAACS,MAAM,CAAC;YACbP,IAAI;YACJQ,SAAS,EAAE;WACZ,CAAC;;MAEN,CAAC;MACDC,yBAAyBA,CAACT,IAAI;QAC5BF,OAAO,CAACS,MAAM,CAAC;UACbP,IAAI;UACJQ,SAAS,EAAE;SACZ,CAAC;MACJ;KACD;EACH;CACD,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}