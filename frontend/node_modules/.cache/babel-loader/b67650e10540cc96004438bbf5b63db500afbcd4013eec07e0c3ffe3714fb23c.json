{"ast":null,"code":"\"use strict\";\n\n/**\n * @fileoverview Really small utility functions that didn't deserve their own files\n */\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.findLastIndex = exports.upperCaseFirst = exports.typeNodeRequiresParentheses = exports.MemberNameType = exports.isDefinitionFile = exports.getNameFromMember = exports.getNameFromIndexSignature = exports.getEnumNames = exports.formatWordList = exports.findFirstResult = exports.arraysAreEqual = exports.arrayGroupByToMap = void 0;\nconst type_utils_1 = require(\"@typescript-eslint/type-utils\");\nconst utils_1 = require(\"@typescript-eslint/utils\");\nconst ts = __importStar(require(\"typescript\"));\nconst DEFINITION_EXTENSIONS = [ts.Extension.Dts, ts.Extension.Dcts, ts.Extension.Dmts];\n/**\n * Check if the context file name is *.d.ts or *.d.tsx\n */\nfunction isDefinitionFile(fileName) {\n  const lowerFileName = fileName.toLowerCase();\n  for (const definitionExt of DEFINITION_EXTENSIONS) {\n    if (lowerFileName.endsWith(definitionExt)) {\n      return true;\n    }\n  }\n  return false;\n}\nexports.isDefinitionFile = isDefinitionFile;\n/**\n * Upper cases the first character or the string\n */\nfunction upperCaseFirst(str) {\n  return str[0].toUpperCase() + str.slice(1);\n}\nexports.upperCaseFirst = upperCaseFirst;\nfunction arrayGroupByToMap(array, getKey) {\n  const groups = new Map();\n  for (const item of array) {\n    const key = getKey(item);\n    const existing = groups.get(key);\n    if (existing) {\n      existing.push(item);\n    } else {\n      groups.set(key, [item]);\n    }\n  }\n  return groups;\n}\nexports.arrayGroupByToMap = arrayGroupByToMap;\nfunction arraysAreEqual(a, b, eq) {\n  return a === b || a !== undefined && b !== undefined && a.length === b.length && a.every((x, idx) => eq(x, b[idx]));\n}\nexports.arraysAreEqual = arraysAreEqual;\n/** Returns the first non-`undefined` result. */\nfunction findFirstResult(inputs, getResult) {\n  for (const element of inputs) {\n    const result = getResult(element);\n    if (result !== undefined) {\n      return result;\n    }\n  }\n  return undefined;\n}\nexports.findFirstResult = findFirstResult;\n/**\n * Gets a string representation of the name of the index signature.\n */\nfunction getNameFromIndexSignature(node) {\n  const propName = node.parameters.find(parameter => parameter.type === utils_1.AST_NODE_TYPES.Identifier);\n  return propName ? propName.name : '(index signature)';\n}\nexports.getNameFromIndexSignature = getNameFromIndexSignature;\nvar MemberNameType;\n(function (MemberNameType) {\n  MemberNameType[MemberNameType[\"Private\"] = 1] = \"Private\";\n  MemberNameType[MemberNameType[\"Quoted\"] = 2] = \"Quoted\";\n  MemberNameType[MemberNameType[\"Normal\"] = 3] = \"Normal\";\n  MemberNameType[MemberNameType[\"Expression\"] = 4] = \"Expression\";\n})(MemberNameType || (exports.MemberNameType = MemberNameType = {}));\n/**\n * Gets a string name representation of the name of the given MethodDefinition\n * or PropertyDefinition node, with handling for computed property names.\n */\nfunction getNameFromMember(member, sourceCode) {\n  if (member.key.type === utils_1.AST_NODE_TYPES.Identifier) {\n    return {\n      type: MemberNameType.Normal,\n      name: member.key.name\n    };\n  }\n  if (member.key.type === utils_1.AST_NODE_TYPES.PrivateIdentifier) {\n    return {\n      type: MemberNameType.Private,\n      name: `#${member.key.name}`\n    };\n  }\n  if (member.key.type === utils_1.AST_NODE_TYPES.Literal) {\n    const name = `${member.key.value}`;\n    if ((0, type_utils_1.requiresQuoting)(name)) {\n      return {\n        type: MemberNameType.Quoted,\n        name: `\"${name}\"`\n      };\n    } else {\n      return {\n        type: MemberNameType.Normal,\n        name\n      };\n    }\n  }\n  return {\n    type: MemberNameType.Expression,\n    name: sourceCode.text.slice(...member.key.range)\n  };\n}\nexports.getNameFromMember = getNameFromMember;\nfunction getEnumNames(myEnum) {\n  return Object.keys(myEnum).filter(x => isNaN(parseInt(x)));\n}\nexports.getEnumNames = getEnumNames;\n/**\n * Given an array of words, returns an English-friendly concatenation, separated with commas, with\n * the `and` clause inserted before the last item.\n *\n * Example: ['foo', 'bar', 'baz' ] returns the string \"foo, bar, and baz\".\n */\nfunction formatWordList(words) {\n  if (!(words === null || words === void 0 ? void 0 : words.length)) {\n    return '';\n  }\n  if (words.length === 1) {\n    return words[0];\n  }\n  return [words.slice(0, -1).join(', '), words.slice(-1)[0]].join(' and ');\n}\nexports.formatWordList = formatWordList;\n/**\n * Iterates the array in reverse and returns the index of the first element it\n * finds which passes the predicate function.\n *\n * @returns Returns the index of the element if it finds it or -1 otherwise.\n */\nfunction findLastIndex(members, predicate) {\n  let idx = members.length - 1;\n  while (idx >= 0) {\n    const valid = predicate(members[idx]);\n    if (valid) {\n      return idx;\n    }\n    idx--;\n  }\n  return -1;\n}\nexports.findLastIndex = findLastIndex;\nfunction typeNodeRequiresParentheses(node, text) {\n  return node.type === utils_1.AST_NODE_TYPES.TSFunctionType || node.type === utils_1.AST_NODE_TYPES.TSConstructorType || node.type === utils_1.AST_NODE_TYPES.TSConditionalType || node.type === utils_1.AST_NODE_TYPES.TSUnionType && text.startsWith('|') || node.type === utils_1.AST_NODE_TYPES.TSIntersectionType && text.startsWith('&');\n}\nexports.typeNodeRequiresParentheses = typeNodeRequiresParentheses;","map":{"version":3,"names":["type_utils_1","require","utils_1","ts","__importStar","DEFINITION_EXTENSIONS","Extension","Dts","Dcts","Dmts","isDefinitionFile","fileName","lowerFileName","toLowerCase","definitionExt","endsWith","exports","upperCaseFirst","str","toUpperCase","slice","arrayGroupByToMap","array","getKey","groups","Map","item","key","existing","get","push","set","arraysAreEqual","a","b","eq","undefined","length","every","x","idx","findFirstResult","inputs","getResult","element","result","getNameFromIndexSignature","node","propName","parameters","find","parameter","type","AST_NODE_TYPES","Identifier","name","MemberNameType","getNameFromMember","member","sourceCode","Normal","PrivateIdentifier","Private","Literal","value","requiresQuoting","Quoted","Expression","text","range","getEnumNames","myEnum","Object","keys","filter","isNaN","parseInt","formatWordList","words","join","findLastIndex","members","predicate","valid","typeNodeRequiresParentheses","TSFunctionType","TSConstructorType","TSConditionalType","TSUnionType","startsWith","TSIntersectionType"],"sources":["../../src/util/misc.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}