{"ast":null,"code":"#!/usr/bin/env node\nvar updateDb = require('update-browserslist-db');\nvar fs = require('fs');\nvar browserslist = require('./');\nvar pkg = require('./package.json');\nvar args = process.argv.slice(2);\nvar USAGE = 'Usage:\\n' + '  npx browserslist\\n' + '  npx browserslist \"QUERIES\"\\n' + '  npx browserslist --json \"QUERIES\"\\n' + '  npx browserslist --config=\"path/to/browserlist/file\"\\n' + '  npx browserslist --coverage \"QUERIES\"\\n' + '  npx browserslist --coverage=US \"QUERIES\"\\n' + '  npx browserslist --coverage=US,RU,global \"QUERIES\"\\n' + '  npx browserslist --env=\"environment name defined in config\"\\n' + '  npx browserslist --stats=\"path/to/browserlist/stats/file\"\\n' + '  npx browserslist --mobile-to-desktop\\n' + '  npx browserslist --ignore-unknown-versions\\n';\nfunction isArg(arg) {\n  return args.some(function (str) {\n    return str === arg || str.indexOf(arg + '=') === 0;\n  });\n}\nfunction error(msg) {\n  process.stderr.write('browserslist: ' + msg + '\\n');\n  process.exit(1);\n}\nif (isArg('--help') || isArg('-h')) {\n  process.stdout.write(pkg.description + '.\\n\\n' + USAGE + '\\n');\n} else if (isArg('--version') || isArg('-v')) {\n  process.stdout.write('browserslist ' + pkg.version + '\\n');\n} else if (isArg('--update-db')) {\n  /* c8 ignore next 8 */\n  process.stdout.write('The --update-db command is deprecated.\\n' + 'Please use npx update-browserslist-db@latest instead.\\n');\n  process.stdout.write('Browserslist DB update will still be made.\\n');\n  updateDb(function (str) {\n    process.stdout.write(str);\n  });\n} else {\n  var mode = 'browsers';\n  var opts = {};\n  var queries;\n  var areas;\n  for (var i = 0; i < args.length; i++) {\n    if (args[i][0] !== '-') {\n      queries = args[i].replace(/^[\"']|[\"']$/g, '');\n      continue;\n    }\n    var arg = args[i].split('=');\n    var name = arg[0];\n    var value = arg[1];\n    if (value) value = value.replace(/^[\"']|[\"']$/g, '');\n    if (name === '--config' || name === '-b') {\n      opts.config = value;\n    } else if (name === '--env' || name === '-e') {\n      opts.env = value;\n    } else if (name === '--stats' || name === '-s') {\n      opts.stats = value;\n    } else if (name === '--coverage' || name === '-c') {\n      if (mode !== 'json') mode = 'coverage';\n      if (value) {\n        areas = value.split(',');\n      } else {\n        areas = ['global'];\n      }\n    } else if (name === '--json') {\n      mode = 'json';\n    } else if (name === '--mobile-to-desktop') {\n      /* c8 ignore next */\n      opts.mobileToDesktop = true;\n    } else if (name === '--ignore-unknown-versions') {\n      /* c8 ignore next */\n      opts.ignoreUnknownVersions = true;\n    } else {\n      error('Unknown arguments ' + args[i] + '.\\n\\n' + USAGE);\n    }\n  }\n  var browsers;\n  try {\n    browsers = browserslist(queries, opts);\n  } catch (e) {\n    if (e.name === 'BrowserslistError') {\n      error(e.message);\n    } /* c8 ignore start */else {\n      throw e;\n    } /* c8 ignore end */\n  }\n  var coverage;\n  if (mode === 'browsers') {\n    browsers.forEach(function (browser) {\n      process.stdout.write(browser + '\\n');\n    });\n  } else if (areas) {\n    coverage = areas.map(function (area) {\n      var stats;\n      if (area !== 'global') {\n        stats = area;\n      } else if (opts.stats) {\n        stats = JSON.parse(fs.readFileSync(opts.stats));\n      }\n      var result = browserslist.coverage(browsers, stats);\n      var round = Math.round(result * 100) / 100.0;\n      return [area, round];\n    });\n    if (mode === 'coverage') {\n      var prefix = 'These browsers account for ';\n      process.stdout.write(prefix);\n      coverage.forEach(function (data, index) {\n        var area = data[0];\n        var round = data[1];\n        var end = 'globally';\n        if (area && area !== 'global') {\n          end = 'in the ' + area.toUpperCase();\n        } else if (opts.stats) {\n          end = 'in custom statistics';\n        }\n        if (index !== 0) {\n          process.stdout.write(prefix.replace(/./g, ' '));\n        }\n        process.stdout.write(round + '% of all users ' + end + '\\n');\n      });\n    }\n  }\n  if (mode === 'json') {\n    var data = {\n      browsers: browsers\n    };\n    if (coverage) {\n      data.coverage = coverage.reduce(function (object, j) {\n        object[j[0]] = j[1];\n        return object;\n      }, {});\n    }\n    process.stdout.write(JSON.stringify(data, null, '  ') + '\\n');\n  }\n}","map":{"version":3,"names":["updateDb","require","fs","browserslist","pkg","args","process","argv","slice","USAGE","isArg","arg","some","str","indexOf","error","msg","stderr","write","exit","stdout","description","version","mode","opts","queries","areas","i","length","replace","split","name","value","config","env","stats","mobileToDesktop","ignoreUnknownVersions","browsers","e","message","coverage","forEach","browser","map","area","JSON","parse","readFileSync","result","round","Math","prefix","data","index","end","toUpperCase","reduce","object","j","stringify"],"sources":["C:/Users/chest/OneDrive/Documentos/GitHub/HackUPC/frontend/node_modules/browserslist/cli.js"],"sourcesContent":["#!/usr/bin/env node\n\nvar updateDb = require('update-browserslist-db')\nvar fs = require('fs')\n\nvar browserslist = require('./')\nvar pkg = require('./package.json')\n\nvar args = process.argv.slice(2)\n\nvar USAGE =\n  'Usage:\\n' +\n  '  npx browserslist\\n' +\n  '  npx browserslist \"QUERIES\"\\n' +\n  '  npx browserslist --json \"QUERIES\"\\n' +\n  '  npx browserslist --config=\"path/to/browserlist/file\"\\n' +\n  '  npx browserslist --coverage \"QUERIES\"\\n' +\n  '  npx browserslist --coverage=US \"QUERIES\"\\n' +\n  '  npx browserslist --coverage=US,RU,global \"QUERIES\"\\n' +\n  '  npx browserslist --env=\"environment name defined in config\"\\n' +\n  '  npx browserslist --stats=\"path/to/browserlist/stats/file\"\\n' +\n  '  npx browserslist --mobile-to-desktop\\n' +\n  '  npx browserslist --ignore-unknown-versions\\n'\n\nfunction isArg(arg) {\n  return args.some(function (str) {\n    return str === arg || str.indexOf(arg + '=') === 0\n  })\n}\n\nfunction error(msg) {\n  process.stderr.write('browserslist: ' + msg + '\\n')\n  process.exit(1)\n}\n\nif (isArg('--help') || isArg('-h')) {\n  process.stdout.write(pkg.description + '.\\n\\n' + USAGE + '\\n')\n} else if (isArg('--version') || isArg('-v')) {\n  process.stdout.write('browserslist ' + pkg.version + '\\n')\n} else if (isArg('--update-db')) {\n  /* c8 ignore next 8 */\n  process.stdout.write(\n    'The --update-db command is deprecated.\\n' +\n      'Please use npx update-browserslist-db@latest instead.\\n'\n  )\n  process.stdout.write('Browserslist DB update will still be made.\\n')\n  updateDb(function (str) {\n    process.stdout.write(str)\n  })\n} else {\n  var mode = 'browsers'\n  var opts = {}\n  var queries\n  var areas\n\n  for (var i = 0; i < args.length; i++) {\n    if (args[i][0] !== '-') {\n      queries = args[i].replace(/^[\"']|[\"']$/g, '')\n      continue\n    }\n\n    var arg = args[i].split('=')\n    var name = arg[0]\n    var value = arg[1]\n\n    if (value) value = value.replace(/^[\"']|[\"']$/g, '')\n\n    if (name === '--config' || name === '-b') {\n      opts.config = value\n    } else if (name === '--env' || name === '-e') {\n      opts.env = value\n    } else if (name === '--stats' || name === '-s') {\n      opts.stats = value\n    } else if (name === '--coverage' || name === '-c') {\n      if (mode !== 'json') mode = 'coverage'\n      if (value) {\n        areas = value.split(',')\n      } else {\n        areas = ['global']\n      }\n    } else if (name === '--json') {\n      mode = 'json'\n    } else if (name === '--mobile-to-desktop') {\n      /* c8 ignore next */\n      opts.mobileToDesktop = true\n    } else if (name === '--ignore-unknown-versions') {\n      /* c8 ignore next */\n      opts.ignoreUnknownVersions = true\n    } else {\n      error('Unknown arguments ' + args[i] + '.\\n\\n' + USAGE)\n    }\n  }\n\n  var browsers\n  try {\n    browsers = browserslist(queries, opts)\n  } catch (e) {\n    if (e.name === 'BrowserslistError') {\n      error(e.message)\n    } /* c8 ignore start */ else {\n      throw e\n    } /* c8 ignore end */\n  }\n\n  var coverage\n  if (mode === 'browsers') {\n    browsers.forEach(function (browser) {\n      process.stdout.write(browser + '\\n')\n    })\n  } else if (areas) {\n    coverage = areas.map(function (area) {\n      var stats\n      if (area !== 'global') {\n        stats = area\n      } else if (opts.stats) {\n        stats = JSON.parse(fs.readFileSync(opts.stats))\n      }\n      var result = browserslist.coverage(browsers, stats)\n      var round = Math.round(result * 100) / 100.0\n\n      return [area, round]\n    })\n\n    if (mode === 'coverage') {\n      var prefix = 'These browsers account for '\n      process.stdout.write(prefix)\n      coverage.forEach(function (data, index) {\n        var area = data[0]\n        var round = data[1]\n        var end = 'globally'\n        if (area && area !== 'global') {\n          end = 'in the ' + area.toUpperCase()\n        } else if (opts.stats) {\n          end = 'in custom statistics'\n        }\n\n        if (index !== 0) {\n          process.stdout.write(prefix.replace(/./g, ' '))\n        }\n\n        process.stdout.write(round + '% of all users ' + end + '\\n')\n      })\n    }\n  }\n\n  if (mode === 'json') {\n    var data = { browsers: browsers }\n    if (coverage) {\n      data.coverage = coverage.reduce(function (object, j) {\n        object[j[0]] = j[1]\n        return object\n      }, {})\n    }\n    process.stdout.write(JSON.stringify(data, null, '  ') + '\\n')\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}