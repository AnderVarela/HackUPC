{"ast":null,"code":"function runWithRetry(callback, maxRetries) {\n  function executeWithRetryAndTimeout(currentCount) {\n    try {\n      if (currentCount > maxRetries - 1) {\n        console.warn('[React Refresh] Failed to set up the socket connection.');\n        return;\n      }\n      callback();\n    } catch (err) {\n      setTimeout(function () {\n        executeWithRetryAndTimeout(currentCount + 1);\n      }, Math.pow(10, currentCount));\n    }\n  }\n  executeWithRetryAndTimeout(0);\n}\nmodule.exports = runWithRetry;","map":{"version":3,"names":["runWithRetry","callback","maxRetries","executeWithRetryAndTimeout","currentCount","console","warn","err","setTimeout","Math","pow","module","exports"],"sources":["C:/Users/chest/OneDrive/Documentos/GitHub/HackUPC/frontend/node_modules/@pmmmwh/react-refresh-webpack-plugin/client/utils/retry.js"],"sourcesContent":["function runWithRetry(callback, maxRetries) {\n  function executeWithRetryAndTimeout(currentCount) {\n    try {\n      if (currentCount > maxRetries - 1) {\n        console.warn('[React Refresh] Failed to set up the socket connection.');\n        return;\n      }\n\n      callback();\n    } catch (err) {\n      setTimeout(\n        function () {\n          executeWithRetryAndTimeout(currentCount + 1);\n        },\n        Math.pow(10, currentCount)\n      );\n    }\n  }\n\n  executeWithRetryAndTimeout(0);\n}\n\nmodule.exports = runWithRetry;\n"],"mappings":"AAAA,SAASA,YAAYA,CAACC,QAAQ,EAAEC,UAAU,EAAE;EAC1C,SAASC,0BAA0BA,CAACC,YAAY,EAAE;IAChD,IAAI;MACF,IAAIA,YAAY,GAAGF,UAAU,GAAG,CAAC,EAAE;QACjCG,OAAO,CAACC,IAAI,CAAC,yDAAyD,CAAC;QACvE;MACF;MAEAL,QAAQ,CAAC,CAAC;IACZ,CAAC,CAAC,OAAOM,GAAG,EAAE;MACZC,UAAU,CACR,YAAY;QACVL,0BAA0B,CAACC,YAAY,GAAG,CAAC,CAAC;MAC9C,CAAC,EACDK,IAAI,CAACC,GAAG,CAAC,EAAE,EAAEN,YAAY,CAC3B,CAAC;IACH;EACF;EAEAD,0BAA0B,CAAC,CAAC,CAAC;AAC/B;AAEAQ,MAAM,CAACC,OAAO,GAAGZ,YAAY","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}