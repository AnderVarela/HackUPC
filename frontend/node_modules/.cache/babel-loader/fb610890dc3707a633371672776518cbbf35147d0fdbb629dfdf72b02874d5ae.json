{"ast":null,"code":"/** internal\n * class ArgumentGroup\n *\n * Group arguments.\n * By default, ArgumentParser groups command-line arguments\n * into “positional arguments” and “optional arguments”\n * when displaying help messages. When there is a better\n * conceptual grouping of arguments than this default one,\n * appropriate groups can be created using the addArgumentGroup() method\n *\n * This class inherited from [[ArgumentContainer]]\n **/\n'use strict';\n\nvar util = require('util');\nvar ActionContainer = require('../action_container');\n\n/**\n * new ArgumentGroup(container, options)\n * - container (object): main container\n * - options (object): hash of group options\n *\n * #### options\n * - **prefixChars**  group name prefix\n * - **argumentDefault**  default argument value\n * - **title**  group title\n * - **description** group description\n *\n **/\nvar ArgumentGroup = module.exports = function ArgumentGroup(container, options) {\n  options = options || {};\n\n  // add any missing keyword arguments by checking the container\n  options.conflictHandler = options.conflictHandler || container.conflictHandler;\n  options.prefixChars = options.prefixChars || container.prefixChars;\n  options.argumentDefault = options.argumentDefault || container.argumentDefault;\n  ActionContainer.call(this, options);\n\n  // group attributes\n  this.title = options.title;\n  this._groupActions = [];\n\n  // share most attributes with the container\n  this._container = container;\n  this._registries = container._registries;\n  this._actions = container._actions;\n  this._optionStringActions = container._optionStringActions;\n  this._defaults = container._defaults;\n  this._hasNegativeNumberOptionals = container._hasNegativeNumberOptionals;\n  this._mutuallyExclusiveGroups = container._mutuallyExclusiveGroups;\n};\nutil.inherits(ArgumentGroup, ActionContainer);\nArgumentGroup.prototype._addAction = function (action) {\n  // Parent add action\n  action = ActionContainer.prototype._addAction.call(this, action);\n  this._groupActions.push(action);\n  return action;\n};\nArgumentGroup.prototype._removeAction = function (action) {\n  // Parent remove action\n  ActionContainer.prototype._removeAction.call(this, action);\n  var actionIndex = this._groupActions.indexOf(action);\n  if (actionIndex >= 0) {\n    this._groupActions.splice(actionIndex, 1);\n  }\n};","map":{"version":3,"names":["util","require","ActionContainer","ArgumentGroup","module","exports","container","options","conflictHandler","prefixChars","argumentDefault","call","title","_groupActions","_container","_registries","_actions","_optionStringActions","_defaults","_hasNegativeNumberOptionals","_mutuallyExclusiveGroups","inherits","prototype","_addAction","action","push","_removeAction","actionIndex","indexOf","splice"],"sources":["C:/Users/chest/OneDrive/Documentos/GitHub/HackUPC/frontend/node_modules/argparse/lib/argument/group.js"],"sourcesContent":["/** internal\n * class ArgumentGroup\n *\n * Group arguments.\n * By default, ArgumentParser groups command-line arguments\n * into “positional arguments” and “optional arguments”\n * when displaying help messages. When there is a better\n * conceptual grouping of arguments than this default one,\n * appropriate groups can be created using the addArgumentGroup() method\n *\n * This class inherited from [[ArgumentContainer]]\n **/\n'use strict';\n\nvar util = require('util');\n\nvar ActionContainer = require('../action_container');\n\n\n/**\n * new ArgumentGroup(container, options)\n * - container (object): main container\n * - options (object): hash of group options\n *\n * #### options\n * - **prefixChars**  group name prefix\n * - **argumentDefault**  default argument value\n * - **title**  group title\n * - **description** group description\n *\n **/\nvar ArgumentGroup = module.exports = function ArgumentGroup(container, options) {\n\n  options = options || {};\n\n  // add any missing keyword arguments by checking the container\n  options.conflictHandler = (options.conflictHandler || container.conflictHandler);\n  options.prefixChars = (options.prefixChars || container.prefixChars);\n  options.argumentDefault = (options.argumentDefault || container.argumentDefault);\n\n  ActionContainer.call(this, options);\n\n  // group attributes\n  this.title = options.title;\n  this._groupActions = [];\n\n  // share most attributes with the container\n  this._container = container;\n  this._registries = container._registries;\n  this._actions = container._actions;\n  this._optionStringActions = container._optionStringActions;\n  this._defaults = container._defaults;\n  this._hasNegativeNumberOptionals = container._hasNegativeNumberOptionals;\n  this._mutuallyExclusiveGroups = container._mutuallyExclusiveGroups;\n};\nutil.inherits(ArgumentGroup, ActionContainer);\n\n\nArgumentGroup.prototype._addAction = function (action) {\n  // Parent add action\n  action = ActionContainer.prototype._addAction.call(this, action);\n  this._groupActions.push(action);\n  return action;\n};\n\n\nArgumentGroup.prototype._removeAction = function (action) {\n  // Parent remove action\n  ActionContainer.prototype._removeAction.call(this, action);\n  var actionIndex = this._groupActions.indexOf(action);\n  if (actionIndex >= 0) {\n    this._groupActions.splice(actionIndex, 1);\n  }\n};\n\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;;AAEZ,IAAIA,IAAI,GAAGC,OAAO,CAAC,MAAM,CAAC;AAE1B,IAAIC,eAAe,GAAGD,OAAO,CAAC,qBAAqB,CAAC;;AAGpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIE,aAAa,GAAGC,MAAM,CAACC,OAAO,GAAG,SAASF,aAAaA,CAACG,SAAS,EAAEC,OAAO,EAAE;EAE9EA,OAAO,GAAGA,OAAO,IAAI,CAAC,CAAC;;EAEvB;EACAA,OAAO,CAACC,eAAe,GAAID,OAAO,CAACC,eAAe,IAAIF,SAAS,CAACE,eAAgB;EAChFD,OAAO,CAACE,WAAW,GAAIF,OAAO,CAACE,WAAW,IAAIH,SAAS,CAACG,WAAY;EACpEF,OAAO,CAACG,eAAe,GAAIH,OAAO,CAACG,eAAe,IAAIJ,SAAS,CAACI,eAAgB;EAEhFR,eAAe,CAACS,IAAI,CAAC,IAAI,EAAEJ,OAAO,CAAC;;EAEnC;EACA,IAAI,CAACK,KAAK,GAAGL,OAAO,CAACK,KAAK;EAC1B,IAAI,CAACC,aAAa,GAAG,EAAE;;EAEvB;EACA,IAAI,CAACC,UAAU,GAAGR,SAAS;EAC3B,IAAI,CAACS,WAAW,GAAGT,SAAS,CAACS,WAAW;EACxC,IAAI,CAACC,QAAQ,GAAGV,SAAS,CAACU,QAAQ;EAClC,IAAI,CAACC,oBAAoB,GAAGX,SAAS,CAACW,oBAAoB;EAC1D,IAAI,CAACC,SAAS,GAAGZ,SAAS,CAACY,SAAS;EACpC,IAAI,CAACC,2BAA2B,GAAGb,SAAS,CAACa,2BAA2B;EACxE,IAAI,CAACC,wBAAwB,GAAGd,SAAS,CAACc,wBAAwB;AACpE,CAAC;AACDpB,IAAI,CAACqB,QAAQ,CAAClB,aAAa,EAAED,eAAe,CAAC;AAG7CC,aAAa,CAACmB,SAAS,CAACC,UAAU,GAAG,UAAUC,MAAM,EAAE;EACrD;EACAA,MAAM,GAAGtB,eAAe,CAACoB,SAAS,CAACC,UAAU,CAACZ,IAAI,CAAC,IAAI,EAAEa,MAAM,CAAC;EAChE,IAAI,CAACX,aAAa,CAACY,IAAI,CAACD,MAAM,CAAC;EAC/B,OAAOA,MAAM;AACf,CAAC;AAGDrB,aAAa,CAACmB,SAAS,CAACI,aAAa,GAAG,UAAUF,MAAM,EAAE;EACxD;EACAtB,eAAe,CAACoB,SAAS,CAACI,aAAa,CAACf,IAAI,CAAC,IAAI,EAAEa,MAAM,CAAC;EAC1D,IAAIG,WAAW,GAAG,IAAI,CAACd,aAAa,CAACe,OAAO,CAACJ,MAAM,CAAC;EACpD,IAAIG,WAAW,IAAI,CAAC,EAAE;IACpB,IAAI,CAACd,aAAa,CAACgB,MAAM,CAACF,WAAW,EAAE,CAAC,CAAC;EAC3C;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}