{"ast":null,"code":"// Minimal replacement for ansi string helpers \"wrap-ansi\" and \"strip-ansi\".\n// to facilitate ESM and Deno modules.\n// TODO: look at porting https://www.npmjs.com/package/wrap-ansi to ESM.\n// The npm application\n// Copyright (c) npm, Inc. and Contributors\n// Licensed on the terms of The Artistic License 2.0\n// See: https://github.com/npm/cli/blob/4c65cd952bc8627811735bea76b9b110cc4fc80e/lib/utils/ansi-trim.js\nconst ansi = new RegExp('\\x1b(?:\\\\[(?:\\\\d+[ABCDEFGJKSTm]|\\\\d+;\\\\d+[Hfm]|' + '\\\\d+;\\\\d+;\\\\d+m|6n|s|u|\\\\?25[lh])|\\\\w)', 'g');\nexport function stripAnsi(str) {\n  return str.replace(ansi, '');\n}\nexport function wrap(str, width) {\n  const [start, end] = str.match(ansi) || ['', ''];\n  str = stripAnsi(str);\n  let wrapped = '';\n  for (let i = 0; i < str.length; i++) {\n    if (i !== 0 && i % width === 0) {\n      wrapped += '\\n';\n    }\n    wrapped += str.charAt(i);\n  }\n  if (start && end) {\n    wrapped = `${start}${wrapped}${end}`;\n  }\n  return wrapped;\n}","map":{"version":3,"names":["ansi","RegExp","stripAnsi","str","replace","wrap","width","start","end","match","wrapped","i","length","charAt"],"sources":["C:/Users/chest/OneDrive/Documentos/GitHub/HackUPC/frontend/node_modules/cliui/build/lib/string-utils.js"],"sourcesContent":["// Minimal replacement for ansi string helpers \"wrap-ansi\" and \"strip-ansi\".\n// to facilitate ESM and Deno modules.\n// TODO: look at porting https://www.npmjs.com/package/wrap-ansi to ESM.\n// The npm application\n// Copyright (c) npm, Inc. and Contributors\n// Licensed on the terms of The Artistic License 2.0\n// See: https://github.com/npm/cli/blob/4c65cd952bc8627811735bea76b9b110cc4fc80e/lib/utils/ansi-trim.js\nconst ansi = new RegExp('\\x1b(?:\\\\[(?:\\\\d+[ABCDEFGJKSTm]|\\\\d+;\\\\d+[Hfm]|' +\n    '\\\\d+;\\\\d+;\\\\d+m|6n|s|u|\\\\?25[lh])|\\\\w)', 'g');\nexport function stripAnsi(str) {\n    return str.replace(ansi, '');\n}\nexport function wrap(str, width) {\n    const [start, end] = str.match(ansi) || ['', ''];\n    str = stripAnsi(str);\n    let wrapped = '';\n    for (let i = 0; i < str.length; i++) {\n        if (i !== 0 && (i % width) === 0) {\n            wrapped += '\\n';\n        }\n        wrapped += str.charAt(i);\n    }\n    if (start && end) {\n        wrapped = `${start}${wrapped}${end}`;\n    }\n    return wrapped;\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMA,IAAI,GAAG,IAAIC,MAAM,CAAC,iDAAiD,GACrE,wCAAwC,EAAE,GAAG,CAAC;AAClD,OAAO,SAASC,SAASA,CAACC,GAAG,EAAE;EAC3B,OAAOA,GAAG,CAACC,OAAO,CAACJ,IAAI,EAAE,EAAE,CAAC;AAChC;AACA,OAAO,SAASK,IAAIA,CAACF,GAAG,EAAEG,KAAK,EAAE;EAC7B,MAAM,CAACC,KAAK,EAAEC,GAAG,CAAC,GAAGL,GAAG,CAACM,KAAK,CAACT,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,EAAE,CAAC;EAChDG,GAAG,GAAGD,SAAS,CAACC,GAAG,CAAC;EACpB,IAAIO,OAAO,GAAG,EAAE;EAChB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGR,GAAG,CAACS,MAAM,EAAED,CAAC,EAAE,EAAE;IACjC,IAAIA,CAAC,KAAK,CAAC,IAAKA,CAAC,GAAGL,KAAK,KAAM,CAAC,EAAE;MAC9BI,OAAO,IAAI,IAAI;IACnB;IACAA,OAAO,IAAIP,GAAG,CAACU,MAAM,CAACF,CAAC,CAAC;EAC5B;EACA,IAAIJ,KAAK,IAAIC,GAAG,EAAE;IACdE,OAAO,GAAI,GAAEH,KAAM,GAAEG,OAAQ,GAAEF,GAAI,EAAC;EACxC;EACA,OAAOE,OAAO;AAClB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}