{"ast":null,"code":"'use strict';\n\nconst browserslist = require('browserslist');\nconst {\n  compare,\n  has\n} = require('./helpers');\nconst external = require('./external');\nconst aliases = new Map([['and_chr', 'chrome-android'], ['and_ff', 'firefox-android'], ['ie_mob', 'ie'], ['ios_saf', 'ios'], ['oculus', 'quest'], ['op_mob', 'opera-android'],\n// TODO: Remove from `core-js@4`\n['opera_mobile', 'opera-android'], ['react', 'react-native'], ['reactnative', 'react-native']]);\nconst validTargets = new Set(['android', 'bun', 'chrome', 'chrome-android', 'deno', 'edge', 'electron', 'firefox', 'firefox-android', 'hermes', 'ie', 'ios', 'node', 'opera', 'opera-android', 'phantom', 'quest', 'react-native', 'rhino', 'safari', 'samsung']);\nconst toLowerKeys = function (object) {\n  return Object.entries(object).reduce((accumulator, [key, value]) => {\n    accumulator[key.toLowerCase()] = value;\n    return accumulator;\n  }, {});\n};\nmodule.exports = function (targets) {\n  const {\n    browsers,\n    esmodules,\n    node,\n    ...rest\n  } = typeof targets != 'object' || Array.isArray(targets) ? {\n    browsers: targets\n  } : toLowerKeys(targets);\n  const list = Object.entries(rest);\n  if (browsers) {\n    if (typeof browsers == 'string' || Array.isArray(browsers)) {\n      list.push(...browserslist(browsers).map(it => it.split(' ')));\n    } else {\n      list.push(...Object.entries(browsers));\n    }\n  }\n  if (esmodules) {\n    list.push(...Object.entries(external.modules));\n  }\n  if (node) {\n    list.push(['node', node === 'current' ? process.versions.node : node]);\n  }\n  const normalized = list.map(([engine, version]) => {\n    if (has(browserslist.aliases, engine)) {\n      engine = browserslist.aliases[engine];\n    }\n    if (aliases.has(engine)) {\n      engine = aliases.get(engine);\n    }\n    return [engine, String(version)];\n  }).filter(([engine]) => {\n    return validTargets.has(engine);\n  }).sort(([a], [b]) => {\n    return a < b ? -1 : a > b ? 1 : 0;\n  });\n  const reducedByMinVersion = new Map();\n  for (const [engine, version] of normalized) {\n    if (!reducedByMinVersion.has(engine) || compare(version, '<=', reducedByMinVersion.get(engine))) {\n      reducedByMinVersion.set(engine, version);\n    }\n  }\n  return reducedByMinVersion;\n};","map":{"version":3,"names":["browserslist","require","compare","has","external","aliases","Map","validTargets","Set","toLowerKeys","object","Object","entries","reduce","accumulator","key","value","toLowerCase","module","exports","targets","browsers","esmodules","node","rest","Array","isArray","list","push","map","it","split","modules","process","versions","normalized","engine","version","get","String","filter","sort","a","b","reducedByMinVersion","set"],"sources":["C:/Users/chest/OneDrive/Documentos/GitHub/HackUPC/frontend/node_modules/core-js-compat/targets-parser.js"],"sourcesContent":["'use strict';\nconst browserslist = require('browserslist');\nconst { compare, has } = require('./helpers');\nconst external = require('./external');\n\nconst aliases = new Map([\n  ['and_chr', 'chrome-android'],\n  ['and_ff', 'firefox-android'],\n  ['ie_mob', 'ie'],\n  ['ios_saf', 'ios'],\n  ['oculus', 'quest'],\n  ['op_mob', 'opera-android'],\n  // TODO: Remove from `core-js@4`\n  ['opera_mobile', 'opera-android'],\n  ['react', 'react-native'],\n  ['reactnative', 'react-native'],\n]);\n\nconst validTargets = new Set([\n  'android',\n  'bun',\n  'chrome',\n  'chrome-android',\n  'deno',\n  'edge',\n  'electron',\n  'firefox',\n  'firefox-android',\n  'hermes',\n  'ie',\n  'ios',\n  'node',\n  'opera',\n  'opera-android',\n  'phantom',\n  'quest',\n  'react-native',\n  'rhino',\n  'safari',\n  'samsung',\n]);\n\nconst toLowerKeys = function (object) {\n  return Object.entries(object).reduce((accumulator, [key, value]) => {\n    accumulator[key.toLowerCase()] = value;\n    return accumulator;\n  }, {});\n};\n\nmodule.exports = function (targets) {\n  const { browsers, esmodules, node, ...rest } = (typeof targets != 'object' || Array.isArray(targets))\n    ? { browsers: targets } : toLowerKeys(targets);\n\n  const list = Object.entries(rest);\n\n  if (browsers) {\n    if (typeof browsers == 'string' || Array.isArray(browsers)) {\n      list.push(...browserslist(browsers).map(it => it.split(' ')));\n    } else {\n      list.push(...Object.entries(browsers));\n    }\n  }\n  if (esmodules) {\n    list.push(...Object.entries(external.modules));\n  }\n  if (node) {\n    list.push(['node', node === 'current' ? process.versions.node : node]);\n  }\n\n  const normalized = list.map(([engine, version]) => {\n    if (has(browserslist.aliases, engine)) {\n      engine = browserslist.aliases[engine];\n    }\n    if (aliases.has(engine)) {\n      engine = aliases.get(engine);\n    }\n    return [engine, String(version)];\n  }).filter(([engine]) => {\n    return validTargets.has(engine);\n  }).sort(([a], [b]) => {\n    return a < b ? -1 : a > b ? 1 : 0;\n  });\n\n  const reducedByMinVersion = new Map();\n  for (const [engine, version] of normalized) {\n    if (!reducedByMinVersion.has(engine) || compare(version, '<=', reducedByMinVersion.get(engine))) {\n      reducedByMinVersion.set(engine, version);\n    }\n  }\n\n  return reducedByMinVersion;\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}