{"ast":null,"code":"// Standard YAML's JSON schema.\n// http://www.yaml.org/spec/1.2/spec.html#id2803231\n//\n// NOTE: JS-YAML does not support schema-specific tag resolution restrictions.\n// So, this schema is not such strict as defined in the YAML specification.\n// It allows numbers in binary notaion, use `Null` and `NULL` as `null`, etc.\n\n'use strict';\n\nmodule.exports = require('./failsafe').extend({\n  implicit: [require('../type/null'), require('../type/bool'), require('../type/int'), require('../type/float')]\n});","map":{"version":3,"names":["module","exports","require","extend","implicit"],"sources":["C:/Users/chest/OneDrive/Documentos/GitHub/HackUPC/frontend/node_modules/@eslint/eslintrc/node_modules/js-yaml/lib/schema/json.js"],"sourcesContent":["// Standard YAML's JSON schema.\n// http://www.yaml.org/spec/1.2/spec.html#id2803231\n//\n// NOTE: JS-YAML does not support schema-specific tag resolution restrictions.\n// So, this schema is not such strict as defined in the YAML specification.\n// It allows numbers in binary notaion, use `Null` and `NULL` as `null`, etc.\n\n\n'use strict';\n\n\nmodule.exports = require('./failsafe').extend({\n  implicit: [\n    require('../type/null'),\n    require('../type/bool'),\n    require('../type/int'),\n    require('../type/float')\n  ]\n});\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AAGA,YAAY;;AAGZA,MAAM,CAACC,OAAO,GAAGC,OAAO,CAAC,YAAY,CAAC,CAACC,MAAM,CAAC;EAC5CC,QAAQ,EAAE,CACRF,OAAO,CAAC,cAAc,CAAC,EACvBA,OAAO,CAAC,cAAc,CAAC,EACvBA,OAAO,CAAC,aAAa,CAAC,EACtBA,OAAO,CAAC,eAAe,CAAC;AAE5B,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}