{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.default = watch;\nfunction path() {\n  const data = _interopRequireWildcard(require('path'));\n  path = function () {\n    return data;\n  };\n  return data;\n}\nfunction _ansiEscapes() {\n  const data = _interopRequireDefault(require('ansi-escapes'));\n  _ansiEscapes = function () {\n    return data;\n  };\n  return data;\n}\nfunction _chalk() {\n  const data = _interopRequireDefault(require('chalk'));\n  _chalk = function () {\n    return data;\n  };\n  return data;\n}\nfunction _exit() {\n  const data = _interopRequireDefault(require('exit'));\n  _exit = function () {\n    return data;\n  };\n  return data;\n}\nfunction _slash() {\n  const data = _interopRequireDefault(require('slash'));\n  _slash = function () {\n    return data;\n  };\n  return data;\n}\nfunction _jestMessageUtil() {\n  const data = require('jest-message-util');\n  _jestMessageUtil = function () {\n    return data;\n  };\n  return data;\n}\nfunction _jestUtil() {\n  const data = require('jest-util');\n  _jestUtil = function () {\n    return data;\n  };\n  return data;\n}\nfunction _jestValidate() {\n  const data = require('jest-validate');\n  _jestValidate = function () {\n    return data;\n  };\n  return data;\n}\nfunction _jestWatcher() {\n  const data = require('jest-watcher');\n  _jestWatcher = function () {\n    return data;\n  };\n  return data;\n}\nvar _FailedTestsCache = _interopRequireDefault(require('./FailedTestsCache'));\nvar _SearchSource = _interopRequireDefault(require('./SearchSource'));\nvar _TestWatcher = _interopRequireDefault(require('./TestWatcher'));\nvar _getChangedFilesPromise = _interopRequireDefault(require('./getChangedFilesPromise'));\nvar _activeFiltersMessage = _interopRequireDefault(require('./lib/activeFiltersMessage'));\nvar _createContext = _interopRequireDefault(require('./lib/createContext'));\nvar _isValidPath = _interopRequireDefault(require('./lib/isValidPath'));\nvar _updateGlobalConfig = _interopRequireDefault(require('./lib/updateGlobalConfig'));\nvar _watchPluginsHelpers = require('./lib/watchPluginsHelpers');\nvar _FailedTestsInteractive = _interopRequireDefault(require('./plugins/FailedTestsInteractive'));\nvar _Quit = _interopRequireDefault(require('./plugins/Quit'));\nvar _TestNamePattern = _interopRequireDefault(require('./plugins/TestNamePattern'));\nvar _TestPathPattern = _interopRequireDefault(require('./plugins/TestPathPattern'));\nvar _UpdateSnapshots = _interopRequireDefault(require('./plugins/UpdateSnapshots'));\nvar _UpdateSnapshotsInteractive = _interopRequireDefault(require('./plugins/UpdateSnapshotsInteractive'));\nvar _runJest = _interopRequireDefault(require('./runJest'));\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction _getRequireWildcardCache(nodeInterop) {\n  if (typeof WeakMap !== 'function') return null;\n  var cacheBabelInterop = new WeakMap();\n  var cacheNodeInterop = new WeakMap();\n  return (_getRequireWildcardCache = function (nodeInterop) {\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n  })(nodeInterop);\n}\nfunction _interopRequireWildcard(obj, nodeInterop) {\n  if (!nodeInterop && obj && obj.__esModule) {\n    return obj;\n  }\n  if (obj === null || typeof obj !== 'object' && typeof obj !== 'function') {\n    return {\n      default: obj\n    };\n  }\n  var cache = _getRequireWildcardCache(nodeInterop);\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n  for (var key in obj) {\n    if (key !== 'default' && Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n  newObj.default = obj;\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n  return newObj;\n}\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nconst {\n  print: preRunMessagePrint\n} = _jestUtil().preRunMessage;\nlet hasExitListener = false;\nconst INTERNAL_PLUGINS = [_FailedTestsInteractive.default, _TestPathPattern.default, _TestNamePattern.default, _UpdateSnapshots.default, _UpdateSnapshotsInteractive.default, _Quit.default];\nconst RESERVED_KEY_PLUGINS = new Map([[_UpdateSnapshots.default, {\n  forbiddenOverwriteMessage: 'updating snapshots',\n  key: 'u'\n}], [_UpdateSnapshotsInteractive.default, {\n  forbiddenOverwriteMessage: 'updating snapshots interactively',\n  key: 'i'\n}], [_Quit.default, {\n  forbiddenOverwriteMessage: 'quitting watch mode'\n}]]);\nasync function watch(initialGlobalConfig, contexts, outputStream, hasteMapInstances, stdin = process.stdin, hooks = new (_jestWatcher().JestHook)(), filter) {\n  // `globalConfig` will be constantly updated and reassigned as a result of\n  // watch mode interactions.\n  let globalConfig = initialGlobalConfig;\n  let activePlugin;\n  globalConfig = (0, _updateGlobalConfig.default)(globalConfig, {\n    mode: globalConfig.watch ? 'watch' : 'watchAll',\n    passWithNoTests: true\n  });\n  const updateConfigAndRun = ({\n    bail,\n    changedSince,\n    collectCoverage,\n    collectCoverageFrom,\n    collectCoverageOnlyFrom,\n    coverageDirectory,\n    coverageReporters,\n    findRelatedTests,\n    mode,\n    nonFlagArgs,\n    notify,\n    notifyMode,\n    onlyFailures,\n    reporters,\n    testNamePattern,\n    testPathPattern,\n    updateSnapshot,\n    verbose\n  } = {}) => {\n    const previousUpdateSnapshot = globalConfig.updateSnapshot;\n    globalConfig = (0, _updateGlobalConfig.default)(globalConfig, {\n      bail,\n      changedSince,\n      collectCoverage,\n      collectCoverageFrom,\n      collectCoverageOnlyFrom,\n      coverageDirectory,\n      coverageReporters,\n      findRelatedTests,\n      mode,\n      nonFlagArgs,\n      notify,\n      notifyMode,\n      onlyFailures,\n      reporters,\n      testNamePattern,\n      testPathPattern,\n      updateSnapshot,\n      verbose\n    });\n    startRun(globalConfig);\n    globalConfig = (0, _updateGlobalConfig.default)(globalConfig, {\n      // updateSnapshot is not sticky after a run.\n      updateSnapshot: previousUpdateSnapshot === 'all' ? 'none' : previousUpdateSnapshot\n    });\n  };\n  const watchPlugins = INTERNAL_PLUGINS.map(InternalPlugin => new InternalPlugin({\n    stdin,\n    stdout: outputStream\n  }));\n  watchPlugins.forEach(plugin => {\n    const hookSubscriber = hooks.getSubscriber();\n    if (plugin.apply) {\n      plugin.apply(hookSubscriber);\n    }\n  });\n  if (globalConfig.watchPlugins != null) {\n    const watchPluginKeys = new Map();\n    for (const plugin of watchPlugins) {\n      const reservedInfo = RESERVED_KEY_PLUGINS.get(plugin.constructor) || {};\n      const key = reservedInfo.key || getPluginKey(plugin, globalConfig);\n      if (!key) {\n        continue;\n      }\n      const {\n        forbiddenOverwriteMessage\n      } = reservedInfo;\n      watchPluginKeys.set(key, {\n        forbiddenOverwriteMessage,\n        overwritable: forbiddenOverwriteMessage == null,\n        plugin\n      });\n    }\n    for (const pluginWithConfig of globalConfig.watchPlugins) {\n      let plugin;\n      try {\n        const ThirdPartyPlugin = await (0, _jestUtil().requireOrImportModule)(pluginWithConfig.path);\n        plugin = new ThirdPartyPlugin({\n          config: pluginWithConfig.config,\n          stdin,\n          stdout: outputStream\n        });\n      } catch (error) {\n        const errorWithContext = new Error(`Failed to initialize watch plugin \"${_chalk().default.bold((0, _slash().default)(path().relative(process.cwd(), pluginWithConfig.path)))}\":\\n\\n${(0, _jestMessageUtil().formatExecError)(error, contexts[0].config, {\n          noStackTrace: false\n        })}`);\n        delete errorWithContext.stack;\n        return Promise.reject(errorWithContext);\n      }\n      checkForConflicts(watchPluginKeys, plugin, globalConfig);\n      const hookSubscriber = hooks.getSubscriber();\n      if (plugin.apply) {\n        plugin.apply(hookSubscriber);\n      }\n      watchPlugins.push(plugin);\n    }\n  }\n  const failedTestsCache = new _FailedTestsCache.default();\n  let searchSources = contexts.map(context => ({\n    context,\n    searchSource: new _SearchSource.default(context)\n  }));\n  let isRunning = false;\n  let testWatcher;\n  let shouldDisplayWatchUsage = true;\n  let isWatchUsageDisplayed = false;\n  const emitFileChange = () => {\n    if (hooks.isUsed('onFileChange')) {\n      const projects = searchSources.map(({\n        context,\n        searchSource\n      }) => ({\n        config: context.config,\n        testPaths: searchSource.findMatchingTests('').tests.map(t => t.path)\n      }));\n      hooks.getEmitter().onFileChange({\n        projects\n      });\n    }\n  };\n  emitFileChange();\n  hasteMapInstances.forEach((hasteMapInstance, index) => {\n    hasteMapInstance.on('change', ({\n      eventsQueue,\n      hasteFS,\n      moduleMap\n    }) => {\n      const validPaths = eventsQueue.filter(({\n        filePath\n      }) => (0, _isValidPath.default)(globalConfig, filePath));\n      if (validPaths.length) {\n        const context = contexts[index] = (0, _createContext.default)(contexts[index].config, {\n          hasteFS,\n          moduleMap\n        });\n        activePlugin = null;\n        searchSources = searchSources.slice();\n        searchSources[index] = {\n          context,\n          searchSource: new _SearchSource.default(context)\n        };\n        emitFileChange();\n        startRun(globalConfig);\n      }\n    });\n  });\n  if (!hasExitListener) {\n    hasExitListener = true;\n    process.on('exit', () => {\n      if (activePlugin) {\n        outputStream.write(_ansiEscapes().default.cursorDown());\n        outputStream.write(_ansiEscapes().default.eraseDown);\n      }\n    });\n  }\n  const startRun = globalConfig => {\n    if (isRunning) {\n      return Promise.resolve(null);\n    }\n    testWatcher = new _TestWatcher.default({\n      isWatchMode: true\n    });\n    _jestUtil().isInteractive && outputStream.write(_jestUtil().specialChars.CLEAR);\n    preRunMessagePrint(outputStream);\n    isRunning = true;\n    const configs = contexts.map(context => context.config);\n    const changedFilesPromise = (0, _getChangedFilesPromise.default)(globalConfig, configs);\n    return (0, _runJest.default)({\n      changedFilesPromise,\n      contexts,\n      failedTestsCache,\n      filter,\n      globalConfig,\n      jestHooks: hooks.getEmitter(),\n      onComplete: results => {\n        isRunning = false;\n        hooks.getEmitter().onTestRunComplete(results); // Create a new testWatcher instance so that re-runs won't be blocked.\n        // The old instance that was passed to Jest will still be interrupted\n        // and prevent test runs from the previous run.\n\n        testWatcher = new _TestWatcher.default({\n          isWatchMode: true\n        }); // Do not show any Watch Usage related stuff when running in a\n        // non-interactive environment\n\n        if (_jestUtil().isInteractive) {\n          if (shouldDisplayWatchUsage) {\n            outputStream.write(usage(globalConfig, watchPlugins));\n            shouldDisplayWatchUsage = false; // hide Watch Usage after first run\n\n            isWatchUsageDisplayed = true;\n          } else {\n            outputStream.write(showToggleUsagePrompt());\n            shouldDisplayWatchUsage = false;\n            isWatchUsageDisplayed = false;\n          }\n        } else {\n          outputStream.write('\\n');\n        }\n        failedTestsCache.setTestResults(results.testResults);\n      },\n      outputStream,\n      startRun,\n      testWatcher\n    }).catch((error // Errors thrown inside `runJest`, e.g. by resolvers, are caught here for\n    ) =>\n    // continuous watch mode execution. We need to reprint them to the\n    // terminal and give just a little bit of extra space so they fit below\n    // `preRunMessagePrint` message nicely.\n    console.error('\\n\\n' + (0, _jestMessageUtil().formatExecError)(error, contexts[0].config, {\n      noStackTrace: false\n    })));\n  };\n  const onKeypress = key => {\n    if (key === _jestWatcher().KEYS.CONTROL_C || key === _jestWatcher().KEYS.CONTROL_D) {\n      if (typeof stdin.setRawMode === 'function') {\n        stdin.setRawMode(false);\n      }\n      outputStream.write('\\n');\n      (0, _exit().default)(0);\n      return;\n    }\n    if (activePlugin != null && activePlugin.onKey) {\n      // if a plugin is activate, Jest should let it handle keystrokes, so ignore\n      // them here\n      activePlugin.onKey(key);\n      return;\n    } // Abort test run\n\n    const pluginKeys = (0, _watchPluginsHelpers.getSortedUsageRows)(watchPlugins, globalConfig).map(usage => Number(usage.key).toString(16));\n    if (isRunning && testWatcher && ['q', _jestWatcher().KEYS.ENTER, 'a', 'o', 'f'].concat(pluginKeys).includes(key)) {\n      testWatcher.setState({\n        interrupted: true\n      });\n      return;\n    }\n    const matchingWatchPlugin = (0, _watchPluginsHelpers.filterInteractivePlugins)(watchPlugins, globalConfig).find(plugin => getPluginKey(plugin, globalConfig) === key);\n    if (matchingWatchPlugin != null) {\n      if (isRunning) {\n        testWatcher.setState({\n          interrupted: true\n        });\n        return;\n      } // \"activate\" the plugin, which has jest ignore keystrokes so the plugin\n      // can handle them\n\n      activePlugin = matchingWatchPlugin;\n      if (activePlugin.run) {\n        activePlugin.run(globalConfig, updateConfigAndRun).then(shouldRerun => {\n          activePlugin = null;\n          if (shouldRerun) {\n            updateConfigAndRun();\n          }\n        }, () => {\n          activePlugin = null;\n          onCancelPatternPrompt();\n        });\n      } else {\n        activePlugin = null;\n      }\n    }\n    switch (key) {\n      case _jestWatcher().KEYS.ENTER:\n        startRun(globalConfig);\n        break;\n      case 'a':\n        globalConfig = (0, _updateGlobalConfig.default)(globalConfig, {\n          mode: 'watchAll',\n          testNamePattern: '',\n          testPathPattern: ''\n        });\n        startRun(globalConfig);\n        break;\n      case 'c':\n        updateConfigAndRun({\n          mode: 'watch',\n          testNamePattern: '',\n          testPathPattern: ''\n        });\n        break;\n      case 'f':\n        globalConfig = (0, _updateGlobalConfig.default)(globalConfig, {\n          onlyFailures: !globalConfig.onlyFailures\n        });\n        startRun(globalConfig);\n        break;\n      case 'o':\n        globalConfig = (0, _updateGlobalConfig.default)(globalConfig, {\n          mode: 'watch',\n          testNamePattern: '',\n          testPathPattern: ''\n        });\n        startRun(globalConfig);\n        break;\n      case '?':\n        break;\n      case 'w':\n        if (!shouldDisplayWatchUsage && !isWatchUsageDisplayed) {\n          outputStream.write(_ansiEscapes().default.cursorUp());\n          outputStream.write(_ansiEscapes().default.eraseDown);\n          outputStream.write(usage(globalConfig, watchPlugins));\n          isWatchUsageDisplayed = true;\n          shouldDisplayWatchUsage = false;\n        }\n        break;\n    }\n  };\n  const onCancelPatternPrompt = () => {\n    outputStream.write(_ansiEscapes().default.cursorHide);\n    outputStream.write(_jestUtil().specialChars.CLEAR);\n    outputStream.write(usage(globalConfig, watchPlugins));\n    outputStream.write(_ansiEscapes().default.cursorShow);\n  };\n  if (typeof stdin.setRawMode === 'function') {\n    stdin.setRawMode(true);\n    stdin.resume();\n    stdin.setEncoding('utf8');\n    stdin.on('data', onKeypress);\n  }\n  startRun(globalConfig);\n  return Promise.resolve();\n}\nconst checkForConflicts = (watchPluginKeys, plugin, globalConfig) => {\n  const key = getPluginKey(plugin, globalConfig);\n  if (!key) {\n    return;\n  }\n  const conflictor = watchPluginKeys.get(key);\n  if (!conflictor || conflictor.overwritable) {\n    watchPluginKeys.set(key, {\n      overwritable: false,\n      plugin\n    });\n    return;\n  }\n  let error;\n  if (conflictor.forbiddenOverwriteMessage) {\n    error = `\n  Watch plugin ${_chalk().default.bold.red(getPluginIdentifier(plugin))} attempted to register key ${_chalk().default.bold.red(`<${key}>`)},\n  that is reserved internally for ${_chalk().default.bold.red(conflictor.forbiddenOverwriteMessage)}.\n  Please change the configuration key for this plugin.`.trim();\n  } else {\n    const plugins = [conflictor.plugin, plugin].map(p => _chalk().default.bold.red(getPluginIdentifier(p))).join(' and ');\n    error = `\n  Watch plugins ${plugins} both attempted to register key ${_chalk().default.bold.red(`<${key}>`)}.\n  Please change the key configuration for one of the conflicting plugins to avoid overlap.`.trim();\n  }\n  throw new (_jestValidate().ValidationError)('Watch plugin configuration error', error);\n};\nconst getPluginIdentifier = (plugin // This breaks as `displayName` is not defined as a static, but since\n) =>\n// WatchPlugin is an interface, and it is my understanding interface\n// static fields are not definable anymore, no idea how to circumvent\n// this :-(\n// @ts-expect-error: leave `displayName` be.\nplugin.constructor.displayName || plugin.constructor.name;\nconst getPluginKey = (plugin, globalConfig) => {\n  if (typeof plugin.getUsageInfo === 'function') {\n    return (plugin.getUsageInfo(globalConfig) || {\n      key: null\n    }).key;\n  }\n  return null;\n};\nconst usage = (globalConfig, watchPlugins, delimiter = '\\n') => {\n  const messages = [(0, _activeFiltersMessage.default)(globalConfig), globalConfig.testPathPattern || globalConfig.testNamePattern ? _chalk().default.dim(' \\u203A Press ') + 'c' + _chalk().default.dim(' to clear filters.') : null, '\\n' + _chalk().default.bold('Watch Usage'), globalConfig.watch ? _chalk().default.dim(' \\u203A Press ') + 'a' + _chalk().default.dim(' to run all tests.') : null, globalConfig.onlyFailures ? _chalk().default.dim(' \\u203A Press ') + 'f' + _chalk().default.dim(' to quit \"only failed tests\" mode.') : _chalk().default.dim(' \\u203A Press ') + 'f' + _chalk().default.dim(' to run only failed tests.'), (globalConfig.watchAll || globalConfig.testPathPattern || globalConfig.testNamePattern) && !globalConfig.noSCM ? _chalk().default.dim(' \\u203A Press ') + 'o' + _chalk().default.dim(' to only run tests related to changed files.') : null, ...(0, _watchPluginsHelpers.getSortedUsageRows)(watchPlugins, globalConfig).map(plugin => _chalk().default.dim(' \\u203A Press') + ' ' + plugin.key + ' ' + _chalk().default.dim(`to ${plugin.prompt}.`)), _chalk().default.dim(' \\u203A Press ') + 'Enter' + _chalk().default.dim(' to trigger a test run.')];\n  return messages.filter(message => !!message).join(delimiter) + '\\n';\n};\nconst showToggleUsagePrompt = () => '\\n' + _chalk().default.bold('Watch Usage: ') + _chalk().default.dim('Press ') + 'w' + _chalk().default.dim(' to show more.');","map":{"version":3,"names":["Object","defineProperty","exports","value","default","watch","path","data","_interopRequireWildcard","require","_ansiEscapes","_interopRequireDefault","_chalk","_exit","_slash","_jestMessageUtil","_jestUtil","_jestValidate","_jestWatcher","_FailedTestsCache","_SearchSource","_TestWatcher","_getChangedFilesPromise","_activeFiltersMessage","_createContext","_isValidPath","_updateGlobalConfig","_watchPluginsHelpers","_FailedTestsInteractive","_Quit","_TestNamePattern","_TestPathPattern","_UpdateSnapshots","_UpdateSnapshotsInteractive","_runJest","obj","__esModule","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","cache","has","get","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","print","preRunMessagePrint","preRunMessage","hasExitListener","INTERNAL_PLUGINS","RESERVED_KEY_PLUGINS","Map","forbiddenOverwriteMessage","initialGlobalConfig","contexts","outputStream","hasteMapInstances","stdin","process","hooks","JestHook","filter","globalConfig","activePlugin","mode","passWithNoTests","updateConfigAndRun","bail","changedSince","collectCoverage","collectCoverageFrom","collectCoverageOnlyFrom","coverageDirectory","coverageReporters","findRelatedTests","nonFlagArgs","notify","notifyMode","onlyFailures","reporters","testNamePattern","testPathPattern","updateSnapshot","verbose","previousUpdateSnapshot","startRun","watchPlugins","map","InternalPlugin","stdout","forEach","plugin","hookSubscriber","getSubscriber","apply","watchPluginKeys","reservedInfo","constructor","getPluginKey","overwritable","pluginWithConfig","ThirdPartyPlugin","requireOrImportModule","config","error","errorWithContext","Error","bold","relative","cwd","formatExecError","noStackTrace","stack","Promise","reject","checkForConflicts","push","failedTestsCache","searchSources","context","searchSource","isRunning","testWatcher","shouldDisplayWatchUsage","isWatchUsageDisplayed","emitFileChange","isUsed","projects","testPaths","findMatchingTests","tests","t","getEmitter","onFileChange","hasteMapInstance","index","on","eventsQueue","hasteFS","moduleMap","validPaths","filePath","length","slice","write","cursorDown","eraseDown","resolve","isWatchMode","isInteractive","specialChars","CLEAR","configs","changedFilesPromise","jestHooks","onComplete","results","onTestRunComplete","usage","showToggleUsagePrompt","setTestResults","testResults","catch","console","onKeypress","KEYS","CONTROL_C","CONTROL_D","setRawMode","onKey","pluginKeys","getSortedUsageRows","Number","toString","ENTER","concat","includes","setState","interrupted","matchingWatchPlugin","filterInteractivePlugins","find","run","then","shouldRerun","onCancelPatternPrompt","cursorUp","cursorHide","cursorShow","resume","setEncoding","conflictor","red","getPluginIdentifier","trim","plugins","p","join","ValidationError","displayName","name","getUsageInfo","delimiter","messages","dim","watchAll","noSCM","prompt","message"],"sources":["C:/Users/chest/OneDrive/Documentos/GitHub/HackUPC/frontend/node_modules/@jest/core/build/watch.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.default = watch;\n\nfunction path() {\n  const data = _interopRequireWildcard(require('path'));\n\n  path = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _ansiEscapes() {\n  const data = _interopRequireDefault(require('ansi-escapes'));\n\n  _ansiEscapes = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _chalk() {\n  const data = _interopRequireDefault(require('chalk'));\n\n  _chalk = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _exit() {\n  const data = _interopRequireDefault(require('exit'));\n\n  _exit = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _slash() {\n  const data = _interopRequireDefault(require('slash'));\n\n  _slash = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _jestMessageUtil() {\n  const data = require('jest-message-util');\n\n  _jestMessageUtil = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _jestUtil() {\n  const data = require('jest-util');\n\n  _jestUtil = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _jestValidate() {\n  const data = require('jest-validate');\n\n  _jestValidate = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _jestWatcher() {\n  const data = require('jest-watcher');\n\n  _jestWatcher = function () {\n    return data;\n  };\n\n  return data;\n}\n\nvar _FailedTestsCache = _interopRequireDefault(require('./FailedTestsCache'));\n\nvar _SearchSource = _interopRequireDefault(require('./SearchSource'));\n\nvar _TestWatcher = _interopRequireDefault(require('./TestWatcher'));\n\nvar _getChangedFilesPromise = _interopRequireDefault(\n  require('./getChangedFilesPromise')\n);\n\nvar _activeFiltersMessage = _interopRequireDefault(\n  require('./lib/activeFiltersMessage')\n);\n\nvar _createContext = _interopRequireDefault(require('./lib/createContext'));\n\nvar _isValidPath = _interopRequireDefault(require('./lib/isValidPath'));\n\nvar _updateGlobalConfig = _interopRequireDefault(\n  require('./lib/updateGlobalConfig')\n);\n\nvar _watchPluginsHelpers = require('./lib/watchPluginsHelpers');\n\nvar _FailedTestsInteractive = _interopRequireDefault(\n  require('./plugins/FailedTestsInteractive')\n);\n\nvar _Quit = _interopRequireDefault(require('./plugins/Quit'));\n\nvar _TestNamePattern = _interopRequireDefault(\n  require('./plugins/TestNamePattern')\n);\n\nvar _TestPathPattern = _interopRequireDefault(\n  require('./plugins/TestPathPattern')\n);\n\nvar _UpdateSnapshots = _interopRequireDefault(\n  require('./plugins/UpdateSnapshots')\n);\n\nvar _UpdateSnapshotsInteractive = _interopRequireDefault(\n  require('./plugins/UpdateSnapshotsInteractive')\n);\n\nvar _runJest = _interopRequireDefault(require('./runJest'));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {default: obj};\n}\n\nfunction _getRequireWildcardCache(nodeInterop) {\n  if (typeof WeakMap !== 'function') return null;\n  var cacheBabelInterop = new WeakMap();\n  var cacheNodeInterop = new WeakMap();\n  return (_getRequireWildcardCache = function (nodeInterop) {\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n  })(nodeInterop);\n}\n\nfunction _interopRequireWildcard(obj, nodeInterop) {\n  if (!nodeInterop && obj && obj.__esModule) {\n    return obj;\n  }\n  if (obj === null || (typeof obj !== 'object' && typeof obj !== 'function')) {\n    return {default: obj};\n  }\n  var cache = _getRequireWildcardCache(nodeInterop);\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n  var newObj = {};\n  var hasPropertyDescriptor =\n    Object.defineProperty && Object.getOwnPropertyDescriptor;\n  for (var key in obj) {\n    if (key !== 'default' && Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor\n        ? Object.getOwnPropertyDescriptor(obj, key)\n        : null;\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n  newObj.default = obj;\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n  return newObj;\n}\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nconst {print: preRunMessagePrint} = _jestUtil().preRunMessage;\n\nlet hasExitListener = false;\nconst INTERNAL_PLUGINS = [\n  _FailedTestsInteractive.default,\n  _TestPathPattern.default,\n  _TestNamePattern.default,\n  _UpdateSnapshots.default,\n  _UpdateSnapshotsInteractive.default,\n  _Quit.default\n];\nconst RESERVED_KEY_PLUGINS = new Map([\n  [\n    _UpdateSnapshots.default,\n    {\n      forbiddenOverwriteMessage: 'updating snapshots',\n      key: 'u'\n    }\n  ],\n  [\n    _UpdateSnapshotsInteractive.default,\n    {\n      forbiddenOverwriteMessage: 'updating snapshots interactively',\n      key: 'i'\n    }\n  ],\n  [\n    _Quit.default,\n    {\n      forbiddenOverwriteMessage: 'quitting watch mode'\n    }\n  ]\n]);\n\nasync function watch(\n  initialGlobalConfig,\n  contexts,\n  outputStream,\n  hasteMapInstances,\n  stdin = process.stdin,\n  hooks = new (_jestWatcher().JestHook)(),\n  filter\n) {\n  // `globalConfig` will be constantly updated and reassigned as a result of\n  // watch mode interactions.\n  let globalConfig = initialGlobalConfig;\n  let activePlugin;\n  globalConfig = (0, _updateGlobalConfig.default)(globalConfig, {\n    mode: globalConfig.watch ? 'watch' : 'watchAll',\n    passWithNoTests: true\n  });\n\n  const updateConfigAndRun = ({\n    bail,\n    changedSince,\n    collectCoverage,\n    collectCoverageFrom,\n    collectCoverageOnlyFrom,\n    coverageDirectory,\n    coverageReporters,\n    findRelatedTests,\n    mode,\n    nonFlagArgs,\n    notify,\n    notifyMode,\n    onlyFailures,\n    reporters,\n    testNamePattern,\n    testPathPattern,\n    updateSnapshot,\n    verbose\n  } = {}) => {\n    const previousUpdateSnapshot = globalConfig.updateSnapshot;\n    globalConfig = (0, _updateGlobalConfig.default)(globalConfig, {\n      bail,\n      changedSince,\n      collectCoverage,\n      collectCoverageFrom,\n      collectCoverageOnlyFrom,\n      coverageDirectory,\n      coverageReporters,\n      findRelatedTests,\n      mode,\n      nonFlagArgs,\n      notify,\n      notifyMode,\n      onlyFailures,\n      reporters,\n      testNamePattern,\n      testPathPattern,\n      updateSnapshot,\n      verbose\n    });\n    startRun(globalConfig);\n    globalConfig = (0, _updateGlobalConfig.default)(globalConfig, {\n      // updateSnapshot is not sticky after a run.\n      updateSnapshot:\n        previousUpdateSnapshot === 'all' ? 'none' : previousUpdateSnapshot\n    });\n  };\n\n  const watchPlugins = INTERNAL_PLUGINS.map(\n    InternalPlugin =>\n      new InternalPlugin({\n        stdin,\n        stdout: outputStream\n      })\n  );\n  watchPlugins.forEach(plugin => {\n    const hookSubscriber = hooks.getSubscriber();\n\n    if (plugin.apply) {\n      plugin.apply(hookSubscriber);\n    }\n  });\n\n  if (globalConfig.watchPlugins != null) {\n    const watchPluginKeys = new Map();\n\n    for (const plugin of watchPlugins) {\n      const reservedInfo = RESERVED_KEY_PLUGINS.get(plugin.constructor) || {};\n      const key = reservedInfo.key || getPluginKey(plugin, globalConfig);\n\n      if (!key) {\n        continue;\n      }\n\n      const {forbiddenOverwriteMessage} = reservedInfo;\n      watchPluginKeys.set(key, {\n        forbiddenOverwriteMessage,\n        overwritable: forbiddenOverwriteMessage == null,\n        plugin\n      });\n    }\n\n    for (const pluginWithConfig of globalConfig.watchPlugins) {\n      let plugin;\n\n      try {\n        const ThirdPartyPlugin = await (0, _jestUtil().requireOrImportModule)(\n          pluginWithConfig.path\n        );\n        plugin = new ThirdPartyPlugin({\n          config: pluginWithConfig.config,\n          stdin,\n          stdout: outputStream\n        });\n      } catch (error) {\n        const errorWithContext = new Error(\n          `Failed to initialize watch plugin \"${_chalk().default.bold(\n            (0, _slash().default)(\n              path().relative(process.cwd(), pluginWithConfig.path)\n            )\n          )}\":\\n\\n${(0, _jestMessageUtil().formatExecError)(\n            error,\n            contexts[0].config,\n            {\n              noStackTrace: false\n            }\n          )}`\n        );\n        delete errorWithContext.stack;\n        return Promise.reject(errorWithContext);\n      }\n\n      checkForConflicts(watchPluginKeys, plugin, globalConfig);\n      const hookSubscriber = hooks.getSubscriber();\n\n      if (plugin.apply) {\n        plugin.apply(hookSubscriber);\n      }\n\n      watchPlugins.push(plugin);\n    }\n  }\n\n  const failedTestsCache = new _FailedTestsCache.default();\n  let searchSources = contexts.map(context => ({\n    context,\n    searchSource: new _SearchSource.default(context)\n  }));\n  let isRunning = false;\n  let testWatcher;\n  let shouldDisplayWatchUsage = true;\n  let isWatchUsageDisplayed = false;\n\n  const emitFileChange = () => {\n    if (hooks.isUsed('onFileChange')) {\n      const projects = searchSources.map(({context, searchSource}) => ({\n        config: context.config,\n        testPaths: searchSource.findMatchingTests('').tests.map(t => t.path)\n      }));\n      hooks.getEmitter().onFileChange({\n        projects\n      });\n    }\n  };\n\n  emitFileChange();\n  hasteMapInstances.forEach((hasteMapInstance, index) => {\n    hasteMapInstance.on('change', ({eventsQueue, hasteFS, moduleMap}) => {\n      const validPaths = eventsQueue.filter(({filePath}) =>\n        (0, _isValidPath.default)(globalConfig, filePath)\n      );\n\n      if (validPaths.length) {\n        const context = (contexts[index] = (0, _createContext.default)(\n          contexts[index].config,\n          {\n            hasteFS,\n            moduleMap\n          }\n        ));\n        activePlugin = null;\n        searchSources = searchSources.slice();\n        searchSources[index] = {\n          context,\n          searchSource: new _SearchSource.default(context)\n        };\n        emitFileChange();\n        startRun(globalConfig);\n      }\n    });\n  });\n\n  if (!hasExitListener) {\n    hasExitListener = true;\n    process.on('exit', () => {\n      if (activePlugin) {\n        outputStream.write(_ansiEscapes().default.cursorDown());\n        outputStream.write(_ansiEscapes().default.eraseDown);\n      }\n    });\n  }\n\n  const startRun = globalConfig => {\n    if (isRunning) {\n      return Promise.resolve(null);\n    }\n\n    testWatcher = new _TestWatcher.default({\n      isWatchMode: true\n    });\n    _jestUtil().isInteractive &&\n      outputStream.write(_jestUtil().specialChars.CLEAR);\n    preRunMessagePrint(outputStream);\n    isRunning = true;\n    const configs = contexts.map(context => context.config);\n    const changedFilesPromise = (0, _getChangedFilesPromise.default)(\n      globalConfig,\n      configs\n    );\n    return (0, _runJest.default)({\n      changedFilesPromise,\n      contexts,\n      failedTestsCache,\n      filter,\n      globalConfig,\n      jestHooks: hooks.getEmitter(),\n      onComplete: results => {\n        isRunning = false;\n        hooks.getEmitter().onTestRunComplete(results); // Create a new testWatcher instance so that re-runs won't be blocked.\n        // The old instance that was passed to Jest will still be interrupted\n        // and prevent test runs from the previous run.\n\n        testWatcher = new _TestWatcher.default({\n          isWatchMode: true\n        }); // Do not show any Watch Usage related stuff when running in a\n        // non-interactive environment\n\n        if (_jestUtil().isInteractive) {\n          if (shouldDisplayWatchUsage) {\n            outputStream.write(usage(globalConfig, watchPlugins));\n            shouldDisplayWatchUsage = false; // hide Watch Usage after first run\n\n            isWatchUsageDisplayed = true;\n          } else {\n            outputStream.write(showToggleUsagePrompt());\n            shouldDisplayWatchUsage = false;\n            isWatchUsageDisplayed = false;\n          }\n        } else {\n          outputStream.write('\\n');\n        }\n\n        failedTestsCache.setTestResults(results.testResults);\n      },\n      outputStream,\n      startRun,\n      testWatcher\n    }).catch(\n      (\n        error // Errors thrown inside `runJest`, e.g. by resolvers, are caught here for\n      ) =>\n        // continuous watch mode execution. We need to reprint them to the\n        // terminal and give just a little bit of extra space so they fit below\n        // `preRunMessagePrint` message nicely.\n        console.error(\n          '\\n\\n' +\n            (0, _jestMessageUtil().formatExecError)(error, contexts[0].config, {\n              noStackTrace: false\n            })\n        )\n    );\n  };\n\n  const onKeypress = key => {\n    if (\n      key === _jestWatcher().KEYS.CONTROL_C ||\n      key === _jestWatcher().KEYS.CONTROL_D\n    ) {\n      if (typeof stdin.setRawMode === 'function') {\n        stdin.setRawMode(false);\n      }\n\n      outputStream.write('\\n');\n      (0, _exit().default)(0);\n      return;\n    }\n\n    if (activePlugin != null && activePlugin.onKey) {\n      // if a plugin is activate, Jest should let it handle keystrokes, so ignore\n      // them here\n      activePlugin.onKey(key);\n      return;\n    } // Abort test run\n\n    const pluginKeys = (0, _watchPluginsHelpers.getSortedUsageRows)(\n      watchPlugins,\n      globalConfig\n    ).map(usage => Number(usage.key).toString(16));\n\n    if (\n      isRunning &&\n      testWatcher &&\n      ['q', _jestWatcher().KEYS.ENTER, 'a', 'o', 'f']\n        .concat(pluginKeys)\n        .includes(key)\n    ) {\n      testWatcher.setState({\n        interrupted: true\n      });\n      return;\n    }\n\n    const matchingWatchPlugin = (0,\n    _watchPluginsHelpers.filterInteractivePlugins)(\n      watchPlugins,\n      globalConfig\n    ).find(plugin => getPluginKey(plugin, globalConfig) === key);\n\n    if (matchingWatchPlugin != null) {\n      if (isRunning) {\n        testWatcher.setState({\n          interrupted: true\n        });\n        return;\n      } // \"activate\" the plugin, which has jest ignore keystrokes so the plugin\n      // can handle them\n\n      activePlugin = matchingWatchPlugin;\n\n      if (activePlugin.run) {\n        activePlugin.run(globalConfig, updateConfigAndRun).then(\n          shouldRerun => {\n            activePlugin = null;\n\n            if (shouldRerun) {\n              updateConfigAndRun();\n            }\n          },\n          () => {\n            activePlugin = null;\n            onCancelPatternPrompt();\n          }\n        );\n      } else {\n        activePlugin = null;\n      }\n    }\n\n    switch (key) {\n      case _jestWatcher().KEYS.ENTER:\n        startRun(globalConfig);\n        break;\n\n      case 'a':\n        globalConfig = (0, _updateGlobalConfig.default)(globalConfig, {\n          mode: 'watchAll',\n          testNamePattern: '',\n          testPathPattern: ''\n        });\n        startRun(globalConfig);\n        break;\n\n      case 'c':\n        updateConfigAndRun({\n          mode: 'watch',\n          testNamePattern: '',\n          testPathPattern: ''\n        });\n        break;\n\n      case 'f':\n        globalConfig = (0, _updateGlobalConfig.default)(globalConfig, {\n          onlyFailures: !globalConfig.onlyFailures\n        });\n        startRun(globalConfig);\n        break;\n\n      case 'o':\n        globalConfig = (0, _updateGlobalConfig.default)(globalConfig, {\n          mode: 'watch',\n          testNamePattern: '',\n          testPathPattern: ''\n        });\n        startRun(globalConfig);\n        break;\n\n      case '?':\n        break;\n\n      case 'w':\n        if (!shouldDisplayWatchUsage && !isWatchUsageDisplayed) {\n          outputStream.write(_ansiEscapes().default.cursorUp());\n          outputStream.write(_ansiEscapes().default.eraseDown);\n          outputStream.write(usage(globalConfig, watchPlugins));\n          isWatchUsageDisplayed = true;\n          shouldDisplayWatchUsage = false;\n        }\n\n        break;\n    }\n  };\n\n  const onCancelPatternPrompt = () => {\n    outputStream.write(_ansiEscapes().default.cursorHide);\n    outputStream.write(_jestUtil().specialChars.CLEAR);\n    outputStream.write(usage(globalConfig, watchPlugins));\n    outputStream.write(_ansiEscapes().default.cursorShow);\n  };\n\n  if (typeof stdin.setRawMode === 'function') {\n    stdin.setRawMode(true);\n    stdin.resume();\n    stdin.setEncoding('utf8');\n    stdin.on('data', onKeypress);\n  }\n\n  startRun(globalConfig);\n  return Promise.resolve();\n}\n\nconst checkForConflicts = (watchPluginKeys, plugin, globalConfig) => {\n  const key = getPluginKey(plugin, globalConfig);\n\n  if (!key) {\n    return;\n  }\n\n  const conflictor = watchPluginKeys.get(key);\n\n  if (!conflictor || conflictor.overwritable) {\n    watchPluginKeys.set(key, {\n      overwritable: false,\n      plugin\n    });\n    return;\n  }\n\n  let error;\n\n  if (conflictor.forbiddenOverwriteMessage) {\n    error = `\n  Watch plugin ${_chalk().default.bold.red(\n    getPluginIdentifier(plugin)\n  )} attempted to register key ${_chalk().default.bold.red(`<${key}>`)},\n  that is reserved internally for ${_chalk().default.bold.red(\n    conflictor.forbiddenOverwriteMessage\n  )}.\n  Please change the configuration key for this plugin.`.trim();\n  } else {\n    const plugins = [conflictor.plugin, plugin]\n      .map(p => _chalk().default.bold.red(getPluginIdentifier(p)))\n      .join(' and ');\n    error = `\n  Watch plugins ${plugins} both attempted to register key ${_chalk().default.bold.red(\n      `<${key}>`\n    )}.\n  Please change the key configuration for one of the conflicting plugins to avoid overlap.`.trim();\n  }\n\n  throw new (_jestValidate().ValidationError)(\n    'Watch plugin configuration error',\n    error\n  );\n};\n\nconst getPluginIdentifier = (\n  plugin // This breaks as `displayName` is not defined as a static, but since\n) =>\n  // WatchPlugin is an interface, and it is my understanding interface\n  // static fields are not definable anymore, no idea how to circumvent\n  // this :-(\n  // @ts-expect-error: leave `displayName` be.\n  plugin.constructor.displayName || plugin.constructor.name;\n\nconst getPluginKey = (plugin, globalConfig) => {\n  if (typeof plugin.getUsageInfo === 'function') {\n    return (\n      plugin.getUsageInfo(globalConfig) || {\n        key: null\n      }\n    ).key;\n  }\n\n  return null;\n};\n\nconst usage = (globalConfig, watchPlugins, delimiter = '\\n') => {\n  const messages = [\n    (0, _activeFiltersMessage.default)(globalConfig),\n    globalConfig.testPathPattern || globalConfig.testNamePattern\n      ? _chalk().default.dim(' \\u203A Press ') +\n        'c' +\n        _chalk().default.dim(' to clear filters.')\n      : null,\n    '\\n' + _chalk().default.bold('Watch Usage'),\n    globalConfig.watch\n      ? _chalk().default.dim(' \\u203A Press ') +\n        'a' +\n        _chalk().default.dim(' to run all tests.')\n      : null,\n    globalConfig.onlyFailures\n      ? _chalk().default.dim(' \\u203A Press ') +\n        'f' +\n        _chalk().default.dim(' to quit \"only failed tests\" mode.')\n      : _chalk().default.dim(' \\u203A Press ') +\n        'f' +\n        _chalk().default.dim(' to run only failed tests.'),\n    (globalConfig.watchAll ||\n      globalConfig.testPathPattern ||\n      globalConfig.testNamePattern) &&\n    !globalConfig.noSCM\n      ? _chalk().default.dim(' \\u203A Press ') +\n        'o' +\n        _chalk().default.dim(' to only run tests related to changed files.')\n      : null,\n    ...(0, _watchPluginsHelpers.getSortedUsageRows)(\n      watchPlugins,\n      globalConfig\n    ).map(\n      plugin =>\n        _chalk().default.dim(' \\u203A Press') +\n        ' ' +\n        plugin.key +\n        ' ' +\n        _chalk().default.dim(`to ${plugin.prompt}.`)\n    ),\n    _chalk().default.dim(' \\u203A Press ') +\n      'Enter' +\n      _chalk().default.dim(' to trigger a test run.')\n  ];\n  return messages.filter(message => !!message).join(delimiter) + '\\n';\n};\n\nconst showToggleUsagePrompt = () =>\n  '\\n' +\n  _chalk().default.bold('Watch Usage: ') +\n  _chalk().default.dim('Press ') +\n  'w' +\n  _chalk().default.dim(' to show more.');\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}