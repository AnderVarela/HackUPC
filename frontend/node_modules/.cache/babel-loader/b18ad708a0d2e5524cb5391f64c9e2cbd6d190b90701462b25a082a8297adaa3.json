{"ast":null,"code":"'use strict';\n\nvar $ = require('../internals/export');\nvar isIntegralNumber = require('../internals/is-integral-number');\nvar abs = Math.abs;\n\n// `Number.isSafeInteger` method\n// https://tc39.es/ecma262/#sec-number.issafeinteger\n$({\n  target: 'Number',\n  stat: true\n}, {\n  isSafeInteger: function isSafeInteger(number) {\n    return isIntegralNumber(number) && abs(number) <= 0x1FFFFFFFFFFFFF;\n  }\n});","map":{"version":3,"names":["$","require","isIntegralNumber","abs","Math","target","stat","isSafeInteger","number"],"sources":["C:/Users/chest/OneDrive/Documentos/GitHub/HackUPC/frontend/node_modules/core-js/modules/es.number.is-safe-integer.js"],"sourcesContent":["'use strict';\nvar $ = require('../internals/export');\nvar isIntegralNumber = require('../internals/is-integral-number');\n\nvar abs = Math.abs;\n\n// `Number.isSafeInteger` method\n// https://tc39.es/ecma262/#sec-number.issafeinteger\n$({ target: 'Number', stat: true }, {\n  isSafeInteger: function isSafeInteger(number) {\n    return isIntegralNumber(number) && abs(number) <= 0x1FFFFFFFFFFFFF;\n  }\n});\n"],"mappings":"AAAA,YAAY;;AACZ,IAAIA,CAAC,GAAGC,OAAO,CAAC,qBAAqB,CAAC;AACtC,IAAIC,gBAAgB,GAAGD,OAAO,CAAC,iCAAiC,CAAC;AAEjE,IAAIE,GAAG,GAAGC,IAAI,CAACD,GAAG;;AAElB;AACA;AACAH,CAAC,CAAC;EAAEK,MAAM,EAAE,QAAQ;EAAEC,IAAI,EAAE;AAAK,CAAC,EAAE;EAClCC,aAAa,EAAE,SAASA,aAAaA,CAACC,MAAM,EAAE;IAC5C,OAAON,gBAAgB,CAACM,MAAM,CAAC,IAAIL,GAAG,CAACK,MAAM,CAAC,IAAI,gBAAgB;EACpE;AACF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}