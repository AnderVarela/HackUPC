{"ast":null,"code":"/*globals define, module, Symbol, Map, Set */\n/*jshint -W056 */\n\n(function (globals) {\n  'use strict';\n\n  var messages, predicates, functions, assert, not, maybe, collections, hasOwnProperty, toString, keys, slice, isArray, neginf, posinf, haveSymbols, haveMaps, haveSets;\n  messages = {};\n  predicates = {};\n  [{\n    n: 'equal',\n    f: equal,\n    s: 'equal {e}'\n  }, {\n    n: 'undefined',\n    f: isUndefined,\n    s: 'be undefined'\n  }, {\n    n: 'null',\n    f: isNull,\n    s: 'be null'\n  }, {\n    n: 'assigned',\n    f: assigned,\n    s: 'be assigned'\n  }, {\n    n: 'primitive',\n    f: primitive,\n    s: 'be primitive type'\n  }, {\n    n: 'contains',\n    f: contains,\n    s: 'contain {e}'\n  }, {\n    n: 'in',\n    f: isIn,\n    s: 'be in {e}'\n  }, {\n    n: 'containsKey',\n    f: containsKey,\n    s: 'contain key {e}'\n  }, {\n    n: 'keyIn',\n    f: keyIn,\n    s: 'be key in {e}'\n  }, {\n    n: 'zero',\n    f: zero,\n    s: 'be 0'\n  }, {\n    n: 'one',\n    f: one,\n    s: 'be 1'\n  }, {\n    n: 'infinity',\n    f: infinity,\n    s: 'be infinity'\n  }, {\n    n: 'number',\n    f: number,\n    s: 'be Number'\n  }, {\n    n: 'integer',\n    f: integer,\n    s: 'be integer'\n  }, {\n    n: 'float',\n    f: float,\n    s: 'be non-integer number'\n  }, {\n    n: 'even',\n    f: even,\n    s: 'be even number'\n  }, {\n    n: 'odd',\n    f: odd,\n    s: 'be odd number'\n  }, {\n    n: 'greater',\n    f: greater,\n    s: 'be greater than {e}'\n  }, {\n    n: 'less',\n    f: less,\n    s: 'be less than {e}'\n  }, {\n    n: 'between',\n    f: between,\n    s: 'be between {e} and {e2}'\n  }, {\n    n: 'greaterOrEqual',\n    f: greaterOrEqual,\n    s: 'be greater than or equal to {e}'\n  }, {\n    n: 'lessOrEqual',\n    f: lessOrEqual,\n    s: 'be less than or equal to {e}'\n  }, {\n    n: 'inRange',\n    f: inRange,\n    s: 'be in the range {e} to {e2}'\n  }, {\n    n: 'positive',\n    f: positive,\n    s: 'be positive number'\n  }, {\n    n: 'negative',\n    f: negative,\n    s: 'be negative number'\n  }, {\n    n: 'string',\n    f: string,\n    s: 'be String'\n  }, {\n    n: 'emptyString',\n    f: emptyString,\n    s: 'be empty string'\n  }, {\n    n: 'nonEmptyString',\n    f: nonEmptyString,\n    s: 'be non-empty string'\n  }, {\n    n: 'match',\n    f: match,\n    s: 'match {e}'\n  }, {\n    n: 'boolean',\n    f: boolean,\n    s: 'be Boolean'\n  }, {\n    n: 'object',\n    f: object,\n    s: 'be Object'\n  }, {\n    n: 'emptyObject',\n    f: emptyObject,\n    s: 'be empty object'\n  }, {\n    n: 'nonEmptyObject',\n    f: nonEmptyObject,\n    s: 'be non-empty object'\n  }, {\n    n: 'instanceStrict',\n    f: instanceStrict,\n    s: 'be instanceof {t}'\n  }, {\n    n: 'thenable',\n    f: thenable,\n    s: 'be promise-like'\n  }, {\n    n: 'instance',\n    f: instance,\n    s: 'be {t}'\n  }, {\n    n: 'like',\n    f: like,\n    s: 'be like {e}'\n  }, {\n    n: 'identical',\n    f: identical,\n    s: 'be identical to {e}'\n  }, {\n    n: 'array',\n    f: array,\n    s: 'be Array'\n  }, {\n    n: 'emptyArray',\n    f: emptyArray,\n    s: 'be empty array'\n  }, {\n    n: 'nonEmptyArray',\n    f: nonEmptyArray,\n    s: 'be non-empty array'\n  }, {\n    n: 'arrayLike',\n    f: arrayLike,\n    s: 'be array-like'\n  }, {\n    n: 'iterable',\n    f: iterable,\n    s: 'be iterable'\n  }, {\n    n: 'date',\n    f: date,\n    s: 'be valid Date'\n  }, {\n    n: 'function',\n    f: isFunction,\n    s: 'be Function'\n  }, {\n    n: 'hasLength',\n    f: hasLength,\n    s: 'have length {e}'\n  }, {\n    n: 'throws',\n    f: throws,\n    s: 'throw'\n  }].map(function (data) {\n    var n = data.n;\n    messages[n] = 'assert failed: expected {a} to ' + data.s;\n    predicates[n] = data.f;\n  });\n  functions = {\n    map: map,\n    all: all,\n    any: any\n  };\n  collections = ['array', 'arrayLike', 'iterable', 'object'];\n  hasOwnProperty = Object.prototype.hasOwnProperty;\n  toString = Object.prototype.toString;\n  keys = Object.keys;\n  slice = Array.prototype.slice;\n  isArray = Array.isArray;\n  neginf = Number.NEGATIVE_INFINITY;\n  posinf = Number.POSITIVE_INFINITY;\n  haveSymbols = typeof Symbol === 'function';\n  haveMaps = typeof Map === 'function';\n  haveSets = typeof Set === 'function';\n  functions = mixin(functions, predicates);\n  assert = createModifiedPredicates(assertModifier, assertImpl);\n  not = createModifiedPredicates(notModifier, notImpl);\n  maybe = createModifiedPredicates(maybeModifier, maybeImpl);\n  assert.not = createModifiedModifier(assertModifier, not, 'not ');\n  assert.maybe = createModifiedModifier(assertModifier, maybe, 'maybe ');\n  collections.forEach(createOfPredicates);\n  createOfModifiers(assert, assertModifier);\n  createOfModifiers(not, notModifier);\n  collections.forEach(createMaybeOfModifiers);\n  exportFunctions(mixin(functions, {\n    assert: assert,\n    not: not,\n    maybe: maybe\n  }));\n\n  /**\n   * Public function `equal`.\n   *\n   * Returns true if `lhs` and `rhs` are strictly equal, without coercion.\n   * Returns false otherwise.\n   */\n  function equal(lhs, rhs) {\n    return lhs === rhs;\n  }\n\n  /**\n   * Public function `undefined`.\n   *\n   * Returns true if `data` is undefined, false otherwise.\n   */\n  function isUndefined(data) {\n    return data === undefined;\n  }\n\n  /**\n   * Public function `null`.\n   *\n   * Returns true if `data` is null, false otherwise.\n   */\n  function isNull(data) {\n    return data === null;\n  }\n\n  /**\n   * Public function `assigned`.\n   *\n   * Returns true if `data` is not null or undefined, false otherwise.\n   */\n  function assigned(data) {\n    return data !== undefined && data !== null;\n  }\n\n  /**\n   * Public function `primitive`.\n   *\n   * Returns true if `data` is a primitive type, false otherwise.\n   */\n  function primitive(data) {\n    var type;\n    switch (data) {\n      case null:\n      case undefined:\n      case false:\n      case true:\n        return true;\n    }\n    type = typeof data;\n    return type === 'string' || type === 'number' || haveSymbols && type === 'symbol';\n  }\n\n  /**\n   * Public function `zero`.\n   *\n   * Returns true if `data` is zero, false otherwise.\n   */\n  function zero(data) {\n    return data === 0;\n  }\n\n  /**\n   * Public function `one`.\n   *\n   * Returns true if `data` is one, false otherwise.\n   */\n  function one(data) {\n    return data === 1;\n  }\n\n  /**\n   * Public function `infinity`.\n   *\n   * Returns true if `data` is positive or negative infinity, false otherwise.\n   */\n  function infinity(data) {\n    return data === neginf || data === posinf;\n  }\n\n  /**\n   * Public function `number`.\n   *\n   * Returns true if `data` is a number, false otherwise.\n   */\n  function number(data) {\n    return typeof data === 'number' && data > neginf && data < posinf;\n  }\n\n  /**\n   * Public function `integer`.\n   *\n   * Returns true if `data` is an integer, false otherwise.\n   */\n  function integer(data) {\n    return typeof data === 'number' && data % 1 === 0;\n  }\n\n  /**\n   * Public function `float`.\n   *\n   * Returns true if `data` is a non-integer number, false otherwise.\n   */\n  function float(data) {\n    return number(data) && data % 1 !== 0;\n  }\n\n  /**\n   * Public function `even`.\n   *\n   * Returns true if `data` is an even number, false otherwise.\n   */\n  function even(data) {\n    return typeof data === 'number' && data % 2 === 0;\n  }\n\n  /**\n   * Public function `odd`.\n   *\n   * Returns true if `data` is an odd number, false otherwise.\n   */\n  function odd(data) {\n    return integer(data) && data % 2 !== 0;\n  }\n\n  /**\n   * Public function `greater`.\n   *\n   * Returns true if `lhs` is a number greater than `rhs`, false otherwise.\n   */\n  function greater(lhs, rhs) {\n    return number(lhs) && lhs > rhs;\n  }\n\n  /**\n   * Public function `less`.\n   *\n   * Returns true if `lhs` is a number less than `rhs`, false otherwise.\n   */\n  function less(lhs, rhs) {\n    return number(lhs) && lhs < rhs;\n  }\n\n  /**\n   * Public function `between`.\n   *\n   * Returns true if `data` is a number between `x` and `y`, false otherwise.\n   */\n  function between(data, x, y) {\n    if (x < y) {\n      return greater(data, x) && data < y;\n    }\n    return less(data, x) && data > y;\n  }\n\n  /**\n   * Public function `greaterOrEqual`.\n   *\n   * Returns true if `lhs` is a number greater than or equal to `rhs`, false\n   * otherwise.\n   */\n  function greaterOrEqual(lhs, rhs) {\n    return number(lhs) && lhs >= rhs;\n  }\n\n  /**\n   * Public function `lessOrEqual`.\n   *\n   * Returns true if `lhs` is a number less than or equal to `rhs`, false\n   * otherwise.\n   */\n  function lessOrEqual(lhs, rhs) {\n    return number(lhs) && lhs <= rhs;\n  }\n\n  /**\n   * Public function `inRange`.\n   *\n   * Returns true if `data` is a number in the range `x..y`, false otherwise.\n   */\n  function inRange(data, x, y) {\n    if (x < y) {\n      return greaterOrEqual(data, x) && data <= y;\n    }\n    return lessOrEqual(data, x) && data >= y;\n  }\n\n  /**\n   * Public function `positive`.\n   *\n   * Returns true if `data` is a positive number, false otherwise.\n   */\n  function positive(data) {\n    return greater(data, 0);\n  }\n\n  /**\n   * Public function `negative`.\n   *\n   * Returns true if `data` is a negative number, false otherwise.\n   */\n  function negative(data) {\n    return less(data, 0);\n  }\n\n  /**\n   * Public function `string`.\n   *\n   * Returns true if `data` is a string, false otherwise.\n   */\n  function string(data) {\n    return typeof data === 'string';\n  }\n\n  /**\n   * Public function `emptyString`.\n   *\n   * Returns true if `data` is the empty string, false otherwise.\n   */\n  function emptyString(data) {\n    return data === '';\n  }\n\n  /**\n   * Public function `nonEmptyString`.\n   *\n   * Returns true if `data` is a non-empty string, false otherwise.\n   */\n  function nonEmptyString(data) {\n    return string(data) && data !== '';\n  }\n\n  /**\n   * Public function `match`.\n   *\n   * Returns true if `data` is a string that matches `regex`, false otherwise.\n   */\n  function match(data, regex) {\n    return string(data) && !!data.match(regex);\n  }\n\n  /**\n   * Public function `boolean`.\n   *\n   * Returns true if `data` is a boolean value, false otherwise.\n   */\n  function boolean(data) {\n    return data === false || data === true;\n  }\n\n  /**\n   * Public function `object`.\n   *\n   * Returns true if `data` is a plain-old JS object, false otherwise.\n   */\n  function object(data) {\n    return toString.call(data) === '[object Object]';\n  }\n\n  /**\n   * Public function `emptyObject`.\n   *\n   * Returns true if `data` is an empty object, false otherwise.\n   */\n  function emptyObject(data) {\n    return object(data) && !some(data, function () {\n      return true;\n    });\n  }\n  function some(data, predicate) {\n    for (var key in data) {\n      if (hasOwnProperty.call(data, key)) {\n        if (predicate(key, data[key])) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Public function `nonEmptyObject`.\n   *\n   * Returns true if `data` is a non-empty object, false otherwise.\n   */\n  function nonEmptyObject(data) {\n    return object(data) && some(data, function () {\n      return true;\n    });\n  }\n\n  /**\n   * Public function `thenable`.\n   *\n   * Returns true if `data` has a `then` method.\n   */\n  function thenable(data) {\n    return assigned(data) && isFunction(data.then);\n  }\n\n  /**\n   * Public function `instanceStrict`.\n   *\n   * Returns true if `data` is an instance of `prototype`, false otherwise.\n   */\n  function instanceStrict(data, prototype) {\n    try {\n      return data instanceof prototype;\n    } catch (error) {\n      return false;\n    }\n  }\n\n  /**\n   * Public function `instance`.\n   *\n   * Returns true if `data` is an instance of `prototype`, false otherwise.\n   * Falls back to testing constructor.name and Object.prototype.toString\n   * if the initial instanceof test fails.\n   */\n  function instance(data, prototype) {\n    try {\n      return instanceStrict(data, prototype) || data.constructor.name === prototype.name || toString.call(data) === '[object ' + prototype.name + ']';\n    } catch (error) {\n      return false;\n    }\n  }\n\n  /**\n   * Public function `like`.\n   *\n   * Tests whether `data` 'quacks like a duck'. Returns true if `data` has all\n   * of the properties of `archetype` (the 'duck'), false otherwise. Interrogates\n   * objects recursively, to arbitrary depth.\n   */\n  function like(data, archetype) {\n    var name;\n    if (!assigned(data) || !assigned(archetype)) {\n      return data === archetype;\n    }\n    for (name in archetype) {\n      if (hasOwnProperty.call(archetype, name)) {\n        if (!hasOwnProperty.call(data, name) || typeof data[name] !== typeof archetype[name]) {\n          return false;\n        }\n        if (object(data[name]) && !like(data[name], archetype[name])) {\n          return false;\n        }\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Public function `identical`.\n   *\n   * Tests whether `data` has all of the same properties and values as `archetype`.\n   * Interrogates objects recursively, to arbitrary depth.\n   */\n  function identical(data, archetype) {\n    var name;\n    if (!assigned(data) || !assigned(archetype)) {\n      return data === archetype;\n    }\n    for (name in archetype) {\n      if (hasOwnProperty.call(archetype, name)) {\n        if (!hasOwnProperty.call(data, name)) {\n          return false;\n        }\n        if (object(data[name])) {\n          if (!identical(data[name], archetype[name])) {\n            return false;\n          }\n        } else if (data[name] !== archetype[name]) {\n          return false;\n        }\n      }\n    }\n    for (name in data) {\n      if (hasOwnProperty.call(data, name)) {\n        if (!hasOwnProperty.call(archetype, name)) {\n          return false;\n        }\n        if (object(archetype[name])) {\n          if (!identical(archetype[name], data[name])) {\n            return false;\n          }\n        } else if (archetype[name] !== data[name]) {\n          return false;\n        }\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Public function `array`.\n   *\n   * Returns true if `data` is an array, false otherwise.\n   */\n  function array(data) {\n    return isArray(data);\n  }\n\n  /**\n   * Public function `emptyArray`.\n   *\n   * Returns true if `data` is an empty array, false otherwise.\n   */\n  function emptyArray(data) {\n    return isArray(data) && data.length === 0;\n  }\n\n  /**\n   * Public function `nonEmptyArray`.\n   *\n   * Returns true if `data` is a non-empty array, false otherwise.\n   */\n  function nonEmptyArray(data) {\n    return isArray(data) && data.length > 0;\n  }\n\n  /**\n   * Public function `arrayLike`.\n   *\n   * Returns true if `data` is an array-like object, false otherwise.\n   */\n  function arrayLike(data) {\n    return assigned(data) && data.length >= 0;\n  }\n\n  /**\n   * Public function `iterable`.\n   *\n   * Returns true if `data` is an iterable, false otherwise.\n   */\n  function iterable(data) {\n    if (!haveSymbols) {\n      // Fall back to `arrayLike` predicate in pre-ES6 environments.\n      return arrayLike(data);\n    }\n    return assigned(data) && isFunction(data[Symbol.iterator]);\n  }\n\n  /**\n   * Public function `contains`.\n   *\n   * Returns true if `data` contains `value`, false otherwise.\n   * Works with objects, arrays and array-likes (including strings).\n   */\n  function contains(data, value) {\n    var iterator, iteration;\n    if (!assigned(data)) {\n      return false;\n    }\n    if (haveSets && instanceStrict(data, Set)) {\n      return data.has(value);\n    }\n    if (string(data)) {\n      return data.indexOf(value) !== -1;\n    }\n    if (haveSymbols && data[Symbol.iterator] && isFunction(data.values)) {\n      iterator = data.values();\n      do {\n        iteration = iterator.next();\n        if (iteration.value === value) {\n          return true;\n        }\n      } while (!iteration.done);\n      return false;\n    }\n    return some(data, function (key, dataValue) {\n      return dataValue === value;\n    });\n  }\n\n  /**\n   * Public function `in`.\n   *\n   * Returns true if `value` is in `data`, false otherwise.\n   * Like `contains`, but with arguments flipped.\n   */\n  function isIn(value, data) {\n    return contains(data, value);\n  }\n\n  /**\n   * Public function `containsKey`.\n   *\n   * Returns true if `data` contains key `key`, false otherwise.\n   * Works with objects, arrays and array-likes (including strings).\n   */\n  function containsKey(data, key) {\n    if (!assigned(data)) {\n      return false;\n    }\n    if (haveMaps && instanceStrict(data, Map)) {\n      return data.has(key);\n    }\n    if (iterable(data) && !number(+key)) {\n      return false;\n    }\n    return !!data[key];\n  }\n\n  /**\n   * Public function `keyIn`.\n   *\n   * Returns true if key `key` is in `data`, false otherwise.\n   * Like `contains`, but with arguments flipped.\n   */\n  function keyIn(key, data) {\n    return containsKey(data, key);\n  }\n\n  /**\n   * Public function `hasLength`.\n   *\n   * Returns true if `data` has a length property that equals `length`, false\n   * otherwise.\n   */\n  function hasLength(data, length) {\n    return assigned(data) && data.length === length;\n  }\n\n  /**\n   * Public function `date`.\n   *\n   * Returns true if `data` is a valid date, false otherwise.\n   */\n  function date(data) {\n    return instanceStrict(data, Date) && integer(data.getTime());\n  }\n\n  /**\n   * Public function `function`.\n   *\n   * Returns true if `data` is a function, false otherwise.\n   */\n  function isFunction(data) {\n    return typeof data === 'function';\n  }\n\n  /**\n   * Public function `throws`.\n   *\n   * Returns true if `data` is a function that throws, false otherwise.\n   */\n  function throws(data) {\n    if (!isFunction(data)) {\n      return false;\n    }\n    try {\n      data();\n    } catch (error) {\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Public function `map`.\n   *\n   * Maps each value from `data` to the corresponding predicate and returns\n   * the results. If the same function is to be applied across all of the data,\n   * a single predicate function may be passed in.\n   */\n  function map(data, predicates) {\n    var result;\n    if (isArray(data)) {\n      result = [];\n    } else {\n      result = {};\n    }\n    if (isFunction(predicates)) {\n      forEach(data, function (key, value) {\n        result[key] = predicates(value);\n      });\n    } else {\n      if (!isArray(predicates)) {\n        assert.object(predicates);\n      }\n      var dataKeys = keys(data || {});\n      forEach(predicates, function (key, predicate) {\n        dataKeys.some(function (dataKey, index) {\n          if (dataKey === key) {\n            dataKeys.splice(index, 1);\n            return true;\n          }\n          return false;\n        });\n        if (isFunction(predicate)) {\n          if (not.assigned(data)) {\n            result[key] = !!predicate.m;\n          } else {\n            result[key] = predicate(data[key]);\n          }\n        } else {\n          result[key] = map(data[key], predicate);\n        }\n      });\n    }\n    return result;\n  }\n  function forEach(object, action) {\n    for (var key in object) {\n      if (hasOwnProperty.call(object, key)) {\n        action(key, object[key]);\n      }\n    }\n  }\n\n  /**\n   * Public function `all`\n   *\n   * Check that all boolean values are true\n   * in an array or object returned from `map`.\n   */\n  function all(data) {\n    if (isArray(data)) {\n      return testArray(data, false);\n    }\n    assert.object(data);\n    return testObject(data, false);\n  }\n  function testArray(data, result) {\n    var i;\n    for (i = 0; i < data.length; i += 1) {\n      if (data[i] === result) {\n        return result;\n      }\n    }\n    return !result;\n  }\n  function testObject(data, result) {\n    var key, value;\n    for (key in data) {\n      if (hasOwnProperty.call(data, key)) {\n        value = data[key];\n        if (object(value) && testObject(value, result) === result) {\n          return result;\n        }\n        if (value === result) {\n          return result;\n        }\n      }\n    }\n    return !result;\n  }\n\n  /**\n   * Public function `any`\n   *\n   * Check that at least one boolean value is true\n   * in an array or object returned from `map`.\n   */\n  function any(data) {\n    if (isArray(data)) {\n      return testArray(data, true);\n    }\n    assert.object(data);\n    return testObject(data, true);\n  }\n  function mixin(target, source) {\n    forEach(source, function (key, value) {\n      target[key] = value;\n    });\n    return target;\n  }\n\n  /**\n   * Public modifier `assert`.\n   *\n   * Throws if `predicate` returns false.\n   */\n  function assertModifier(predicate, defaultMessage) {\n    return function () {\n      var args = arguments;\n      var argCount = predicate.l || predicate.length;\n      var message = args[argCount];\n      var ErrorType = args[argCount + 1];\n      assertImpl(predicate.apply(null, args), nonEmptyString(message) ? message : defaultMessage.replace('{a}', messageFormatter(args[0])).replace('{e}', messageFormatter(args[1])).replace('{e2}', messageFormatter(args[2])).replace('{t}', function () {\n        var arg = args[1];\n        if (arg && arg.name) {\n          return arg.name;\n        }\n        return arg;\n      }), isFunction(ErrorType) ? ErrorType : TypeError);\n      return args[0];\n    };\n  }\n  function messageFormatter(arg) {\n    return function () {\n      if (string(arg)) {\n        return '\"' + arg.replace(/\\\\/g, '\\\\\\\\').replace(/\"/g, '\\\\\"') + '\"';\n      }\n      if (arg && arg !== true && arg.constructor && !instanceStrict(arg, RegExp) && typeof arg !== 'number') {\n        return arg.constructor.name;\n      }\n      return arg;\n    };\n  }\n  function assertImpl(value, message, ErrorType) {\n    if (value) {\n      return value;\n    }\n    throw new (ErrorType || Error)(message || 'assert failed');\n  }\n\n  /**\n   * Public modifier `not`.\n   *\n   * Negates `predicate`.\n   */\n  function notModifier(predicate) {\n    var modifiedPredicate = function () {\n      return notImpl(predicate.apply(null, arguments));\n    };\n    modifiedPredicate.l = predicate.length;\n    return modifiedPredicate;\n  }\n  function notImpl(value) {\n    return !value;\n  }\n\n  /**\n   * Public modifier `maybe`.\n   *\n   * Returns true if predicate argument is  null or undefined,\n   * otherwise propagates the return value from `predicate`.\n   */\n  function maybeModifier(predicate) {\n    var modifiedPredicate = function () {\n      if (not.assigned(arguments[0])) {\n        return true;\n      }\n      return predicate.apply(null, arguments);\n    };\n    modifiedPredicate.l = predicate.length;\n\n    // Hackishly indicate that this is a maybe.xxx predicate.\n    // Without this flag, the alternative would be to iterate\n    // through the maybe predicates or use indexOf to check,\n    // which would be time-consuming.\n    modifiedPredicate.m = true;\n    return modifiedPredicate;\n  }\n  function maybeImpl(value) {\n    if (!assigned(value)) {\n      return true;\n    }\n    return value;\n  }\n\n  /**\n   * Public modifier `of`.\n   *\n   * Applies the chained predicate to members of the collection.\n   */\n  function ofModifier(target, type, predicate) {\n    var modifiedPredicate = function () {\n      var collection, args;\n      collection = arguments[0];\n      if (target === 'maybe' && not.assigned(collection)) {\n        return true;\n      }\n      if (!type(collection)) {\n        return false;\n      }\n      collection = coerceCollection(type, collection);\n      args = slice.call(arguments, 1);\n      try {\n        collection.forEach(function (item) {\n          if ((target !== 'maybe' || assigned(item)) && !predicate.apply(null, [item].concat(args))) {\n            // TODO: Replace with for...of when ES6 is required.\n            throw 0;\n          }\n        });\n      } catch (ignore) {\n        return false;\n      }\n      return true;\n    };\n    modifiedPredicate.l = predicate.length;\n    return modifiedPredicate;\n  }\n  function coerceCollection(type, collection) {\n    switch (type) {\n      case arrayLike:\n        return slice.call(collection);\n      case object:\n        return keys(collection).map(function (key) {\n          return collection[key];\n        });\n      default:\n        return collection;\n    }\n  }\n  function createModifiedPredicates(modifier, object) {\n    return createModifiedFunctions([modifier, predicates, object, '']);\n  }\n  function createModifiedFunctions(args) {\n    var modifier, messageModifier, object, functions;\n    modifier = args.shift();\n    messageModifier = args.pop();\n    object = args.pop();\n    functions = args.pop();\n    forEach(functions, function (key, fn) {\n      var message = messages[key];\n      if (message && messageModifier) {\n        message = message.replace('to', messageModifier + 'to');\n      }\n      Object.defineProperty(object, key, {\n        configurable: false,\n        enumerable: true,\n        writable: false,\n        value: modifier.apply(null, args.concat(fn, message))\n      });\n    });\n    return object;\n  }\n  function createModifiedModifier(modifier, modified, messageModifier) {\n    return createModifiedFunctions([modifier, modified, {}, messageModifier]);\n  }\n  function createOfPredicates(key) {\n    predicates[key].of = createModifiedFunctions([ofModifier.bind(null, null), predicates[key], predicates, {}, '']);\n  }\n  function createOfModifiers(base, modifier) {\n    collections.forEach(function (key) {\n      base[key].of = createModifiedModifier(modifier, predicates[key].of);\n    });\n  }\n  function createMaybeOfModifiers(key) {\n    maybe[key].of = createModifiedFunctions([ofModifier.bind(null, 'maybe'), predicates[key], predicates, {}, '']);\n    assert.maybe[key].of = createModifiedModifier(assertModifier, maybe[key].of);\n    assert.not[key].of = createModifiedModifier(assertModifier, not[key].of);\n  }\n  function exportFunctions(functions) {\n    if (typeof define === 'function' && define.amd) {\n      define(function () {\n        return functions;\n      });\n    } else if (typeof module !== 'undefined' && module !== null && module.exports) {\n      module.exports = functions;\n    } else {\n      globals.check = functions;\n    }\n  }\n})(this);","map":{"version":3,"names":["globals","messages","predicates","functions","assert","not","maybe","collections","hasOwnProperty","toString","keys","slice","isArray","neginf","posinf","haveSymbols","haveMaps","haveSets","n","f","equal","s","isUndefined","isNull","assigned","primitive","contains","isIn","containsKey","keyIn","zero","one","infinity","number","integer","float","even","odd","greater","less","between","greaterOrEqual","lessOrEqual","inRange","positive","negative","string","emptyString","nonEmptyString","match","boolean","object","emptyObject","nonEmptyObject","instanceStrict","thenable","instance","like","identical","array","emptyArray","nonEmptyArray","arrayLike","iterable","date","isFunction","hasLength","throws","map","data","all","any","Object","prototype","Array","Number","NEGATIVE_INFINITY","POSITIVE_INFINITY","Symbol","Map","Set","mixin","createModifiedPredicates","assertModifier","assertImpl","notModifier","notImpl","maybeModifier","maybeImpl","createModifiedModifier","forEach","createOfPredicates","createOfModifiers","createMaybeOfModifiers","exportFunctions","lhs","rhs","undefined","type","x","y","regex","call","some","predicate","key","then","error","constructor","name","archetype","length","iterator","value","iteration","has","indexOf","values","next","done","dataValue","Date","getTime","result","dataKeys","dataKey","index","splice","m","action","testArray","testObject","i","target","source","defaultMessage","args","arguments","argCount","l","message","ErrorType","apply","replace","messageFormatter","arg","TypeError","RegExp","Error","modifiedPredicate","ofModifier","collection","coerceCollection","item","concat","ignore","modifier","createModifiedFunctions","messageModifier","shift","pop","fn","defineProperty","configurable","enumerable","writable","modified","of","bind","base","define","amd","module","exports","check"],"sources":["C:/Users/chest/OneDrive/Documentos/GitHub/HackUPC/frontend/node_modules/check-types/src/check-types.js"],"sourcesContent":["/*globals define, module, Symbol, Map, Set */\n/*jshint -W056 */\n\n(function (globals) {\n  'use strict';\n\n  var messages, predicates, functions, assert, not, maybe, collections,\n     hasOwnProperty, toString, keys, slice, isArray, neginf, posinf,\n     haveSymbols, haveMaps, haveSets;\n\n  messages = {};\n  predicates = {};\n\n  [\n    { n: 'equal', f: equal, s: 'equal {e}' },\n    { n: 'undefined', f: isUndefined, s: 'be undefined' },\n    { n: 'null', f: isNull, s: 'be null' },\n    { n: 'assigned', f: assigned, s: 'be assigned' },\n    { n: 'primitive', f: primitive, s: 'be primitive type' },\n    { n: 'contains', f: contains, s: 'contain {e}' },\n    { n: 'in', f: isIn, s: 'be in {e}' },\n    { n: 'containsKey', f: containsKey, s: 'contain key {e}' },\n    { n: 'keyIn', f: keyIn, s: 'be key in {e}' },\n    { n: 'zero', f: zero, s: 'be 0' },\n    { n: 'one', f: one, s: 'be 1' },\n    { n: 'infinity', f: infinity, s: 'be infinity' },\n    { n: 'number', f: number, s: 'be Number' },\n    { n: 'integer', f: integer, s: 'be integer' },\n    { n: 'float', f: float, s: 'be non-integer number' },\n    { n: 'even', f: even, s: 'be even number' },\n    { n: 'odd', f: odd, s: 'be odd number' },\n    { n: 'greater', f: greater, s: 'be greater than {e}' },\n    { n: 'less', f: less, s: 'be less than {e}' },\n    { n: 'between', f: between, s: 'be between {e} and {e2}' },\n    { n: 'greaterOrEqual', f: greaterOrEqual, s: 'be greater than or equal to {e}' },\n    { n: 'lessOrEqual', f: lessOrEqual, s: 'be less than or equal to {e}' },\n    { n: 'inRange', f: inRange, s: 'be in the range {e} to {e2}' },\n    { n: 'positive', f: positive, s: 'be positive number' },\n    { n: 'negative', f: negative, s: 'be negative number' },\n    { n: 'string', f: string, s: 'be String' },\n    { n: 'emptyString', f: emptyString, s: 'be empty string' },\n    { n: 'nonEmptyString', f: nonEmptyString, s: 'be non-empty string' },\n    { n: 'match', f: match, s: 'match {e}' },\n    { n: 'boolean', f: boolean, s: 'be Boolean' },\n    { n: 'object', f: object, s: 'be Object' },\n    { n: 'emptyObject', f: emptyObject, s: 'be empty object' },\n    { n: 'nonEmptyObject', f: nonEmptyObject, s: 'be non-empty object' },\n    { n: 'instanceStrict', f: instanceStrict, s: 'be instanceof {t}' },\n    { n: 'thenable', f: thenable, s: 'be promise-like' },\n    { n: 'instance', f: instance, s: 'be {t}' },\n    { n: 'like', f: like, s: 'be like {e}' },\n    { n: 'identical', f: identical, s: 'be identical to {e}' },\n    { n: 'array', f: array, s: 'be Array' },\n    { n: 'emptyArray', f: emptyArray, s: 'be empty array' },\n    { n: 'nonEmptyArray', f: nonEmptyArray, s: 'be non-empty array' },\n    { n: 'arrayLike', f: arrayLike, s: 'be array-like' },\n    { n: 'iterable', f: iterable, s: 'be iterable' },\n    { n: 'date', f: date, s: 'be valid Date' },\n    { n: 'function', f: isFunction, s: 'be Function' },\n    { n: 'hasLength', f: hasLength, s: 'have length {e}' },\n    { n: 'throws', f: throws, s: 'throw' }\n  ].map(function (data) {\n    var n = data.n;\n    messages[n] = 'assert failed: expected {a} to ' + data.s;\n    predicates[n] = data.f;\n  });\n\n  functions = {\n    map: map,\n    all: all,\n    any: any\n  };\n\n  collections = [ 'array', 'arrayLike', 'iterable', 'object' ];\n  hasOwnProperty = Object.prototype.hasOwnProperty;\n  toString = Object.prototype.toString;\n  keys = Object.keys;\n  slice = Array.prototype.slice;\n  isArray = Array.isArray;\n  neginf = Number.NEGATIVE_INFINITY;\n  posinf = Number.POSITIVE_INFINITY;\n  haveSymbols = typeof Symbol === 'function';\n  haveMaps = typeof Map === 'function';\n  haveSets = typeof Set === 'function';\n\n  functions = mixin(functions, predicates);\n  assert = createModifiedPredicates(assertModifier, assertImpl);\n  not = createModifiedPredicates(notModifier, notImpl);\n  maybe = createModifiedPredicates(maybeModifier, maybeImpl);\n  assert.not = createModifiedModifier(assertModifier, not, 'not ');\n  assert.maybe = createModifiedModifier(assertModifier, maybe, 'maybe ');\n\n  collections.forEach(createOfPredicates);\n  createOfModifiers(assert, assertModifier);\n  createOfModifiers(not, notModifier);\n  collections.forEach(createMaybeOfModifiers);\n\n  exportFunctions(mixin(functions, {\n    assert: assert,\n    not: not,\n    maybe: maybe\n  }));\n\n  /**\n   * Public function `equal`.\n   *\n   * Returns true if `lhs` and `rhs` are strictly equal, without coercion.\n   * Returns false otherwise.\n   */\n  function equal (lhs, rhs) {\n    return lhs === rhs;\n  }\n\n  /**\n   * Public function `undefined`.\n   *\n   * Returns true if `data` is undefined, false otherwise.\n   */\n  function isUndefined (data) {\n    return data === undefined;\n  }\n\n  /**\n   * Public function `null`.\n   *\n   * Returns true if `data` is null, false otherwise.\n   */\n  function isNull (data) {\n    return data === null;\n  }\n\n  /**\n   * Public function `assigned`.\n   *\n   * Returns true if `data` is not null or undefined, false otherwise.\n   */\n  function assigned (data) {\n    return data !== undefined && data !== null;\n  }\n\n  /**\n   * Public function `primitive`.\n   *\n   * Returns true if `data` is a primitive type, false otherwise.\n   */\n  function primitive (data) {\n    var type;\n\n    switch (data) {\n      case null:\n      case undefined:\n      case false:\n      case true:\n        return true;\n    }\n\n    type = typeof data;\n    return type === 'string' || type === 'number' || (haveSymbols && type === 'symbol');\n  }\n\n  /**\n   * Public function `zero`.\n   *\n   * Returns true if `data` is zero, false otherwise.\n   */\n  function zero (data) {\n    return data === 0;\n  }\n\n  /**\n   * Public function `one`.\n   *\n   * Returns true if `data` is one, false otherwise.\n   */\n  function one (data) {\n    return data === 1;\n  }\n\n  /**\n   * Public function `infinity`.\n   *\n   * Returns true if `data` is positive or negative infinity, false otherwise.\n   */\n  function infinity (data) {\n    return data === neginf || data === posinf;\n  }\n\n  /**\n   * Public function `number`.\n   *\n   * Returns true if `data` is a number, false otherwise.\n   */\n  function number (data) {\n    return typeof data === 'number' && data > neginf && data < posinf;\n  }\n\n  /**\n   * Public function `integer`.\n   *\n   * Returns true if `data` is an integer, false otherwise.\n   */\n  function integer (data) {\n    return typeof data === 'number' && data % 1 === 0;\n  }\n\n  /**\n   * Public function `float`.\n   *\n   * Returns true if `data` is a non-integer number, false otherwise.\n   */\n  function float (data) {\n    return number(data) && data % 1 !== 0;\n  }\n\n  /**\n   * Public function `even`.\n   *\n   * Returns true if `data` is an even number, false otherwise.\n   */\n  function even (data) {\n    return typeof data === 'number' && data % 2 === 0;\n  }\n\n  /**\n   * Public function `odd`.\n   *\n   * Returns true if `data` is an odd number, false otherwise.\n   */\n  function odd (data) {\n    return integer(data) && data % 2 !== 0;\n  }\n\n  /**\n   * Public function `greater`.\n   *\n   * Returns true if `lhs` is a number greater than `rhs`, false otherwise.\n   */\n  function greater (lhs, rhs) {\n    return number(lhs) && lhs > rhs;\n  }\n\n  /**\n   * Public function `less`.\n   *\n   * Returns true if `lhs` is a number less than `rhs`, false otherwise.\n   */\n  function less (lhs, rhs) {\n    return number(lhs) && lhs < rhs;\n  }\n\n  /**\n   * Public function `between`.\n   *\n   * Returns true if `data` is a number between `x` and `y`, false otherwise.\n   */\n  function between (data, x, y) {\n    if (x < y) {\n      return greater(data, x) && data < y;\n    }\n\n    return less(data, x) && data > y;\n  }\n\n  /**\n   * Public function `greaterOrEqual`.\n   *\n   * Returns true if `lhs` is a number greater than or equal to `rhs`, false\n   * otherwise.\n   */\n  function greaterOrEqual (lhs, rhs) {\n    return number(lhs) && lhs >= rhs;\n  }\n\n  /**\n   * Public function `lessOrEqual`.\n   *\n   * Returns true if `lhs` is a number less than or equal to `rhs`, false\n   * otherwise.\n   */\n  function lessOrEqual (lhs, rhs) {\n    return number(lhs) && lhs <= rhs;\n  }\n\n  /**\n   * Public function `inRange`.\n   *\n   * Returns true if `data` is a number in the range `x..y`, false otherwise.\n   */\n  function inRange (data, x, y) {\n    if (x < y) {\n      return greaterOrEqual(data, x) && data <= y;\n    }\n\n    return lessOrEqual(data, x) && data >= y;\n  }\n\n  /**\n   * Public function `positive`.\n   *\n   * Returns true if `data` is a positive number, false otherwise.\n   */\n  function positive (data) {\n    return greater(data, 0);\n  }\n\n  /**\n   * Public function `negative`.\n   *\n   * Returns true if `data` is a negative number, false otherwise.\n   */\n  function negative (data) {\n    return less(data, 0);\n  }\n\n  /**\n   * Public function `string`.\n   *\n   * Returns true if `data` is a string, false otherwise.\n   */\n  function string (data) {\n    return typeof data === 'string';\n  }\n\n  /**\n   * Public function `emptyString`.\n   *\n   * Returns true if `data` is the empty string, false otherwise.\n   */\n  function emptyString (data) {\n    return data === '';\n  }\n\n  /**\n   * Public function `nonEmptyString`.\n   *\n   * Returns true if `data` is a non-empty string, false otherwise.\n   */\n  function nonEmptyString (data) {\n    return string(data) && data !== '';\n  }\n\n  /**\n   * Public function `match`.\n   *\n   * Returns true if `data` is a string that matches `regex`, false otherwise.\n   */\n  function match (data, regex) {\n    return string(data) && !! data.match(regex);\n  }\n\n  /**\n   * Public function `boolean`.\n   *\n   * Returns true if `data` is a boolean value, false otherwise.\n   */\n  function boolean (data) {\n    return data === false || data === true;\n  }\n\n  /**\n   * Public function `object`.\n   *\n   * Returns true if `data` is a plain-old JS object, false otherwise.\n   */\n  function object (data) {\n    return toString.call(data) === '[object Object]';\n  }\n\n  /**\n   * Public function `emptyObject`.\n   *\n   * Returns true if `data` is an empty object, false otherwise.\n   */\n  function emptyObject (data) {\n    return object(data) && ! some(data, function () {\n      return true;\n    });\n  }\n\n  function some (data, predicate) {\n    for (var key in data) {\n      if (hasOwnProperty.call(data, key)) {\n        if (predicate(key, data[key])) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * Public function `nonEmptyObject`.\n   *\n   * Returns true if `data` is a non-empty object, false otherwise.\n   */\n  function nonEmptyObject (data) {\n    return object(data) && some(data, function () {\n      return true;\n    });\n  }\n\n  /**\n   * Public function `thenable`.\n   *\n   * Returns true if `data` has a `then` method.\n   */\n  function thenable (data) {\n    return assigned(data) && isFunction(data.then);\n  }\n\n  /**\n   * Public function `instanceStrict`.\n   *\n   * Returns true if `data` is an instance of `prototype`, false otherwise.\n   */\n  function instanceStrict (data, prototype) {\n    try {\n      return data instanceof prototype;\n    } catch (error) {\n      return false;\n    }\n  }\n\n  /**\n   * Public function `instance`.\n   *\n   * Returns true if `data` is an instance of `prototype`, false otherwise.\n   * Falls back to testing constructor.name and Object.prototype.toString\n   * if the initial instanceof test fails.\n   */\n  function instance (data, prototype) {\n    try {\n      return instanceStrict(data, prototype) ||\n        data.constructor.name === prototype.name ||\n        toString.call(data) === '[object ' + prototype.name + ']';\n    } catch (error) {\n      return false;\n    }\n  }\n\n  /**\n   * Public function `like`.\n   *\n   * Tests whether `data` 'quacks like a duck'. Returns true if `data` has all\n   * of the properties of `archetype` (the 'duck'), false otherwise. Interrogates\n   * objects recursively, to arbitrary depth.\n   */\n  function like (data, archetype) {\n    var name;\n\n    if (! assigned(data) || ! assigned(archetype)) {\n      return data === archetype;\n    }\n\n    for (name in archetype) {\n      if (hasOwnProperty.call(archetype, name)) {\n        if (! hasOwnProperty.call(data, name) || typeof data[name] !== typeof archetype[name]) {\n          return false;\n        }\n\n        if (object(data[name]) && ! like(data[name], archetype[name])) {\n          return false;\n        }\n      }\n    }\n\n    return true;\n  }\n\n  /**\n   * Public function `identical`.\n   *\n   * Tests whether `data` has all of the same properties and values as `archetype`.\n   * Interrogates objects recursively, to arbitrary depth.\n   */\n  function identical (data, archetype) {\n    var name;\n\n    if (! assigned(data) || ! assigned(archetype)) {\n      return data === archetype;\n    }\n\n    for (name in archetype) {\n      if (hasOwnProperty.call(archetype, name)) {\n        if (! hasOwnProperty.call(data, name)) {\n          return false;\n        }\n\n        if (object(data[name])) {\n          if (! identical(data[name], archetype[name])) {\n            return false;\n          }\n        } else if (data[name] !== archetype[name]) {\n          return false;\n        }\n      }\n    }\n\n    for (name in data) {\n      if (hasOwnProperty.call(data, name)) {\n        if (! hasOwnProperty.call(archetype, name)) {\n          return false;\n        }\n\n        if (object(archetype[name])) {\n          if (! identical(archetype[name], data[name])) {\n            return false;\n          }\n        } else if (archetype[name] !== data[name]) {\n          return false;\n        }\n      }\n    }\n\n    return true;\n  }\n\n  /**\n   * Public function `array`.\n   *\n   * Returns true if `data` is an array, false otherwise.\n   */\n  function array (data) {\n    return isArray(data);\n  }\n\n  /**\n   * Public function `emptyArray`.\n   *\n   * Returns true if `data` is an empty array, false otherwise.\n   */\n  function emptyArray (data) {\n    return isArray(data) && data.length === 0;\n  }\n\n  /**\n   * Public function `nonEmptyArray`.\n   *\n   * Returns true if `data` is a non-empty array, false otherwise.\n   */\n  function nonEmptyArray (data) {\n    return isArray(data) && data.length > 0;\n  }\n\n  /**\n   * Public function `arrayLike`.\n   *\n   * Returns true if `data` is an array-like object, false otherwise.\n   */\n  function arrayLike (data) {\n    return assigned(data) && data.length >= 0;\n  }\n\n  /**\n   * Public function `iterable`.\n   *\n   * Returns true if `data` is an iterable, false otherwise.\n   */\n  function iterable (data) {\n    if (! haveSymbols) {\n      // Fall back to `arrayLike` predicate in pre-ES6 environments.\n      return arrayLike(data);\n    }\n\n    return assigned(data) && isFunction(data[Symbol.iterator]);\n  }\n\n  /**\n   * Public function `contains`.\n   *\n   * Returns true if `data` contains `value`, false otherwise.\n   * Works with objects, arrays and array-likes (including strings).\n   */\n  function contains (data, value) {\n    var iterator, iteration;\n\n    if (! assigned(data)) {\n      return false;\n    }\n\n    if (haveSets && instanceStrict(data, Set)) {\n      return data.has(value);\n    }\n\n    if (string(data)) {\n      return data.indexOf(value) !== -1;\n    }\n\n    if (haveSymbols && data[Symbol.iterator] && isFunction(data.values)) {\n      iterator = data.values();\n\n      do {\n        iteration = iterator.next();\n\n        if (iteration.value === value) {\n          return true;\n        }\n      } while (! iteration.done);\n\n      return false;\n    }\n\n    return some(data, function (key, dataValue) {\n      return dataValue === value;\n    });\n  }\n\n  /**\n   * Public function `in`.\n   *\n   * Returns true if `value` is in `data`, false otherwise.\n   * Like `contains`, but with arguments flipped.\n   */\n  function isIn (value, data) {\n    return contains(data, value);\n  }\n\n  /**\n   * Public function `containsKey`.\n   *\n   * Returns true if `data` contains key `key`, false otherwise.\n   * Works with objects, arrays and array-likes (including strings).\n   */\n  function containsKey (data, key) {\n    if (! assigned(data)) {\n      return false;\n    }\n\n    if (haveMaps && instanceStrict(data, Map)) {\n      return data.has(key);\n    }\n\n    if (iterable(data) && ! number(+key)) {\n      return false;\n    }\n\n    return !! data[key];\n  }\n\n  /**\n   * Public function `keyIn`.\n   *\n   * Returns true if key `key` is in `data`, false otherwise.\n   * Like `contains`, but with arguments flipped.\n   */\n  function keyIn (key, data) {\n    return containsKey(data, key);\n  }\n\n  /**\n   * Public function `hasLength`.\n   *\n   * Returns true if `data` has a length property that equals `length`, false\n   * otherwise.\n   */\n  function hasLength (data, length) {\n    return assigned(data) && data.length === length;\n  }\n\n  /**\n   * Public function `date`.\n   *\n   * Returns true if `data` is a valid date, false otherwise.\n   */\n  function date (data) {\n    return instanceStrict(data, Date) && integer(data.getTime());\n  }\n\n  /**\n   * Public function `function`.\n   *\n   * Returns true if `data` is a function, false otherwise.\n   */\n  function isFunction (data) {\n    return typeof data === 'function';\n  }\n\n  /**\n   * Public function `throws`.\n   *\n   * Returns true if `data` is a function that throws, false otherwise.\n   */\n  function throws (data) {\n    if (! isFunction(data)) {\n      return false;\n    }\n\n    try {\n      data();\n    } catch (error) {\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Public function `map`.\n   *\n   * Maps each value from `data` to the corresponding predicate and returns\n   * the results. If the same function is to be applied across all of the data,\n   * a single predicate function may be passed in.\n   */\n  function map (data, predicates) {\n    var result;\n\n    if (isArray(data)) {\n      result = [];\n    } else {\n      result = {};\n    }\n\n    if (isFunction(predicates)) {\n      forEach(data, function (key, value) {\n        result[key] = predicates(value);\n      });\n    } else {\n      if (! isArray(predicates)) {\n        assert.object(predicates);\n      }\n\n      var dataKeys = keys(data || {});\n\n      forEach(predicates, function (key, predicate) {\n        dataKeys.some(function (dataKey, index) {\n          if (dataKey === key) {\n            dataKeys.splice(index, 1);\n            return true;\n          }\n          return false;\n        });\n\n        if (isFunction(predicate)) {\n          if (not.assigned(data)) {\n            result[key] = !! predicate.m;\n          } else {\n            result[key] = predicate(data[key]);\n          }\n        } else {\n          result[key] = map(data[key], predicate);\n        }\n      });\n    }\n\n    return result;\n  }\n\n  function forEach (object, action) {\n    for (var key in object) {\n      if (hasOwnProperty.call(object, key)) {\n        action(key, object[key]);\n      }\n    }\n  }\n\n  /**\n   * Public function `all`\n   *\n   * Check that all boolean values are true\n   * in an array or object returned from `map`.\n   */\n  function all (data) {\n    if (isArray(data)) {\n      return testArray(data, false);\n    }\n\n    assert.object(data);\n\n    return testObject(data, false);\n  }\n\n  function testArray (data, result) {\n    var i;\n\n    for (i = 0; i < data.length; i += 1) {\n      if (data[i] === result) {\n        return result;\n      }\n    }\n\n    return ! result;\n  }\n\n  function testObject (data, result) {\n    var key, value;\n\n    for (key in data) {\n      if (hasOwnProperty.call(data, key)) {\n        value = data[key];\n\n        if (object(value) && testObject(value, result) === result) {\n          return result;\n        }\n\n        if (value === result) {\n          return result;\n        }\n      }\n    }\n\n    return ! result;\n  }\n\n  /**\n   * Public function `any`\n   *\n   * Check that at least one boolean value is true\n   * in an array or object returned from `map`.\n   */\n  function any (data) {\n    if (isArray(data)) {\n      return testArray(data, true);\n    }\n\n    assert.object(data);\n\n    return testObject(data, true);\n  }\n\n  function mixin (target, source) {\n    forEach(source, function (key, value) {\n      target[key] = value;\n    });\n\n    return target;\n  }\n\n  /**\n   * Public modifier `assert`.\n   *\n   * Throws if `predicate` returns false.\n   */\n  function assertModifier (predicate, defaultMessage) {\n    return function () {\n      var args = arguments;\n      var argCount = predicate.l || predicate.length;\n      var message = args[argCount];\n      var ErrorType = args[argCount + 1];\n\n      assertImpl(\n        predicate.apply(null, args),\n        nonEmptyString(message) ? message : defaultMessage\n          .replace('{a}', messageFormatter(args[0]))\n          .replace('{e}', messageFormatter(args[1]))\n          .replace('{e2}', messageFormatter(args[2]))\n          .replace('{t}', function () {\n            var arg = args[1];\n\n            if (arg && arg.name) {\n              return arg.name;\n            }\n\n            return arg;\n          }),\n        isFunction(ErrorType) ? ErrorType : TypeError\n      );\n\n      return args[0];\n    };\n  }\n\n  function messageFormatter (arg) {\n    return function () {\n      if (string(arg)) {\n        return '\"' + arg.replace(/\\\\/g, '\\\\\\\\').replace(/\"/g, '\\\\\"') + '\"';\n      }\n\n      if (arg && arg !== true && arg.constructor && ! instanceStrict(arg, RegExp) && typeof arg !== 'number') {\n        return arg.constructor.name;\n      }\n\n      return arg;\n    };\n  }\n\n  function assertImpl (value, message, ErrorType) {\n    if (value) {\n      return value;\n    }\n    throw new (ErrorType || Error)(message || 'assert failed');\n  }\n\n  /**\n   * Public modifier `not`.\n   *\n   * Negates `predicate`.\n   */\n  function notModifier (predicate) {\n    var modifiedPredicate = function () {\n      return notImpl(predicate.apply(null, arguments));\n    };\n    modifiedPredicate.l = predicate.length;\n    return modifiedPredicate;\n  }\n\n  function notImpl (value) {\n    return ! value;\n  }\n\n  /**\n   * Public modifier `maybe`.\n   *\n   * Returns true if predicate argument is  null or undefined,\n   * otherwise propagates the return value from `predicate`.\n   */\n  function maybeModifier (predicate) {\n    var modifiedPredicate = function () {\n      if (not.assigned(arguments[0])) {\n        return true;\n      }\n\n      return predicate.apply(null, arguments);\n    };\n    modifiedPredicate.l = predicate.length;\n\n    // Hackishly indicate that this is a maybe.xxx predicate.\n    // Without this flag, the alternative would be to iterate\n    // through the maybe predicates or use indexOf to check,\n    // which would be time-consuming.\n    modifiedPredicate.m = true;\n\n    return modifiedPredicate;\n  }\n\n  function maybeImpl (value) {\n    if (! assigned(value)) {\n      return true;\n    }\n\n    return value;\n  }\n\n  /**\n   * Public modifier `of`.\n   *\n   * Applies the chained predicate to members of the collection.\n   */\n  function ofModifier (target, type, predicate) {\n    var modifiedPredicate = function () {\n      var collection, args;\n\n      collection = arguments[0];\n\n      if (target === 'maybe' && not.assigned(collection)) {\n        return true;\n      }\n\n      if (! type(collection)) {\n        return false;\n      }\n\n      collection = coerceCollection(type, collection);\n      args = slice.call(arguments, 1);\n\n      try {\n        collection.forEach(function (item) {\n          if (\n            (target !== 'maybe' || assigned(item)) &&\n            ! predicate.apply(null, [ item ].concat(args))\n          ) {\n            // TODO: Replace with for...of when ES6 is required.\n            throw 0;\n          }\n        });\n      } catch (ignore) {\n        return false;\n      }\n\n      return true;\n    };\n    modifiedPredicate.l = predicate.length;\n    return modifiedPredicate;\n  }\n\n  function coerceCollection (type, collection) {\n    switch (type) {\n      case arrayLike:\n        return slice.call(collection);\n      case object:\n        return keys(collection).map(function (key) {\n          return collection[key];\n        });\n      default:\n        return collection;\n    }\n  }\n\n  function createModifiedPredicates (modifier, object) {\n    return createModifiedFunctions([ modifier, predicates, object, '' ]);\n  }\n\n  function createModifiedFunctions (args) {\n    var modifier, messageModifier, object, functions;\n\n    modifier = args.shift();\n    messageModifier = args.pop();\n    object = args.pop();\n    functions = args.pop();\n\n    forEach(functions, function (key, fn) {\n      var message = messages[key];\n      if (message && messageModifier) {\n        message = message.replace('to', messageModifier + 'to');\n      }\n\n      Object.defineProperty(object, key, {\n        configurable: false,\n        enumerable: true,\n        writable: false,\n        value: modifier.apply(null, args.concat(fn, message))\n      });\n    });\n\n    return object;\n  }\n\n  function createModifiedModifier (modifier, modified, messageModifier) {\n    return createModifiedFunctions([ modifier, modified, {}, messageModifier ]);\n  }\n\n  function createOfPredicates (key) {\n    predicates[key].of = createModifiedFunctions(\n      [ ofModifier.bind(null, null), predicates[key], predicates, {}, '' ]\n    );\n  }\n\n  function createOfModifiers (base, modifier) {\n    collections.forEach(function (key) {\n      base[key].of = createModifiedModifier(modifier, predicates[key].of);\n    });\n  }\n\n  function createMaybeOfModifiers (key) {\n    maybe[key].of = createModifiedFunctions(\n      [ ofModifier.bind(null, 'maybe'), predicates[key], predicates, {}, '' ]\n    );\n    assert.maybe[key].of = createModifiedModifier(assertModifier, maybe[key].of);\n    assert.not[key].of = createModifiedModifier(assertModifier, not[key].of);\n  }\n\n  function exportFunctions (functions) {\n    if (typeof define === 'function' && define.amd) {\n      define(function () {\n        return functions;\n      });\n    } else if (typeof module !== 'undefined' && module !== null && module.exports) {\n      module.exports = functions;\n    } else {\n      globals.check = functions;\n    }\n  }\n}(this));\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}