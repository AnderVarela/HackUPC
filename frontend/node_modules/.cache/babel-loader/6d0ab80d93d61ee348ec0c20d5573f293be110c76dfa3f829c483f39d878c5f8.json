{"ast":null,"code":"/*:nodoc:*\n * class ActionAppend\n *\n * This action stores a list, and appends each argument value to the list.\n * This is useful to allow an option to be specified multiple times.\n * This class inherided from [[Action]]\n *\n **/\n\n'use strict';\n\nvar util = require('util');\nvar Action = require('../action');\n\n// Constants\nvar c = require('../const');\n\n/*:nodoc:*\n * new ActionAppend(options)\n * - options (object): options hash see [[Action.new]]\n *\n * Note: options.nargs should be optional for constants\n * and more then zero for other\n **/\nvar ActionAppend = module.exports = function ActionAppend(options) {\n  options = options || {};\n  if (this.nargs <= 0) {\n    throw new Error('nargs for append actions must be > 0; if arg ' + 'strings are not supplying the value to append, ' + 'the append const action may be more appropriate');\n  }\n  if (!!this.constant && this.nargs !== c.OPTIONAL) {\n    throw new Error('nargs must be OPTIONAL to supply const');\n  }\n  Action.call(this, options);\n};\nutil.inherits(ActionAppend, Action);\n\n/*:nodoc:*\n * ActionAppend#call(parser, namespace, values, optionString) -> Void\n * - parser (ArgumentParser): current parser\n * - namespace (Namespace): namespace for output data\n * - values (Array): parsed values\n * - optionString (Array): input option string(not parsed)\n *\n * Call the action. Save result in namespace object\n **/\nActionAppend.prototype.call = function (parser, namespace, values) {\n  var items = (namespace[this.dest] || []).slice();\n  items.push(values);\n  namespace.set(this.dest, items);\n};","map":{"version":3,"names":["util","require","Action","c","ActionAppend","module","exports","options","nargs","Error","constant","OPTIONAL","call","inherits","prototype","parser","namespace","values","items","dest","slice","push","set"],"sources":["C:/Users/chest/OneDrive/Documentos/GitHub/HackUPC/frontend/node_modules/argparse/lib/action/append.js"],"sourcesContent":["/*:nodoc:*\n * class ActionAppend\n *\n * This action stores a list, and appends each argument value to the list.\n * This is useful to allow an option to be specified multiple times.\n * This class inherided from [[Action]]\n *\n **/\n\n'use strict';\n\nvar util = require('util');\n\nvar Action = require('../action');\n\n// Constants\nvar c = require('../const');\n\n/*:nodoc:*\n * new ActionAppend(options)\n * - options (object): options hash see [[Action.new]]\n *\n * Note: options.nargs should be optional for constants\n * and more then zero for other\n **/\nvar ActionAppend = module.exports = function ActionAppend(options) {\n  options = options || {};\n  if (this.nargs <= 0) {\n    throw new Error('nargs for append actions must be > 0; if arg ' +\n        'strings are not supplying the value to append, ' +\n        'the append const action may be more appropriate');\n  }\n  if (!!this.constant && this.nargs !== c.OPTIONAL) {\n    throw new Error('nargs must be OPTIONAL to supply const');\n  }\n  Action.call(this, options);\n};\nutil.inherits(ActionAppend, Action);\n\n/*:nodoc:*\n * ActionAppend#call(parser, namespace, values, optionString) -> Void\n * - parser (ArgumentParser): current parser\n * - namespace (Namespace): namespace for output data\n * - values (Array): parsed values\n * - optionString (Array): input option string(not parsed)\n *\n * Call the action. Save result in namespace object\n **/\nActionAppend.prototype.call = function (parser, namespace, values) {\n  var items = (namespace[this.dest] || []).slice();\n  items.push(values);\n  namespace.set(this.dest, items);\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ,IAAIA,IAAI,GAAGC,OAAO,CAAC,MAAM,CAAC;AAE1B,IAAIC,MAAM,GAAGD,OAAO,CAAC,WAAW,CAAC;;AAEjC;AACA,IAAIE,CAAC,GAAGF,OAAO,CAAC,UAAU,CAAC;;AAE3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIG,YAAY,GAAGC,MAAM,CAACC,OAAO,GAAG,SAASF,YAAYA,CAACG,OAAO,EAAE;EACjEA,OAAO,GAAGA,OAAO,IAAI,CAAC,CAAC;EACvB,IAAI,IAAI,CAACC,KAAK,IAAI,CAAC,EAAE;IACnB,MAAM,IAAIC,KAAK,CAAC,+CAA+C,GAC3D,iDAAiD,GACjD,iDAAiD,CAAC;EACxD;EACA,IAAI,CAAC,CAAC,IAAI,CAACC,QAAQ,IAAI,IAAI,CAACF,KAAK,KAAKL,CAAC,CAACQ,QAAQ,EAAE;IAChD,MAAM,IAAIF,KAAK,CAAC,wCAAwC,CAAC;EAC3D;EACAP,MAAM,CAACU,IAAI,CAAC,IAAI,EAAEL,OAAO,CAAC;AAC5B,CAAC;AACDP,IAAI,CAACa,QAAQ,CAACT,YAAY,EAAEF,MAAM,CAAC;;AAEnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAE,YAAY,CAACU,SAAS,CAACF,IAAI,GAAG,UAAUG,MAAM,EAAEC,SAAS,EAAEC,MAAM,EAAE;EACjE,IAAIC,KAAK,GAAG,CAACF,SAAS,CAAC,IAAI,CAACG,IAAI,CAAC,IAAI,EAAE,EAAEC,KAAK,CAAC,CAAC;EAChDF,KAAK,CAACG,IAAI,CAACJ,MAAM,CAAC;EAClBD,SAAS,CAACM,GAAG,CAAC,IAAI,CAACH,IAAI,EAAED,KAAK,CAAC;AACjC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}