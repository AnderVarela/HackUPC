{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"TargetNames\", {\n  enumerable: true,\n  get: function () {\n    return _options.TargetNames;\n  }\n});\nexports.default = getTargets;\nObject.defineProperty(exports, \"filterItems\", {\n  enumerable: true,\n  get: function () {\n    return _filterItems.default;\n  }\n});\nObject.defineProperty(exports, \"getInclusionReasons\", {\n  enumerable: true,\n  get: function () {\n    return _debug.getInclusionReasons;\n  }\n});\nexports.isBrowsersQueryValid = isBrowsersQueryValid;\nObject.defineProperty(exports, \"isRequired\", {\n  enumerable: true,\n  get: function () {\n    return _filterItems.isRequired;\n  }\n});\nObject.defineProperty(exports, \"prettifyTargets\", {\n  enumerable: true,\n  get: function () {\n    return _pretty.prettifyTargets;\n  }\n});\nObject.defineProperty(exports, \"unreleasedLabels\", {\n  enumerable: true,\n  get: function () {\n    return _targets.unreleasedLabels;\n  }\n});\nvar _browserslist = require(\"browserslist\");\nvar _helperValidatorOption = require(\"@babel/helper-validator-option\");\nvar _nativeModules = require(\"@babel/compat-data/native-modules\");\nvar _lruCache = require(\"lru-cache\");\nvar _utils = require(\"./utils.js\");\nvar _targets = require(\"./targets.js\");\nvar _options = require(\"./options.js\");\nvar _pretty = require(\"./pretty.js\");\nvar _debug = require(\"./debug.js\");\nvar _filterItems = require(\"./filter-items.js\");\nconst ESM_SUPPORT = _nativeModules[\"es6.module\"];\nconst v = new _helperValidatorOption.OptionValidator(\"@babel/helper-compilation-targets\");\nfunction validateTargetNames(targets) {\n  const validTargets = Object.keys(_options.TargetNames);\n  for (const target of Object.keys(targets)) {\n    if (!(target in _options.TargetNames)) {\n      throw new Error(v.formatMessage(`'${target}' is not a valid target\n- Did you mean '${(0, _helperValidatorOption.findSuggestion)(target, validTargets)}'?`));\n    }\n  }\n  return targets;\n}\nfunction isBrowsersQueryValid(browsers) {\n  return typeof browsers === \"string\" || Array.isArray(browsers) && browsers.every(b => typeof b === \"string\");\n}\nfunction validateBrowsers(browsers) {\n  v.invariant(browsers === undefined || isBrowsersQueryValid(browsers), `'${String(browsers)}' is not a valid browserslist query`);\n  return browsers;\n}\nfunction getLowestVersions(browsers) {\n  return browsers.reduce((all, browser) => {\n    const [browserName, browserVersion] = browser.split(\" \");\n    const target = _targets.browserNameMap[browserName];\n    if (!target) {\n      return all;\n    }\n    try {\n      const splitVersion = browserVersion.split(\"-\")[0].toLowerCase();\n      const isSplitUnreleased = (0, _utils.isUnreleasedVersion)(splitVersion, target);\n      if (!all[target]) {\n        all[target] = isSplitUnreleased ? splitVersion : (0, _utils.semverify)(splitVersion);\n        return all;\n      }\n      const version = all[target];\n      const isUnreleased = (0, _utils.isUnreleasedVersion)(version, target);\n      if (isUnreleased && isSplitUnreleased) {\n        all[target] = (0, _utils.getLowestUnreleased)(version, splitVersion, target);\n      } else if (isUnreleased) {\n        all[target] = (0, _utils.semverify)(splitVersion);\n      } else if (!isUnreleased && !isSplitUnreleased) {\n        const parsedBrowserVersion = (0, _utils.semverify)(splitVersion);\n        all[target] = (0, _utils.semverMin)(version, parsedBrowserVersion);\n      }\n    } catch (e) {}\n    return all;\n  }, {});\n}\nfunction outputDecimalWarning(decimalTargets) {\n  if (!decimalTargets.length) {\n    return;\n  }\n  console.warn(\"Warning, the following targets are using a decimal version:\\n\");\n  decimalTargets.forEach(({\n    target,\n    value\n  }) => console.warn(`  ${target}: ${value}`));\n  console.warn(`\nWe recommend using a string for minor/patch versions to avoid numbers like 6.10\ngetting parsed as 6.1, which can lead to unexpected behavior.\n`);\n}\nfunction semverifyTarget(target, value) {\n  try {\n    return (0, _utils.semverify)(value);\n  } catch (error) {\n    throw new Error(v.formatMessage(`'${value}' is not a valid value for 'targets.${target}'.`));\n  }\n}\nfunction nodeTargetParser(value) {\n  const parsed = value === true || value === \"current\" ? process.versions.node : semverifyTarget(\"node\", value);\n  return [\"node\", parsed];\n}\nfunction defaultTargetParser(target, value) {\n  const version = (0, _utils.isUnreleasedVersion)(value, target) ? value.toLowerCase() : semverifyTarget(target, value);\n  return [target, version];\n}\nfunction generateTargets(inputTargets) {\n  const input = Object.assign({}, inputTargets);\n  delete input.esmodules;\n  delete input.browsers;\n  return input;\n}\nfunction resolveTargets(queries, env) {\n  const resolved = _browserslist(queries, {\n    mobileToDesktop: true,\n    env\n  });\n  return getLowestVersions(resolved);\n}\nconst targetsCache = new _lruCache({\n  max: 64\n});\nfunction resolveTargetsCached(queries, env) {\n  const cacheKey = typeof queries === \"string\" ? queries : queries.join() + env;\n  let cached = targetsCache.get(cacheKey);\n  if (!cached) {\n    cached = resolveTargets(queries, env);\n    targetsCache.set(cacheKey, cached);\n  }\n  return Object.assign({}, cached);\n}\nfunction getTargets(inputTargets = {}, options = {}) {\n  var _browsers, _browsers2;\n  let {\n    browsers,\n    esmodules\n  } = inputTargets;\n  const {\n    configPath = \".\"\n  } = options;\n  validateBrowsers(browsers);\n  const input = generateTargets(inputTargets);\n  let targets = validateTargetNames(input);\n  const shouldParseBrowsers = !!browsers;\n  const hasTargets = shouldParseBrowsers || Object.keys(targets).length > 0;\n  const shouldSearchForConfig = !options.ignoreBrowserslistConfig && !hasTargets;\n  if (!browsers && shouldSearchForConfig) {\n    browsers = _browserslist.loadConfig({\n      config: options.configFile,\n      path: configPath,\n      env: options.browserslistEnv\n    });\n    if (browsers == null) {\n      {\n        browsers = [];\n      }\n    }\n  }\n  if (esmodules && (esmodules !== \"intersect\" || !((_browsers = browsers) != null && _browsers.length))) {\n    browsers = Object.keys(ESM_SUPPORT).map(browser => `${browser} >= ${ESM_SUPPORT[browser]}`).join(\", \");\n    esmodules = false;\n  }\n  if ((_browsers2 = browsers) != null && _browsers2.length) {\n    const queryBrowsers = resolveTargetsCached(browsers, options.browserslistEnv);\n    if (esmodules === \"intersect\") {\n      for (const browser of Object.keys(queryBrowsers)) {\n        if (browser !== \"deno\" && browser !== \"ie\") {\n          const esmSupportVersion = ESM_SUPPORT[browser === \"opera_mobile\" ? \"op_mob\" : browser];\n          if (esmSupportVersion) {\n            const version = queryBrowsers[browser];\n            queryBrowsers[browser] = (0, _utils.getHighestUnreleased)(version, (0, _utils.semverify)(esmSupportVersion), browser);\n          } else {\n            delete queryBrowsers[browser];\n          }\n        } else {\n          delete queryBrowsers[browser];\n        }\n      }\n    }\n    targets = Object.assign(queryBrowsers, targets);\n  }\n  const result = {};\n  const decimalWarnings = [];\n  for (const target of Object.keys(targets).sort()) {\n    const value = targets[target];\n    if (typeof value === \"number\" && value % 1 !== 0) {\n      decimalWarnings.push({\n        target,\n        value\n      });\n    }\n    const [parsedTarget, parsedValue] = target === \"node\" ? nodeTargetParser(value) : defaultTargetParser(target, value);\n    if (parsedValue) {\n      result[parsedTarget] = parsedValue;\n    }\n  }\n  outputDecimalWarning(decimalWarnings);\n  return result;\n}","map":{"version":3,"names":["_browserslist","require","_helperValidatorOption","_nativeModules","_lruCache","_utils","_targets","_options","_pretty","_debug","_filterItems","ESM_SUPPORT","v","OptionValidator","validateTargetNames","targets","validTargets","Object","keys","TargetNames","target","Error","formatMessage","findSuggestion","isBrowsersQueryValid","browsers","Array","isArray","every","b","validateBrowsers","invariant","undefined","String","getLowestVersions","reduce","all","browser","browserName","browserVersion","split","browserNameMap","splitVersion","toLowerCase","isSplitUnreleased","isUnreleasedVersion","semverify","version","isUnreleased","getLowestUnreleased","parsedBrowserVersion","semverMin","e","outputDecimalWarning","decimalTargets","length","console","warn","forEach","value","semverifyTarget","error","nodeTargetParser","parsed","process","versions","node","defaultTargetParser","generateTargets","inputTargets","input","assign","esmodules","resolveTargets","queries","env","resolved","mobileToDesktop","targetsCache","max","resolveTargetsCached","cacheKey","join","cached","get","set","getTargets","options","_browsers","_browsers2","configPath","shouldParseBrowsers","hasTargets","shouldSearchForConfig","ignoreBrowserslistConfig","loadConfig","config","configFile","path","browserslistEnv","map","queryBrowsers","esmSupportVersion","getHighestUnreleased","result","decimalWarnings","sort","push","parsedTarget","parsedValue"],"sources":["C:\\Users\\chest\\OneDrive\\Documentos\\GitHub\\HackUPC\\frontend\\node_modules\\@babel\\helper-compilation-targets\\src\\index.ts"],"sourcesContent":["import browserslist from \"browserslist\";\nimport { findSuggestion } from \"@babel/helper-validator-option\";\nimport browserModulesData from \"@babel/compat-data/native-modules\";\nimport LruCache from \"lru-cache\";\n\nimport {\n  semverify,\n  semverMin,\n  isUnreleasedVersion,\n  getLowestUnreleased,\n  getHighestUnreleased,\n} from \"./utils.ts\";\nimport { OptionValidator } from \"@babel/helper-validator-option\";\nimport { browserNameMap } from \"./targets.ts\";\nimport { TargetNames } from \"./options.ts\";\nimport type {\n  Target,\n  Targets,\n  InputTargets,\n  Browsers,\n  BrowserslistBrowserName,\n  TargetsTuple,\n} from \"./types.ts\";\n\nexport type { Target, Targets, InputTargets };\n\nexport { prettifyTargets } from \"./pretty.ts\";\nexport { getInclusionReasons } from \"./debug.ts\";\nexport { default as filterItems, isRequired } from \"./filter-items.ts\";\nexport { unreleasedLabels } from \"./targets.ts\";\nexport { TargetNames };\n\nconst ESM_SUPPORT = browserModulesData[\"es6.module\"];\n\nconst v = new OptionValidator(PACKAGE_JSON.name);\n\nfunction validateTargetNames(targets: Targets): TargetsTuple {\n  const validTargets = Object.keys(TargetNames);\n  for (const target of Object.keys(targets)) {\n    if (!(target in TargetNames)) {\n      throw new Error(\n        v.formatMessage(`'${target}' is not a valid target\n- Did you mean '${findSuggestion(target, validTargets)}'?`),\n      );\n    }\n  }\n\n  return targets;\n}\n\nexport function isBrowsersQueryValid(browsers: unknown): boolean {\n  return (\n    typeof browsers === \"string\" ||\n    (Array.isArray(browsers) && browsers.every(b => typeof b === \"string\"))\n  );\n}\n\nfunction validateBrowsers(browsers: Browsers | undefined) {\n  v.invariant(\n    browsers === undefined || isBrowsersQueryValid(browsers),\n    `'${String(browsers)}' is not a valid browserslist query`,\n  );\n\n  return browsers;\n}\n\nfunction getLowestVersions(browsers: Array<string>): Targets {\n  return browsers.reduce(\n    (all, browser) => {\n      const [browserName, browserVersion] = browser.split(\" \") as [\n        BrowserslistBrowserName,\n        string,\n      ];\n      const target = browserNameMap[browserName];\n\n      if (!target) {\n        return all;\n      }\n\n      try {\n        // Browser version can return as \"10.0-10.2\"\n        const splitVersion = browserVersion.split(\"-\")[0].toLowerCase();\n        const isSplitUnreleased = isUnreleasedVersion(splitVersion, target);\n\n        if (!all[target]) {\n          all[target] = isSplitUnreleased\n            ? splitVersion\n            : semverify(splitVersion);\n          return all;\n        }\n\n        const version = all[target];\n        const isUnreleased = isUnreleasedVersion(version, target);\n\n        if (isUnreleased && isSplitUnreleased) {\n          all[target] = getLowestUnreleased(version, splitVersion, target);\n        } else if (isUnreleased) {\n          all[target] = semverify(splitVersion);\n        } else if (!isUnreleased && !isSplitUnreleased) {\n          const parsedBrowserVersion = semverify(splitVersion);\n\n          all[target] = semverMin(version, parsedBrowserVersion);\n        }\n      } catch (e) {}\n\n      return all;\n    },\n    {} as Record<Target, string>,\n  );\n}\n\nfunction outputDecimalWarning(\n  decimalTargets: Array<{ target: string; value: number }>,\n) {\n  if (!decimalTargets.length) {\n    return;\n  }\n\n  console.warn(\"Warning, the following targets are using a decimal version:\\n\");\n  decimalTargets.forEach(({ target, value }) =>\n    console.warn(`  ${target}: ${value}`),\n  );\n  console.warn(`\nWe recommend using a string for minor/patch versions to avoid numbers like 6.10\ngetting parsed as 6.1, which can lead to unexpected behavior.\n`);\n}\n\nfunction semverifyTarget(target: Target, value: string) {\n  try {\n    return semverify(value);\n  } catch (error) {\n    throw new Error(\n      v.formatMessage(\n        `'${value}' is not a valid value for 'targets.${target}'.`,\n      ),\n    );\n  }\n}\n\n// Parse `node: true` and `node: \"current\"` to version\nfunction nodeTargetParser(value: true | string) {\n  const parsed =\n    value === true || value === \"current\"\n      ? process.versions.node\n      : semverifyTarget(\"node\", value);\n  return [\"node\", parsed] as const;\n}\n\nfunction defaultTargetParser(\n  target: Exclude<Target, \"node\">,\n  value: string,\n): readonly [Exclude<Target, \"node\">, string] {\n  const version = isUnreleasedVersion(value, target)\n    ? value.toLowerCase()\n    : semverifyTarget(target, value);\n  return [target, version] as const;\n}\n\nfunction generateTargets(inputTargets: InputTargets): Targets {\n  const input = { ...inputTargets };\n  delete input.esmodules;\n  delete input.browsers;\n  return input;\n}\n\nfunction resolveTargets(queries: Browsers, env?: string): Targets {\n  const resolved = browserslist(queries, {\n    mobileToDesktop: true,\n    env,\n  });\n  return getLowestVersions(resolved);\n}\n\nconst targetsCache = new LruCache({ max: 64 });\n\nfunction resolveTargetsCached(queries: Browsers, env?: string): Targets {\n  const cacheKey = typeof queries === \"string\" ? queries : queries.join() + env;\n  let cached = targetsCache.get(cacheKey) as Targets | undefined;\n  if (!cached) {\n    cached = resolveTargets(queries, env);\n    targetsCache.set(cacheKey, cached);\n  }\n  return { ...cached };\n}\n\ntype GetTargetsOption = {\n  // This is not the path of the config file, but the path where start searching it from\n  configPath?: string;\n  // The path of the config file\n  configFile?: string;\n  // The env to pass to browserslist\n  browserslistEnv?: string;\n  // true to disable config loading\n  ignoreBrowserslistConfig?: boolean;\n};\n\nexport default function getTargets(\n  inputTargets: InputTargets = {},\n  options: GetTargetsOption = {},\n): Targets {\n  let { browsers, esmodules } = inputTargets;\n  const { configPath = \".\" } = options;\n\n  validateBrowsers(browsers);\n\n  const input = generateTargets(inputTargets);\n  let targets = validateTargetNames(input);\n\n  const shouldParseBrowsers = !!browsers;\n  const hasTargets = shouldParseBrowsers || Object.keys(targets).length > 0;\n  const shouldSearchForConfig =\n    !options.ignoreBrowserslistConfig && !hasTargets;\n\n  if (!browsers && shouldSearchForConfig) {\n    browsers = browserslist.loadConfig({\n      config: options.configFile,\n      path: configPath,\n      env: options.browserslistEnv,\n    });\n    if (browsers == null) {\n      if (process.env.BABEL_8_BREAKING) {\n        // In Babel 8, if no targets are passed, we use browserslist's defaults.\n        browsers = [\"defaults\"];\n      } else {\n        // If no targets are passed, we need to overwrite browserslist's defaults\n        // so that we enable all transforms (acting like the now deprecated\n        // preset-latest).\n        browsers = [];\n      }\n    }\n  }\n\n  // `esmodules` as a target indicates the specific set of browsers supporting ES Modules.\n  // These values OVERRIDE the `browsers` field.\n  if (esmodules && (esmodules !== \"intersect\" || !browsers?.length)) {\n    browsers = Object.keys(ESM_SUPPORT)\n      .map(\n        (browser: keyof typeof ESM_SUPPORT) =>\n          `${browser} >= ${ESM_SUPPORT[browser]}`,\n      )\n      .join(\", \");\n    esmodules = false;\n  }\n\n  // If current value of `browsers` is undefined (`ignoreBrowserslistConfig` should be `false`)\n  // or an empty array (without any user config, use default config),\n  // we don't need to call `resolveTargets` to execute the related methods of `browserslist` library.\n  if (browsers?.length) {\n    const queryBrowsers = resolveTargetsCached(\n      browsers,\n      options.browserslistEnv,\n    );\n\n    if (esmodules === \"intersect\") {\n      for (const browser of Object.keys(queryBrowsers) as Target[]) {\n        if (browser !== \"deno\" && browser !== \"ie\") {\n          const esmSupportVersion =\n            ESM_SUPPORT[browser === \"opera_mobile\" ? \"op_mob\" : browser];\n\n          if (esmSupportVersion) {\n            const version = queryBrowsers[browser];\n            queryBrowsers[browser] = getHighestUnreleased(\n              version,\n              semverify(esmSupportVersion),\n              browser,\n            );\n          } else {\n            delete queryBrowsers[browser];\n          }\n        } else {\n          delete queryBrowsers[browser];\n        }\n      }\n    }\n\n    targets = Object.assign(queryBrowsers, targets);\n  }\n\n  // Parse remaining targets\n  const result: Targets = {};\n  const decimalWarnings = [];\n  for (const target of Object.keys(targets).sort() as Target[]) {\n    const value = targets[target];\n\n    // Warn when specifying minor/patch as a decimal\n    if (typeof value === \"number\" && value % 1 !== 0) {\n      decimalWarnings.push({ target, value });\n    }\n\n    const [parsedTarget, parsedValue] =\n      target === \"node\"\n        ? nodeTargetParser(value)\n        : defaultTargetParser(target, value as string);\n\n    if (parsedValue) {\n      // Merge (lowest wins)\n      result[parsedTarget] = parsedValue;\n    }\n  }\n\n  outputDecimalWarning(decimalWarnings);\n\n  return result;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}