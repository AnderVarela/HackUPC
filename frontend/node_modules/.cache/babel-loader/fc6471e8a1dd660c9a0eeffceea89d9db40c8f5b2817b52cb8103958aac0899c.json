{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\nexports.default = createMetaResolver;\nvar _utils = require(\"./utils\");\nconst PossibleGlobalObjects = new Set([\"global\", \"globalThis\", \"self\", \"window\"]);\nfunction createMetaResolver(polyfills) {\n  const {\n    static: staticP,\n    instance: instanceP,\n    global: globalP\n  } = polyfills;\n  return meta => {\n    if (meta.kind === \"global\" && globalP && (0, _utils.has)(globalP, meta.name)) {\n      return {\n        kind: \"global\",\n        desc: globalP[meta.name],\n        name: meta.name\n      };\n    }\n    if (meta.kind === \"property\" || meta.kind === \"in\") {\n      const {\n        placement,\n        object,\n        key\n      } = meta;\n      if (object && placement === \"static\") {\n        if (globalP && PossibleGlobalObjects.has(object) && (0, _utils.has)(globalP, key)) {\n          return {\n            kind: \"global\",\n            desc: globalP[key],\n            name: key\n          };\n        }\n        if (staticP && (0, _utils.has)(staticP, object) && (0, _utils.has)(staticP[object], key)) {\n          return {\n            kind: \"static\",\n            desc: staticP[object][key],\n            name: `${object}$${key}`\n          };\n        }\n      }\n      if (instanceP && (0, _utils.has)(instanceP, key)) {\n        return {\n          kind: \"instance\",\n          desc: instanceP[key],\n          name: `${key}`\n        };\n      }\n    }\n  };\n}","map":{"version":3,"names":["exports","__esModule","default","createMetaResolver","_utils","require","PossibleGlobalObjects","Set","polyfills","static","staticP","instance","instanceP","global","globalP","meta","kind","has","name","desc","placement","object","key"],"sources":["C:/Users/chest/OneDrive/Documentos/GitHub/HackUPC/frontend/node_modules/@babel/helper-define-polyfill-provider/lib/meta-resolver.js"],"sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports.default = createMetaResolver;\nvar _utils = require(\"./utils\");\nconst PossibleGlobalObjects = new Set([\"global\", \"globalThis\", \"self\", \"window\"]);\nfunction createMetaResolver(polyfills) {\n  const {\n    static: staticP,\n    instance: instanceP,\n    global: globalP\n  } = polyfills;\n  return meta => {\n    if (meta.kind === \"global\" && globalP && (0, _utils.has)(globalP, meta.name)) {\n      return {\n        kind: \"global\",\n        desc: globalP[meta.name],\n        name: meta.name\n      };\n    }\n    if (meta.kind === \"property\" || meta.kind === \"in\") {\n      const {\n        placement,\n        object,\n        key\n      } = meta;\n      if (object && placement === \"static\") {\n        if (globalP && PossibleGlobalObjects.has(object) && (0, _utils.has)(globalP, key)) {\n          return {\n            kind: \"global\",\n            desc: globalP[key],\n            name: key\n          };\n        }\n        if (staticP && (0, _utils.has)(staticP, object) && (0, _utils.has)(staticP[object], key)) {\n          return {\n            kind: \"static\",\n            desc: staticP[object][key],\n            name: `${object}$${key}`\n          };\n        }\n      }\n      if (instanceP && (0, _utils.has)(instanceP, key)) {\n        return {\n          kind: \"instance\",\n          desc: instanceP[key],\n          name: `${key}`\n        };\n      }\n    }\n  };\n}"],"mappings":"AAAA,YAAY;;AAEZA,OAAO,CAACC,UAAU,GAAG,IAAI;AACzBD,OAAO,CAACE,OAAO,GAAGC,kBAAkB;AACpC,IAAIC,MAAM,GAAGC,OAAO,CAAC,SAAS,CAAC;AAC/B,MAAMC,qBAAqB,GAAG,IAAIC,GAAG,CAAC,CAAC,QAAQ,EAAE,YAAY,EAAE,MAAM,EAAE,QAAQ,CAAC,CAAC;AACjF,SAASJ,kBAAkBA,CAACK,SAAS,EAAE;EACrC,MAAM;IACJC,MAAM,EAAEC,OAAO;IACfC,QAAQ,EAAEC,SAAS;IACnBC,MAAM,EAAEC;EACV,CAAC,GAAGN,SAAS;EACb,OAAOO,IAAI,IAAI;IACb,IAAIA,IAAI,CAACC,IAAI,KAAK,QAAQ,IAAIF,OAAO,IAAI,CAAC,CAAC,EAAEV,MAAM,CAACa,GAAG,EAAEH,OAAO,EAAEC,IAAI,CAACG,IAAI,CAAC,EAAE;MAC5E,OAAO;QACLF,IAAI,EAAE,QAAQ;QACdG,IAAI,EAAEL,OAAO,CAACC,IAAI,CAACG,IAAI,CAAC;QACxBA,IAAI,EAAEH,IAAI,CAACG;MACb,CAAC;IACH;IACA,IAAIH,IAAI,CAACC,IAAI,KAAK,UAAU,IAAID,IAAI,CAACC,IAAI,KAAK,IAAI,EAAE;MAClD,MAAM;QACJI,SAAS;QACTC,MAAM;QACNC;MACF,CAAC,GAAGP,IAAI;MACR,IAAIM,MAAM,IAAID,SAAS,KAAK,QAAQ,EAAE;QACpC,IAAIN,OAAO,IAAIR,qBAAqB,CAACW,GAAG,CAACI,MAAM,CAAC,IAAI,CAAC,CAAC,EAAEjB,MAAM,CAACa,GAAG,EAAEH,OAAO,EAAEQ,GAAG,CAAC,EAAE;UACjF,OAAO;YACLN,IAAI,EAAE,QAAQ;YACdG,IAAI,EAAEL,OAAO,CAACQ,GAAG,CAAC;YAClBJ,IAAI,EAAEI;UACR,CAAC;QACH;QACA,IAAIZ,OAAO,IAAI,CAAC,CAAC,EAAEN,MAAM,CAACa,GAAG,EAAEP,OAAO,EAAEW,MAAM,CAAC,IAAI,CAAC,CAAC,EAAEjB,MAAM,CAACa,GAAG,EAAEP,OAAO,CAACW,MAAM,CAAC,EAAEC,GAAG,CAAC,EAAE;UACxF,OAAO;YACLN,IAAI,EAAE,QAAQ;YACdG,IAAI,EAAET,OAAO,CAACW,MAAM,CAAC,CAACC,GAAG,CAAC;YAC1BJ,IAAI,EAAG,GAAEG,MAAO,IAAGC,GAAI;UACzB,CAAC;QACH;MACF;MACA,IAAIV,SAAS,IAAI,CAAC,CAAC,EAAER,MAAM,CAACa,GAAG,EAAEL,SAAS,EAAEU,GAAG,CAAC,EAAE;QAChD,OAAO;UACLN,IAAI,EAAE,UAAU;UAChBG,IAAI,EAAEP,SAAS,CAACU,GAAG,CAAC;UACpBJ,IAAI,EAAG,GAAEI,GAAI;QACf,CAAC;MACH;IACF;EACF,CAAC;AACH","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}