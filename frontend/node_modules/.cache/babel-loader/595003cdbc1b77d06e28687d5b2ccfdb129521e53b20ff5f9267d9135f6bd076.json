{"ast":null,"code":"/*:nodoc:*\n * class ActionVersion\n *\n * Support action for printing program version\n * This class inherited from [[Action]]\n **/\n'use strict';\n\nvar util = require('util');\nvar Action = require('../action');\n\n//\n// Constants\n//\nvar c = require('../const');\n\n/*:nodoc:*\n * new ActionVersion(options)\n * - options (object): options hash see [[Action.new]]\n *\n **/\nvar ActionVersion = module.exports = function ActionVersion(options) {\n  options = options || {};\n  options.defaultValue = options.defaultValue ? options.defaultValue : c.SUPPRESS;\n  options.dest = options.dest || c.SUPPRESS;\n  options.nargs = 0;\n  this.version = options.version;\n  Action.call(this, options);\n};\nutil.inherits(ActionVersion, Action);\n\n/*:nodoc:*\n * ActionVersion#call(parser, namespace, values, optionString) -> Void\n * - parser (ArgumentParser): current parser\n * - namespace (Namespace): namespace for output data\n * - values (Array): parsed values\n * - optionString (Array): input option string(not parsed)\n *\n * Print version and exit\n **/\nActionVersion.prototype.call = function (parser) {\n  var version = this.version || parser.version;\n  var formatter = parser._getFormatter();\n  formatter.addText(version);\n  parser.exit(0, formatter.formatHelp());\n};","map":{"version":3,"names":["util","require","Action","c","ActionVersion","module","exports","options","defaultValue","SUPPRESS","dest","nargs","version","call","inherits","prototype","parser","formatter","_getFormatter","addText","exit","formatHelp"],"sources":["C:/Users/chest/OneDrive/Documentos/GitHub/HackUPC/frontend/node_modules/argparse/lib/action/version.js"],"sourcesContent":["/*:nodoc:*\n * class ActionVersion\n *\n * Support action for printing program version\n * This class inherited from [[Action]]\n **/\n'use strict';\n\nvar util = require('util');\n\nvar Action = require('../action');\n\n//\n// Constants\n//\nvar c = require('../const');\n\n/*:nodoc:*\n * new ActionVersion(options)\n * - options (object): options hash see [[Action.new]]\n *\n **/\nvar ActionVersion = module.exports = function ActionVersion(options) {\n  options = options || {};\n  options.defaultValue = (options.defaultValue ? options.defaultValue : c.SUPPRESS);\n  options.dest = (options.dest || c.SUPPRESS);\n  options.nargs = 0;\n  this.version = options.version;\n  Action.call(this, options);\n};\nutil.inherits(ActionVersion, Action);\n\n/*:nodoc:*\n * ActionVersion#call(parser, namespace, values, optionString) -> Void\n * - parser (ArgumentParser): current parser\n * - namespace (Namespace): namespace for output data\n * - values (Array): parsed values\n * - optionString (Array): input option string(not parsed)\n *\n * Print version and exit\n **/\nActionVersion.prototype.call = function (parser) {\n  var version = this.version || parser.version;\n  var formatter = parser._getFormatter();\n  formatter.addText(version);\n  parser.exit(0, formatter.formatHelp());\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;;AAEZ,IAAIA,IAAI,GAAGC,OAAO,CAAC,MAAM,CAAC;AAE1B,IAAIC,MAAM,GAAGD,OAAO,CAAC,WAAW,CAAC;;AAEjC;AACA;AACA;AACA,IAAIE,CAAC,GAAGF,OAAO,CAAC,UAAU,CAAC;;AAE3B;AACA;AACA;AACA;AACA;AACA,IAAIG,aAAa,GAAGC,MAAM,CAACC,OAAO,GAAG,SAASF,aAAaA,CAACG,OAAO,EAAE;EACnEA,OAAO,GAAGA,OAAO,IAAI,CAAC,CAAC;EACvBA,OAAO,CAACC,YAAY,GAAID,OAAO,CAACC,YAAY,GAAGD,OAAO,CAACC,YAAY,GAAGL,CAAC,CAACM,QAAS;EACjFF,OAAO,CAACG,IAAI,GAAIH,OAAO,CAACG,IAAI,IAAIP,CAAC,CAACM,QAAS;EAC3CF,OAAO,CAACI,KAAK,GAAG,CAAC;EACjB,IAAI,CAACC,OAAO,GAAGL,OAAO,CAACK,OAAO;EAC9BV,MAAM,CAACW,IAAI,CAAC,IAAI,EAAEN,OAAO,CAAC;AAC5B,CAAC;AACDP,IAAI,CAACc,QAAQ,CAACV,aAAa,EAAEF,MAAM,CAAC;;AAEpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAE,aAAa,CAACW,SAAS,CAACF,IAAI,GAAG,UAAUG,MAAM,EAAE;EAC/C,IAAIJ,OAAO,GAAG,IAAI,CAACA,OAAO,IAAII,MAAM,CAACJ,OAAO;EAC5C,IAAIK,SAAS,GAAGD,MAAM,CAACE,aAAa,CAAC,CAAC;EACtCD,SAAS,CAACE,OAAO,CAACP,OAAO,CAAC;EAC1BI,MAAM,CAACI,IAAI,CAAC,CAAC,EAAEH,SAAS,CAACI,UAAU,CAAC,CAAC,CAAC;AACxC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}