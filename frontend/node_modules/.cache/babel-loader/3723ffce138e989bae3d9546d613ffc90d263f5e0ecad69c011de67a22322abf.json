{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isStatelessComponent;\nvar traversed = Symbol('traversed');\nfunction isJSXElementOrReactCreateElement(path) {\n  var visited = false;\n  path.traverse({\n    CallExpression: function CallExpression(path2) {\n      var callee = path2.get('callee');\n      if (callee.matchesPattern('React.createElement') || callee.matchesPattern('React.cloneElement') || callee.node.name === 'cloneElement') {\n        visited = true;\n      }\n    },\n    JSXElement: function JSXElement() {\n      visited = true;\n    }\n  });\n  return visited;\n}\nfunction isReturningJSXElement(path) {\n  var iteration = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n  // Early exit for ArrowFunctionExpressions, there is no ReturnStatement node.\n  if (path.node.init && path.node.init.body && isJSXElementOrReactCreateElement(path)) {\n    return true;\n  }\n  if (iteration > 20) {\n    throw new Error('transform-react-remove-prop-type: infinite loop detected.');\n  }\n  var visited = false;\n  path.traverse({\n    ReturnStatement: function ReturnStatement(path2) {\n      // We have already found what we are looking for.\n      if (visited) {\n        return;\n      }\n      var argument = path2.get('argument'); // Nothing is returned\n\n      if (!argument.node) {\n        return;\n      }\n      if (isJSXElementOrReactCreateElement(path2)) {\n        visited = true;\n        return;\n      }\n      if (argument.node.type === 'CallExpression') {\n        var name = argument.get('callee').node.name;\n        var binding = path.scope.getBinding(name);\n        if (!binding) {\n          return;\n        } // Prevents infinite traverse loop.\n\n        if (binding.path[traversed]) {\n          return;\n        }\n        binding.path[traversed] = true;\n        if (isReturningJSXElement(binding.path, iteration + 1)) {\n          visited = true;\n        }\n      }\n    }\n  });\n  return visited;\n}\nvar VALID_POSSIBLE_STATELESS_COMPONENT_TYPES = ['VariableDeclarator', 'FunctionDeclaration']; // Returns `true` if the path represents a function which returns a JSXElement\n\nfunction isStatelessComponent(path) {\n  if (VALID_POSSIBLE_STATELESS_COMPONENT_TYPES.indexOf(path.node.type) === -1) {\n    return false;\n  }\n  if (isReturningJSXElement(path)) {\n    return true;\n  }\n  return false;\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","default","isStatelessComponent","traversed","Symbol","isJSXElementOrReactCreateElement","path","visited","traverse","CallExpression","path2","callee","get","matchesPattern","node","name","JSXElement","isReturningJSXElement","iteration","arguments","length","undefined","init","body","Error","ReturnStatement","argument","type","binding","scope","getBinding","VALID_POSSIBLE_STATELESS_COMPONENT_TYPES","indexOf"],"sources":["C:/Users/chest/OneDrive/Documentos/GitHub/HackUPC/frontend/node_modules/babel-plugin-transform-react-remove-prop-types/lib/isStatelessComponent.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isStatelessComponent;\nvar traversed = Symbol('traversed');\n\nfunction isJSXElementOrReactCreateElement(path) {\n  var visited = false;\n  path.traverse({\n    CallExpression: function CallExpression(path2) {\n      var callee = path2.get('callee');\n\n      if (callee.matchesPattern('React.createElement') || callee.matchesPattern('React.cloneElement') || callee.node.name === 'cloneElement') {\n        visited = true;\n      }\n    },\n    JSXElement: function JSXElement() {\n      visited = true;\n    }\n  });\n  return visited;\n}\n\nfunction isReturningJSXElement(path) {\n  var iteration = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n  // Early exit for ArrowFunctionExpressions, there is no ReturnStatement node.\n  if (path.node.init && path.node.init.body && isJSXElementOrReactCreateElement(path)) {\n    return true;\n  }\n\n  if (iteration > 20) {\n    throw new Error('transform-react-remove-prop-type: infinite loop detected.');\n  }\n\n  var visited = false;\n  path.traverse({\n    ReturnStatement: function ReturnStatement(path2) {\n      // We have already found what we are looking for.\n      if (visited) {\n        return;\n      }\n\n      var argument = path2.get('argument'); // Nothing is returned\n\n      if (!argument.node) {\n        return;\n      }\n\n      if (isJSXElementOrReactCreateElement(path2)) {\n        visited = true;\n        return;\n      }\n\n      if (argument.node.type === 'CallExpression') {\n        var name = argument.get('callee').node.name;\n        var binding = path.scope.getBinding(name);\n\n        if (!binding) {\n          return;\n        } // Prevents infinite traverse loop.\n\n\n        if (binding.path[traversed]) {\n          return;\n        }\n\n        binding.path[traversed] = true;\n\n        if (isReturningJSXElement(binding.path, iteration + 1)) {\n          visited = true;\n        }\n      }\n    }\n  });\n  return visited;\n}\n\nvar VALID_POSSIBLE_STATELESS_COMPONENT_TYPES = ['VariableDeclarator', 'FunctionDeclaration']; // Returns `true` if the path represents a function which returns a JSXElement\n\nfunction isStatelessComponent(path) {\n  if (VALID_POSSIBLE_STATELESS_COMPONENT_TYPES.indexOf(path.node.type) === -1) {\n    return false;\n  }\n\n  if (isReturningJSXElement(path)) {\n    return true;\n  }\n\n  return false;\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}