{"ast":null,"code":"function con(n) {\n  return 0x80 | n & 0x3f;\n}\nexport function encode(str) {\n  const arr = str.split(\"\").map(x => x.charCodeAt(0));\n  return _encode(arr);\n}\nfunction _encode(arr) {\n  if (arr.length === 0) {\n    return [];\n  }\n  const [n, ...ns] = arr;\n  if (n < 0) {\n    throw new Error(\"utf8\");\n  }\n  if (n < 0x80) {\n    return [n, ..._encode(ns)];\n  }\n  if (n < 0x800) {\n    return [0xc0 | n >>> 6, con(n), ..._encode(ns)];\n  }\n  if (n < 0x10000) {\n    return [0xe0 | n >>> 12, con(n >>> 6), con(n), ..._encode(ns)];\n  }\n  if (n < 0x110000) {\n    return [0xf0 | n >>> 18, con(n >>> 12), con(n >>> 6), con(n), ..._encode(ns)];\n  }\n  throw new Error(\"utf8\");\n}","map":{"version":3,"names":["con","n","encode","str","arr","split","map","x","charCodeAt","_encode","length","ns","Error"],"sources":["C:/Users/chest/OneDrive/Documentos/GitHub/HackUPC/frontend/node_modules/@webassemblyjs/utf8/src/encoder.js"],"sourcesContent":["function con(n) {\n  return 0x80 | (n & 0x3f);\n}\n\nexport function encode(str) {\n  const arr = str.split(\"\").map((x) => x.charCodeAt(0));\n  return _encode(arr);\n}\n\nfunction _encode(arr) {\n  if (arr.length === 0) {\n    return [];\n  }\n\n  const [n, ...ns] = arr;\n\n  if (n < 0) {\n    throw new Error(\"utf8\");\n  }\n\n  if (n < 0x80) {\n    return [n, ..._encode(ns)];\n  }\n\n  if (n < 0x800) {\n    return [0xc0 | (n >>> 6), con(n), ..._encode(ns)];\n  }\n\n  if (n < 0x10000) {\n    return [0xe0 | (n >>> 12), con(n >>> 6), con(n), ..._encode(ns)];\n  }\n\n  if (n < 0x110000) {\n    return [\n      0xf0 | (n >>> 18),\n      con(n >>> 12),\n      con(n >>> 6),\n      con(n),\n      ..._encode(ns),\n    ];\n  }\n\n  throw new Error(\"utf8\");\n}\n"],"mappings":"AAAA,SAASA,GAAGA,CAACC,CAAC,EAAE;EACd,OAAO,IAAI,GAAIA,CAAC,GAAG,IAAK;AAC1B;AAEA,OAAO,SAASC,MAAMA,CAACC,GAAG,EAAE;EAC1B,MAAMC,GAAG,GAAGD,GAAG,CAACE,KAAK,CAAC,EAAE,CAAC,CAACC,GAAG,CAAEC,CAAC,IAAKA,CAAC,CAACC,UAAU,CAAC,CAAC,CAAC,CAAC;EACrD,OAAOC,OAAO,CAACL,GAAG,CAAC;AACrB;AAEA,SAASK,OAAOA,CAACL,GAAG,EAAE;EACpB,IAAIA,GAAG,CAACM,MAAM,KAAK,CAAC,EAAE;IACpB,OAAO,EAAE;EACX;EAEA,MAAM,CAACT,CAAC,EAAE,GAAGU,EAAE,CAAC,GAAGP,GAAG;EAEtB,IAAIH,CAAC,GAAG,CAAC,EAAE;IACT,MAAM,IAAIW,KAAK,CAAC,MAAM,CAAC;EACzB;EAEA,IAAIX,CAAC,GAAG,IAAI,EAAE;IACZ,OAAO,CAACA,CAAC,EAAE,GAAGQ,OAAO,CAACE,EAAE,CAAC,CAAC;EAC5B;EAEA,IAAIV,CAAC,GAAG,KAAK,EAAE;IACb,OAAO,CAAC,IAAI,GAAIA,CAAC,KAAK,CAAE,EAAED,GAAG,CAACC,CAAC,CAAC,EAAE,GAAGQ,OAAO,CAACE,EAAE,CAAC,CAAC;EACnD;EAEA,IAAIV,CAAC,GAAG,OAAO,EAAE;IACf,OAAO,CAAC,IAAI,GAAIA,CAAC,KAAK,EAAG,EAAED,GAAG,CAACC,CAAC,KAAK,CAAC,CAAC,EAAED,GAAG,CAACC,CAAC,CAAC,EAAE,GAAGQ,OAAO,CAACE,EAAE,CAAC,CAAC;EAClE;EAEA,IAAIV,CAAC,GAAG,QAAQ,EAAE;IAChB,OAAO,CACL,IAAI,GAAIA,CAAC,KAAK,EAAG,EACjBD,GAAG,CAACC,CAAC,KAAK,EAAE,CAAC,EACbD,GAAG,CAACC,CAAC,KAAK,CAAC,CAAC,EACZD,GAAG,CAACC,CAAC,CAAC,EACN,GAAGQ,OAAO,CAACE,EAAE,CAAC,CACf;EACH;EAEA,MAAM,IAAIC,KAAK,CAAC,MAAM,CAAC;AACzB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}