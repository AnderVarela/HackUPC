{"ast":null,"code":"import { AnyMap, encodedMappings, originalPositionFor, generatedPositionFor, allGeneratedPositionsFor, sourceContentFor, eachMapping } from '@jridgewell/trace-mapping';\nimport { GenMapping, fromMap, maybeAddMapping, setSourceContent, toEncodedMap, toDecodedMap } from '@jridgewell/gen-mapping';\nclass SourceMapConsumer {\n  constructor(map, mapUrl) {\n    const trace = this._map = new AnyMap(map, mapUrl);\n    this.file = trace.file;\n    this.names = trace.names;\n    this.sourceRoot = trace.sourceRoot;\n    this.sources = trace.resolvedSources;\n    this.sourcesContent = trace.sourcesContent;\n    this.version = trace.version;\n  }\n  static fromSourceMap(map, mapUrl) {\n    // This is more performant if we receive\n    // a @jridgewell/source-map SourceMapGenerator\n    if (map.toDecodedMap) {\n      return new SourceMapConsumer(map.toDecodedMap(), mapUrl);\n    }\n    // This is a fallback for `source-map` and `source-map-js`\n    return new SourceMapConsumer(map.toJSON(), mapUrl);\n  }\n  get mappings() {\n    return encodedMappings(this._map);\n  }\n  originalPositionFor(needle) {\n    return originalPositionFor(this._map, needle);\n  }\n  generatedPositionFor(originalPosition) {\n    return generatedPositionFor(this._map, originalPosition);\n  }\n  allGeneratedPositionsFor(originalPosition) {\n    return allGeneratedPositionsFor(this._map, originalPosition);\n  }\n  hasContentsOfAllSources() {\n    if (!this.sourcesContent || this.sourcesContent.length !== this.sources.length) {\n      return false;\n    }\n    for (const content of this.sourcesContent) {\n      if (content == null) {\n        return false;\n      }\n    }\n    return true;\n  }\n  sourceContentFor(source, nullOnMissing) {\n    const sourceContent = sourceContentFor(this._map, source);\n    if (sourceContent != null) {\n      return sourceContent;\n    }\n    if (nullOnMissing) {\n      return null;\n    }\n    throw new Error(`\"${source}\" is not in the SourceMap.`);\n  }\n  eachMapping(callback, context /*, order?: number*/) {\n    // order is ignored as @jridgewell/trace-map doesn't implement it\n    eachMapping(this._map, context ? callback.bind(context) : callback);\n  }\n  destroy() {\n    // noop.\n  }\n}\nclass SourceMapGenerator {\n  constructor(opts) {\n    // TODO :: should this be duck-typed ?\n    this._map = opts instanceof GenMapping ? opts : new GenMapping(opts);\n  }\n  static fromSourceMap(consumer) {\n    return new SourceMapGenerator(fromMap(consumer));\n  }\n  addMapping(mapping) {\n    maybeAddMapping(this._map, mapping);\n  }\n  setSourceContent(source, content) {\n    setSourceContent(this._map, source, content);\n  }\n  toJSON() {\n    return toEncodedMap(this._map);\n  }\n  toString() {\n    return JSON.stringify(this.toJSON());\n  }\n  toDecodedMap() {\n    return toDecodedMap(this._map);\n  }\n}\nexport { SourceMapConsumer, SourceMapGenerator };","map":{"version":3,"names":["SourceMapConsumer","constructor","map","mapUrl","trace","_map","AnyMap","file","names","sourceRoot","sources","resolvedSources","sourcesContent","version","fromSourceMap","toDecodedMap","toJSON","mappings","encodedMappings","originalPositionFor","needle","generatedPositionFor","originalPosition","allGeneratedPositionsFor","hasContentsOfAllSources","length","content","sourceContentFor","source","nullOnMissing","sourceContent","Error","eachMapping","callback","context","bind","destroy","SourceMapGenerator","opts","GenMapping","consumer","fromMap","addMapping","mapping","maybeAddMapping","setSourceContent","toEncodedMap","toString","JSON","stringify"],"sources":["C:\\Users\\chest\\OneDrive\\Documentos\\GitHub\\HackUPC\\frontend\\node_modules\\@jridgewell\\src\\source-map.ts"],"sourcesContent":["import {\n  AnyMap,\n  originalPositionFor,\n  generatedPositionFor,\n  allGeneratedPositionsFor,\n  eachMapping,\n  encodedMappings,\n  sourceContentFor,\n} from '@jridgewell/trace-mapping';\nimport {\n  GenMapping,\n  maybeAddMapping,\n  toDecodedMap,\n  toEncodedMap,\n  setSourceContent,\n  fromMap,\n} from '@jridgewell/gen-mapping';\n\nimport type {\n  TraceMap,\n  SourceMapInput,\n  SectionedSourceMapInput,\n  DecodedSourceMap,\n} from '@jridgewell/trace-mapping';\nexport type { TraceMap, SourceMapInput, SectionedSourceMapInput, DecodedSourceMap };\n\nimport type { Mapping, EncodedSourceMap } from '@jridgewell/gen-mapping';\nexport type { Mapping, EncodedSourceMap };\n\nexport class SourceMapConsumer {\n  private declare _map: TraceMap;\n  declare file: TraceMap['file'];\n  declare names: TraceMap['names'];\n  declare sourceRoot: TraceMap['sourceRoot'];\n  declare sources: TraceMap['sources'];\n  declare sourcesContent: TraceMap['sourcesContent'];\n  declare version: TraceMap['version'];\n\n  constructor(map: ConstructorParameters<typeof AnyMap>[0], mapUrl: Parameters<typeof AnyMap>[1]) {\n    const trace = (this._map = new AnyMap(map, mapUrl));\n\n    this.file = trace.file;\n    this.names = trace.names;\n    this.sourceRoot = trace.sourceRoot;\n    this.sources = trace.resolvedSources;\n    this.sourcesContent = trace.sourcesContent;\n    this.version = trace.version;\n  }\n\n  static fromSourceMap(map: SourceMapGenerator, mapUrl: Parameters<typeof AnyMap>[1]) {\n    // This is more performant if we receive\n    // a @jridgewell/source-map SourceMapGenerator\n    if (map.toDecodedMap) {\n      return new SourceMapConsumer(map.toDecodedMap() as SectionedSourceMapInput, mapUrl);\n    }\n\n    // This is a fallback for `source-map` and `source-map-js`\n    return new SourceMapConsumer(map.toJSON() as SectionedSourceMapInput, mapUrl);\n  }\n\n  get mappings(): string {\n    return encodedMappings(this._map);\n  }\n\n  originalPositionFor(\n    needle: Parameters<typeof originalPositionFor>[1],\n  ): ReturnType<typeof originalPositionFor> {\n    return originalPositionFor(this._map, needle);\n  }\n\n  generatedPositionFor(\n    originalPosition: Parameters<typeof generatedPositionFor>[1],\n  ): ReturnType<typeof generatedPositionFor> {\n    return generatedPositionFor(this._map, originalPosition);\n  }\n\n  allGeneratedPositionsFor(\n    originalPosition: Parameters<typeof generatedPositionFor>[1],\n  ): ReturnType<typeof generatedPositionFor>[] {\n    return allGeneratedPositionsFor(this._map, originalPosition);\n  }\n\n  hasContentsOfAllSources(): boolean {\n    if (!this.sourcesContent || this.sourcesContent.length !== this.sources.length) {\n      return false;\n    }\n\n    for (const content of this.sourcesContent) {\n      if (content == null) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  sourceContentFor(source: string, nullOnMissing?: boolean): string | null {\n    const sourceContent = sourceContentFor(this._map, source);\n    if (sourceContent != null) {\n      return sourceContent;\n    }\n\n    if (nullOnMissing) {\n      return null;\n    }\n    throw new Error(`\"${source}\" is not in the SourceMap.`);\n  }\n\n  eachMapping(\n    callback: Parameters<typeof eachMapping>[1],\n    context?: any /*, order?: number*/,\n  ): void {\n    // order is ignored as @jridgewell/trace-map doesn't implement it\n    eachMapping(this._map, context ? callback.bind(context) : callback);\n  }\n\n  destroy() {\n    // noop.\n  }\n}\n\nexport class SourceMapGenerator {\n  private declare _map: GenMapping;\n\n  constructor(opts: ConstructorParameters<typeof GenMapping>[0] | GenMapping) {\n    // TODO :: should this be duck-typed ?\n    this._map = opts instanceof GenMapping ? opts : new GenMapping(opts);\n  }\n\n  static fromSourceMap(consumer: SourceMapConsumer) {\n    return new SourceMapGenerator(fromMap(consumer));\n  }\n\n  addMapping(mapping: Parameters<typeof maybeAddMapping>[1]): ReturnType<typeof maybeAddMapping> {\n    maybeAddMapping(this._map, mapping);\n  }\n\n  setSourceContent(\n    source: Parameters<typeof setSourceContent>[1],\n    content: Parameters<typeof setSourceContent>[2],\n  ): ReturnType<typeof setSourceContent> {\n    setSourceContent(this._map, source, content);\n  }\n\n  toJSON(): ReturnType<typeof toEncodedMap> {\n    return toEncodedMap(this._map);\n  }\n\n  toString(): string {\n    return JSON.stringify(this.toJSON());\n  }\n\n  toDecodedMap(): ReturnType<typeof toDecodedMap> {\n    return toDecodedMap(this._map);\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}