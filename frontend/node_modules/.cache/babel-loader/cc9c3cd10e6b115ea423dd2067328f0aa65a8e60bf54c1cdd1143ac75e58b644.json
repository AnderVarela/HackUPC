{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { CanonicalizeLocaleList, GetOption, GetOptionsObject, IsWellFormedCurrencyCode, SupportedLocales, ToString, getInternalSlot, getMultiInternalSlots, invariant, setInternalSlot } from '@formatjs/ecma402-abstract';\nimport { CanonicalCodeForDisplayNames } from './abstract/CanonicalCodeForDisplayNames';\nimport { IsValidDateTimeFieldCode } from './abstract/IsValidDateTimeFieldCode';\nimport { ResolveLocale } from '@formatjs/intl-localematcher';\nvar DisplayNames = /** @class */function () {\n  function DisplayNames(locales, options) {\n    var _newTarget = this.constructor;\n    if (_newTarget === undefined) {\n      throw TypeError(\"Constructor Intl.DisplayNames requires 'new'\");\n    }\n    var requestedLocales = CanonicalizeLocaleList(locales);\n    options = GetOptionsObject(options);\n    var opt = Object.create(null);\n    var localeData = DisplayNames.localeData;\n    var matcher = GetOption(options, 'localeMatcher', 'string', ['lookup', 'best fit'], 'best fit');\n    opt.localeMatcher = matcher;\n    var r = ResolveLocale(Array.from(DisplayNames.availableLocales), requestedLocales, opt, [],\n    // there is no relevantExtensionKeys\n    DisplayNames.localeData, DisplayNames.getDefaultLocale);\n    var style = GetOption(options, 'style', 'string', ['narrow', 'short', 'long'], 'long');\n    setSlot(this, 'style', style);\n    var type = GetOption(options, 'type', 'string', ['language', 'region', 'script', 'currency', 'calendar', 'dateTimeField'], undefined);\n    if (type === undefined) {\n      throw TypeError(\"Intl.DisplayNames constructor requires \\\"type\\\" option\");\n    }\n    setSlot(this, 'type', type);\n    var fallback = GetOption(options, 'fallback', 'string', ['code', 'none'], 'code');\n    setSlot(this, 'fallback', fallback);\n    setSlot(this, 'locale', r.locale);\n    var dataLocale = r.dataLocale;\n    var dataLocaleData = localeData[dataLocale];\n    invariant(!!dataLocaleData, \"Missing locale data for \".concat(dataLocale));\n    setSlot(this, 'localeData', dataLocaleData);\n    invariant(dataLocaleData !== undefined, \"locale data for \".concat(r.locale, \" does not exist.\"));\n    var types = dataLocaleData.types;\n    invariant(typeof types === 'object' && types != null, 'invalid types data');\n    var typeFields = types[type];\n    invariant(typeof typeFields === 'object' && typeFields != null, 'invalid typeFields data');\n    var languageDisplay = GetOption(options, 'languageDisplay', 'string', ['dialect', 'standard'], 'dialect');\n    if (type === 'language') {\n      setSlot(this, 'languageDisplay', languageDisplay);\n      // Using types[type] instead of typeFields because TypeScript cannot infer the correct type\n      var typeFields_1 = types[type][languageDisplay];\n      invariant(typeof typeFields_1 === 'object' && typeFields_1 != null, 'invalid language typeFields data');\n    }\n    // Using types[type] instead of typeFields because TypeScript cannot infer the correct type\n    var styleFields = type === 'language' ? types[type][languageDisplay][style] : types[type][style];\n    invariant(typeof styleFields === 'object' && styleFields != null, 'invalid styleFields data');\n    setSlot(this, 'fields', styleFields);\n  }\n  DisplayNames.supportedLocalesOf = function (locales, options) {\n    return SupportedLocales(DisplayNames.availableLocales, CanonicalizeLocaleList(locales), options);\n  };\n  DisplayNames.__addLocaleData = function () {\n    var data = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n      data[_i] = arguments[_i];\n    }\n    for (var _a = 0, data_1 = data; _a < data_1.length; _a++) {\n      var _b = data_1[_a],\n        d = _b.data,\n        locale = _b.locale;\n      var minimizedLocale = new Intl.Locale(locale).minimize().toString();\n      DisplayNames.localeData[locale] = DisplayNames.localeData[minimizedLocale] = d;\n      DisplayNames.availableLocales.add(minimizedLocale);\n      DisplayNames.availableLocales.add(locale);\n      if (!DisplayNames.__defaultLocale) {\n        DisplayNames.__defaultLocale = minimizedLocale;\n      }\n    }\n  };\n  DisplayNames.prototype.of = function (code) {\n    checkReceiver(this, 'of');\n    var type = getSlot(this, 'type');\n    var codeAsString = ToString(code);\n    if (!isValidCodeForDisplayNames(type, codeAsString)) {\n      throw RangeError('invalid code for Intl.DisplayNames.prototype.of');\n    }\n    var _a = getMultiInternalSlots(__INTERNAL_SLOT_MAP__, this, 'localeData', 'style', 'fallback'),\n      localeData = _a.localeData,\n      style = _a.style,\n      fallback = _a.fallback;\n    // Canonicalize the case.\n    var canonicalCode = CanonicalCodeForDisplayNames(type, codeAsString);\n    var name;\n    if (type === 'language') {\n      var languageDisplay = getSlot(this, 'languageDisplay');\n      name = getNameForTypeLanguage(languageDisplay, localeData, style, canonicalCode, fallback);\n    } else {\n      // All the other types\n      var typesData = localeData.types[type];\n      name = typesData[style][canonicalCode] || typesData.long[canonicalCode];\n    }\n    if (name !== undefined) {\n      return name;\n    }\n    if (fallback === 'code') {\n      return codeAsString;\n    }\n  };\n  DisplayNames.prototype.resolvedOptions = function () {\n    checkReceiver(this, 'resolvedOptions');\n    return __assign({}, getMultiInternalSlots(__INTERNAL_SLOT_MAP__, this, 'locale', 'style', 'type', 'fallback', 'languageDisplay'));\n  };\n  DisplayNames.getDefaultLocale = function () {\n    return DisplayNames.__defaultLocale;\n  };\n  DisplayNames.localeData = {};\n  DisplayNames.availableLocales = new Set();\n  DisplayNames.__defaultLocale = '';\n  DisplayNames.polyfilled = true;\n  return DisplayNames;\n}();\nexport { DisplayNames };\n// https://tc39.es/proposal-intl-displaynames/#sec-isvalidcodefordisplaynames\nfunction isValidCodeForDisplayNames(type, code) {\n  switch (type) {\n    case 'language':\n      // subset of unicode_language_id\n      // languageCode [\"-\" scriptCode] [\"-\" regionCode] *(\"-\" variant)\n      // where:\n      // - languageCode is either a two letters ISO 639-1 language code or a three letters ISO 639-2 language code.\n      // - scriptCode is should be an ISO-15924 four letters script code\n      // - regionCode is either an ISO-3166 two letters region code, or a three digits UN M49 Geographic Regions.\n      return /^[a-z]{2,3}(-[a-z]{4})?(-([a-z]{2}|\\d{3}))?(-([a-z\\d]{5,8}|\\d[a-z\\d]{3}))*$/i.test(code);\n    case 'region':\n      // unicode_region_subtag\n      return /^([a-z]{2}|\\d{3})$/i.test(code);\n    case 'script':\n      // unicode_script_subtag\n      return /^[a-z]{4}$/i.test(code);\n    case 'currency':\n      return IsWellFormedCurrencyCode(code);\n    case 'calendar':\n      // unicode locale identifier type\n      return /^[a-z0-9]{3,8}([-_][a-z0-9]{3,8})*$/i.test(code);\n    case 'dateTimeField':\n      return IsValidDateTimeFieldCode(code);\n  }\n}\ntry {\n  // IE11 does not have Symbol\n  if (typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n    Object.defineProperty(DisplayNames.prototype, Symbol.toStringTag, {\n      value: 'Intl.DisplayNames',\n      configurable: true,\n      enumerable: false,\n      writable: false\n    });\n  }\n  Object.defineProperty(DisplayNames, 'length', {\n    value: 2,\n    writable: false,\n    enumerable: false,\n    configurable: true\n  });\n} catch (e) {\n  // Make test 262 compliant\n}\nvar __INTERNAL_SLOT_MAP__ = new WeakMap();\nfunction getSlot(instance, key) {\n  return getInternalSlot(__INTERNAL_SLOT_MAP__, instance, key);\n}\nfunction setSlot(instance, key, value) {\n  setInternalSlot(__INTERNAL_SLOT_MAP__, instance, key, value);\n}\nfunction checkReceiver(receiver, methodName) {\n  if (!(receiver instanceof DisplayNames)) {\n    throw TypeError(\"Method Intl.DisplayNames.prototype.\".concat(methodName, \" called on incompatible receiver\"));\n  }\n}\nfunction getNameForTypeLanguage(languageDisplay, localeData, style, canonicalCode, fallback) {\n  // First, try to get the name using the canonicalCode\n  var typesData = localeData.types.language[languageDisplay];\n  var name = typesData[style][canonicalCode] || typesData.long[canonicalCode];\n  if (name === undefined) {\n    // If no name has been found using the canonicalCode,\n    // check if the latter contains a region sub tag\n    var regionMatch = /-([a-z]{2}|\\d{3})\\b/i.exec(canonicalCode);\n    if (regionMatch) {\n      // Extract the language and region sub tags\n      var languageSubTag = canonicalCode.substring(0, regionMatch.index) + canonicalCode.substring(regionMatch.index + regionMatch[0].length);\n      var regionSubTag = regionMatch[1];\n      // Let's try again using languageSubTag this time\n      var name_1 = typesData[style][languageSubTag] || typesData.long[languageSubTag];\n      // If a name has been found and a region sub tag exists,\n      // compose them together or use the code fallback\n      if (name_1 !== undefined && regionSubTag) {\n        // Retrieve region display names\n        var regionsData = localeData.types.region;\n        var regionDisplayName = regionsData[style][regionSubTag] || regionsData.long[regionSubTag];\n        if (regionDisplayName || fallback === 'code') {\n          // Interpolate into locale-specific pattern.\n          var pattern = localeData.patterns.locale;\n          return pattern.replace('{0}', name_1).replace('{1}', regionDisplayName || regionSubTag);\n        }\n      } else {\n        return name_1;\n      }\n    }\n  } else {\n    return name;\n  }\n}","map":{"version":3,"names":["__assign","CanonicalizeLocaleList","GetOption","GetOptionsObject","IsWellFormedCurrencyCode","SupportedLocales","ToString","getInternalSlot","getMultiInternalSlots","invariant","setInternalSlot","CanonicalCodeForDisplayNames","IsValidDateTimeFieldCode","ResolveLocale","DisplayNames","locales","options","_newTarget","constructor","undefined","TypeError","requestedLocales","opt","Object","create","localeData","matcher","localeMatcher","r","Array","from","availableLocales","getDefaultLocale","style","setSlot","type","fallback","locale","dataLocale","dataLocaleData","concat","types","typeFields","languageDisplay","typeFields_1","styleFields","supportedLocalesOf","__addLocaleData","data","_i","arguments","length","_a","data_1","_b","d","minimizedLocale","Intl","Locale","minimize","toString","add","__defaultLocale","prototype","of","code","checkReceiver","getSlot","codeAsString","isValidCodeForDisplayNames","RangeError","__INTERNAL_SLOT_MAP__","canonicalCode","name","getNameForTypeLanguage","typesData","long","resolvedOptions","Set","polyfilled","test","Symbol","toStringTag","defineProperty","value","configurable","enumerable","writable","e","WeakMap","instance","key","receiver","methodName","language","regionMatch","exec","languageSubTag","substring","index","regionSubTag","name_1","regionsData","region","regionDisplayName","pattern","patterns","replace"],"sources":["C:/Users/chest/OneDrive/Documentos/GitHub/HackUPC/frontend/node_modules/@formatjs/intl-displaynames/lib/index.js"],"sourcesContent":["import { __assign } from \"tslib\";\nimport { CanonicalizeLocaleList, GetOption, GetOptionsObject, IsWellFormedCurrencyCode, SupportedLocales, ToString, getInternalSlot, getMultiInternalSlots, invariant, setInternalSlot, } from '@formatjs/ecma402-abstract';\nimport { CanonicalCodeForDisplayNames } from './abstract/CanonicalCodeForDisplayNames';\nimport { IsValidDateTimeFieldCode } from './abstract/IsValidDateTimeFieldCode';\nimport { ResolveLocale } from '@formatjs/intl-localematcher';\nvar DisplayNames = /** @class */ (function () {\n    function DisplayNames(locales, options) {\n        var _newTarget = this.constructor;\n        if (_newTarget === undefined) {\n            throw TypeError(\"Constructor Intl.DisplayNames requires 'new'\");\n        }\n        var requestedLocales = CanonicalizeLocaleList(locales);\n        options = GetOptionsObject(options);\n        var opt = Object.create(null);\n        var localeData = DisplayNames.localeData;\n        var matcher = GetOption(options, 'localeMatcher', 'string', ['lookup', 'best fit'], 'best fit');\n        opt.localeMatcher = matcher;\n        var r = ResolveLocale(Array.from(DisplayNames.availableLocales), requestedLocales, opt, [], // there is no relevantExtensionKeys\n        DisplayNames.localeData, DisplayNames.getDefaultLocale);\n        var style = GetOption(options, 'style', 'string', ['narrow', 'short', 'long'], 'long');\n        setSlot(this, 'style', style);\n        var type = GetOption(options, 'type', 'string', ['language', 'region', 'script', 'currency', 'calendar', 'dateTimeField'], undefined);\n        if (type === undefined) {\n            throw TypeError(\"Intl.DisplayNames constructor requires \\\"type\\\" option\");\n        }\n        setSlot(this, 'type', type);\n        var fallback = GetOption(options, 'fallback', 'string', ['code', 'none'], 'code');\n        setSlot(this, 'fallback', fallback);\n        setSlot(this, 'locale', r.locale);\n        var dataLocale = r.dataLocale;\n        var dataLocaleData = localeData[dataLocale];\n        invariant(!!dataLocaleData, \"Missing locale data for \".concat(dataLocale));\n        setSlot(this, 'localeData', dataLocaleData);\n        invariant(dataLocaleData !== undefined, \"locale data for \".concat(r.locale, \" does not exist.\"));\n        var types = dataLocaleData.types;\n        invariant(typeof types === 'object' && types != null, 'invalid types data');\n        var typeFields = types[type];\n        invariant(typeof typeFields === 'object' && typeFields != null, 'invalid typeFields data');\n        var languageDisplay = GetOption(options, 'languageDisplay', 'string', ['dialect', 'standard'], 'dialect');\n        if (type === 'language') {\n            setSlot(this, 'languageDisplay', languageDisplay);\n            // Using types[type] instead of typeFields because TypeScript cannot infer the correct type\n            var typeFields_1 = types[type][languageDisplay];\n            invariant(typeof typeFields_1 === 'object' && typeFields_1 != null, 'invalid language typeFields data');\n        }\n        // Using types[type] instead of typeFields because TypeScript cannot infer the correct type\n        var styleFields = type === 'language'\n            ? types[type][languageDisplay][style]\n            : types[type][style];\n        invariant(typeof styleFields === 'object' && styleFields != null, 'invalid styleFields data');\n        setSlot(this, 'fields', styleFields);\n    }\n    DisplayNames.supportedLocalesOf = function (locales, options) {\n        return SupportedLocales(DisplayNames.availableLocales, CanonicalizeLocaleList(locales), options);\n    };\n    DisplayNames.__addLocaleData = function () {\n        var data = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            data[_i] = arguments[_i];\n        }\n        for (var _a = 0, data_1 = data; _a < data_1.length; _a++) {\n            var _b = data_1[_a], d = _b.data, locale = _b.locale;\n            var minimizedLocale = new Intl.Locale(locale)\n                .minimize()\n                .toString();\n            DisplayNames.localeData[locale] = DisplayNames.localeData[minimizedLocale] = d;\n            DisplayNames.availableLocales.add(minimizedLocale);\n            DisplayNames.availableLocales.add(locale);\n            if (!DisplayNames.__defaultLocale) {\n                DisplayNames.__defaultLocale = minimizedLocale;\n            }\n        }\n    };\n    DisplayNames.prototype.of = function (code) {\n        checkReceiver(this, 'of');\n        var type = getSlot(this, 'type');\n        var codeAsString = ToString(code);\n        if (!isValidCodeForDisplayNames(type, codeAsString)) {\n            throw RangeError('invalid code for Intl.DisplayNames.prototype.of');\n        }\n        var _a = getMultiInternalSlots(__INTERNAL_SLOT_MAP__, this, 'localeData', 'style', 'fallback'), localeData = _a.localeData, style = _a.style, fallback = _a.fallback;\n        // Canonicalize the case.\n        var canonicalCode = CanonicalCodeForDisplayNames(type, codeAsString);\n        var name;\n        if (type === 'language') {\n            var languageDisplay = getSlot(this, 'languageDisplay');\n            name = getNameForTypeLanguage(languageDisplay, localeData, style, canonicalCode, fallback);\n        }\n        else {\n            // All the other types\n            var typesData = localeData.types[type];\n            name = typesData[style][canonicalCode] || typesData.long[canonicalCode];\n        }\n        if (name !== undefined) {\n            return name;\n        }\n        if (fallback === 'code') {\n            return codeAsString;\n        }\n    };\n    DisplayNames.prototype.resolvedOptions = function () {\n        checkReceiver(this, 'resolvedOptions');\n        return __assign({}, getMultiInternalSlots(__INTERNAL_SLOT_MAP__, this, 'locale', 'style', 'type', 'fallback', 'languageDisplay'));\n    };\n    DisplayNames.getDefaultLocale = function () {\n        return DisplayNames.__defaultLocale;\n    };\n    DisplayNames.localeData = {};\n    DisplayNames.availableLocales = new Set();\n    DisplayNames.__defaultLocale = '';\n    DisplayNames.polyfilled = true;\n    return DisplayNames;\n}());\nexport { DisplayNames };\n// https://tc39.es/proposal-intl-displaynames/#sec-isvalidcodefordisplaynames\nfunction isValidCodeForDisplayNames(type, code) {\n    switch (type) {\n        case 'language':\n            // subset of unicode_language_id\n            // languageCode [\"-\" scriptCode] [\"-\" regionCode] *(\"-\" variant)\n            // where:\n            // - languageCode is either a two letters ISO 639-1 language code or a three letters ISO 639-2 language code.\n            // - scriptCode is should be an ISO-15924 four letters script code\n            // - regionCode is either an ISO-3166 two letters region code, or a three digits UN M49 Geographic Regions.\n            return /^[a-z]{2,3}(-[a-z]{4})?(-([a-z]{2}|\\d{3}))?(-([a-z\\d]{5,8}|\\d[a-z\\d]{3}))*$/i.test(code);\n        case 'region':\n            // unicode_region_subtag\n            return /^([a-z]{2}|\\d{3})$/i.test(code);\n        case 'script':\n            // unicode_script_subtag\n            return /^[a-z]{4}$/i.test(code);\n        case 'currency':\n            return IsWellFormedCurrencyCode(code);\n        case 'calendar':\n            // unicode locale identifier type\n            return /^[a-z0-9]{3,8}([-_][a-z0-9]{3,8})*$/i.test(code);\n        case 'dateTimeField':\n            return IsValidDateTimeFieldCode(code);\n    }\n}\ntry {\n    // IE11 does not have Symbol\n    if (typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n        Object.defineProperty(DisplayNames.prototype, Symbol.toStringTag, {\n            value: 'Intl.DisplayNames',\n            configurable: true,\n            enumerable: false,\n            writable: false,\n        });\n    }\n    Object.defineProperty(DisplayNames, 'length', {\n        value: 2,\n        writable: false,\n        enumerable: false,\n        configurable: true,\n    });\n}\ncatch (e) {\n    // Make test 262 compliant\n}\nvar __INTERNAL_SLOT_MAP__ = new WeakMap();\nfunction getSlot(instance, key) {\n    return getInternalSlot(__INTERNAL_SLOT_MAP__, instance, key);\n}\nfunction setSlot(instance, key, value) {\n    setInternalSlot(__INTERNAL_SLOT_MAP__, instance, key, value);\n}\nfunction checkReceiver(receiver, methodName) {\n    if (!(receiver instanceof DisplayNames)) {\n        throw TypeError(\"Method Intl.DisplayNames.prototype.\".concat(methodName, \" called on incompatible receiver\"));\n    }\n}\nfunction getNameForTypeLanguage(languageDisplay, localeData, style, canonicalCode, fallback) {\n    // First, try to get the name using the canonicalCode\n    var typesData = localeData.types.language[languageDisplay];\n    var name = typesData[style][canonicalCode] || typesData.long[canonicalCode];\n    if (name === undefined) {\n        // If no name has been found using the canonicalCode,\n        // check if the latter contains a region sub tag\n        var regionMatch = /-([a-z]{2}|\\d{3})\\b/i.exec(canonicalCode);\n        if (regionMatch) {\n            // Extract the language and region sub tags\n            var languageSubTag = canonicalCode.substring(0, regionMatch.index) +\n                canonicalCode.substring(regionMatch.index + regionMatch[0].length);\n            var regionSubTag = regionMatch[1];\n            // Let's try again using languageSubTag this time\n            var name_1 = typesData[style][languageSubTag] || typesData.long[languageSubTag];\n            // If a name has been found and a region sub tag exists,\n            // compose them together or use the code fallback\n            if (name_1 !== undefined && regionSubTag) {\n                // Retrieve region display names\n                var regionsData = localeData.types.region;\n                var regionDisplayName = regionsData[style][regionSubTag] || regionsData.long[regionSubTag];\n                if (regionDisplayName || fallback === 'code') {\n                    // Interpolate into locale-specific pattern.\n                    var pattern = localeData.patterns.locale;\n                    return pattern\n                        .replace('{0}', name_1)\n                        .replace('{1}', regionDisplayName || regionSubTag);\n                }\n            }\n            else {\n                return name_1;\n            }\n        }\n    }\n    else {\n        return name;\n    }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}