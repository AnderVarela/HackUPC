{"ast":null,"code":"\"use strict\";\n\nvar __classPrivateFieldSet = this && this.__classPrivateFieldSet || function (receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value), value;\n};\nvar __classPrivateFieldGet = this && this.__classPrivateFieldGet || function (receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _PatternVisitor_rootPattern, _PatternVisitor_callback, _PatternVisitor_assignments, _PatternVisitor_restElements;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PatternVisitor = void 0;\nconst types_1 = require(\"@typescript-eslint/types\");\nconst VisitorBase_1 = require(\"./VisitorBase\");\nclass PatternVisitor extends VisitorBase_1.VisitorBase {\n  static isPattern(node) {\n    const nodeType = node.type;\n    return nodeType === types_1.AST_NODE_TYPES.Identifier || nodeType === types_1.AST_NODE_TYPES.ObjectPattern || nodeType === types_1.AST_NODE_TYPES.ArrayPattern || nodeType === types_1.AST_NODE_TYPES.SpreadElement || nodeType === types_1.AST_NODE_TYPES.RestElement || nodeType === types_1.AST_NODE_TYPES.AssignmentPattern;\n  }\n  constructor(options, rootPattern, callback) {\n    super(options);\n    _PatternVisitor_rootPattern.set(this, void 0);\n    _PatternVisitor_callback.set(this, void 0);\n    _PatternVisitor_assignments.set(this, []);\n    this.rightHandNodes = [];\n    _PatternVisitor_restElements.set(this, []);\n    __classPrivateFieldSet(this, _PatternVisitor_rootPattern, rootPattern, \"f\");\n    __classPrivateFieldSet(this, _PatternVisitor_callback, callback, \"f\");\n  }\n  ArrayExpression(node) {\n    node.elements.forEach(this.visit, this);\n  }\n  ArrayPattern(pattern) {\n    for (const element of pattern.elements) {\n      this.visit(element);\n    }\n  }\n  AssignmentExpression(node) {\n    __classPrivateFieldGet(this, _PatternVisitor_assignments, \"f\").push(node);\n    this.visit(node.left);\n    this.rightHandNodes.push(node.right);\n    __classPrivateFieldGet(this, _PatternVisitor_assignments, \"f\").pop();\n  }\n  AssignmentPattern(pattern) {\n    __classPrivateFieldGet(this, _PatternVisitor_assignments, \"f\").push(pattern);\n    this.visit(pattern.left);\n    this.rightHandNodes.push(pattern.right);\n    __classPrivateFieldGet(this, _PatternVisitor_assignments, \"f\").pop();\n  }\n  CallExpression(node) {\n    // arguments are right hand nodes.\n    node.arguments.forEach(a => {\n      this.rightHandNodes.push(a);\n    });\n    this.visit(node.callee);\n  }\n  Decorator() {\n    // don't visit any decorators when exploring a pattern\n  }\n  Identifier(pattern) {\n    var _a;\n    const lastRestElement = (_a = __classPrivateFieldGet(this, _PatternVisitor_restElements, \"f\")[__classPrivateFieldGet(this, _PatternVisitor_restElements, \"f\").length - 1]) !== null && _a !== void 0 ? _a : null;\n    __classPrivateFieldGet(this, _PatternVisitor_callback, \"f\").call(this, pattern, {\n      topLevel: pattern === __classPrivateFieldGet(this, _PatternVisitor_rootPattern, \"f\"),\n      rest: lastRestElement != null && lastRestElement.argument === pattern,\n      assignments: __classPrivateFieldGet(this, _PatternVisitor_assignments, \"f\")\n    });\n  }\n  MemberExpression(node) {\n    // Computed property's key is a right hand node.\n    if (node.computed) {\n      this.rightHandNodes.push(node.property);\n    }\n    // the object is only read, write to its property.\n    this.rightHandNodes.push(node.object);\n  }\n  Property(property) {\n    // Computed property's key is a right hand node.\n    if (property.computed) {\n      this.rightHandNodes.push(property.key);\n    }\n    // If it's shorthand, its key is same as its value.\n    // If it's shorthand and has its default value, its key is same as its value.left (the value is AssignmentPattern).\n    // If it's not shorthand, the name of new variable is its value's.\n    this.visit(property.value);\n  }\n  RestElement(pattern) {\n    __classPrivateFieldGet(this, _PatternVisitor_restElements, \"f\").push(pattern);\n    this.visit(pattern.argument);\n    __classPrivateFieldGet(this, _PatternVisitor_restElements, \"f\").pop();\n  }\n  SpreadElement(node) {\n    this.visit(node.argument);\n  }\n  TSTypeAnnotation() {\n    // we don't want to visit types\n  }\n}\nexports.PatternVisitor = PatternVisitor;\n_PatternVisitor_rootPattern = new WeakMap(), _PatternVisitor_callback = new WeakMap(), _PatternVisitor_assignments = new WeakMap(), _PatternVisitor_restElements = new WeakMap();","map":{"version":3,"names":["types_1","require","VisitorBase_1","PatternVisitor","VisitorBase","isPattern","node","nodeType","type","AST_NODE_TYPES","Identifier","ObjectPattern","ArrayPattern","SpreadElement","RestElement","AssignmentPattern","constructor","options","rootPattern","callback","_PatternVisitor_rootPattern","set","_PatternVisitor_callback","_PatternVisitor_assignments","rightHandNodes","_PatternVisitor_restElements","__classPrivateFieldSet","ArrayExpression","elements","forEach","visit","pattern","element","AssignmentExpression","__classPrivateFieldGet","push","left","right","pop","CallExpression","arguments","a","callee","Decorator","lastRestElement","_a","length","call","topLevel","rest","argument","assignments","MemberExpression","computed","property","object","Property","key","value","TSTypeAnnotation","exports"],"sources":["../../src/referencer/PatternVisitor.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}