{"ast":null,"code":"const ansiHTML = require('ansi-html-community');\nconst entities = require('html-entities');\nconst theme = require('../theme.js');\nconst utils = require('../utils.js');\nansiHTML.setColors(theme);\n\n/**\n * @typedef {Object} CompileErrorTraceProps\n * @property {string} errorMessage\n */\n\n/**\n * A formatter that turns Webpack compile error messages into highlighted HTML source traces.\n * @param {Document} document\n * @param {HTMLElement} root\n * @param {CompileErrorTraceProps} props\n * @returns {void}\n */\nfunction CompileErrorTrace(document, root, props) {\n  const errorParts = props.errorMessage.split('\\n');\n  if (errorParts.length) {\n    if (errorParts[0]) {\n      errorParts[0] = utils.formatFilename(errorParts[0]);\n    }\n    const errorMessage = errorParts.splice(1, 1)[0];\n    if (errorMessage) {\n      // Strip filename from the error message\n      errorParts.unshift(errorMessage.replace(/^(.*:)\\s.*:(\\s.*)$/, '$1$2'));\n    }\n  }\n  const stackContainer = document.createElement('pre');\n  stackContainer.innerHTML = entities.decode(ansiHTML(entities.encode(errorParts.join('\\n'), {\n    level: 'html5',\n    mode: 'nonAscii'\n  })), {\n    level: 'html5'\n  });\n  stackContainer.style.fontFamily = ['\"Operator Mono SSm\"', '\"Operator Mono\"', '\"Fira Code Retina\"', '\"Fira Code\"', '\"FiraCode-Retina\"', '\"Andale Mono\"', '\"Lucida Console\"', 'Menlo', 'Consolas', 'Monaco', 'monospace'].join(', ');\n  stackContainer.style.margin = '0';\n  stackContainer.style.whiteSpace = 'pre-wrap';\n  root.appendChild(stackContainer);\n}\nmodule.exports = CompileErrorTrace;","map":{"version":3,"names":["ansiHTML","require","entities","theme","utils","setColors","CompileErrorTrace","document","root","props","errorParts","errorMessage","split","length","formatFilename","splice","unshift","replace","stackContainer","createElement","innerHTML","decode","encode","join","level","mode","style","fontFamily","margin","whiteSpace","appendChild","module","exports"],"sources":["C:/Users/chest/OneDrive/Documentos/GitHub/HackUPC/frontend/node_modules/@pmmmwh/react-refresh-webpack-plugin/overlay/components/CompileErrorTrace.js"],"sourcesContent":["const ansiHTML = require('ansi-html-community');\nconst entities = require('html-entities');\nconst theme = require('../theme.js');\nconst utils = require('../utils.js');\n\nansiHTML.setColors(theme);\n\n/**\n * @typedef {Object} CompileErrorTraceProps\n * @property {string} errorMessage\n */\n\n/**\n * A formatter that turns Webpack compile error messages into highlighted HTML source traces.\n * @param {Document} document\n * @param {HTMLElement} root\n * @param {CompileErrorTraceProps} props\n * @returns {void}\n */\nfunction CompileErrorTrace(document, root, props) {\n  const errorParts = props.errorMessage.split('\\n');\n  if (errorParts.length) {\n    if (errorParts[0]) {\n      errorParts[0] = utils.formatFilename(errorParts[0]);\n    }\n\n    const errorMessage = errorParts.splice(1, 1)[0];\n    if (errorMessage) {\n      // Strip filename from the error message\n      errorParts.unshift(errorMessage.replace(/^(.*:)\\s.*:(\\s.*)$/, '$1$2'));\n    }\n  }\n\n  const stackContainer = document.createElement('pre');\n  stackContainer.innerHTML = entities.decode(\n    ansiHTML(entities.encode(errorParts.join('\\n'), { level: 'html5', mode: 'nonAscii' })),\n    { level: 'html5' }\n  );\n  stackContainer.style.fontFamily = [\n    '\"Operator Mono SSm\"',\n    '\"Operator Mono\"',\n    '\"Fira Code Retina\"',\n    '\"Fira Code\"',\n    '\"FiraCode-Retina\"',\n    '\"Andale Mono\"',\n    '\"Lucida Console\"',\n    'Menlo',\n    'Consolas',\n    'Monaco',\n    'monospace',\n  ].join(', ');\n  stackContainer.style.margin = '0';\n  stackContainer.style.whiteSpace = 'pre-wrap';\n\n  root.appendChild(stackContainer);\n}\n\nmodule.exports = CompileErrorTrace;\n"],"mappings":"AAAA,MAAMA,QAAQ,GAAGC,OAAO,CAAC,qBAAqB,CAAC;AAC/C,MAAMC,QAAQ,GAAGD,OAAO,CAAC,eAAe,CAAC;AACzC,MAAME,KAAK,GAAGF,OAAO,CAAC,aAAa,CAAC;AACpC,MAAMG,KAAK,GAAGH,OAAO,CAAC,aAAa,CAAC;AAEpCD,QAAQ,CAACK,SAAS,CAACF,KAAK,CAAC;;AAEzB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASG,iBAAiBA,CAACC,QAAQ,EAAEC,IAAI,EAAEC,KAAK,EAAE;EAChD,MAAMC,UAAU,GAAGD,KAAK,CAACE,YAAY,CAACC,KAAK,CAAC,IAAI,CAAC;EACjD,IAAIF,UAAU,CAACG,MAAM,EAAE;IACrB,IAAIH,UAAU,CAAC,CAAC,CAAC,EAAE;MACjBA,UAAU,CAAC,CAAC,CAAC,GAAGN,KAAK,CAACU,cAAc,CAACJ,UAAU,CAAC,CAAC,CAAC,CAAC;IACrD;IAEA,MAAMC,YAAY,GAAGD,UAAU,CAACK,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IAC/C,IAAIJ,YAAY,EAAE;MAChB;MACAD,UAAU,CAACM,OAAO,CAACL,YAAY,CAACM,OAAO,CAAC,oBAAoB,EAAE,MAAM,CAAC,CAAC;IACxE;EACF;EAEA,MAAMC,cAAc,GAAGX,QAAQ,CAACY,aAAa,CAAC,KAAK,CAAC;EACpDD,cAAc,CAACE,SAAS,GAAGlB,QAAQ,CAACmB,MAAM,CACxCrB,QAAQ,CAACE,QAAQ,CAACoB,MAAM,CAACZ,UAAU,CAACa,IAAI,CAAC,IAAI,CAAC,EAAE;IAAEC,KAAK,EAAE,OAAO;IAAEC,IAAI,EAAE;EAAW,CAAC,CAAC,CAAC,EACtF;IAAED,KAAK,EAAE;EAAQ,CACnB,CAAC;EACDN,cAAc,CAACQ,KAAK,CAACC,UAAU,GAAG,CAChC,qBAAqB,EACrB,iBAAiB,EACjB,oBAAoB,EACpB,aAAa,EACb,mBAAmB,EACnB,eAAe,EACf,kBAAkB,EAClB,OAAO,EACP,UAAU,EACV,QAAQ,EACR,WAAW,CACZ,CAACJ,IAAI,CAAC,IAAI,CAAC;EACZL,cAAc,CAACQ,KAAK,CAACE,MAAM,GAAG,GAAG;EACjCV,cAAc,CAACQ,KAAK,CAACG,UAAU,GAAG,UAAU;EAE5CrB,IAAI,CAACsB,WAAW,CAACZ,cAAc,CAAC;AAClC;AAEAa,MAAM,CAACC,OAAO,GAAG1B,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}