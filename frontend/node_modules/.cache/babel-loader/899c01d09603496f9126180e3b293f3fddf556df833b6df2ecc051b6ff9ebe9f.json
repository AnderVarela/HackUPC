{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\nconst addJSXAttribute = ({\n  types: t,\n  template\n}, opts) => {\n  function getAttributeValue(value, literal) {\n    if (typeof value === 'string' && literal) {\n      return t.jsxExpressionContainer(template.ast(value).expression);\n    }\n    if (typeof value === 'string') {\n      return t.stringLiteral(value);\n    }\n    if (typeof value === 'boolean') {\n      return t.jsxExpressionContainer(t.booleanLiteral(value));\n    }\n    if (typeof value === 'number') {\n      return t.jsxExpressionContainer(t.numericLiteral(value));\n    }\n    return null;\n  }\n  return {\n    visitor: {\n      JSXAttribute(path) {\n        const valuePath = path.get('value');\n        if (!valuePath.isStringLiteral()) return;\n        opts.values.forEach(({\n          value,\n          newValue,\n          literal\n        }) => {\n          if (!valuePath.isStringLiteral({\n            value\n          })) return;\n          valuePath.replaceWith(getAttributeValue(newValue, literal));\n        });\n      }\n    }\n  };\n};\nvar _default = addJSXAttribute;\nexports.default = _default;","map":{"version":3,"names":["exports","__esModule","default","addJSXAttribute","types","t","template","opts","getAttributeValue","value","literal","jsxExpressionContainer","ast","expression","stringLiteral","booleanLiteral","numericLiteral","visitor","JSXAttribute","path","valuePath","get","isStringLiteral","values","forEach","newValue","replaceWith","_default"],"sources":["C:/Users/chest/OneDrive/Documentos/GitHub/HackUPC/frontend/node_modules/@svgr/babel-plugin-replace-jsx-attribute-value/lib/index.js"],"sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nconst addJSXAttribute = ({\n  types: t,\n  template\n}, opts) => {\n  function getAttributeValue(value, literal) {\n    if (typeof value === 'string' && literal) {\n      return t.jsxExpressionContainer(template.ast(value).expression);\n    }\n\n    if (typeof value === 'string') {\n      return t.stringLiteral(value);\n    }\n\n    if (typeof value === 'boolean') {\n      return t.jsxExpressionContainer(t.booleanLiteral(value));\n    }\n\n    if (typeof value === 'number') {\n      return t.jsxExpressionContainer(t.numericLiteral(value));\n    }\n\n    return null;\n  }\n\n  return {\n    visitor: {\n      JSXAttribute(path) {\n        const valuePath = path.get('value');\n        if (!valuePath.isStringLiteral()) return;\n        opts.values.forEach(({\n          value,\n          newValue,\n          literal\n        }) => {\n          if (!valuePath.isStringLiteral({\n            value\n          })) return;\n          valuePath.replaceWith(getAttributeValue(newValue, literal));\n        });\n      }\n\n    }\n  };\n};\n\nvar _default = addJSXAttribute;\nexports.default = _default;"],"mappings":"AAAA,YAAY;;AAEZA,OAAO,CAACC,UAAU,GAAG,IAAI;AACzBD,OAAO,CAACE,OAAO,GAAG,KAAK,CAAC;AAExB,MAAMC,eAAe,GAAGA,CAAC;EACvBC,KAAK,EAAEC,CAAC;EACRC;AACF,CAAC,EAAEC,IAAI,KAAK;EACV,SAASC,iBAAiBA,CAACC,KAAK,EAAEC,OAAO,EAAE;IACzC,IAAI,OAAOD,KAAK,KAAK,QAAQ,IAAIC,OAAO,EAAE;MACxC,OAAOL,CAAC,CAACM,sBAAsB,CAACL,QAAQ,CAACM,GAAG,CAACH,KAAK,CAAC,CAACI,UAAU,CAAC;IACjE;IAEA,IAAI,OAAOJ,KAAK,KAAK,QAAQ,EAAE;MAC7B,OAAOJ,CAAC,CAACS,aAAa,CAACL,KAAK,CAAC;IAC/B;IAEA,IAAI,OAAOA,KAAK,KAAK,SAAS,EAAE;MAC9B,OAAOJ,CAAC,CAACM,sBAAsB,CAACN,CAAC,CAACU,cAAc,CAACN,KAAK,CAAC,CAAC;IAC1D;IAEA,IAAI,OAAOA,KAAK,KAAK,QAAQ,EAAE;MAC7B,OAAOJ,CAAC,CAACM,sBAAsB,CAACN,CAAC,CAACW,cAAc,CAACP,KAAK,CAAC,CAAC;IAC1D;IAEA,OAAO,IAAI;EACb;EAEA,OAAO;IACLQ,OAAO,EAAE;MACPC,YAAYA,CAACC,IAAI,EAAE;QACjB,MAAMC,SAAS,GAAGD,IAAI,CAACE,GAAG,CAAC,OAAO,CAAC;QACnC,IAAI,CAACD,SAAS,CAACE,eAAe,CAAC,CAAC,EAAE;QAClCf,IAAI,CAACgB,MAAM,CAACC,OAAO,CAAC,CAAC;UACnBf,KAAK;UACLgB,QAAQ;UACRf;QACF,CAAC,KAAK;UACJ,IAAI,CAACU,SAAS,CAACE,eAAe,CAAC;YAC7Bb;UACF,CAAC,CAAC,EAAE;UACJW,SAAS,CAACM,WAAW,CAAClB,iBAAiB,CAACiB,QAAQ,EAAEf,OAAO,CAAC,CAAC;QAC7D,CAAC,CAAC;MACJ;IAEF;EACF,CAAC;AACH,CAAC;AAED,IAAIiB,QAAQ,GAAGxB,eAAe;AAC9BH,OAAO,CAACE,OAAO,GAAGyB,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}