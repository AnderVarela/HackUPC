{"ast":null,"code":"\"use strict\";\n\nvar jsc = require(\"jsverify\");\nvar refute = require(\"@sinonjs/referee-sinon\").refute;\nvar functionName = require(\"./function-name\");\ndescribe(\"function-name\", function () {\n  it(\"should return empty string if func is falsy\", function () {\n    jsc.assertForall(\"falsy\", function (fn) {\n      return functionName(fn) === \"\";\n    });\n  });\n  it(\"should use displayName by default\", function () {\n    jsc.assertForall(\"nestring\", function (displayName) {\n      var fn = {\n        displayName: displayName\n      };\n      return functionName(fn) === fn.displayName;\n    });\n  });\n  it(\"should use name if displayName is not available\", function () {\n    jsc.assertForall(\"nestring\", function (name) {\n      var fn = {\n        name: name\n      };\n      return functionName(fn) === fn.name;\n    });\n  });\n  it(\"should fallback to string parsing\", function () {\n    jsc.assertForall(\"nat\", function (naturalNumber) {\n      var name = `fn${naturalNumber}`;\n      var fn = {\n        toString: function () {\n          return `\\nfunction ${name}`;\n        }\n      };\n      return functionName(fn) === name;\n    });\n  });\n  it(\"should not fail when a name cannot be found\", function () {\n    refute.exception(function () {\n      var fn = {\n        toString: function () {\n          return \"\\nfunction (\";\n        }\n      };\n      functionName(fn);\n    });\n  });\n  it(\"should not fail when toString is undefined\", function () {\n    refute.exception(function () {\n      functionName(Object.create(null));\n    });\n  });\n  it(\"should not fail when toString throws\", function () {\n    refute.exception(function () {\n      var fn;\n      try {\n        // eslint-disable-next-line no-eval\n        fn = eval(\"(function*() {})\")().constructor;\n      } catch (e) {\n        // env doesn't support generators\n        return;\n      }\n      functionName(fn);\n    });\n  });\n});","map":{"version":3,"names":["jsc","require","refute","functionName","describe","it","assertForall","fn","displayName","name","naturalNumber","toString","exception","Object","create","eval","constructor","e"],"sources":["C:/Users/chest/OneDrive/Documentos/GitHub/HackUPC/frontend/node_modules/@sinonjs/commons/lib/function-name.test.js"],"sourcesContent":["\"use strict\";\n\nvar jsc = require(\"jsverify\");\nvar refute = require(\"@sinonjs/referee-sinon\").refute;\n\nvar functionName = require(\"./function-name\");\n\ndescribe(\"function-name\", function () {\n    it(\"should return empty string if func is falsy\", function () {\n        jsc.assertForall(\"falsy\", function (fn) {\n            return functionName(fn) === \"\";\n        });\n    });\n\n    it(\"should use displayName by default\", function () {\n        jsc.assertForall(\"nestring\", function (displayName) {\n            var fn = { displayName: displayName };\n\n            return functionName(fn) === fn.displayName;\n        });\n    });\n\n    it(\"should use name if displayName is not available\", function () {\n        jsc.assertForall(\"nestring\", function (name) {\n            var fn = { name: name };\n\n            return functionName(fn) === fn.name;\n        });\n    });\n\n    it(\"should fallback to string parsing\", function () {\n        jsc.assertForall(\"nat\", function (naturalNumber) {\n            var name = `fn${naturalNumber}`;\n            var fn = {\n                toString: function () {\n                    return `\\nfunction ${name}`;\n                },\n            };\n\n            return functionName(fn) === name;\n        });\n    });\n\n    it(\"should not fail when a name cannot be found\", function () {\n        refute.exception(function () {\n            var fn = {\n                toString: function () {\n                    return \"\\nfunction (\";\n                },\n            };\n\n            functionName(fn);\n        });\n    });\n\n    it(\"should not fail when toString is undefined\", function () {\n        refute.exception(function () {\n            functionName(Object.create(null));\n        });\n    });\n\n    it(\"should not fail when toString throws\", function () {\n        refute.exception(function () {\n            var fn;\n            try {\n                // eslint-disable-next-line no-eval\n                fn = eval(\"(function*() {})\")().constructor;\n            } catch (e) {\n                // env doesn't support generators\n                return;\n            }\n\n            functionName(fn);\n        });\n    });\n});\n"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,GAAG,GAAGC,OAAO,CAAC,UAAU,CAAC;AAC7B,IAAIC,MAAM,GAAGD,OAAO,CAAC,wBAAwB,CAAC,CAACC,MAAM;AAErD,IAAIC,YAAY,GAAGF,OAAO,CAAC,iBAAiB,CAAC;AAE7CG,QAAQ,CAAC,eAAe,EAAE,YAAY;EAClCC,EAAE,CAAC,6CAA6C,EAAE,YAAY;IAC1DL,GAAG,CAACM,YAAY,CAAC,OAAO,EAAE,UAAUC,EAAE,EAAE;MACpC,OAAOJ,YAAY,CAACI,EAAE,CAAC,KAAK,EAAE;IAClC,CAAC,CAAC;EACN,CAAC,CAAC;EAEFF,EAAE,CAAC,mCAAmC,EAAE,YAAY;IAChDL,GAAG,CAACM,YAAY,CAAC,UAAU,EAAE,UAAUE,WAAW,EAAE;MAChD,IAAID,EAAE,GAAG;QAAEC,WAAW,EAAEA;MAAY,CAAC;MAErC,OAAOL,YAAY,CAACI,EAAE,CAAC,KAAKA,EAAE,CAACC,WAAW;IAC9C,CAAC,CAAC;EACN,CAAC,CAAC;EAEFH,EAAE,CAAC,iDAAiD,EAAE,YAAY;IAC9DL,GAAG,CAACM,YAAY,CAAC,UAAU,EAAE,UAAUG,IAAI,EAAE;MACzC,IAAIF,EAAE,GAAG;QAAEE,IAAI,EAAEA;MAAK,CAAC;MAEvB,OAAON,YAAY,CAACI,EAAE,CAAC,KAAKA,EAAE,CAACE,IAAI;IACvC,CAAC,CAAC;EACN,CAAC,CAAC;EAEFJ,EAAE,CAAC,mCAAmC,EAAE,YAAY;IAChDL,GAAG,CAACM,YAAY,CAAC,KAAK,EAAE,UAAUI,aAAa,EAAE;MAC7C,IAAID,IAAI,GAAI,KAAIC,aAAc,EAAC;MAC/B,IAAIH,EAAE,GAAG;QACLI,QAAQ,EAAE,SAAAA,CAAA,EAAY;UAClB,OAAQ,cAAaF,IAAK,EAAC;QAC/B;MACJ,CAAC;MAED,OAAON,YAAY,CAACI,EAAE,CAAC,KAAKE,IAAI;IACpC,CAAC,CAAC;EACN,CAAC,CAAC;EAEFJ,EAAE,CAAC,6CAA6C,EAAE,YAAY;IAC1DH,MAAM,CAACU,SAAS,CAAC,YAAY;MACzB,IAAIL,EAAE,GAAG;QACLI,QAAQ,EAAE,SAAAA,CAAA,EAAY;UAClB,OAAO,cAAc;QACzB;MACJ,CAAC;MAEDR,YAAY,CAACI,EAAE,CAAC;IACpB,CAAC,CAAC;EACN,CAAC,CAAC;EAEFF,EAAE,CAAC,4CAA4C,EAAE,YAAY;IACzDH,MAAM,CAACU,SAAS,CAAC,YAAY;MACzBT,YAAY,CAACU,MAAM,CAACC,MAAM,CAAC,IAAI,CAAC,CAAC;IACrC,CAAC,CAAC;EACN,CAAC,CAAC;EAEFT,EAAE,CAAC,sCAAsC,EAAE,YAAY;IACnDH,MAAM,CAACU,SAAS,CAAC,YAAY;MACzB,IAAIL,EAAE;MACN,IAAI;QACA;QACAA,EAAE,GAAGQ,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAACC,WAAW;MAC/C,CAAC,CAAC,OAAOC,CAAC,EAAE;QACR;QACA;MACJ;MAEAd,YAAY,CAACI,EAAE,CAAC;IACpB,CAAC,CAAC;EACN,CAAC,CAAC;AACN,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}