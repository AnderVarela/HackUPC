{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.numberLiteralFromRaw = numberLiteralFromRaw;\nexports.instruction = instruction;\nexports.objectInstruction = objectInstruction;\nexports.withLoc = withLoc;\nexports.withRaw = withRaw;\nexports.funcParam = funcParam;\nexports.indexLiteral = indexLiteral;\nexports.memIndexLiteral = memIndexLiteral;\nvar _helperNumbers = require(\"@webassemblyjs/helper-numbers\");\nvar _nodes = require(\"./nodes\");\nfunction numberLiteralFromRaw(rawValue) {\n  var instructionType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"i32\";\n  var original = rawValue; // Remove numeric separators _\n\n  if (typeof rawValue === \"string\") {\n    rawValue = rawValue.replace(/_/g, \"\");\n  }\n  if (typeof rawValue === \"number\") {\n    return (0, _nodes.numberLiteral)(rawValue, String(original));\n  } else {\n    switch (instructionType) {\n      case \"i32\":\n        {\n          return (0, _nodes.numberLiteral)((0, _helperNumbers.parse32I)(rawValue), String(original));\n        }\n      case \"u32\":\n        {\n          return (0, _nodes.numberLiteral)((0, _helperNumbers.parseU32)(rawValue), String(original));\n        }\n      case \"i64\":\n        {\n          return (0, _nodes.longNumberLiteral)((0, _helperNumbers.parse64I)(rawValue), String(original));\n        }\n      case \"f32\":\n        {\n          return (0, _nodes.floatLiteral)((0, _helperNumbers.parse32F)(rawValue), (0, _helperNumbers.isNanLiteral)(rawValue), (0, _helperNumbers.isInfLiteral)(rawValue), String(original));\n        }\n      // f64\n\n      default:\n        {\n          return (0, _nodes.floatLiteral)((0, _helperNumbers.parse64F)(rawValue), (0, _helperNumbers.isNanLiteral)(rawValue), (0, _helperNumbers.isInfLiteral)(rawValue), String(original));\n        }\n    }\n  }\n}\nfunction instruction(id) {\n  var args = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  var namedArgs = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  return (0, _nodes.instr)(id, undefined, args, namedArgs);\n}\nfunction objectInstruction(id, object) {\n  var args = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n  var namedArgs = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  return (0, _nodes.instr)(id, object, args, namedArgs);\n}\n/**\n * Decorators\n */\n\nfunction withLoc(n, end, start) {\n  var loc = {\n    start: start,\n    end: end\n  };\n  n.loc = loc;\n  return n;\n}\nfunction withRaw(n, raw) {\n  n.raw = raw;\n  return n;\n}\nfunction funcParam(valtype, id) {\n  return {\n    id: id,\n    valtype: valtype\n  };\n}\nfunction indexLiteral(value) {\n  // $FlowIgnore\n  var x = numberLiteralFromRaw(value, \"u32\");\n  return x;\n}\nfunction memIndexLiteral(value) {\n  // $FlowIgnore\n  var x = numberLiteralFromRaw(value, \"u32\");\n  return x;\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","numberLiteralFromRaw","instruction","objectInstruction","withLoc","withRaw","funcParam","indexLiteral","memIndexLiteral","_helperNumbers","require","_nodes","rawValue","instructionType","arguments","length","undefined","original","replace","numberLiteral","String","parse32I","parseU32","longNumberLiteral","parse64I","floatLiteral","parse32F","isNanLiteral","isInfLiteral","parse64F","id","args","namedArgs","instr","object","n","end","start","loc","raw","valtype","x"],"sources":["C:/Users/chest/OneDrive/Documentos/GitHub/HackUPC/frontend/node_modules/@webassemblyjs/ast/lib/node-helpers.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.numberLiteralFromRaw = numberLiteralFromRaw;\nexports.instruction = instruction;\nexports.objectInstruction = objectInstruction;\nexports.withLoc = withLoc;\nexports.withRaw = withRaw;\nexports.funcParam = funcParam;\nexports.indexLiteral = indexLiteral;\nexports.memIndexLiteral = memIndexLiteral;\n\nvar _helperNumbers = require(\"@webassemblyjs/helper-numbers\");\n\nvar _nodes = require(\"./nodes\");\n\nfunction numberLiteralFromRaw(rawValue) {\n  var instructionType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"i32\";\n  var original = rawValue; // Remove numeric separators _\n\n  if (typeof rawValue === \"string\") {\n    rawValue = rawValue.replace(/_/g, \"\");\n  }\n\n  if (typeof rawValue === \"number\") {\n    return (0, _nodes.numberLiteral)(rawValue, String(original));\n  } else {\n    switch (instructionType) {\n      case \"i32\":\n        {\n          return (0, _nodes.numberLiteral)((0, _helperNumbers.parse32I)(rawValue), String(original));\n        }\n\n      case \"u32\":\n        {\n          return (0, _nodes.numberLiteral)((0, _helperNumbers.parseU32)(rawValue), String(original));\n        }\n\n      case \"i64\":\n        {\n          return (0, _nodes.longNumberLiteral)((0, _helperNumbers.parse64I)(rawValue), String(original));\n        }\n\n      case \"f32\":\n        {\n          return (0, _nodes.floatLiteral)((0, _helperNumbers.parse32F)(rawValue), (0, _helperNumbers.isNanLiteral)(rawValue), (0, _helperNumbers.isInfLiteral)(rawValue), String(original));\n        }\n      // f64\n\n      default:\n        {\n          return (0, _nodes.floatLiteral)((0, _helperNumbers.parse64F)(rawValue), (0, _helperNumbers.isNanLiteral)(rawValue), (0, _helperNumbers.isInfLiteral)(rawValue), String(original));\n        }\n    }\n  }\n}\n\nfunction instruction(id) {\n  var args = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  var namedArgs = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  return (0, _nodes.instr)(id, undefined, args, namedArgs);\n}\n\nfunction objectInstruction(id, object) {\n  var args = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n  var namedArgs = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  return (0, _nodes.instr)(id, object, args, namedArgs);\n}\n/**\n * Decorators\n */\n\n\nfunction withLoc(n, end, start) {\n  var loc = {\n    start: start,\n    end: end\n  };\n  n.loc = loc;\n  return n;\n}\n\nfunction withRaw(n, raw) {\n  n.raw = raw;\n  return n;\n}\n\nfunction funcParam(valtype, id) {\n  return {\n    id: id,\n    valtype: valtype\n  };\n}\n\nfunction indexLiteral(value) {\n  // $FlowIgnore\n  var x = numberLiteralFromRaw(value, \"u32\");\n  return x;\n}\n\nfunction memIndexLiteral(value) {\n  // $FlowIgnore\n  var x = numberLiteralFromRaw(value, \"u32\");\n  return x;\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}