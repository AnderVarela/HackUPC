{"ast":null,"code":"import { __spreadArray } from \"tslib\";\nimport { isLiteralElement, isTagElement, isSelectElement, isArgumentElement, isDateElement, isTimeElement, isNumberElement, isPluralElement, TYPE, SKELETON_TYPE, isPoundElement } from './types';\nexport function printAST(ast) {\n  return doPrintAST(ast, false);\n}\nexport function doPrintAST(ast, isInPlural) {\n  var printedNodes = ast.map(function (el, i) {\n    if (isLiteralElement(el)) {\n      return printLiteralElement(el, isInPlural, i === 0, i === ast.length - 1);\n    }\n    if (isArgumentElement(el)) {\n      return printArgumentElement(el);\n    }\n    if (isDateElement(el) || isTimeElement(el) || isNumberElement(el)) {\n      return printSimpleFormatElement(el);\n    }\n    if (isPluralElement(el)) {\n      return printPluralElement(el);\n    }\n    if (isSelectElement(el)) {\n      return printSelectElement(el);\n    }\n    if (isPoundElement(el)) {\n      return '#';\n    }\n    if (isTagElement(el)) {\n      return printTagElement(el);\n    }\n  });\n  return printedNodes.join('');\n}\nfunction printTagElement(el) {\n  return \"<\".concat(el.value, \">\").concat(printAST(el.children), \"</\").concat(el.value, \">\");\n}\nfunction printEscapedMessage(message) {\n  return message.replace(/([{}](?:.*[{}])?)/su, \"'$1'\");\n}\nfunction printLiteralElement(_a, isInPlural, isFirstEl, isLastEl) {\n  var value = _a.value;\n  var escaped = value;\n  // If this literal starts with a ' and its not the 1st node, this means the node before it is non-literal\n  // and the `'` needs to be unescaped\n  if (!isFirstEl && escaped[0] === \"'\") {\n    escaped = \"''\".concat(escaped.slice(1));\n  }\n  // Same logic but for last el\n  if (!isLastEl && escaped[escaped.length - 1] === \"'\") {\n    escaped = \"\".concat(escaped.slice(0, escaped.length - 1), \"''\");\n  }\n  escaped = printEscapedMessage(escaped);\n  return isInPlural ? escaped.replace('#', \"'#'\") : escaped;\n}\nfunction printArgumentElement(_a) {\n  var value = _a.value;\n  return \"{\".concat(value, \"}\");\n}\nfunction printSimpleFormatElement(el) {\n  return \"{\".concat(el.value, \", \").concat(TYPE[el.type]).concat(el.style ? \", \".concat(printArgumentStyle(el.style)) : '', \"}\");\n}\nfunction printNumberSkeletonToken(token) {\n  var stem = token.stem,\n    options = token.options;\n  return options.length === 0 ? stem : \"\".concat(stem).concat(options.map(function (o) {\n    return \"/\".concat(o);\n  }).join(''));\n}\nfunction printArgumentStyle(style) {\n  if (typeof style === 'string') {\n    return printEscapedMessage(style);\n  } else if (style.type === SKELETON_TYPE.dateTime) {\n    return \"::\".concat(printDateTimeSkeleton(style));\n  } else {\n    return \"::\".concat(style.tokens.map(printNumberSkeletonToken).join(' '));\n  }\n}\nexport function printDateTimeSkeleton(style) {\n  return style.pattern;\n}\nfunction printSelectElement(el) {\n  var msg = [el.value, 'select', Object.keys(el.options).map(function (id) {\n    return \"\".concat(id, \"{\").concat(doPrintAST(el.options[id].value, false), \"}\");\n  }).join(' ')].join(',');\n  return \"{\".concat(msg, \"}\");\n}\nfunction printPluralElement(el) {\n  var type = el.pluralType === 'cardinal' ? 'plural' : 'selectordinal';\n  var msg = [el.value, type, __spreadArray([el.offset ? \"offset:\".concat(el.offset) : ''], Object.keys(el.options).map(function (id) {\n    return \"\".concat(id, \"{\").concat(doPrintAST(el.options[id].value, true), \"}\");\n  }), true).filter(Boolean).join(' ')].join(',');\n  return \"{\".concat(msg, \"}\");\n}","map":{"version":3,"names":["__spreadArray","isLiteralElement","isTagElement","isSelectElement","isArgumentElement","isDateElement","isTimeElement","isNumberElement","isPluralElement","TYPE","SKELETON_TYPE","isPoundElement","printAST","ast","doPrintAST","isInPlural","printedNodes","map","el","i","printLiteralElement","length","printArgumentElement","printSimpleFormatElement","printPluralElement","printSelectElement","printTagElement","join","concat","value","children","printEscapedMessage","message","replace","_a","isFirstEl","isLastEl","escaped","slice","type","style","printArgumentStyle","printNumberSkeletonToken","token","stem","options","o","dateTime","printDateTimeSkeleton","tokens","pattern","msg","Object","keys","id","pluralType","offset","filter","Boolean"],"sources":["C:/Users/chest/OneDrive/Documentos/GitHub/HackUPC/frontend/node_modules/@formatjs/icu-messageformat-parser/lib/printer.js"],"sourcesContent":["import { __spreadArray } from \"tslib\";\nimport { isLiteralElement, isTagElement, isSelectElement, isArgumentElement, isDateElement, isTimeElement, isNumberElement, isPluralElement, TYPE, SKELETON_TYPE, isPoundElement, } from './types';\nexport function printAST(ast) {\n    return doPrintAST(ast, false);\n}\nexport function doPrintAST(ast, isInPlural) {\n    var printedNodes = ast.map(function (el, i) {\n        if (isLiteralElement(el)) {\n            return printLiteralElement(el, isInPlural, i === 0, i === ast.length - 1);\n        }\n        if (isArgumentElement(el)) {\n            return printArgumentElement(el);\n        }\n        if (isDateElement(el) || isTimeElement(el) || isNumberElement(el)) {\n            return printSimpleFormatElement(el);\n        }\n        if (isPluralElement(el)) {\n            return printPluralElement(el);\n        }\n        if (isSelectElement(el)) {\n            return printSelectElement(el);\n        }\n        if (isPoundElement(el)) {\n            return '#';\n        }\n        if (isTagElement(el)) {\n            return printTagElement(el);\n        }\n    });\n    return printedNodes.join('');\n}\nfunction printTagElement(el) {\n    return \"<\".concat(el.value, \">\").concat(printAST(el.children), \"</\").concat(el.value, \">\");\n}\nfunction printEscapedMessage(message) {\n    return message.replace(/([{}](?:.*[{}])?)/su, \"'$1'\");\n}\nfunction printLiteralElement(_a, isInPlural, isFirstEl, isLastEl) {\n    var value = _a.value;\n    var escaped = value;\n    // If this literal starts with a ' and its not the 1st node, this means the node before it is non-literal\n    // and the `'` needs to be unescaped\n    if (!isFirstEl && escaped[0] === \"'\") {\n        escaped = \"''\".concat(escaped.slice(1));\n    }\n    // Same logic but for last el\n    if (!isLastEl && escaped[escaped.length - 1] === \"'\") {\n        escaped = \"\".concat(escaped.slice(0, escaped.length - 1), \"''\");\n    }\n    escaped = printEscapedMessage(escaped);\n    return isInPlural ? escaped.replace('#', \"'#'\") : escaped;\n}\nfunction printArgumentElement(_a) {\n    var value = _a.value;\n    return \"{\".concat(value, \"}\");\n}\nfunction printSimpleFormatElement(el) {\n    return \"{\".concat(el.value, \", \").concat(TYPE[el.type]).concat(el.style ? \", \".concat(printArgumentStyle(el.style)) : '', \"}\");\n}\nfunction printNumberSkeletonToken(token) {\n    var stem = token.stem, options = token.options;\n    return options.length === 0\n        ? stem\n        : \"\".concat(stem).concat(options.map(function (o) { return \"/\".concat(o); }).join(''));\n}\nfunction printArgumentStyle(style) {\n    if (typeof style === 'string') {\n        return printEscapedMessage(style);\n    }\n    else if (style.type === SKELETON_TYPE.dateTime) {\n        return \"::\".concat(printDateTimeSkeleton(style));\n    }\n    else {\n        return \"::\".concat(style.tokens.map(printNumberSkeletonToken).join(' '));\n    }\n}\nexport function printDateTimeSkeleton(style) {\n    return style.pattern;\n}\nfunction printSelectElement(el) {\n    var msg = [\n        el.value,\n        'select',\n        Object.keys(el.options)\n            .map(function (id) { return \"\".concat(id, \"{\").concat(doPrintAST(el.options[id].value, false), \"}\"); })\n            .join(' '),\n    ].join(',');\n    return \"{\".concat(msg, \"}\");\n}\nfunction printPluralElement(el) {\n    var type = el.pluralType === 'cardinal' ? 'plural' : 'selectordinal';\n    var msg = [\n        el.value,\n        type,\n        __spreadArray([\n            el.offset ? \"offset:\".concat(el.offset) : ''\n        ], Object.keys(el.options).map(function (id) { return \"\".concat(id, \"{\").concat(doPrintAST(el.options[id].value, true), \"}\"); }), true).filter(Boolean)\n            .join(' '),\n    ].join(',');\n    return \"{\".concat(msg, \"}\");\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}