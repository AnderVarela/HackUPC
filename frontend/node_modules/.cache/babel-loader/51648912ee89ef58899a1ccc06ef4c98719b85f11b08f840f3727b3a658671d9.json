{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * Creates a deep copy of a process coverage.\n *\n * @param processCov Process coverage to clone.\n * @return Cloned process coverage.\n */\nfunction cloneProcessCov(processCov) {\n  const result = [];\n  for (const scriptCov of processCov.result) {\n    result.push(cloneScriptCov(scriptCov));\n  }\n  return {\n    result\n  };\n}\nexports.cloneProcessCov = cloneProcessCov;\n/**\n * Creates a deep copy of a script coverage.\n *\n * @param scriptCov Script coverage to clone.\n * @return Cloned script coverage.\n */\nfunction cloneScriptCov(scriptCov) {\n  const functions = [];\n  for (const functionCov of scriptCov.functions) {\n    functions.push(cloneFunctionCov(functionCov));\n  }\n  return {\n    scriptId: scriptCov.scriptId,\n    url: scriptCov.url,\n    functions\n  };\n}\nexports.cloneScriptCov = cloneScriptCov;\n/**\n * Creates a deep copy of a function coverage.\n *\n * @param functionCov Function coverage to clone.\n * @return Cloned function coverage.\n */\nfunction cloneFunctionCov(functionCov) {\n  const ranges = [];\n  for (const rangeCov of functionCov.ranges) {\n    ranges.push(cloneRangeCov(rangeCov));\n  }\n  return {\n    functionName: functionCov.functionName,\n    ranges,\n    isBlockCoverage: functionCov.isBlockCoverage\n  };\n}\nexports.cloneFunctionCov = cloneFunctionCov;\n/**\n * Creates a deep copy of a function coverage.\n *\n * @param rangeCov Range coverage to clone.\n * @return Cloned range coverage.\n */\nfunction cloneRangeCov(rangeCov) {\n  return {\n    startOffset: rangeCov.startOffset,\n    endOffset: rangeCov.endOffset,\n    count: rangeCov.count\n  };\n}\nexports.cloneRangeCov = cloneRangeCov;","map":{"version":3,"names":["cloneProcessCov","processCov","result","scriptCov","push","cloneScriptCov","exports","functions","functionCov","cloneFunctionCov","scriptId","url","ranges","rangeCov","cloneRangeCov","functionName","isBlockCoverage","startOffset","endOffset","count"],"sources":["C:\\Users\\chest\\OneDrive\\Documentos\\GitHub\\HackUPC\\frontend\\node_modules\\@bcoe\\v8-coverage\\dist\\lib\\_src\\clone.ts"],"sourcesContent":["import { FunctionCov, ProcessCov, RangeCov, ScriptCov } from \"./types\";\n\n/**\n * Creates a deep copy of a process coverage.\n *\n * @param processCov Process coverage to clone.\n * @return Cloned process coverage.\n */\nexport function cloneProcessCov(processCov: Readonly<ProcessCov>): ProcessCov {\n  const result: ScriptCov[] = [];\n  for (const scriptCov of processCov.result) {\n    result.push(cloneScriptCov(scriptCov));\n  }\n\n  return {\n    result,\n  };\n}\n\n/**\n * Creates a deep copy of a script coverage.\n *\n * @param scriptCov Script coverage to clone.\n * @return Cloned script coverage.\n */\nexport function cloneScriptCov(scriptCov: Readonly<ScriptCov>): ScriptCov {\n  const functions: FunctionCov[] = [];\n  for (const functionCov of scriptCov.functions) {\n    functions.push(cloneFunctionCov(functionCov));\n  }\n\n  return {\n    scriptId: scriptCov.scriptId,\n    url: scriptCov.url,\n    functions,\n  };\n}\n\n/**\n * Creates a deep copy of a function coverage.\n *\n * @param functionCov Function coverage to clone.\n * @return Cloned function coverage.\n */\nexport function cloneFunctionCov(functionCov: Readonly<FunctionCov>): FunctionCov {\n  const ranges: RangeCov[] = [];\n  for (const rangeCov of functionCov.ranges) {\n    ranges.push(cloneRangeCov(rangeCov));\n  }\n\n  return {\n    functionName: functionCov.functionName,\n    ranges,\n    isBlockCoverage: functionCov.isBlockCoverage,\n  };\n}\n\n/**\n * Creates a deep copy of a function coverage.\n *\n * @param rangeCov Range coverage to clone.\n * @return Cloned range coverage.\n */\nexport function cloneRangeCov(rangeCov: Readonly<RangeCov>): RangeCov {\n  return {\n    startOffset: rangeCov.startOffset,\n    endOffset: rangeCov.endOffset,\n    count: rangeCov.count,\n  };\n}\n"],"mappings":";;;;;AAEA;;;;;;AAMA,SAAgBA,eAAeA,CAACC,UAAgC;EAC9D,MAAMC,MAAM,GAAgB,EAAE;EAC9B,KAAK,MAAMC,SAAS,IAAIF,UAAU,CAACC,MAAM,EAAE;IACzCA,MAAM,CAACE,IAAI,CAACC,cAAc,CAACF,SAAS,CAAC,CAAC;;EAGxC,OAAO;IACLD;GACD;AACH;AATAI,OAAA,CAAAN,eAAA,GAAAA,eAAA;AAWA;;;;;;AAMA,SAAgBK,cAAcA,CAACF,SAA8B;EAC3D,MAAMI,SAAS,GAAkB,EAAE;EACnC,KAAK,MAAMC,WAAW,IAAIL,SAAS,CAACI,SAAS,EAAE;IAC7CA,SAAS,CAACH,IAAI,CAACK,gBAAgB,CAACD,WAAW,CAAC,CAAC;;EAG/C,OAAO;IACLE,QAAQ,EAAEP,SAAS,CAACO,QAAQ;IAC5BC,GAAG,EAAER,SAAS,CAACQ,GAAG;IAClBJ;GACD;AACH;AAXAD,OAAA,CAAAD,cAAA,GAAAA,cAAA;AAaA;;;;;;AAMA,SAAgBI,gBAAgBA,CAACD,WAAkC;EACjE,MAAMI,MAAM,GAAe,EAAE;EAC7B,KAAK,MAAMC,QAAQ,IAAIL,WAAW,CAACI,MAAM,EAAE;IACzCA,MAAM,CAACR,IAAI,CAACU,aAAa,CAACD,QAAQ,CAAC,CAAC;;EAGtC,OAAO;IACLE,YAAY,EAAEP,WAAW,CAACO,YAAY;IACtCH,MAAM;IACNI,eAAe,EAAER,WAAW,CAACQ;GAC9B;AACH;AAXAV,OAAA,CAAAG,gBAAA,GAAAA,gBAAA;AAaA;;;;;;AAMA,SAAgBK,aAAaA,CAACD,QAA4B;EACxD,OAAO;IACLI,WAAW,EAAEJ,QAAQ,CAACI,WAAW;IACjCC,SAAS,EAAEL,QAAQ,CAACK,SAAS;IAC7BC,KAAK,EAAEN,QAAQ,CAACM;GACjB;AACH;AANAb,OAAA,CAAAQ,aAAA,GAAAA,aAAA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}