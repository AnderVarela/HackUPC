{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.formatMessage = void 0;\nvar tslib_1 = require(\"tslib\");\nvar ecma402_abstract_1 = require(\"@formatjs/ecma402-abstract\");\nvar intl_messageformat_1 = require(\"intl-messageformat\");\nvar error_1 = require(\"./error\");\nvar icu_messageformat_parser_1 = require(\"@formatjs/icu-messageformat-parser\");\nfunction setTimeZoneInOptions(opts, timeZone) {\n  return Object.keys(opts).reduce(function (all, k) {\n    all[k] = tslib_1.__assign({\n      timeZone: timeZone\n    }, opts[k]);\n    return all;\n  }, {});\n}\nfunction deepMergeOptions(opts1, opts2) {\n  var keys = Object.keys(tslib_1.__assign(tslib_1.__assign({}, opts1), opts2));\n  return keys.reduce(function (all, k) {\n    all[k] = tslib_1.__assign(tslib_1.__assign({}, opts1[k] || {}), opts2[k] || {});\n    return all;\n  }, {});\n}\nfunction deepMergeFormatsAndSetTimeZone(f1, timeZone) {\n  if (!timeZone) {\n    return f1;\n  }\n  var mfFormats = intl_messageformat_1.IntlMessageFormat.formats;\n  return tslib_1.__assign(tslib_1.__assign(tslib_1.__assign({}, mfFormats), f1), {\n    date: deepMergeOptions(setTimeZoneInOptions(mfFormats.date, timeZone), setTimeZoneInOptions(f1.date || {}, timeZone)),\n    time: deepMergeOptions(setTimeZoneInOptions(mfFormats.time, timeZone), setTimeZoneInOptions(f1.time || {}, timeZone))\n  });\n}\nvar formatMessage = function (_a, state, messageDescriptor, values, opts) {\n  var locale = _a.locale,\n    formats = _a.formats,\n    messages = _a.messages,\n    defaultLocale = _a.defaultLocale,\n    defaultFormats = _a.defaultFormats,\n    fallbackOnEmptyString = _a.fallbackOnEmptyString,\n    onError = _a.onError,\n    timeZone = _a.timeZone,\n    defaultRichTextElements = _a.defaultRichTextElements;\n  if (messageDescriptor === void 0) {\n    messageDescriptor = {\n      id: ''\n    };\n  }\n  var msgId = messageDescriptor.id,\n    defaultMessage = messageDescriptor.defaultMessage;\n  // `id` is a required field of a Message Descriptor.\n  (0, ecma402_abstract_1.invariant)(!!msgId, \"[@formatjs/intl] An `id` must be provided to format a message. You can either:\\n1. Configure your build toolchain with [babel-plugin-formatjs](https://formatjs.io/docs/tooling/babel-plugin)\\nor [@formatjs/ts-transformer](https://formatjs.io/docs/tooling/ts-transformer) OR\\n2. Configure your `eslint` config to include [eslint-plugin-formatjs](https://formatjs.io/docs/tooling/linter#enforce-id)\\nto autofix this issue\");\n  var id = String(msgId);\n  var message =\n  // In case messages is Object.create(null)\n  // e.g import('foo.json') from webpack)\n  // See https://github.com/formatjs/formatjs/issues/1914\n  messages && Object.prototype.hasOwnProperty.call(messages, id) && messages[id];\n  // IMPORTANT: Hot path if `message` is AST with a single literal node\n  if (Array.isArray(message) && message.length === 1 && message[0].type === icu_messageformat_parser_1.TYPE.literal) {\n    return message[0].value;\n  }\n  // IMPORTANT: Hot path straight lookup for performance\n  if (!values && message && typeof message === 'string' && !defaultRichTextElements) {\n    return message.replace(/'\\{(.*?)\\}'/gi, \"{$1}\");\n  }\n  values = tslib_1.__assign(tslib_1.__assign({}, defaultRichTextElements), values || {});\n  formats = deepMergeFormatsAndSetTimeZone(formats, timeZone);\n  defaultFormats = deepMergeFormatsAndSetTimeZone(defaultFormats, timeZone);\n  if (!message) {\n    if (fallbackOnEmptyString === false && message === '') {\n      return message;\n    }\n    if (!defaultMessage || locale && locale.toLowerCase() !== defaultLocale.toLowerCase()) {\n      // This prevents warnings from littering the console in development\n      // when no `messages` are passed into the <IntlProvider> for the\n      // default locale.\n      onError(new error_1.MissingTranslationError(messageDescriptor, locale));\n    }\n    if (defaultMessage) {\n      try {\n        var formatter = state.getMessageFormat(defaultMessage, defaultLocale, defaultFormats, opts);\n        return formatter.format(values);\n      } catch (e) {\n        onError(new error_1.MessageFormatError(\"Error formatting default message for: \\\"\".concat(id, \"\\\", rendering default message verbatim\"), locale, messageDescriptor, e));\n        return typeof defaultMessage === 'string' ? defaultMessage : id;\n      }\n    }\n    return id;\n  }\n  // We have the translated message\n  try {\n    var formatter = state.getMessageFormat(message, locale, formats, tslib_1.__assign({\n      formatters: state\n    }, opts || {}));\n    return formatter.format(values);\n  } catch (e) {\n    onError(new error_1.MessageFormatError(\"Error formatting message: \\\"\".concat(id, \"\\\", using \").concat(defaultMessage ? 'default message' : 'id', \" as fallback.\"), locale, messageDescriptor, e));\n  }\n  if (defaultMessage) {\n    try {\n      var formatter = state.getMessageFormat(defaultMessage, defaultLocale, defaultFormats, opts);\n      return formatter.format(values);\n    } catch (e) {\n      onError(new error_1.MessageFormatError(\"Error formatting the default message for: \\\"\".concat(id, \"\\\", rendering message verbatim\"), locale, messageDescriptor, e));\n    }\n  }\n  if (typeof message === 'string') {\n    return message;\n  }\n  if (typeof defaultMessage === 'string') {\n    return defaultMessage;\n  }\n  return id;\n};\nexports.formatMessage = formatMessage;","map":{"version":3,"names":["Object","defineProperty","exports","value","formatMessage","tslib_1","require","ecma402_abstract_1","intl_messageformat_1","error_1","icu_messageformat_parser_1","setTimeZoneInOptions","opts","timeZone","keys","reduce","all","k","__assign","deepMergeOptions","opts1","opts2","deepMergeFormatsAndSetTimeZone","f1","mfFormats","IntlMessageFormat","formats","date","time","_a","state","messageDescriptor","values","locale","messages","defaultLocale","defaultFormats","fallbackOnEmptyString","onError","defaultRichTextElements","id","msgId","defaultMessage","invariant","String","message","prototype","hasOwnProperty","call","Array","isArray","length","type","TYPE","literal","replace","toLowerCase","MissingTranslationError","formatter","getMessageFormat","format","e","MessageFormatError","concat","formatters"],"sources":["C:/Users/chest/OneDrive/Documentos/GitHub/HackUPC/frontend/node_modules/@formatjs/intl/src/message.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.formatMessage = void 0;\nvar tslib_1 = require(\"tslib\");\nvar ecma402_abstract_1 = require(\"@formatjs/ecma402-abstract\");\nvar intl_messageformat_1 = require(\"intl-messageformat\");\nvar error_1 = require(\"./error\");\nvar icu_messageformat_parser_1 = require(\"@formatjs/icu-messageformat-parser\");\nfunction setTimeZoneInOptions(opts, timeZone) {\n    return Object.keys(opts).reduce(function (all, k) {\n        all[k] = tslib_1.__assign({ timeZone: timeZone }, opts[k]);\n        return all;\n    }, {});\n}\nfunction deepMergeOptions(opts1, opts2) {\n    var keys = Object.keys(tslib_1.__assign(tslib_1.__assign({}, opts1), opts2));\n    return keys.reduce(function (all, k) {\n        all[k] = tslib_1.__assign(tslib_1.__assign({}, (opts1[k] || {})), (opts2[k] || {}));\n        return all;\n    }, {});\n}\nfunction deepMergeFormatsAndSetTimeZone(f1, timeZone) {\n    if (!timeZone) {\n        return f1;\n    }\n    var mfFormats = intl_messageformat_1.IntlMessageFormat.formats;\n    return tslib_1.__assign(tslib_1.__assign(tslib_1.__assign({}, mfFormats), f1), { date: deepMergeOptions(setTimeZoneInOptions(mfFormats.date, timeZone), setTimeZoneInOptions(f1.date || {}, timeZone)), time: deepMergeOptions(setTimeZoneInOptions(mfFormats.time, timeZone), setTimeZoneInOptions(f1.time || {}, timeZone)) });\n}\nvar formatMessage = function (_a, state, messageDescriptor, values, opts) {\n    var locale = _a.locale, formats = _a.formats, messages = _a.messages, defaultLocale = _a.defaultLocale, defaultFormats = _a.defaultFormats, fallbackOnEmptyString = _a.fallbackOnEmptyString, onError = _a.onError, timeZone = _a.timeZone, defaultRichTextElements = _a.defaultRichTextElements;\n    if (messageDescriptor === void 0) { messageDescriptor = { id: '' }; }\n    var msgId = messageDescriptor.id, defaultMessage = messageDescriptor.defaultMessage;\n    // `id` is a required field of a Message Descriptor.\n    (0, ecma402_abstract_1.invariant)(!!msgId, \"[@formatjs/intl] An `id` must be provided to format a message. You can either:\\n1. Configure your build toolchain with [babel-plugin-formatjs](https://formatjs.io/docs/tooling/babel-plugin)\\nor [@formatjs/ts-transformer](https://formatjs.io/docs/tooling/ts-transformer) OR\\n2. Configure your `eslint` config to include [eslint-plugin-formatjs](https://formatjs.io/docs/tooling/linter#enforce-id)\\nto autofix this issue\");\n    var id = String(msgId);\n    var message = \n    // In case messages is Object.create(null)\n    // e.g import('foo.json') from webpack)\n    // See https://github.com/formatjs/formatjs/issues/1914\n    messages &&\n        Object.prototype.hasOwnProperty.call(messages, id) &&\n        messages[id];\n    // IMPORTANT: Hot path if `message` is AST with a single literal node\n    if (Array.isArray(message) &&\n        message.length === 1 &&\n        message[0].type === icu_messageformat_parser_1.TYPE.literal) {\n        return message[0].value;\n    }\n    // IMPORTANT: Hot path straight lookup for performance\n    if (!values &&\n        message &&\n        typeof message === 'string' &&\n        !defaultRichTextElements) {\n        return message.replace(/'\\{(.*?)\\}'/gi, \"{$1}\");\n    }\n    values = tslib_1.__assign(tslib_1.__assign({}, defaultRichTextElements), (values || {}));\n    formats = deepMergeFormatsAndSetTimeZone(formats, timeZone);\n    defaultFormats = deepMergeFormatsAndSetTimeZone(defaultFormats, timeZone);\n    if (!message) {\n        if (fallbackOnEmptyString === false && message === '') {\n            return message;\n        }\n        if (!defaultMessage ||\n            (locale && locale.toLowerCase() !== defaultLocale.toLowerCase())) {\n            // This prevents warnings from littering the console in development\n            // when no `messages` are passed into the <IntlProvider> for the\n            // default locale.\n            onError(new error_1.MissingTranslationError(messageDescriptor, locale));\n        }\n        if (defaultMessage) {\n            try {\n                var formatter = state.getMessageFormat(defaultMessage, defaultLocale, defaultFormats, opts);\n                return formatter.format(values);\n            }\n            catch (e) {\n                onError(new error_1.MessageFormatError(\"Error formatting default message for: \\\"\".concat(id, \"\\\", rendering default message verbatim\"), locale, messageDescriptor, e));\n                return typeof defaultMessage === 'string' ? defaultMessage : id;\n            }\n        }\n        return id;\n    }\n    // We have the translated message\n    try {\n        var formatter = state.getMessageFormat(message, locale, formats, tslib_1.__assign({ formatters: state }, (opts || {})));\n        return formatter.format(values);\n    }\n    catch (e) {\n        onError(new error_1.MessageFormatError(\"Error formatting message: \\\"\".concat(id, \"\\\", using \").concat(defaultMessage ? 'default message' : 'id', \" as fallback.\"), locale, messageDescriptor, e));\n    }\n    if (defaultMessage) {\n        try {\n            var formatter = state.getMessageFormat(defaultMessage, defaultLocale, defaultFormats, opts);\n            return formatter.format(values);\n        }\n        catch (e) {\n            onError(new error_1.MessageFormatError(\"Error formatting the default message for: \\\"\".concat(id, \"\\\", rendering message verbatim\"), locale, messageDescriptor, e));\n        }\n    }\n    if (typeof message === 'string') {\n        return message;\n    }\n    if (typeof defaultMessage === 'string') {\n        return defaultMessage;\n    }\n    return id;\n};\nexports.formatMessage = formatMessage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}