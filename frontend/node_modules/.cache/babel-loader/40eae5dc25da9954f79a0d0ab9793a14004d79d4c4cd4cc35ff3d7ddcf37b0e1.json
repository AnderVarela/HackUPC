{"ast":null,"code":"var Hack = require('./hack');\nvar Marker = require('../tokenizer/marker');\nvar Token = require('../tokenizer/token');\nvar Match = {\n  ASTERISK: '*',\n  BACKSLASH: '\\\\',\n  BANG: '!',\n  BANG_SUFFIX_PATTERN: /!\\w+$/,\n  IMPORTANT_TOKEN: '!important',\n  IMPORTANT_TOKEN_PATTERN: new RegExp('!important$', 'i'),\n  IMPORTANT_WORD: 'important',\n  IMPORTANT_WORD_PATTERN: new RegExp('important$', 'i'),\n  SUFFIX_BANG_PATTERN: /!$/,\n  UNDERSCORE: '_',\n  VARIABLE_REFERENCE_PATTERN: /var\\(--.+\\)$/\n};\nfunction wrapAll(properties, skipProperties) {\n  var wrapped = [];\n  var single;\n  var property;\n  var i;\n  for (i = properties.length - 1; i >= 0; i--) {\n    property = properties[i];\n    if (property[0] != Token.PROPERTY) {\n      continue;\n    }\n    if (skipProperties && skipProperties.indexOf(property[1][1]) > -1) {\n      continue;\n    }\n    single = wrapSingle(property);\n    single.all = properties;\n    single.position = i;\n    wrapped.unshift(single);\n  }\n  return wrapped;\n}\nfunction someVariableReferences(property) {\n  var i, l;\n  var value;\n\n  // skipping `property` and property name tokens\n  for (i = 2, l = property.length; i < l; i++) {\n    value = property[i];\n    if (value[0] != Token.PROPERTY_VALUE) {\n      continue;\n    }\n    if (isVariableReference(value[1])) {\n      return true;\n    }\n  }\n  return false;\n}\nfunction isVariableReference(value) {\n  return Match.VARIABLE_REFERENCE_PATTERN.test(value);\n}\nfunction isMultiplex(property) {\n  var value;\n  var i, l;\n  for (i = 3, l = property.length; i < l; i++) {\n    value = property[i];\n    if (value[0] == Token.PROPERTY_VALUE && (value[1] == Marker.COMMA || value[1] == Marker.FORWARD_SLASH)) {\n      return true;\n    }\n  }\n  return false;\n}\nfunction hackFrom(property) {\n  var match = false;\n  var name = property[1][1];\n  var lastValue = property[property.length - 1];\n  if (name[0] == Match.UNDERSCORE) {\n    match = [Hack.UNDERSCORE];\n  } else if (name[0] == Match.ASTERISK) {\n    match = [Hack.ASTERISK];\n  } else if (lastValue[1][0] == Match.BANG && !lastValue[1].match(Match.IMPORTANT_WORD_PATTERN)) {\n    match = [Hack.BANG];\n  } else if (lastValue[1].indexOf(Match.BANG) > 0 && !lastValue[1].match(Match.IMPORTANT_WORD_PATTERN) && Match.BANG_SUFFIX_PATTERN.test(lastValue[1])) {\n    match = [Hack.BANG];\n  } else if (lastValue[1].indexOf(Match.BACKSLASH) > 0 && lastValue[1].indexOf(Match.BACKSLASH) == lastValue[1].length - Match.BACKSLASH.length - 1) {\n    match = [Hack.BACKSLASH, lastValue[1].substring(lastValue[1].indexOf(Match.BACKSLASH) + 1)];\n  } else if (lastValue[1].indexOf(Match.BACKSLASH) === 0 && lastValue[1].length == 2) {\n    match = [Hack.BACKSLASH, lastValue[1].substring(1)];\n  }\n  return match;\n}\nfunction isImportant(property) {\n  if (property.length < 3) {\n    return false;\n  }\n  var lastValue = property[property.length - 1];\n  if (Match.IMPORTANT_TOKEN_PATTERN.test(lastValue[1])) {\n    return true;\n  }\n  if (Match.IMPORTANT_WORD_PATTERN.test(lastValue[1]) && Match.SUFFIX_BANG_PATTERN.test(property[property.length - 2][1])) {\n    return true;\n  }\n  return false;\n}\nfunction stripImportant(property) {\n  var lastValue = property[property.length - 1];\n  var oneButLastValue = property[property.length - 2];\n  if (Match.IMPORTANT_TOKEN_PATTERN.test(lastValue[1])) {\n    lastValue[1] = lastValue[1].replace(Match.IMPORTANT_TOKEN_PATTERN, '');\n  } else {\n    lastValue[1] = lastValue[1].replace(Match.IMPORTANT_WORD_PATTERN, '');\n    oneButLastValue[1] = oneButLastValue[1].replace(Match.SUFFIX_BANG_PATTERN, '');\n  }\n  if (lastValue[1].length === 0) {\n    property.pop();\n  }\n  if (oneButLastValue[1].length === 0) {\n    property.pop();\n  }\n}\nfunction stripPrefixHack(property) {\n  property[1][1] = property[1][1].substring(1);\n}\nfunction stripSuffixHack(property, hackFrom) {\n  var lastValue = property[property.length - 1];\n  lastValue[1] = lastValue[1].substring(0, lastValue[1].indexOf(hackFrom[0] == Hack.BACKSLASH ? Match.BACKSLASH : Match.BANG)).trim();\n  if (lastValue[1].length === 0) {\n    property.pop();\n  }\n}\nfunction wrapSingle(property) {\n  var importantProperty = isImportant(property);\n  if (importantProperty) {\n    stripImportant(property);\n  }\n  var whichHack = hackFrom(property);\n  if (whichHack[0] == Hack.ASTERISK || whichHack[0] == Hack.UNDERSCORE) {\n    stripPrefixHack(property);\n  } else if (whichHack[0] == Hack.BACKSLASH || whichHack[0] == Hack.BANG) {\n    stripSuffixHack(property, whichHack);\n  }\n  return {\n    block: property[2] && property[2][0] == Token.PROPERTY_BLOCK,\n    components: [],\n    dirty: false,\n    dynamic: someVariableReferences(property),\n    hack: whichHack,\n    important: importantProperty,\n    name: property[1][1],\n    multiplex: property.length > 3 ? isMultiplex(property) : false,\n    optimizable: true,\n    position: 0,\n    shorthand: false,\n    unused: false,\n    value: property.slice(2)\n  };\n}\nmodule.exports = {\n  all: wrapAll,\n  single: wrapSingle\n};","map":{"version":3,"names":["Hack","require","Marker","Token","Match","ASTERISK","BACKSLASH","BANG","BANG_SUFFIX_PATTERN","IMPORTANT_TOKEN","IMPORTANT_TOKEN_PATTERN","RegExp","IMPORTANT_WORD","IMPORTANT_WORD_PATTERN","SUFFIX_BANG_PATTERN","UNDERSCORE","VARIABLE_REFERENCE_PATTERN","wrapAll","properties","skipProperties","wrapped","single","property","i","length","PROPERTY","indexOf","wrapSingle","all","position","unshift","someVariableReferences","l","value","PROPERTY_VALUE","isVariableReference","test","isMultiplex","COMMA","FORWARD_SLASH","hackFrom","match","name","lastValue","substring","isImportant","stripImportant","oneButLastValue","replace","pop","stripPrefixHack","stripSuffixHack","trim","importantProperty","whichHack","block","PROPERTY_BLOCK","components","dirty","dynamic","hack","important","multiplex","optimizable","shorthand","unused","slice","module","exports"],"sources":["C:/Users/chest/OneDrive/Documentos/GitHub/HackUPC/frontend/node_modules/clean-css/lib/optimizer/wrap-for-optimizing.js"],"sourcesContent":["var Hack = require('./hack');\n\nvar Marker = require('../tokenizer/marker');\nvar Token = require('../tokenizer/token');\n\nvar Match = {\n  ASTERISK: '*',\n  BACKSLASH: '\\\\',\n  BANG: '!',\n  BANG_SUFFIX_PATTERN: /!\\w+$/,\n  IMPORTANT_TOKEN: '!important',\n  IMPORTANT_TOKEN_PATTERN: new RegExp('!important$', 'i'),\n  IMPORTANT_WORD: 'important',\n  IMPORTANT_WORD_PATTERN: new RegExp('important$', 'i'),\n  SUFFIX_BANG_PATTERN: /!$/,\n  UNDERSCORE: '_',\n  VARIABLE_REFERENCE_PATTERN: /var\\(--.+\\)$/\n};\n\nfunction wrapAll(properties, skipProperties) {\n  var wrapped = [];\n  var single;\n  var property;\n  var i;\n\n  for (i = properties.length - 1; i >= 0; i--) {\n    property = properties[i];\n\n    if (property[0] != Token.PROPERTY) {\n      continue;\n    }\n\n    if (skipProperties && skipProperties.indexOf(property[1][1]) > -1) {\n      continue;\n    }\n\n    single = wrapSingle(property);\n    single.all = properties;\n    single.position = i;\n    wrapped.unshift(single);\n  }\n\n  return wrapped;\n}\n\nfunction someVariableReferences(property) {\n  var i, l;\n  var value;\n\n  // skipping `property` and property name tokens\n  for (i = 2, l = property.length; i < l; i++) {\n    value = property[i];\n\n    if (value[0] != Token.PROPERTY_VALUE) {\n      continue;\n    }\n\n    if (isVariableReference(value[1])) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction isVariableReference(value) {\n  return Match.VARIABLE_REFERENCE_PATTERN.test(value);\n}\n\nfunction isMultiplex(property) {\n  var value;\n  var i, l;\n\n  for (i = 3, l = property.length; i < l; i++) {\n    value = property[i];\n\n    if (value[0] == Token.PROPERTY_VALUE && (value[1] == Marker.COMMA || value[1] == Marker.FORWARD_SLASH)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction hackFrom(property) {\n  var match = false;\n  var name = property[1][1];\n  var lastValue = property[property.length - 1];\n\n  if (name[0] == Match.UNDERSCORE) {\n    match = [Hack.UNDERSCORE];\n  } else if (name[0] == Match.ASTERISK) {\n    match = [Hack.ASTERISK];\n  } else if (lastValue[1][0] == Match.BANG && !lastValue[1].match(Match.IMPORTANT_WORD_PATTERN)) {\n    match = [Hack.BANG];\n  } else if (lastValue[1].indexOf(Match.BANG) > 0\n    && !lastValue[1].match(Match.IMPORTANT_WORD_PATTERN)\n    && Match.BANG_SUFFIX_PATTERN.test(lastValue[1])) {\n    match = [Hack.BANG];\n  } else if (lastValue[1].indexOf(Match.BACKSLASH) > 0\n    && lastValue[1].indexOf(Match.BACKSLASH) == lastValue[1].length - Match.BACKSLASH.length - 1) {\n    match = [Hack.BACKSLASH, lastValue[1].substring(lastValue[1].indexOf(Match.BACKSLASH) + 1)];\n  } else if (lastValue[1].indexOf(Match.BACKSLASH) === 0 && lastValue[1].length == 2) {\n    match = [Hack.BACKSLASH, lastValue[1].substring(1)];\n  }\n\n  return match;\n}\n\nfunction isImportant(property) {\n  if (property.length < 3) { return false; }\n\n  var lastValue = property[property.length - 1];\n  if (Match.IMPORTANT_TOKEN_PATTERN.test(lastValue[1])) {\n    return true;\n  } if (Match.IMPORTANT_WORD_PATTERN.test(lastValue[1])\n    && Match.SUFFIX_BANG_PATTERN.test(property[property.length - 2][1])) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction stripImportant(property) {\n  var lastValue = property[property.length - 1];\n  var oneButLastValue = property[property.length - 2];\n\n  if (Match.IMPORTANT_TOKEN_PATTERN.test(lastValue[1])) {\n    lastValue[1] = lastValue[1].replace(Match.IMPORTANT_TOKEN_PATTERN, '');\n  } else {\n    lastValue[1] = lastValue[1].replace(Match.IMPORTANT_WORD_PATTERN, '');\n    oneButLastValue[1] = oneButLastValue[1].replace(Match.SUFFIX_BANG_PATTERN, '');\n  }\n\n  if (lastValue[1].length === 0) {\n    property.pop();\n  }\n\n  if (oneButLastValue[1].length === 0) {\n    property.pop();\n  }\n}\n\nfunction stripPrefixHack(property) {\n  property[1][1] = property[1][1].substring(1);\n}\n\nfunction stripSuffixHack(property, hackFrom) {\n  var lastValue = property[property.length - 1];\n  lastValue[1] = lastValue[1]\n    .substring(0, lastValue[1].indexOf(hackFrom[0] == Hack.BACKSLASH ? Match.BACKSLASH : Match.BANG))\n    .trim();\n\n  if (lastValue[1].length === 0) {\n    property.pop();\n  }\n}\n\nfunction wrapSingle(property) {\n  var importantProperty = isImportant(property);\n  if (importantProperty) {\n    stripImportant(property);\n  }\n\n  var whichHack = hackFrom(property);\n  if (whichHack[0] == Hack.ASTERISK || whichHack[0] == Hack.UNDERSCORE) {\n    stripPrefixHack(property);\n  } else if (whichHack[0] == Hack.BACKSLASH || whichHack[0] == Hack.BANG) {\n    stripSuffixHack(property, whichHack);\n  }\n\n  return {\n    block: property[2] && property[2][0] == Token.PROPERTY_BLOCK,\n    components: [],\n    dirty: false,\n    dynamic: someVariableReferences(property),\n    hack: whichHack,\n    important: importantProperty,\n    name: property[1][1],\n    multiplex: property.length > 3 ? isMultiplex(property) : false,\n    optimizable: true,\n    position: 0,\n    shorthand: false,\n    unused: false,\n    value: property.slice(2)\n  };\n}\n\nmodule.exports = {\n  all: wrapAll,\n  single: wrapSingle\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}