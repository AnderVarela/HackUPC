{"ast":null,"code":"/*\n * Copyright 2015, Yahoo Inc.\n * Copyrights licensed under the New BSD License.\n * See the accompanying LICENSE file for terms.\n */\nimport * as React from 'react';\nimport useIntl from './useIntl';\nvar FormattedPlural = function (props) {\n  var _a = useIntl(),\n    formatPlural = _a.formatPlural,\n    Text = _a.textComponent;\n  var value = props.value,\n    other = props.other,\n    children = props.children;\n  var pluralCategory = formatPlural(value, props);\n  var formattedPlural = props[pluralCategory] || other;\n  if (typeof children === 'function') {\n    return children(formattedPlural);\n  }\n  if (Text) {\n    return React.createElement(Text, null, formattedPlural);\n  }\n  // Work around @types/react where React.FC cannot return string\n  return formattedPlural;\n};\nFormattedPlural.displayName = 'FormattedPlural';\nexport default FormattedPlural;","map":{"version":3,"names":["React","useIntl","FormattedPlural","props","_a","formatPlural","Text","textComponent","value","other","children","pluralCategory","formattedPlural","createElement","displayName"],"sources":["C:/Users/chest/OneDrive/Documentos/GitHub/HackUPC/frontend/node_modules/react-intl/lib/src/components/plural.js"],"sourcesContent":["/*\n * Copyright 2015, Yahoo Inc.\n * Copyrights licensed under the New BSD License.\n * See the accompanying LICENSE file for terms.\n */\nimport * as React from 'react';\nimport useIntl from './useIntl';\nvar FormattedPlural = function (props) {\n    var _a = useIntl(), formatPlural = _a.formatPlural, Text = _a.textComponent;\n    var value = props.value, other = props.other, children = props.children;\n    var pluralCategory = formatPlural(value, props);\n    var formattedPlural = props[pluralCategory] || other;\n    if (typeof children === 'function') {\n        return children(formattedPlural);\n    }\n    if (Text) {\n        return React.createElement(Text, null, formattedPlural);\n    }\n    // Work around @types/react where React.FC cannot return string\n    return formattedPlural;\n};\nFormattedPlural.displayName = 'FormattedPlural';\nexport default FormattedPlural;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAOC,OAAO,MAAM,WAAW;AAC/B,IAAIC,eAAe,GAAG,SAAAA,CAAUC,KAAK,EAAE;EACnC,IAAIC,EAAE,GAAGH,OAAO,CAAC,CAAC;IAAEI,YAAY,GAAGD,EAAE,CAACC,YAAY;IAAEC,IAAI,GAAGF,EAAE,CAACG,aAAa;EAC3E,IAAIC,KAAK,GAAGL,KAAK,CAACK,KAAK;IAAEC,KAAK,GAAGN,KAAK,CAACM,KAAK;IAAEC,QAAQ,GAAGP,KAAK,CAACO,QAAQ;EACvE,IAAIC,cAAc,GAAGN,YAAY,CAACG,KAAK,EAAEL,KAAK,CAAC;EAC/C,IAAIS,eAAe,GAAGT,KAAK,CAACQ,cAAc,CAAC,IAAIF,KAAK;EACpD,IAAI,OAAOC,QAAQ,KAAK,UAAU,EAAE;IAChC,OAAOA,QAAQ,CAACE,eAAe,CAAC;EACpC;EACA,IAAIN,IAAI,EAAE;IACN,OAAON,KAAK,CAACa,aAAa,CAACP,IAAI,EAAE,IAAI,EAAEM,eAAe,CAAC;EAC3D;EACA;EACA,OAAOA,eAAe;AAC1B,CAAC;AACDV,eAAe,CAACY,WAAW,GAAG,iBAAiB;AAC/C,eAAeZ,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}