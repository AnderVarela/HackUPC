{"ast":null,"code":"\"use strict\";\n\n// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\n// See LICENSE in the project root for license information.\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst _patch_base_1 = require(\"../_patch-base\");\nconst path_utils_1 = require(\"./path-utils\");\nconst bulk_suppressions_patch_1 = require(\"./bulk-suppressions-patch\");\nconst generate_patched_file_1 = require(\"./generate-patched-file\");\nconst constants_1 = require(\"./constants\");\nif (!_patch_base_1.eslintFolder) {\n  console.error('@rushstack/eslint-patch/eslint-bulk-suppressions: Could not find ESLint installation to patch.');\n  process.exit(1);\n}\nconst eslintBulkDetectEnvVarValue = process.env[constants_1.ESLINT_BULK_DETECT_ENV_VAR_NAME];\nif (eslintBulkDetectEnvVarValue === 'true' || eslintBulkDetectEnvVarValue === '1') {\n  (0, path_utils_1.findAndConsoleLogPatchPathCli)();\n  process.exit(0);\n}\nconst pathToLinterJS = (0, path_utils_1.getPathToLinterJS)();\nprocess.env[constants_1.ESLINT_BULK_PATCH_PATH_ENV_VAR_NAME] = require.resolve('./bulk-suppressions-patch');\nconst pathToGeneratedPatch = (0, path_utils_1.ensurePathToGeneratedPatch)();\n(0, generate_patched_file_1.generatePatchedLinterJsFileIfDoesNotExist)(pathToLinterJS, pathToGeneratedPatch);\nconst {\n  Linter: LinterPatch\n} = require(pathToGeneratedPatch);\nLinterPatch.prototype.verify = (0, bulk_suppressions_patch_1.extendVerifyFunction)(LinterPatch.prototype.verify);\nconst {\n  Linter\n} = require(pathToLinterJS);\n(0, bulk_suppressions_patch_1.patchClass)(Linter, LinterPatch);","map":{"version":3,"names":["_patch_base_1","require","path_utils_1","bulk_suppressions_patch_1","generate_patched_file_1","constants_1","eslintFolder","console","error","process","exit","eslintBulkDetectEnvVarValue","env","ESLINT_BULK_DETECT_ENV_VAR_NAME","findAndConsoleLogPatchPathCli","pathToLinterJS","getPathToLinterJS","ESLINT_BULK_PATCH_PATH_ENV_VAR_NAME","resolve","pathToGeneratedPatch","ensurePathToGeneratedPatch","generatePatchedLinterJsFileIfDoesNotExist","Linter","LinterPatch","prototype","verify","extendVerifyFunction","patchClass"],"sources":["C:\\Users\\chest\\OneDrive\\Documentos\\GitHub\\HackUPC\\frontend\\node_modules\\@rushstack\\eslint-patch\\src\\eslint-bulk-suppressions\\index.ts"],"sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\n// See LICENSE in the project root for license information.\n\nimport { eslintFolder } from '../_patch-base';\nimport { findAndConsoleLogPatchPathCli, getPathToLinterJS, ensurePathToGeneratedPatch } from './path-utils';\nimport { patchClass, extendVerifyFunction } from './bulk-suppressions-patch';\nimport { generatePatchedLinterJsFileIfDoesNotExist } from './generate-patched-file';\nimport { ESLINT_BULK_DETECT_ENV_VAR_NAME, ESLINT_BULK_PATCH_PATH_ENV_VAR_NAME } from './constants';\n\nif (!eslintFolder) {\n  console.error(\n    '@rushstack/eslint-patch/eslint-bulk-suppressions: Could not find ESLint installation to patch.'\n  );\n\n  process.exit(1);\n}\n\nconst eslintBulkDetectEnvVarValue: string | undefined = process.env[ESLINT_BULK_DETECT_ENV_VAR_NAME];\nif (eslintBulkDetectEnvVarValue === 'true' || eslintBulkDetectEnvVarValue === '1') {\n  findAndConsoleLogPatchPathCli();\n  process.exit(0);\n}\n\nconst pathToLinterJS: string = getPathToLinterJS();\n\nprocess.env[ESLINT_BULK_PATCH_PATH_ENV_VAR_NAME] = require.resolve('./bulk-suppressions-patch');\n\nconst pathToGeneratedPatch: string = ensurePathToGeneratedPatch();\ngeneratePatchedLinterJsFileIfDoesNotExist(pathToLinterJS, pathToGeneratedPatch);\nconst { Linter: LinterPatch } = require(pathToGeneratedPatch);\nLinterPatch.prototype.verify = extendVerifyFunction(LinterPatch.prototype.verify);\n\nconst { Linter } = require(pathToLinterJS);\n\npatchClass(Linter, LinterPatch);\n"],"mappings":";;AAAA;AACA;;;;AAEA,MAAAA,aAAA,GAAAC,OAAA;AACA,MAAAC,YAAA,GAAAD,OAAA;AACA,MAAAE,yBAAA,GAAAF,OAAA;AACA,MAAAG,uBAAA,GAAAH,OAAA;AACA,MAAAI,WAAA,GAAAJ,OAAA;AAEA,IAAI,CAACD,aAAA,CAAAM,YAAY,EAAE;EACjBC,OAAO,CAACC,KAAK,CACX,gGAAgG,CACjG;EAEDC,OAAO,CAACC,IAAI,CAAC,CAAC,CAAC;AACjB;AAEA,MAAMC,2BAA2B,GAAuBF,OAAO,CAACG,GAAG,CAACP,WAAA,CAAAQ,+BAA+B,CAAC;AACpG,IAAIF,2BAA2B,KAAK,MAAM,IAAIA,2BAA2B,KAAK,GAAG,EAAE;EACjF,IAAAT,YAAA,CAAAY,6BAA6B,GAAE;EAC/BL,OAAO,CAACC,IAAI,CAAC,CAAC,CAAC;AACjB;AAEA,MAAMK,cAAc,GAAW,IAAAb,YAAA,CAAAc,iBAAiB,GAAE;AAElDP,OAAO,CAACG,GAAG,CAACP,WAAA,CAAAY,mCAAmC,CAAC,GAAGhB,OAAO,CAACiB,OAAO,CAAC,2BAA2B,CAAC;AAE/F,MAAMC,oBAAoB,GAAW,IAAAjB,YAAA,CAAAkB,0BAA0B,GAAE;AACjE,IAAAhB,uBAAA,CAAAiB,yCAAyC,EAACN,cAAc,EAAEI,oBAAoB,CAAC;AAC/E,MAAM;EAAEG,MAAM,EAAEC;AAAW,CAAE,GAAGtB,OAAO,CAACkB,oBAAoB,CAAC;AAC7DI,WAAW,CAACC,SAAS,CAACC,MAAM,GAAG,IAAAtB,yBAAA,CAAAuB,oBAAoB,EAACH,WAAW,CAACC,SAAS,CAACC,MAAM,CAAC;AAEjF,MAAM;EAAEH;AAAM,CAAE,GAAGrB,OAAO,CAACc,cAAc,CAAC;AAE1C,IAAAZ,yBAAA,CAAAwB,UAAU,EAACL,MAAM,EAAEC,WAAW,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}