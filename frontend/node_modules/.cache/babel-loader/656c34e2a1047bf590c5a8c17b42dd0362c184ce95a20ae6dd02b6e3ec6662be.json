{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\n/**\n * Safari ~11 has an issue where variable declarations in a For statement throw if they shadow parameters.\n * This is fixed by renaming any declarations in the left/init part of a For* statement so they don't shadow.\n * @see https://bugs.webkit.org/show_bug.cgi?id=171041\n *\n * @example\n *   e => { for (let e of []) e }   // throws\n *   e => { for (let _e of []) _e }   // works\n */\nfunction handle(declaration) {\n  if (!declaration.isVariableDeclaration()) return;\n  const fn = declaration.getFunctionParent();\n  const {\n    name\n  } = declaration.node.declarations[0].id; // check if there is a shadowed binding coming from a parameter\n\n  if (fn && fn.scope.hasOwnBinding(name) && fn.scope.getOwnBinding(name).kind === \"param\") {\n    declaration.scope.rename(name);\n  }\n}\nvar _default = () => ({\n  name: \"transform-safari-for-shadowing\",\n  visitor: {\n    ForXStatement(path) {\n      handle(path.get(\"left\"));\n    },\n    ForStatement(path) {\n      handle(path.get(\"init\"));\n    }\n  }\n});\nexports.default = _default;\nmodule.exports = exports.default;","map":{"version":3,"names":["exports","__esModule","default","handle","declaration","isVariableDeclaration","fn","getFunctionParent","name","node","declarations","id","scope","hasOwnBinding","getOwnBinding","kind","rename","_default","visitor","ForXStatement","path","get","ForStatement","module"],"sources":["C:/Users/chest/OneDrive/Documentos/GitHub/HackUPC/frontend/node_modules/@babel/preset-modules/lib/plugins/transform-safari-for-shadowing/index.js"],"sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\n/**\n * Safari ~11 has an issue where variable declarations in a For statement throw if they shadow parameters.\n * This is fixed by renaming any declarations in the left/init part of a For* statement so they don't shadow.\n * @see https://bugs.webkit.org/show_bug.cgi?id=171041\n *\n * @example\n *   e => { for (let e of []) e }   // throws\n *   e => { for (let _e of []) _e }   // works\n */\nfunction handle(declaration) {\n  if (!declaration.isVariableDeclaration()) return;\n  const fn = declaration.getFunctionParent();\n  const {\n    name\n  } = declaration.node.declarations[0].id; // check if there is a shadowed binding coming from a parameter\n\n  if (fn && fn.scope.hasOwnBinding(name) && fn.scope.getOwnBinding(name).kind === \"param\") {\n    declaration.scope.rename(name);\n  }\n}\n\nvar _default = () => ({\n  name: \"transform-safari-for-shadowing\",\n  visitor: {\n    ForXStatement(path) {\n      handle(path.get(\"left\"));\n    },\n\n    ForStatement(path) {\n      handle(path.get(\"init\"));\n    }\n\n  }\n});\n\nexports.default = _default;\nmodule.exports = exports.default;"],"mappings":"AAAA,YAAY;;AAEZA,OAAO,CAACC,UAAU,GAAG,IAAI;AACzBD,OAAO,CAACE,OAAO,GAAG,KAAK,CAAC;;AAExB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,MAAMA,CAACC,WAAW,EAAE;EAC3B,IAAI,CAACA,WAAW,CAACC,qBAAqB,CAAC,CAAC,EAAE;EAC1C,MAAMC,EAAE,GAAGF,WAAW,CAACG,iBAAiB,CAAC,CAAC;EAC1C,MAAM;IACJC;EACF,CAAC,GAAGJ,WAAW,CAACK,IAAI,CAACC,YAAY,CAAC,CAAC,CAAC,CAACC,EAAE,CAAC,CAAC;;EAEzC,IAAIL,EAAE,IAAIA,EAAE,CAACM,KAAK,CAACC,aAAa,CAACL,IAAI,CAAC,IAAIF,EAAE,CAACM,KAAK,CAACE,aAAa,CAACN,IAAI,CAAC,CAACO,IAAI,KAAK,OAAO,EAAE;IACvFX,WAAW,CAACQ,KAAK,CAACI,MAAM,CAACR,IAAI,CAAC;EAChC;AACF;AAEA,IAAIS,QAAQ,GAAGA,CAAA,MAAO;EACpBT,IAAI,EAAE,gCAAgC;EACtCU,OAAO,EAAE;IACPC,aAAaA,CAACC,IAAI,EAAE;MAClBjB,MAAM,CAACiB,IAAI,CAACC,GAAG,CAAC,MAAM,CAAC,CAAC;IAC1B,CAAC;IAEDC,YAAYA,CAACF,IAAI,EAAE;MACjBjB,MAAM,CAACiB,IAAI,CAACC,GAAG,CAAC,MAAM,CAAC,CAAC;IAC1B;EAEF;AACF,CAAC,CAAC;AAEFrB,OAAO,CAACE,OAAO,GAAGe,QAAQ;AAC1BM,MAAM,CAACvB,OAAO,GAAGA,OAAO,CAACE,OAAO","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}