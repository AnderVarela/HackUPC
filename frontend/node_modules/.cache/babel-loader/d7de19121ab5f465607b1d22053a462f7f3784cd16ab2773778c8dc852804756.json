{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\nexports.getFilePath = getFilePath;\nexports.getBaseSvgoConfig = getBaseSvgoConfig;\nexports.getPlugins = getPlugins;\nexports.mergeSvgoConfig = mergeSvgoConfig;\nvar _deepmerge = _interopRequireDefault(require(\"deepmerge\"));\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction getFilePath(state) {\n  return state.filePath || process.cwd();\n}\nfunction getBaseSvgoConfig(config) {\n  const baseSvgoConfig = {\n    plugins: [{\n      prefixIds: true\n    }]\n  };\n  if (config.icon || config.dimensions === false) {\n    baseSvgoConfig.plugins.push({\n      removeViewBox: false\n    });\n  }\n  return baseSvgoConfig;\n}\nfunction getPlugins(config) {\n  if (!config || !config.plugins) {\n    return [];\n  }\n  if (!Array.isArray(config.plugins)) {\n    throw Error('`svgoConfig.plugins` must be an array');\n  }\n  return config.plugins;\n}\nfunction extractPlugins(config) {\n  if (!config) return [];\n  if (!config.plugins) return [];\n  if (!Array.isArray(config.plugins)) return [config.plugins];\n  return config.plugins;\n}\nfunction mergePlugins(configs) {\n  const plugins = configs.reduce((merged, config) => _deepmerge.default.all([merged, ...extractPlugins(config)]), {});\n  return Object.keys(plugins).reduce((array, key) => {\n    array.push({\n      [key]: plugins[key]\n    });\n    return array;\n  }, []);\n}\nfunction mergeSvgoConfig(...configs) {\n  const plugins = mergePlugins(configs);\n  return {\n    ..._deepmerge.default.all(configs.filter(Boolean)),\n    plugins\n  };\n}","map":{"version":3,"names":["exports","__esModule","getFilePath","getBaseSvgoConfig","getPlugins","mergeSvgoConfig","_deepmerge","_interopRequireDefault","require","obj","default","state","filePath","process","cwd","config","baseSvgoConfig","plugins","prefixIds","icon","dimensions","push","removeViewBox","Array","isArray","Error","extractPlugins","mergePlugins","configs","reduce","merged","all","Object","keys","array","key","filter","Boolean"],"sources":["C:/Users/chest/OneDrive/Documentos/GitHub/HackUPC/frontend/node_modules/@svgr/plugin-svgo/lib/config.js"],"sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports.getFilePath = getFilePath;\nexports.getBaseSvgoConfig = getBaseSvgoConfig;\nexports.getPlugins = getPlugins;\nexports.mergeSvgoConfig = mergeSvgoConfig;\n\nvar _deepmerge = _interopRequireDefault(require(\"deepmerge\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction getFilePath(state) {\n  return state.filePath || process.cwd();\n}\n\nfunction getBaseSvgoConfig(config) {\n  const baseSvgoConfig = {\n    plugins: [{\n      prefixIds: true\n    }]\n  };\n\n  if (config.icon || config.dimensions === false) {\n    baseSvgoConfig.plugins.push({\n      removeViewBox: false\n    });\n  }\n\n  return baseSvgoConfig;\n}\n\nfunction getPlugins(config) {\n  if (!config || !config.plugins) {\n    return [];\n  }\n\n  if (!Array.isArray(config.plugins)) {\n    throw Error('`svgoConfig.plugins` must be an array');\n  }\n\n  return config.plugins;\n}\n\nfunction extractPlugins(config) {\n  if (!config) return [];\n  if (!config.plugins) return [];\n  if (!Array.isArray(config.plugins)) return [config.plugins];\n  return config.plugins;\n}\n\nfunction mergePlugins(configs) {\n  const plugins = configs.reduce((merged, config) => _deepmerge.default.all([merged, ...extractPlugins(config)]), {});\n  return Object.keys(plugins).reduce((array, key) => {\n    array.push({\n      [key]: plugins[key]\n    });\n    return array;\n  }, []);\n}\n\nfunction mergeSvgoConfig(...configs) {\n  const plugins = mergePlugins(configs);\n  return { ..._deepmerge.default.all(configs.filter(Boolean)),\n    plugins\n  };\n}"],"mappings":"AAAA,YAAY;;AAEZA,OAAO,CAACC,UAAU,GAAG,IAAI;AACzBD,OAAO,CAACE,WAAW,GAAGA,WAAW;AACjCF,OAAO,CAACG,iBAAiB,GAAGA,iBAAiB;AAC7CH,OAAO,CAACI,UAAU,GAAGA,UAAU;AAC/BJ,OAAO,CAACK,eAAe,GAAGA,eAAe;AAEzC,IAAIC,UAAU,GAAGC,sBAAsB,CAACC,OAAO,CAAC,WAAW,CAAC,CAAC;AAE7D,SAASD,sBAAsBA,CAACE,GAAG,EAAE;EAAE,OAAOA,GAAG,IAAIA,GAAG,CAACR,UAAU,GAAGQ,GAAG,GAAG;IAAEC,OAAO,EAAED;EAAI,CAAC;AAAE;AAE9F,SAASP,WAAWA,CAACS,KAAK,EAAE;EAC1B,OAAOA,KAAK,CAACC,QAAQ,IAAIC,OAAO,CAACC,GAAG,CAAC,CAAC;AACxC;AAEA,SAASX,iBAAiBA,CAACY,MAAM,EAAE;EACjC,MAAMC,cAAc,GAAG;IACrBC,OAAO,EAAE,CAAC;MACRC,SAAS,EAAE;IACb,CAAC;EACH,CAAC;EAED,IAAIH,MAAM,CAACI,IAAI,IAAIJ,MAAM,CAACK,UAAU,KAAK,KAAK,EAAE;IAC9CJ,cAAc,CAACC,OAAO,CAACI,IAAI,CAAC;MAC1BC,aAAa,EAAE;IACjB,CAAC,CAAC;EACJ;EAEA,OAAON,cAAc;AACvB;AAEA,SAASZ,UAAUA,CAACW,MAAM,EAAE;EAC1B,IAAI,CAACA,MAAM,IAAI,CAACA,MAAM,CAACE,OAAO,EAAE;IAC9B,OAAO,EAAE;EACX;EAEA,IAAI,CAACM,KAAK,CAACC,OAAO,CAACT,MAAM,CAACE,OAAO,CAAC,EAAE;IAClC,MAAMQ,KAAK,CAAC,uCAAuC,CAAC;EACtD;EAEA,OAAOV,MAAM,CAACE,OAAO;AACvB;AAEA,SAASS,cAAcA,CAACX,MAAM,EAAE;EAC9B,IAAI,CAACA,MAAM,EAAE,OAAO,EAAE;EACtB,IAAI,CAACA,MAAM,CAACE,OAAO,EAAE,OAAO,EAAE;EAC9B,IAAI,CAACM,KAAK,CAACC,OAAO,CAACT,MAAM,CAACE,OAAO,CAAC,EAAE,OAAO,CAACF,MAAM,CAACE,OAAO,CAAC;EAC3D,OAAOF,MAAM,CAACE,OAAO;AACvB;AAEA,SAASU,YAAYA,CAACC,OAAO,EAAE;EAC7B,MAAMX,OAAO,GAAGW,OAAO,CAACC,MAAM,CAAC,CAACC,MAAM,EAAEf,MAAM,KAAKT,UAAU,CAACI,OAAO,CAACqB,GAAG,CAAC,CAACD,MAAM,EAAE,GAAGJ,cAAc,CAACX,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;EACnH,OAAOiB,MAAM,CAACC,IAAI,CAAChB,OAAO,CAAC,CAACY,MAAM,CAAC,CAACK,KAAK,EAAEC,GAAG,KAAK;IACjDD,KAAK,CAACb,IAAI,CAAC;MACT,CAACc,GAAG,GAAGlB,OAAO,CAACkB,GAAG;IACpB,CAAC,CAAC;IACF,OAAOD,KAAK;EACd,CAAC,EAAE,EAAE,CAAC;AACR;AAEA,SAAS7B,eAAeA,CAAC,GAAGuB,OAAO,EAAE;EACnC,MAAMX,OAAO,GAAGU,YAAY,CAACC,OAAO,CAAC;EACrC,OAAO;IAAE,GAAGtB,UAAU,CAACI,OAAO,CAACqB,GAAG,CAACH,OAAO,CAACQ,MAAM,CAACC,OAAO,CAAC,CAAC;IACzDpB;EACF,CAAC;AACH","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}