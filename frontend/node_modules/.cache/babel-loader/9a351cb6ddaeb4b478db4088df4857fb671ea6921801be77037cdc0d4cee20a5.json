{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.default = void 0;\nfunction _jestWatcher() {\n  const data = require('jest-watcher');\n  _jestWatcher = function () {\n    return data;\n  };\n  return data;\n}\nvar _FailedTestsInteractiveMode = _interopRequireDefault(require('../FailedTestsInteractiveMode'));\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nclass FailedTestsInteractivePlugin extends _jestWatcher().BaseWatchPlugin {\n  constructor(...args) {\n    super(...args);\n    _defineProperty(this, '_failedTestAssertions', void 0);\n    _defineProperty(this, '_manager', new _FailedTestsInteractiveMode.default(this._stdout));\n  }\n  apply(hooks) {\n    hooks.onTestRunComplete(results => {\n      this._failedTestAssertions = this.getFailedTestAssertions(results);\n      if (this._manager.isActive()) this._manager.updateWithResults(results);\n    });\n  }\n  getUsageInfo() {\n    var _this$_failedTestAsse;\n    if ((_this$_failedTestAsse = this._failedTestAssertions) !== null && _this$_failedTestAsse !== void 0 && _this$_failedTestAsse.length) {\n      return {\n        key: 'i',\n        prompt: 'run failing tests interactively'\n      };\n    }\n    return null;\n  }\n  onKey(key) {\n    if (this._manager.isActive()) {\n      this._manager.put(key);\n    }\n  }\n  run(_, updateConfigAndRun) {\n    return new Promise(resolve => {\n      if (!this._failedTestAssertions || this._failedTestAssertions.length === 0) {\n        resolve();\n        return;\n      }\n      this._manager.run(this._failedTestAssertions, failure => {\n        updateConfigAndRun({\n          mode: 'watch',\n          testNamePattern: failure ? `^${failure.fullName}$` : '',\n          testPathPattern: (failure === null || failure === void 0 ? void 0 : failure.path) || ''\n        });\n        if (!this._manager.isActive()) {\n          resolve();\n        }\n      });\n    });\n  }\n  getFailedTestAssertions(results) {\n    const failedTestPaths = [];\n    if (\n    // skip if no failed tests\n    results.numFailedTests === 0 ||\n    // skip if missing test results\n    !results.testResults ||\n    // skip if unmatched snapshots are present\n    results.snapshot.unmatched) {\n      return failedTestPaths;\n    }\n    results.testResults.forEach(testResult => {\n      testResult.testResults.forEach(result => {\n        if (result.status === 'failed') {\n          failedTestPaths.push({\n            fullName: result.fullName,\n            path: testResult.testFilePath\n          });\n        }\n      });\n    });\n    return failedTestPaths;\n  }\n}\nexports.default = FailedTestsInteractivePlugin;","map":{"version":3,"names":["Object","defineProperty","exports","value","default","_jestWatcher","data","require","_FailedTestsInteractiveMode","_interopRequireDefault","obj","__esModule","_defineProperty","key","enumerable","configurable","writable","FailedTestsInteractivePlugin","BaseWatchPlugin","constructor","args","_stdout","apply","hooks","onTestRunComplete","results","_failedTestAssertions","getFailedTestAssertions","_manager","isActive","updateWithResults","getUsageInfo","_this$_failedTestAsse","length","prompt","onKey","put","run","_","updateConfigAndRun","Promise","resolve","failure","mode","testNamePattern","fullName","testPathPattern","path","failedTestPaths","numFailedTests","testResults","snapshot","unmatched","forEach","testResult","result","status","push","testFilePath"],"sources":["C:/Users/chest/OneDrive/Documentos/GitHub/HackUPC/frontend/node_modules/@jest/core/build/plugins/FailedTestsInteractive.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.default = void 0;\n\nfunction _jestWatcher() {\n  const data = require('jest-watcher');\n\n  _jestWatcher = function () {\n    return data;\n  };\n\n  return data;\n}\n\nvar _FailedTestsInteractiveMode = _interopRequireDefault(\n  require('../FailedTestsInteractiveMode')\n);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {default: obj};\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\n\nclass FailedTestsInteractivePlugin extends _jestWatcher().BaseWatchPlugin {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, '_failedTestAssertions', void 0);\n\n    _defineProperty(\n      this,\n      '_manager',\n      new _FailedTestsInteractiveMode.default(this._stdout)\n    );\n  }\n\n  apply(hooks) {\n    hooks.onTestRunComplete(results => {\n      this._failedTestAssertions = this.getFailedTestAssertions(results);\n      if (this._manager.isActive()) this._manager.updateWithResults(results);\n    });\n  }\n\n  getUsageInfo() {\n    var _this$_failedTestAsse;\n\n    if (\n      (_this$_failedTestAsse = this._failedTestAssertions) !== null &&\n      _this$_failedTestAsse !== void 0 &&\n      _this$_failedTestAsse.length\n    ) {\n      return {\n        key: 'i',\n        prompt: 'run failing tests interactively'\n      };\n    }\n\n    return null;\n  }\n\n  onKey(key) {\n    if (this._manager.isActive()) {\n      this._manager.put(key);\n    }\n  }\n\n  run(_, updateConfigAndRun) {\n    return new Promise(resolve => {\n      if (\n        !this._failedTestAssertions ||\n        this._failedTestAssertions.length === 0\n      ) {\n        resolve();\n        return;\n      }\n\n      this._manager.run(this._failedTestAssertions, failure => {\n        updateConfigAndRun({\n          mode: 'watch',\n          testNamePattern: failure ? `^${failure.fullName}$` : '',\n          testPathPattern:\n            (failure === null || failure === void 0 ? void 0 : failure.path) ||\n            ''\n        });\n\n        if (!this._manager.isActive()) {\n          resolve();\n        }\n      });\n    });\n  }\n\n  getFailedTestAssertions(results) {\n    const failedTestPaths = [];\n\n    if (\n      // skip if no failed tests\n      results.numFailedTests === 0 || // skip if missing test results\n      !results.testResults || // skip if unmatched snapshots are present\n      results.snapshot.unmatched\n    ) {\n      return failedTestPaths;\n    }\n\n    results.testResults.forEach(testResult => {\n      testResult.testResults.forEach(result => {\n        if (result.status === 'failed') {\n          failedTestPaths.push({\n            fullName: result.fullName,\n            path: testResult.testFilePath\n          });\n        }\n      });\n    });\n    return failedTestPaths;\n  }\n}\n\nexports.default = FailedTestsInteractivePlugin;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}