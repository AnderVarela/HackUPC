{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getSuggestedQuery = getSuggestedQuery;\nvar _domAccessibilityApi = require(\"dom-accessibility-api\");\nvar _matches = require(\"./matches\");\nvar _getNodeText = require(\"./get-node-text\");\nvar _config = require(\"./config\");\nvar _roleHelpers = require(\"./role-helpers\");\nvar _labelHelpers = require(\"./label-helpers\");\nconst normalize = (0, _matches.getDefaultNormalizer)();\nfunction escapeRegExp(string) {\n  return string.replace(/[.*+\\-?^${}()|[\\]\\\\]/g, '\\\\$&'); // $& means the whole matched string\n}\nfunction getRegExpMatcher(string) {\n  return new RegExp(escapeRegExp(string.toLowerCase()), 'i');\n}\nfunction makeSuggestion(queryName, element, content, {\n  variant,\n  name\n}) {\n  let warning = '';\n  const queryOptions = {};\n  const queryArgs = [['Role', 'TestId'].includes(queryName) ? content : getRegExpMatcher(content)];\n  if (name) {\n    queryOptions.name = getRegExpMatcher(name);\n  }\n  if (queryName === 'Role' && (0, _roleHelpers.isInaccessible)(element)) {\n    queryOptions.hidden = true;\n    warning = `Element is inaccessible. This means that the element and all its children are invisible to screen readers.\n    If you are using the aria-hidden prop, make sure this is the right choice for your case.\n    `;\n  }\n  if (Object.keys(queryOptions).length > 0) {\n    queryArgs.push(queryOptions);\n  }\n  const queryMethod = `${variant}By${queryName}`;\n  return {\n    queryName,\n    queryMethod,\n    queryArgs,\n    variant,\n    warning,\n    toString() {\n      if (warning) {\n        console.warn(warning);\n      }\n      let [text, options] = queryArgs;\n      text = typeof text === 'string' ? `'${text}'` : text;\n      options = options ? `, { ${Object.entries(options).map(([k, v]) => `${k}: ${v}`).join(', ')} }` : '';\n      return `${queryMethod}(${text}${options})`;\n    }\n  };\n}\nfunction canSuggest(currentMethod, requestedMethod, data) {\n  return data && (!requestedMethod || requestedMethod.toLowerCase() === currentMethod.toLowerCase());\n}\nfunction getSuggestedQuery(element, variant = 'get', method) {\n  // don't create suggestions for script and style elements\n  if (element.matches((0, _config.getConfig)().defaultIgnore)) {\n    return undefined;\n  }\n\n  //We prefer to suggest something else if the role is generic\n  const role = element.getAttribute('role') ?? (0, _roleHelpers.getImplicitAriaRoles)(element)?.[0];\n  if (role !== 'generic' && canSuggest('Role', method, role)) {\n    return makeSuggestion('Role', element, role, {\n      variant,\n      name: (0, _domAccessibilityApi.computeAccessibleName)(element, {\n        computedStyleSupportsPseudoElements: (0, _config.getConfig)().computedStyleSupportsPseudoElements\n      })\n    });\n  }\n  const labelText = (0, _labelHelpers.getLabels)(document, element).map(label => label.content).join(' ');\n  if (canSuggest('LabelText', method, labelText)) {\n    return makeSuggestion('LabelText', element, labelText, {\n      variant\n    });\n  }\n  const placeholderText = element.getAttribute('placeholder');\n  if (canSuggest('PlaceholderText', method, placeholderText)) {\n    return makeSuggestion('PlaceholderText', element, placeholderText, {\n      variant\n    });\n  }\n  const textContent = normalize((0, _getNodeText.getNodeText)(element));\n  if (canSuggest('Text', method, textContent)) {\n    return makeSuggestion('Text', element, textContent, {\n      variant\n    });\n  }\n  if (canSuggest('DisplayValue', method, element.value)) {\n    return makeSuggestion('DisplayValue', element, normalize(element.value), {\n      variant\n    });\n  }\n  const alt = element.getAttribute('alt');\n  if (canSuggest('AltText', method, alt)) {\n    return makeSuggestion('AltText', element, alt, {\n      variant\n    });\n  }\n  const title = element.getAttribute('title');\n  if (canSuggest('Title', method, title)) {\n    return makeSuggestion('Title', element, title, {\n      variant\n    });\n  }\n  const testId = element.getAttribute((0, _config.getConfig)().testIdAttribute);\n  if (canSuggest('TestId', method, testId)) {\n    return makeSuggestion('TestId', element, testId, {\n      variant\n    });\n  }\n  return undefined;\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","getSuggestedQuery","_domAccessibilityApi","require","_matches","_getNodeText","_config","_roleHelpers","_labelHelpers","normalize","getDefaultNormalizer","escapeRegExp","string","replace","getRegExpMatcher","RegExp","toLowerCase","makeSuggestion","queryName","element","content","variant","name","warning","queryOptions","queryArgs","includes","isInaccessible","hidden","keys","length","push","queryMethod","toString","console","warn","text","options","entries","map","k","v","join","canSuggest","currentMethod","requestedMethod","data","method","matches","getConfig","defaultIgnore","undefined","role","getAttribute","getImplicitAriaRoles","computeAccessibleName","computedStyleSupportsPseudoElements","labelText","getLabels","document","label","placeholderText","textContent","getNodeText","alt","title","testId","testIdAttribute"],"sources":["C:/Users/chest/OneDrive/Documentos/GitHub/HackUPC/frontend/node_modules/@testing-library/dom/dist/suggestions.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getSuggestedQuery = getSuggestedQuery;\nvar _domAccessibilityApi = require(\"dom-accessibility-api\");\nvar _matches = require(\"./matches\");\nvar _getNodeText = require(\"./get-node-text\");\nvar _config = require(\"./config\");\nvar _roleHelpers = require(\"./role-helpers\");\nvar _labelHelpers = require(\"./label-helpers\");\nconst normalize = (0, _matches.getDefaultNormalizer)();\nfunction escapeRegExp(string) {\n  return string.replace(/[.*+\\-?^${}()|[\\]\\\\]/g, '\\\\$&'); // $& means the whole matched string\n}\nfunction getRegExpMatcher(string) {\n  return new RegExp(escapeRegExp(string.toLowerCase()), 'i');\n}\nfunction makeSuggestion(queryName, element, content, {\n  variant,\n  name\n}) {\n  let warning = '';\n  const queryOptions = {};\n  const queryArgs = [['Role', 'TestId'].includes(queryName) ? content : getRegExpMatcher(content)];\n  if (name) {\n    queryOptions.name = getRegExpMatcher(name);\n  }\n  if (queryName === 'Role' && (0, _roleHelpers.isInaccessible)(element)) {\n    queryOptions.hidden = true;\n    warning = `Element is inaccessible. This means that the element and all its children are invisible to screen readers.\n    If you are using the aria-hidden prop, make sure this is the right choice for your case.\n    `;\n  }\n  if (Object.keys(queryOptions).length > 0) {\n    queryArgs.push(queryOptions);\n  }\n  const queryMethod = `${variant}By${queryName}`;\n  return {\n    queryName,\n    queryMethod,\n    queryArgs,\n    variant,\n    warning,\n    toString() {\n      if (warning) {\n        console.warn(warning);\n      }\n      let [text, options] = queryArgs;\n      text = typeof text === 'string' ? `'${text}'` : text;\n      options = options ? `, { ${Object.entries(options).map(([k, v]) => `${k}: ${v}`).join(', ')} }` : '';\n      return `${queryMethod}(${text}${options})`;\n    }\n  };\n}\nfunction canSuggest(currentMethod, requestedMethod, data) {\n  return data && (!requestedMethod || requestedMethod.toLowerCase() === currentMethod.toLowerCase());\n}\nfunction getSuggestedQuery(element, variant = 'get', method) {\n  // don't create suggestions for script and style elements\n  if (element.matches((0, _config.getConfig)().defaultIgnore)) {\n    return undefined;\n  }\n\n  //We prefer to suggest something else if the role is generic\n  const role = element.getAttribute('role') ?? (0, _roleHelpers.getImplicitAriaRoles)(element)?.[0];\n  if (role !== 'generic' && canSuggest('Role', method, role)) {\n    return makeSuggestion('Role', element, role, {\n      variant,\n      name: (0, _domAccessibilityApi.computeAccessibleName)(element, {\n        computedStyleSupportsPseudoElements: (0, _config.getConfig)().computedStyleSupportsPseudoElements\n      })\n    });\n  }\n  const labelText = (0, _labelHelpers.getLabels)(document, element).map(label => label.content).join(' ');\n  if (canSuggest('LabelText', method, labelText)) {\n    return makeSuggestion('LabelText', element, labelText, {\n      variant\n    });\n  }\n  const placeholderText = element.getAttribute('placeholder');\n  if (canSuggest('PlaceholderText', method, placeholderText)) {\n    return makeSuggestion('PlaceholderText', element, placeholderText, {\n      variant\n    });\n  }\n  const textContent = normalize((0, _getNodeText.getNodeText)(element));\n  if (canSuggest('Text', method, textContent)) {\n    return makeSuggestion('Text', element, textContent, {\n      variant\n    });\n  }\n  if (canSuggest('DisplayValue', method, element.value)) {\n    return makeSuggestion('DisplayValue', element, normalize(element.value), {\n      variant\n    });\n  }\n  const alt = element.getAttribute('alt');\n  if (canSuggest('AltText', method, alt)) {\n    return makeSuggestion('AltText', element, alt, {\n      variant\n    });\n  }\n  const title = element.getAttribute('title');\n  if (canSuggest('Title', method, title)) {\n    return makeSuggestion('Title', element, title, {\n      variant\n    });\n  }\n  const testId = element.getAttribute((0, _config.getConfig)().testIdAttribute);\n  if (canSuggest('TestId', method, testId)) {\n    return makeSuggestion('TestId', element, testId, {\n      variant\n    });\n  }\n  return undefined;\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}