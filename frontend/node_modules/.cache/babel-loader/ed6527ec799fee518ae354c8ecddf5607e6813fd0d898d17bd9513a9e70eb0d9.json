{"ast":null,"code":"'use strict';\n\nvar $ = require('../internals/export');\n\n// `Number.isNaN` method\n// https://tc39.es/ecma262/#sec-number.isnan\n$({\n  target: 'Number',\n  stat: true\n}, {\n  isNaN: function isNaN(number) {\n    // eslint-disable-next-line no-self-compare -- NaN check\n    return number !== number;\n  }\n});","map":{"version":3,"names":["$","require","target","stat","isNaN","number"],"sources":["C:/Users/chest/OneDrive/Documentos/GitHub/HackUPC/frontend/node_modules/core-js/modules/es.number.is-nan.js"],"sourcesContent":["'use strict';\nvar $ = require('../internals/export');\n\n// `Number.isNaN` method\n// https://tc39.es/ecma262/#sec-number.isnan\n$({ target: 'Number', stat: true }, {\n  isNaN: function isNaN(number) {\n    // eslint-disable-next-line no-self-compare -- NaN check\n    return number !== number;\n  }\n});\n"],"mappings":"AAAA,YAAY;;AACZ,IAAIA,CAAC,GAAGC,OAAO,CAAC,qBAAqB,CAAC;;AAEtC;AACA;AACAD,CAAC,CAAC;EAAEE,MAAM,EAAE,QAAQ;EAAEC,IAAI,EAAE;AAAK,CAAC,EAAE;EAClCC,KAAK,EAAE,SAASA,KAAKA,CAACC,MAAM,EAAE;IAC5B;IACA,OAAOA,MAAM,KAAKA,MAAM;EAC1B;AACF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}