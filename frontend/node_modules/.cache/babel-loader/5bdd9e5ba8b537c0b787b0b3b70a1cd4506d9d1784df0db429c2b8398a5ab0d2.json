{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst codegen_1 = require(\"../../compile/codegen\");\nconst util_1 = require(\"../../compile/util\");\nconst equal_1 = require(\"../../runtime/equal\");\nconst error = {\n  message: \"must be equal to constant\",\n  params: ({\n    schemaCode\n  }) => (0, codegen_1._)`{allowedValue: ${schemaCode}}`\n};\nconst def = {\n  keyword: \"const\",\n  $data: true,\n  error,\n  code(cxt) {\n    const {\n      gen,\n      data,\n      $data,\n      schemaCode,\n      schema\n    } = cxt;\n    if ($data || schema && typeof schema == \"object\") {\n      cxt.fail$data((0, codegen_1._)`!${(0, util_1.useFunc)(gen, equal_1.default)}(${data}, ${schemaCode})`);\n    } else {\n      cxt.fail((0, codegen_1._)`${schema} !== ${data}`);\n    }\n  }\n};\nexports.default = def;","map":{"version":3,"names":["codegen_1","require","util_1","equal_1","error","message","params","schemaCode","_","def","keyword","$data","code","cxt","gen","data","schema","fail$data","useFunc","default","fail","exports"],"sources":["C:\\Users\\chest\\OneDrive\\Documentos\\GitHub\\HackUPC\\frontend\\node_modules\\ajv-formats\\node_modules\\ajv\\lib\\vocabularies\\validation\\const.ts"],"sourcesContent":["import type {CodeKeywordDefinition, ErrorObject, KeywordErrorDefinition} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_} from \"../../compile/codegen\"\nimport {useFunc} from \"../../compile/util\"\nimport equal from \"../../runtime/equal\"\n\nexport type ConstError = ErrorObject<\"const\", {allowedValue: any}>\n\nconst error: KeywordErrorDefinition = {\n  message: \"must be equal to constant\",\n  params: ({schemaCode}) => _`{allowedValue: ${schemaCode}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"const\",\n  $data: true,\n  error,\n  code(cxt: KeywordCxt) {\n    const {gen, data, $data, schemaCode, schema} = cxt\n    if ($data || (schema && typeof schema == \"object\")) {\n      cxt.fail$data(_`!${useFunc(gen, equal)}(${data}, ${schemaCode})`)\n    } else {\n      cxt.fail(_`${schema} !== ${data}`)\n    }\n  },\n}\n\nexport default def\n"],"mappings":";;;;;AAEA,MAAAA,SAAA,GAAAC,OAAA;AACA,MAAAC,MAAA,GAAAD,OAAA;AACA,MAAAE,OAAA,GAAAF,OAAA;AAIA,MAAMG,KAAK,GAA2B;EACpCC,OAAO,EAAE,2BAA2B;EACpCC,MAAM,EAAEA,CAAC;IAACC;EAAU,CAAC,KAAK,IAAAP,SAAA,CAAAQ,CAAC,mBAAkBD,UAAU;CACxD;AAED,MAAME,GAAG,GAA0B;EACjCC,OAAO,EAAE,OAAO;EAChBC,KAAK,EAAE,IAAI;EACXP,KAAK;EACLQ,IAAIA,CAACC,GAAe;IAClB,MAAM;MAACC,GAAG;MAAEC,IAAI;MAAEJ,KAAK;MAAEJ,UAAU;MAAES;IAAM,CAAC,GAAGH,GAAG;IAClD,IAAIF,KAAK,IAAKK,MAAM,IAAI,OAAOA,MAAM,IAAI,QAAS,EAAE;MAClDH,GAAG,CAACI,SAAS,CAAC,IAAAjB,SAAA,CAAAQ,CAAC,KAAI,IAAAN,MAAA,CAAAgB,OAAO,EAACJ,GAAG,EAAEX,OAAA,CAAAgB,OAAK,CAAC,IAAIJ,IAAI,KAAKR,UAAU,GAAG,CAAC;IACnE,CAAC,MAAM;MACLM,GAAG,CAACO,IAAI,CAAC,IAAApB,SAAA,CAAAQ,CAAC,IAAGQ,MAAM,QAAQD,IAAI,EAAE,CAAC;IACpC;EACF;CACD;AAEDM,OAAA,CAAAF,OAAA,GAAeV,GAAG","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}