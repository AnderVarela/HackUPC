{"ast":null,"code":"\"use strict\";\n\nvar assert = require(\"@sinonjs/referee-sinon\").assert;\nvar typeOf = require(\"./type-of\");\ndescribe(\"typeOf\", function () {\n  it(\"returns boolean\", function () {\n    assert.equals(typeOf(false), \"boolean\");\n  });\n  it(\"returns string\", function () {\n    assert.equals(typeOf(\"Sinon.JS\"), \"string\");\n  });\n  it(\"returns number\", function () {\n    assert.equals(typeOf(123), \"number\");\n  });\n  it(\"returns object\", function () {\n    assert.equals(typeOf({}), \"object\");\n  });\n  it(\"returns function\", function () {\n    assert.equals(typeOf(function () {\n      return undefined;\n    }), \"function\");\n  });\n  it(\"returns undefined\", function () {\n    assert.equals(typeOf(undefined), \"undefined\");\n  });\n  it(\"returns null\", function () {\n    assert.equals(typeOf(null), \"null\");\n  });\n  it(\"returns array\", function () {\n    assert.equals(typeOf([]), \"array\");\n  });\n  it(\"returns regexp\", function () {\n    assert.equals(typeOf(/.*/), \"regexp\");\n  });\n  it(\"returns date\", function () {\n    assert.equals(typeOf(new Date()), \"date\");\n  });\n});","map":{"version":3,"names":["assert","require","typeOf","describe","it","equals","undefined","Date"],"sources":["C:/Users/chest/OneDrive/Documentos/GitHub/HackUPC/frontend/node_modules/@sinonjs/commons/lib/type-of.test.js"],"sourcesContent":["\"use strict\";\n\nvar assert = require(\"@sinonjs/referee-sinon\").assert;\nvar typeOf = require(\"./type-of\");\n\ndescribe(\"typeOf\", function () {\n    it(\"returns boolean\", function () {\n        assert.equals(typeOf(false), \"boolean\");\n    });\n\n    it(\"returns string\", function () {\n        assert.equals(typeOf(\"Sinon.JS\"), \"string\");\n    });\n\n    it(\"returns number\", function () {\n        assert.equals(typeOf(123), \"number\");\n    });\n\n    it(\"returns object\", function () {\n        assert.equals(typeOf({}), \"object\");\n    });\n\n    it(\"returns function\", function () {\n        assert.equals(\n            typeOf(function () {\n                return undefined;\n            }),\n            \"function\"\n        );\n    });\n\n    it(\"returns undefined\", function () {\n        assert.equals(typeOf(undefined), \"undefined\");\n    });\n\n    it(\"returns null\", function () {\n        assert.equals(typeOf(null), \"null\");\n    });\n\n    it(\"returns array\", function () {\n        assert.equals(typeOf([]), \"array\");\n    });\n\n    it(\"returns regexp\", function () {\n        assert.equals(typeOf(/.*/), \"regexp\");\n    });\n\n    it(\"returns date\", function () {\n        assert.equals(typeOf(new Date()), \"date\");\n    });\n});\n"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,MAAM,GAAGC,OAAO,CAAC,wBAAwB,CAAC,CAACD,MAAM;AACrD,IAAIE,MAAM,GAAGD,OAAO,CAAC,WAAW,CAAC;AAEjCE,QAAQ,CAAC,QAAQ,EAAE,YAAY;EAC3BC,EAAE,CAAC,iBAAiB,EAAE,YAAY;IAC9BJ,MAAM,CAACK,MAAM,CAACH,MAAM,CAAC,KAAK,CAAC,EAAE,SAAS,CAAC;EAC3C,CAAC,CAAC;EAEFE,EAAE,CAAC,gBAAgB,EAAE,YAAY;IAC7BJ,MAAM,CAACK,MAAM,CAACH,MAAM,CAAC,UAAU,CAAC,EAAE,QAAQ,CAAC;EAC/C,CAAC,CAAC;EAEFE,EAAE,CAAC,gBAAgB,EAAE,YAAY;IAC7BJ,MAAM,CAACK,MAAM,CAACH,MAAM,CAAC,GAAG,CAAC,EAAE,QAAQ,CAAC;EACxC,CAAC,CAAC;EAEFE,EAAE,CAAC,gBAAgB,EAAE,YAAY;IAC7BJ,MAAM,CAACK,MAAM,CAACH,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE,QAAQ,CAAC;EACvC,CAAC,CAAC;EAEFE,EAAE,CAAC,kBAAkB,EAAE,YAAY;IAC/BJ,MAAM,CAACK,MAAM,CACTH,MAAM,CAAC,YAAY;MACf,OAAOI,SAAS;IACpB,CAAC,CAAC,EACF,UACJ,CAAC;EACL,CAAC,CAAC;EAEFF,EAAE,CAAC,mBAAmB,EAAE,YAAY;IAChCJ,MAAM,CAACK,MAAM,CAACH,MAAM,CAACI,SAAS,CAAC,EAAE,WAAW,CAAC;EACjD,CAAC,CAAC;EAEFF,EAAE,CAAC,cAAc,EAAE,YAAY;IAC3BJ,MAAM,CAACK,MAAM,CAACH,MAAM,CAAC,IAAI,CAAC,EAAE,MAAM,CAAC;EACvC,CAAC,CAAC;EAEFE,EAAE,CAAC,eAAe,EAAE,YAAY;IAC5BJ,MAAM,CAACK,MAAM,CAACH,MAAM,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EACtC,CAAC,CAAC;EAEFE,EAAE,CAAC,gBAAgB,EAAE,YAAY;IAC7BJ,MAAM,CAACK,MAAM,CAACH,MAAM,CAAC,IAAI,CAAC,EAAE,QAAQ,CAAC;EACzC,CAAC,CAAC;EAEFE,EAAE,CAAC,cAAc,EAAE,YAAY;IAC3BJ,MAAM,CAACK,MAAM,CAACH,MAAM,CAAC,IAAIK,IAAI,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC;EAC7C,CAAC,CAAC;AACN,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}