{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ToRawFixed = void 0;\nvar utils_1 = require(\"../utils\");\n/**\n * TODO: dedup with intl-pluralrules and support BigInt\n * https://tc39.es/ecma402/#sec-torawfixed\n * @param x a finite non-negative Number or BigInt\n * @param minFraction and integer between 0 and 20\n * @param maxFraction and integer between 0 and 20\n */\nfunction ToRawFixed(x, minFraction, maxFraction) {\n  var f = maxFraction;\n  var n = Math.round(x * Math.pow(10, f));\n  var xFinal = n / Math.pow(10, f);\n  // n is a positive integer, but it is possible to be greater than 1e21.\n  // In such case we will go the slow path.\n  // See also: https://tc39.es/ecma262/#sec-numeric-types-number-tostring\n  var m;\n  if (n < 1e21) {\n    m = n.toString();\n  } else {\n    m = n.toString();\n    var _a = m.split('e'),\n      mantissa = _a[0],\n      exponent = _a[1];\n    m = mantissa.replace('.', '');\n    m = m + (0, utils_1.repeat)('0', Math.max(+exponent - m.length + 1, 0));\n  }\n  var int;\n  if (f !== 0) {\n    var k = m.length;\n    if (k <= f) {\n      var z = (0, utils_1.repeat)('0', f + 1 - k);\n      m = z + m;\n      k = f + 1;\n    }\n    var a = m.slice(0, k - f);\n    var b = m.slice(k - f);\n    m = \"\".concat(a, \".\").concat(b);\n    int = a.length;\n  } else {\n    int = m.length;\n  }\n  var cut = maxFraction - minFraction;\n  while (cut > 0 && m[m.length - 1] === '0') {\n    m = m.slice(0, -1);\n    cut--;\n  }\n  if (m[m.length - 1] === '.') {\n    m = m.slice(0, -1);\n  }\n  return {\n    formattedString: m,\n    roundedNumber: xFinal,\n    integerDigitsCount: int\n  };\n}\nexports.ToRawFixed = ToRawFixed;","map":{"version":3,"names":["Object","defineProperty","exports","value","ToRawFixed","utils_1","require","x","minFraction","maxFraction","f","n","Math","round","pow","xFinal","m","toString","_a","split","mantissa","exponent","replace","repeat","max","length","int","k","z","a","slice","b","concat","cut","formattedString","roundedNumber","integerDigitsCount"],"sources":["C:/Users/chest/OneDrive/Documentos/GitHub/HackUPC/frontend/node_modules/@formatjs/ecma402-abstract/NumberFormat/ToRawFixed.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ToRawFixed = void 0;\nvar utils_1 = require(\"../utils\");\n/**\n * TODO: dedup with intl-pluralrules and support BigInt\n * https://tc39.es/ecma402/#sec-torawfixed\n * @param x a finite non-negative Number or BigInt\n * @param minFraction and integer between 0 and 20\n * @param maxFraction and integer between 0 and 20\n */\nfunction ToRawFixed(x, minFraction, maxFraction) {\n    var f = maxFraction;\n    var n = Math.round(x * Math.pow(10, f));\n    var xFinal = n / Math.pow(10, f);\n    // n is a positive integer, but it is possible to be greater than 1e21.\n    // In such case we will go the slow path.\n    // See also: https://tc39.es/ecma262/#sec-numeric-types-number-tostring\n    var m;\n    if (n < 1e21) {\n        m = n.toString();\n    }\n    else {\n        m = n.toString();\n        var _a = m.split('e'), mantissa = _a[0], exponent = _a[1];\n        m = mantissa.replace('.', '');\n        m = m + (0, utils_1.repeat)('0', Math.max(+exponent - m.length + 1, 0));\n    }\n    var int;\n    if (f !== 0) {\n        var k = m.length;\n        if (k <= f) {\n            var z = (0, utils_1.repeat)('0', f + 1 - k);\n            m = z + m;\n            k = f + 1;\n        }\n        var a = m.slice(0, k - f);\n        var b = m.slice(k - f);\n        m = \"\".concat(a, \".\").concat(b);\n        int = a.length;\n    }\n    else {\n        int = m.length;\n    }\n    var cut = maxFraction - minFraction;\n    while (cut > 0 && m[m.length - 1] === '0') {\n        m = m.slice(0, -1);\n        cut--;\n    }\n    if (m[m.length - 1] === '.') {\n        m = m.slice(0, -1);\n    }\n    return { formattedString: m, roundedNumber: xFinal, integerDigitsCount: int };\n}\nexports.ToRawFixed = ToRawFixed;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}