{"ast":null,"code":"'use strict';\n\nvar loader = require('./lib/loader');\nvar dumper = require('./lib/dumper');\nfunction renamed(from, to) {\n  return function () {\n    throw new Error('Function yaml.' + from + ' is removed in js-yaml 4. ' + 'Use yaml.' + to + ' instead, which is now safe by default.');\n  };\n}\nmodule.exports.Type = require('./lib/type');\nmodule.exports.Schema = require('./lib/schema');\nmodule.exports.FAILSAFE_SCHEMA = require('./lib/schema/failsafe');\nmodule.exports.JSON_SCHEMA = require('./lib/schema/json');\nmodule.exports.CORE_SCHEMA = require('./lib/schema/core');\nmodule.exports.DEFAULT_SCHEMA = require('./lib/schema/default');\nmodule.exports.load = loader.load;\nmodule.exports.loadAll = loader.loadAll;\nmodule.exports.dump = dumper.dump;\nmodule.exports.YAMLException = require('./lib/exception');\n\n// Re-export all types in case user wants to create custom schema\nmodule.exports.types = {\n  binary: require('./lib/type/binary'),\n  float: require('./lib/type/float'),\n  map: require('./lib/type/map'),\n  null: require('./lib/type/null'),\n  pairs: require('./lib/type/pairs'),\n  set: require('./lib/type/set'),\n  timestamp: require('./lib/type/timestamp'),\n  bool: require('./lib/type/bool'),\n  int: require('./lib/type/int'),\n  merge: require('./lib/type/merge'),\n  omap: require('./lib/type/omap'),\n  seq: require('./lib/type/seq'),\n  str: require('./lib/type/str')\n};\n\n// Removed functions from JS-YAML 3.0.x\nmodule.exports.safeLoad = renamed('safeLoad', 'load');\nmodule.exports.safeLoadAll = renamed('safeLoadAll', 'loadAll');\nmodule.exports.safeDump = renamed('safeDump', 'dump');","map":{"version":3,"names":["loader","require","dumper","renamed","from","to","Error","module","exports","Type","Schema","FAILSAFE_SCHEMA","JSON_SCHEMA","CORE_SCHEMA","DEFAULT_SCHEMA","load","loadAll","dump","YAMLException","types","binary","float","map","null","pairs","set","timestamp","bool","int","merge","omap","seq","str","safeLoad","safeLoadAll","safeDump"],"sources":["C:/Users/chest/OneDrive/Documentos/GitHub/HackUPC/frontend/node_modules/@eslint/eslintrc/node_modules/js-yaml/index.js"],"sourcesContent":["'use strict';\n\n\nvar loader = require('./lib/loader');\nvar dumper = require('./lib/dumper');\n\n\nfunction renamed(from, to) {\n  return function () {\n    throw new Error('Function yaml.' + from + ' is removed in js-yaml 4. ' +\n      'Use yaml.' + to + ' instead, which is now safe by default.');\n  };\n}\n\n\nmodule.exports.Type                = require('./lib/type');\nmodule.exports.Schema              = require('./lib/schema');\nmodule.exports.FAILSAFE_SCHEMA     = require('./lib/schema/failsafe');\nmodule.exports.JSON_SCHEMA         = require('./lib/schema/json');\nmodule.exports.CORE_SCHEMA         = require('./lib/schema/core');\nmodule.exports.DEFAULT_SCHEMA      = require('./lib/schema/default');\nmodule.exports.load                = loader.load;\nmodule.exports.loadAll             = loader.loadAll;\nmodule.exports.dump                = dumper.dump;\nmodule.exports.YAMLException       = require('./lib/exception');\n\n// Re-export all types in case user wants to create custom schema\nmodule.exports.types = {\n  binary:    require('./lib/type/binary'),\n  float:     require('./lib/type/float'),\n  map:       require('./lib/type/map'),\n  null:      require('./lib/type/null'),\n  pairs:     require('./lib/type/pairs'),\n  set:       require('./lib/type/set'),\n  timestamp: require('./lib/type/timestamp'),\n  bool:      require('./lib/type/bool'),\n  int:       require('./lib/type/int'),\n  merge:     require('./lib/type/merge'),\n  omap:      require('./lib/type/omap'),\n  seq:       require('./lib/type/seq'),\n  str:       require('./lib/type/str')\n};\n\n// Removed functions from JS-YAML 3.0.x\nmodule.exports.safeLoad            = renamed('safeLoad', 'load');\nmodule.exports.safeLoadAll         = renamed('safeLoadAll', 'loadAll');\nmodule.exports.safeDump            = renamed('safeDump', 'dump');\n"],"mappings":"AAAA,YAAY;;AAGZ,IAAIA,MAAM,GAAGC,OAAO,CAAC,cAAc,CAAC;AACpC,IAAIC,MAAM,GAAGD,OAAO,CAAC,cAAc,CAAC;AAGpC,SAASE,OAAOA,CAACC,IAAI,EAAEC,EAAE,EAAE;EACzB,OAAO,YAAY;IACjB,MAAM,IAAIC,KAAK,CAAC,gBAAgB,GAAGF,IAAI,GAAG,4BAA4B,GACpE,WAAW,GAAGC,EAAE,GAAG,yCAAyC,CAAC;EACjE,CAAC;AACH;AAGAE,MAAM,CAACC,OAAO,CAACC,IAAI,GAAkBR,OAAO,CAAC,YAAY,CAAC;AAC1DM,MAAM,CAACC,OAAO,CAACE,MAAM,GAAgBT,OAAO,CAAC,cAAc,CAAC;AAC5DM,MAAM,CAACC,OAAO,CAACG,eAAe,GAAOV,OAAO,CAAC,uBAAuB,CAAC;AACrEM,MAAM,CAACC,OAAO,CAACI,WAAW,GAAWX,OAAO,CAAC,mBAAmB,CAAC;AACjEM,MAAM,CAACC,OAAO,CAACK,WAAW,GAAWZ,OAAO,CAAC,mBAAmB,CAAC;AACjEM,MAAM,CAACC,OAAO,CAACM,cAAc,GAAQb,OAAO,CAAC,sBAAsB,CAAC;AACpEM,MAAM,CAACC,OAAO,CAACO,IAAI,GAAkBf,MAAM,CAACe,IAAI;AAChDR,MAAM,CAACC,OAAO,CAACQ,OAAO,GAAehB,MAAM,CAACgB,OAAO;AACnDT,MAAM,CAACC,OAAO,CAACS,IAAI,GAAkBf,MAAM,CAACe,IAAI;AAChDV,MAAM,CAACC,OAAO,CAACU,aAAa,GAASjB,OAAO,CAAC,iBAAiB,CAAC;;AAE/D;AACAM,MAAM,CAACC,OAAO,CAACW,KAAK,GAAG;EACrBC,MAAM,EAAKnB,OAAO,CAAC,mBAAmB,CAAC;EACvCoB,KAAK,EAAMpB,OAAO,CAAC,kBAAkB,CAAC;EACtCqB,GAAG,EAAQrB,OAAO,CAAC,gBAAgB,CAAC;EACpCsB,IAAI,EAAOtB,OAAO,CAAC,iBAAiB,CAAC;EACrCuB,KAAK,EAAMvB,OAAO,CAAC,kBAAkB,CAAC;EACtCwB,GAAG,EAAQxB,OAAO,CAAC,gBAAgB,CAAC;EACpCyB,SAAS,EAAEzB,OAAO,CAAC,sBAAsB,CAAC;EAC1C0B,IAAI,EAAO1B,OAAO,CAAC,iBAAiB,CAAC;EACrC2B,GAAG,EAAQ3B,OAAO,CAAC,gBAAgB,CAAC;EACpC4B,KAAK,EAAM5B,OAAO,CAAC,kBAAkB,CAAC;EACtC6B,IAAI,EAAO7B,OAAO,CAAC,iBAAiB,CAAC;EACrC8B,GAAG,EAAQ9B,OAAO,CAAC,gBAAgB,CAAC;EACpC+B,GAAG,EAAQ/B,OAAO,CAAC,gBAAgB;AACrC,CAAC;;AAED;AACAM,MAAM,CAACC,OAAO,CAACyB,QAAQ,GAAc9B,OAAO,CAAC,UAAU,EAAE,MAAM,CAAC;AAChEI,MAAM,CAACC,OAAO,CAAC0B,WAAW,GAAW/B,OAAO,CAAC,aAAa,EAAE,SAAS,CAAC;AACtEI,MAAM,CAACC,OAAO,CAAC2B,QAAQ,GAAchC,OAAO,CAAC,UAAU,EAAE,MAAM,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}