{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst utils_1 = require(\"@typescript-eslint/utils\");\nconst util = __importStar(require(\"../util\"));\nexports.default = util.createRule({\n  name: 'no-unsafe-declaration-merging',\n  meta: {\n    type: 'problem',\n    docs: {\n      description: 'Disallow unsafe declaration merging',\n      recommended: 'strict',\n      requiresTypeChecking: false\n    },\n    messages: {\n      unsafeMerging: 'Unsafe declaration merging between classes and interfaces.'\n    },\n    schema: []\n  },\n  defaultOptions: [],\n  create(context) {\n    function checkUnsafeDeclaration(scope, node, unsafeKind) {\n      const variable = scope.set.get(node.name);\n      if (!variable) {\n        return;\n      }\n      const defs = variable.defs;\n      if (defs.length <= 1) {\n        return;\n      }\n      if (defs.some(def => def.node.type === unsafeKind)) {\n        context.report({\n          node,\n          messageId: 'unsafeMerging'\n        });\n      }\n    }\n    return {\n      ClassDeclaration(node) {\n        if (node.id) {\n          // by default eslint returns the inner class scope for the ClassDeclaration node\n          // but we want the outer scope within which merged variables will sit\n          const currentScope = context.getScope().upper;\n          if (currentScope == null) {\n            return;\n          }\n          checkUnsafeDeclaration(currentScope, node.id, utils_1.AST_NODE_TYPES.TSInterfaceDeclaration);\n        }\n      },\n      TSInterfaceDeclaration(node) {\n        checkUnsafeDeclaration(context.getScope(), node.id, utils_1.AST_NODE_TYPES.ClassDeclaration);\n      }\n    };\n  }\n});","map":{"version":3,"names":["utils_1","require","util","__importStar","exports","default","createRule","name","meta","type","docs","description","recommended","requiresTypeChecking","messages","unsafeMerging","schema","defaultOptions","create","context","checkUnsafeDeclaration","scope","node","unsafeKind","variable","set","get","defs","length","some","def","report","messageId","ClassDeclaration","id","currentScope","getScope","upper","AST_NODE_TYPES","TSInterfaceDeclaration"],"sources":["../../src/rules/no-unsafe-declaration-merging.ts"],"sourcesContent":[null],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,MAAAA,OAAA,GAAAC,OAAA;AAEA,MAAAC,IAAA,GAAAC,YAAA,CAAAF,OAAA;AAEAG,OAAA,CAAAC,OAAA,GAAeH,IAAI,CAACI,UAAU,CAAC;EAC7BC,IAAI,EAAE,+BAA+B;EACrCC,IAAI,EAAE;IACJC,IAAI,EAAE,SAAS;IACfC,IAAI,EAAE;MACJC,WAAW,EAAE,qCAAqC;MAClDC,WAAW,EAAE,QAAQ;MACrBC,oBAAoB,EAAE;KACvB;IACDC,QAAQ,EAAE;MACRC,aAAa,EACX;KACH;IACDC,MAAM,EAAE;GACT;EACDC,cAAc,EAAE,EAAE;EAClBC,MAAMA,CAACC,OAAO;IACZ,SAASC,sBAAsBA,CAC7BC,KAAY,EACZC,IAAyB,EACzBC,UAA0B;MAE1B,MAAMC,QAAQ,GAAGH,KAAK,CAACI,GAAG,CAACC,GAAG,CAACJ,IAAI,CAACf,IAAI,CAAC;MACzC,IAAI,CAACiB,QAAQ,EAAE;QACb;;MAGF,MAAMG,IAAI,GAAGH,QAAQ,CAACG,IAAI;MAC1B,IAAIA,IAAI,CAACC,MAAM,IAAI,CAAC,EAAE;QACpB;;MAGF,IAAID,IAAI,CAACE,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACR,IAAI,CAACb,IAAI,KAAKc,UAAU,CAAC,EAAE;QAClDJ,OAAO,CAACY,MAAM,CAAC;UACbT,IAAI;UACJU,SAAS,EAAE;SACZ,CAAC;;IAEN;IAEA,OAAO;MACLC,gBAAgBA,CAACX,IAAI;QACnB,IAAIA,IAAI,CAACY,EAAE,EAAE;UACX;UACA;UACA,MAAMC,YAAY,GAAGhB,OAAO,CAACiB,QAAQ,EAAE,CAACC,KAAK;UAC7C,IAAIF,YAAY,IAAI,IAAI,EAAE;YACxB;;UAGFf,sBAAsB,CACpBe,YAAY,EACZb,IAAI,CAACY,EAAE,EACPlC,OAAA,CAAAsC,cAAc,CAACC,sBAAsB,CACtC;;MAEL,CAAC;MACDA,sBAAsBA,CAACjB,IAAI;QACzBF,sBAAsB,CACpBD,OAAO,CAACiB,QAAQ,EAAE,EAClBd,IAAI,CAACY,EAAE,EACPlC,OAAA,CAAAsC,cAAc,CAACL,gBAAgB,CAChC;MACH;KACD;EACH;CACD,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}