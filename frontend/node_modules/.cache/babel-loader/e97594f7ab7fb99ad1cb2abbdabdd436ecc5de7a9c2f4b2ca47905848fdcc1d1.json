{"ast":null,"code":"import { PartitionNumberPattern } from './PartitionNumberPattern';\nimport { CollapseNumberRange } from './CollapseNumberRange';\nimport { FormatApproximately } from './FormatApproximately';\n/**\n * https://tc39.es/ecma402/#sec-partitionnumberrangepattern\n */\nexport function PartitionNumberRangePattern(numberFormat, x, y, _a) {\n  var getInternalSlots = _a.getInternalSlots;\n  if (isNaN(x) || isNaN(y)) {\n    throw new RangeError('Input must be a number');\n  }\n  var result = [];\n  var xResult = PartitionNumberPattern(numberFormat, x, {\n    getInternalSlots: getInternalSlots\n  });\n  var yResult = PartitionNumberPattern(numberFormat, y, {\n    getInternalSlots: getInternalSlots\n  });\n  if (xResult === yResult) {\n    return FormatApproximately(numberFormat, xResult, {\n      getInternalSlots: getInternalSlots\n    });\n  }\n  for (var _i = 0, xResult_1 = xResult; _i < xResult_1.length; _i++) {\n    var r = xResult_1[_i];\n    r.source = 'startRange';\n  }\n  result = result.concat(xResult);\n  var internalSlots = getInternalSlots(numberFormat);\n  var symbols = internalSlots.dataLocaleData.numbers.symbols[internalSlots.numberingSystem];\n  result.push({\n    type: 'literal',\n    value: symbols.rangeSign,\n    source: 'shared'\n  });\n  for (var _b = 0, yResult_1 = yResult; _b < yResult_1.length; _b++) {\n    var r = yResult_1[_b];\n    r.source = 'endRange';\n  }\n  result = result.concat(yResult);\n  return CollapseNumberRange(result);\n}","map":{"version":3,"names":["PartitionNumberPattern","CollapseNumberRange","FormatApproximately","PartitionNumberRangePattern","numberFormat","x","y","_a","getInternalSlots","isNaN","RangeError","result","xResult","yResult","_i","xResult_1","length","r","source","concat","internalSlots","symbols","dataLocaleData","numbers","numberingSystem","push","type","value","rangeSign","_b","yResult_1"],"sources":["C:/Users/chest/OneDrive/Documentos/GitHub/HackUPC/frontend/node_modules/@formatjs/ecma402-abstract/lib/NumberFormat/PartitionNumberRangePattern.js"],"sourcesContent":["import { PartitionNumberPattern } from './PartitionNumberPattern';\nimport { CollapseNumberRange } from './CollapseNumberRange';\nimport { FormatApproximately } from './FormatApproximately';\n/**\n * https://tc39.es/ecma402/#sec-partitionnumberrangepattern\n */\nexport function PartitionNumberRangePattern(numberFormat, x, y, _a) {\n    var getInternalSlots = _a.getInternalSlots;\n    if (isNaN(x) || isNaN(y)) {\n        throw new RangeError('Input must be a number');\n    }\n    var result = [];\n    var xResult = PartitionNumberPattern(numberFormat, x, { getInternalSlots: getInternalSlots });\n    var yResult = PartitionNumberPattern(numberFormat, y, { getInternalSlots: getInternalSlots });\n    if (xResult === yResult) {\n        return FormatApproximately(numberFormat, xResult, { getInternalSlots: getInternalSlots });\n    }\n    for (var _i = 0, xResult_1 = xResult; _i < xResult_1.length; _i++) {\n        var r = xResult_1[_i];\n        r.source = 'startRange';\n    }\n    result = result.concat(xResult);\n    var internalSlots = getInternalSlots(numberFormat);\n    var symbols = internalSlots.dataLocaleData.numbers.symbols[internalSlots.numberingSystem];\n    result.push({ type: 'literal', value: symbols.rangeSign, source: 'shared' });\n    for (var _b = 0, yResult_1 = yResult; _b < yResult_1.length; _b++) {\n        var r = yResult_1[_b];\n        r.source = 'endRange';\n    }\n    result = result.concat(yResult);\n    return CollapseNumberRange(result);\n}\n"],"mappings":"AAAA,SAASA,sBAAsB,QAAQ,0BAA0B;AACjE,SAASC,mBAAmB,QAAQ,uBAAuB;AAC3D,SAASC,mBAAmB,QAAQ,uBAAuB;AAC3D;AACA;AACA;AACA,OAAO,SAASC,2BAA2BA,CAACC,YAAY,EAAEC,CAAC,EAAEC,CAAC,EAAEC,EAAE,EAAE;EAChE,IAAIC,gBAAgB,GAAGD,EAAE,CAACC,gBAAgB;EAC1C,IAAIC,KAAK,CAACJ,CAAC,CAAC,IAAII,KAAK,CAACH,CAAC,CAAC,EAAE;IACtB,MAAM,IAAII,UAAU,CAAC,wBAAwB,CAAC;EAClD;EACA,IAAIC,MAAM,GAAG,EAAE;EACf,IAAIC,OAAO,GAAGZ,sBAAsB,CAACI,YAAY,EAAEC,CAAC,EAAE;IAAEG,gBAAgB,EAAEA;EAAiB,CAAC,CAAC;EAC7F,IAAIK,OAAO,GAAGb,sBAAsB,CAACI,YAAY,EAAEE,CAAC,EAAE;IAAEE,gBAAgB,EAAEA;EAAiB,CAAC,CAAC;EAC7F,IAAII,OAAO,KAAKC,OAAO,EAAE;IACrB,OAAOX,mBAAmB,CAACE,YAAY,EAAEQ,OAAO,EAAE;MAAEJ,gBAAgB,EAAEA;IAAiB,CAAC,CAAC;EAC7F;EACA,KAAK,IAAIM,EAAE,GAAG,CAAC,EAAEC,SAAS,GAAGH,OAAO,EAAEE,EAAE,GAAGC,SAAS,CAACC,MAAM,EAAEF,EAAE,EAAE,EAAE;IAC/D,IAAIG,CAAC,GAAGF,SAAS,CAACD,EAAE,CAAC;IACrBG,CAAC,CAACC,MAAM,GAAG,YAAY;EAC3B;EACAP,MAAM,GAAGA,MAAM,CAACQ,MAAM,CAACP,OAAO,CAAC;EAC/B,IAAIQ,aAAa,GAAGZ,gBAAgB,CAACJ,YAAY,CAAC;EAClD,IAAIiB,OAAO,GAAGD,aAAa,CAACE,cAAc,CAACC,OAAO,CAACF,OAAO,CAACD,aAAa,CAACI,eAAe,CAAC;EACzFb,MAAM,CAACc,IAAI,CAAC;IAAEC,IAAI,EAAE,SAAS;IAAEC,KAAK,EAAEN,OAAO,CAACO,SAAS;IAAEV,MAAM,EAAE;EAAS,CAAC,CAAC;EAC5E,KAAK,IAAIW,EAAE,GAAG,CAAC,EAAEC,SAAS,GAAGjB,OAAO,EAAEgB,EAAE,GAAGC,SAAS,CAACd,MAAM,EAAEa,EAAE,EAAE,EAAE;IAC/D,IAAIZ,CAAC,GAAGa,SAAS,CAACD,EAAE,CAAC;IACrBZ,CAAC,CAACC,MAAM,GAAG,UAAU;EACzB;EACAP,MAAM,GAAGA,MAAM,CAACQ,MAAM,CAACN,OAAO,CAAC;EAC/B,OAAOZ,mBAAmB,CAACU,MAAM,CAAC;AACtC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}