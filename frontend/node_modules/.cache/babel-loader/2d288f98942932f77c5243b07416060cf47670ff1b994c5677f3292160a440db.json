{"ast":null,"code":"'use strict';\n\nvar common = require('../common');\nvar Type = require('../type');\nfunction isHexCode(c) {\n  return 0x30 /* 0 */ <= c && c <= 0x39 /* 9 */ || 0x41 /* A */ <= c && c <= 0x46 /* F */ || 0x61 /* a */ <= c && c <= 0x66 /* f */;\n}\nfunction isOctCode(c) {\n  return 0x30 /* 0 */ <= c && c <= 0x37 /* 7 */;\n}\nfunction isDecCode(c) {\n  return 0x30 /* 0 */ <= c && c <= 0x39 /* 9 */;\n}\nfunction resolveYamlInteger(data) {\n  if (data === null) return false;\n  var max = data.length,\n    index = 0,\n    hasDigits = false,\n    ch;\n  if (!max) return false;\n  ch = data[index];\n\n  // sign\n  if (ch === '-' || ch === '+') {\n    ch = data[++index];\n  }\n  if (ch === '0') {\n    // 0\n    if (index + 1 === max) return true;\n    ch = data[++index];\n\n    // base 2, base 8, base 16\n\n    if (ch === 'b') {\n      // base 2\n      index++;\n      for (; index < max; index++) {\n        ch = data[index];\n        if (ch === '_') continue;\n        if (ch !== '0' && ch !== '1') return false;\n        hasDigits = true;\n      }\n      return hasDigits && ch !== '_';\n    }\n    if (ch === 'x') {\n      // base 16\n      index++;\n      for (; index < max; index++) {\n        ch = data[index];\n        if (ch === '_') continue;\n        if (!isHexCode(data.charCodeAt(index))) return false;\n        hasDigits = true;\n      }\n      return hasDigits && ch !== '_';\n    }\n    if (ch === 'o') {\n      // base 8\n      index++;\n      for (; index < max; index++) {\n        ch = data[index];\n        if (ch === '_') continue;\n        if (!isOctCode(data.charCodeAt(index))) return false;\n        hasDigits = true;\n      }\n      return hasDigits && ch !== '_';\n    }\n  }\n\n  // base 10 (except 0)\n\n  // value should not start with `_`;\n  if (ch === '_') return false;\n  for (; index < max; index++) {\n    ch = data[index];\n    if (ch === '_') continue;\n    if (!isDecCode(data.charCodeAt(index))) {\n      return false;\n    }\n    hasDigits = true;\n  }\n\n  // Should have digits and should not end with `_`\n  if (!hasDigits || ch === '_') return false;\n  return true;\n}\nfunction constructYamlInteger(data) {\n  var value = data,\n    sign = 1,\n    ch;\n  if (value.indexOf('_') !== -1) {\n    value = value.replace(/_/g, '');\n  }\n  ch = value[0];\n  if (ch === '-' || ch === '+') {\n    if (ch === '-') sign = -1;\n    value = value.slice(1);\n    ch = value[0];\n  }\n  if (value === '0') return 0;\n  if (ch === '0') {\n    if (value[1] === 'b') return sign * parseInt(value.slice(2), 2);\n    if (value[1] === 'x') return sign * parseInt(value.slice(2), 16);\n    if (value[1] === 'o') return sign * parseInt(value.slice(2), 8);\n  }\n  return sign * parseInt(value, 10);\n}\nfunction isInteger(object) {\n  return Object.prototype.toString.call(object) === '[object Number]' && object % 1 === 0 && !common.isNegativeZero(object);\n}\nmodule.exports = new Type('tag:yaml.org,2002:int', {\n  kind: 'scalar',\n  resolve: resolveYamlInteger,\n  construct: constructYamlInteger,\n  predicate: isInteger,\n  represent: {\n    binary: function (obj) {\n      return obj >= 0 ? '0b' + obj.toString(2) : '-0b' + obj.toString(2).slice(1);\n    },\n    octal: function (obj) {\n      return obj >= 0 ? '0o' + obj.toString(8) : '-0o' + obj.toString(8).slice(1);\n    },\n    decimal: function (obj) {\n      return obj.toString(10);\n    },\n    /* eslint-disable max-len */\n    hexadecimal: function (obj) {\n      return obj >= 0 ? '0x' + obj.toString(16).toUpperCase() : '-0x' + obj.toString(16).toUpperCase().slice(1);\n    }\n  },\n  defaultStyle: 'decimal',\n  styleAliases: {\n    binary: [2, 'bin'],\n    octal: [8, 'oct'],\n    decimal: [10, 'dec'],\n    hexadecimal: [16, 'hex']\n  }\n});","map":{"version":3,"names":["common","require","Type","isHexCode","c","isOctCode","isDecCode","resolveYamlInteger","data","max","length","index","hasDigits","ch","charCodeAt","constructYamlInteger","value","sign","indexOf","replace","slice","parseInt","isInteger","object","Object","prototype","toString","call","isNegativeZero","module","exports","kind","resolve","construct","predicate","represent","binary","obj","octal","decimal","hexadecimal","toUpperCase","defaultStyle","styleAliases"],"sources":["C:/Users/chest/OneDrive/Documentos/GitHub/HackUPC/frontend/node_modules/@eslint/eslintrc/node_modules/js-yaml/lib/type/int.js"],"sourcesContent":["'use strict';\n\nvar common = require('../common');\nvar Type   = require('../type');\n\nfunction isHexCode(c) {\n  return ((0x30/* 0 */ <= c) && (c <= 0x39/* 9 */)) ||\n         ((0x41/* A */ <= c) && (c <= 0x46/* F */)) ||\n         ((0x61/* a */ <= c) && (c <= 0x66/* f */));\n}\n\nfunction isOctCode(c) {\n  return ((0x30/* 0 */ <= c) && (c <= 0x37/* 7 */));\n}\n\nfunction isDecCode(c) {\n  return ((0x30/* 0 */ <= c) && (c <= 0x39/* 9 */));\n}\n\nfunction resolveYamlInteger(data) {\n  if (data === null) return false;\n\n  var max = data.length,\n      index = 0,\n      hasDigits = false,\n      ch;\n\n  if (!max) return false;\n\n  ch = data[index];\n\n  // sign\n  if (ch === '-' || ch === '+') {\n    ch = data[++index];\n  }\n\n  if (ch === '0') {\n    // 0\n    if (index + 1 === max) return true;\n    ch = data[++index];\n\n    // base 2, base 8, base 16\n\n    if (ch === 'b') {\n      // base 2\n      index++;\n\n      for (; index < max; index++) {\n        ch = data[index];\n        if (ch === '_') continue;\n        if (ch !== '0' && ch !== '1') return false;\n        hasDigits = true;\n      }\n      return hasDigits && ch !== '_';\n    }\n\n\n    if (ch === 'x') {\n      // base 16\n      index++;\n\n      for (; index < max; index++) {\n        ch = data[index];\n        if (ch === '_') continue;\n        if (!isHexCode(data.charCodeAt(index))) return false;\n        hasDigits = true;\n      }\n      return hasDigits && ch !== '_';\n    }\n\n\n    if (ch === 'o') {\n      // base 8\n      index++;\n\n      for (; index < max; index++) {\n        ch = data[index];\n        if (ch === '_') continue;\n        if (!isOctCode(data.charCodeAt(index))) return false;\n        hasDigits = true;\n      }\n      return hasDigits && ch !== '_';\n    }\n  }\n\n  // base 10 (except 0)\n\n  // value should not start with `_`;\n  if (ch === '_') return false;\n\n  for (; index < max; index++) {\n    ch = data[index];\n    if (ch === '_') continue;\n    if (!isDecCode(data.charCodeAt(index))) {\n      return false;\n    }\n    hasDigits = true;\n  }\n\n  // Should have digits and should not end with `_`\n  if (!hasDigits || ch === '_') return false;\n\n  return true;\n}\n\nfunction constructYamlInteger(data) {\n  var value = data, sign = 1, ch;\n\n  if (value.indexOf('_') !== -1) {\n    value = value.replace(/_/g, '');\n  }\n\n  ch = value[0];\n\n  if (ch === '-' || ch === '+') {\n    if (ch === '-') sign = -1;\n    value = value.slice(1);\n    ch = value[0];\n  }\n\n  if (value === '0') return 0;\n\n  if (ch === '0') {\n    if (value[1] === 'b') return sign * parseInt(value.slice(2), 2);\n    if (value[1] === 'x') return sign * parseInt(value.slice(2), 16);\n    if (value[1] === 'o') return sign * parseInt(value.slice(2), 8);\n  }\n\n  return sign * parseInt(value, 10);\n}\n\nfunction isInteger(object) {\n  return (Object.prototype.toString.call(object)) === '[object Number]' &&\n         (object % 1 === 0 && !common.isNegativeZero(object));\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:int', {\n  kind: 'scalar',\n  resolve: resolveYamlInteger,\n  construct: constructYamlInteger,\n  predicate: isInteger,\n  represent: {\n    binary:      function (obj) { return obj >= 0 ? '0b' + obj.toString(2) : '-0b' + obj.toString(2).slice(1); },\n    octal:       function (obj) { return obj >= 0 ? '0o'  + obj.toString(8) : '-0o'  + obj.toString(8).slice(1); },\n    decimal:     function (obj) { return obj.toString(10); },\n    /* eslint-disable max-len */\n    hexadecimal: function (obj) { return obj >= 0 ? '0x' + obj.toString(16).toUpperCase() :  '-0x' + obj.toString(16).toUpperCase().slice(1); }\n  },\n  defaultStyle: 'decimal',\n  styleAliases: {\n    binary:      [ 2,  'bin' ],\n    octal:       [ 8,  'oct' ],\n    decimal:     [ 10, 'dec' ],\n    hexadecimal: [ 16, 'hex' ]\n  }\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}