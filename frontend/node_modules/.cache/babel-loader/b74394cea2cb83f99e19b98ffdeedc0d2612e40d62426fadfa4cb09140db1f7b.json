{"ast":null,"code":"var WHOLE_PIXEL_VALUE = /(?:^|\\s|\\()(-?\\d+)px/;\nvar plugin = {\n  level1: {\n    value: function unit(_name, value, options) {\n      if (!WHOLE_PIXEL_VALUE.test(value)) {\n        return value;\n      }\n      return value.replace(WHOLE_PIXEL_VALUE, function (match, val) {\n        var newValue;\n        var intVal = parseInt(val);\n        if (intVal === 0) {\n          return match;\n        }\n        if (options.compatibility.properties.shorterLengthUnits && options.compatibility.units.pt && intVal * 3 % 4 === 0) {\n          newValue = intVal * 3 / 4 + 'pt';\n        }\n        if (options.compatibility.properties.shorterLengthUnits && options.compatibility.units.pc && intVal % 16 === 0) {\n          newValue = intVal / 16 + 'pc';\n        }\n        if (options.compatibility.properties.shorterLengthUnits && options.compatibility.units.in && intVal % 96 === 0) {\n          newValue = intVal / 96 + 'in';\n        }\n        if (newValue) {\n          newValue = match.substring(0, match.indexOf(val)) + newValue;\n        }\n        return newValue && newValue.length < match.length ? newValue : match;\n      });\n    }\n  }\n};\nmodule.exports = plugin;","map":{"version":3,"names":["WHOLE_PIXEL_VALUE","plugin","level1","value","unit","_name","options","test","replace","match","val","newValue","intVal","parseInt","compatibility","properties","shorterLengthUnits","units","pt","pc","in","substring","indexOf","length","module","exports"],"sources":["C:/Users/chest/OneDrive/Documentos/GitHub/HackUPC/frontend/node_modules/clean-css/lib/optimizer/level-1/value-optimizers/unit.js"],"sourcesContent":["var WHOLE_PIXEL_VALUE = /(?:^|\\s|\\()(-?\\d+)px/;\n\nvar plugin = {\n  level1: {\n    value: function unit(_name, value, options) {\n      if (!WHOLE_PIXEL_VALUE.test(value)) {\n        return value;\n      }\n\n      return value.replace(WHOLE_PIXEL_VALUE, function(match, val) {\n        var newValue;\n        var intVal = parseInt(val);\n\n        if (intVal === 0) {\n          return match;\n        }\n\n        if (options.compatibility.properties.shorterLengthUnits\n          && options.compatibility.units.pt\n          && intVal * 3 % 4 === 0) {\n          newValue = intVal * 3 / 4 + 'pt';\n        }\n\n        if (options.compatibility.properties.shorterLengthUnits\n          && options.compatibility.units.pc\n          && intVal % 16 === 0) {\n          newValue = intVal / 16 + 'pc';\n        }\n\n        if (options.compatibility.properties.shorterLengthUnits\n          && options.compatibility.units.in\n          && intVal % 96 === 0) {\n          newValue = intVal / 96 + 'in';\n        }\n\n        if (newValue) {\n          newValue = match.substring(0, match.indexOf(val)) + newValue;\n        }\n\n        return newValue && newValue.length < match.length ? newValue : match;\n      });\n    }\n  }\n};\n\nmodule.exports = plugin;\n"],"mappings":"AAAA,IAAIA,iBAAiB,GAAG,sBAAsB;AAE9C,IAAIC,MAAM,GAAG;EACXC,MAAM,EAAE;IACNC,KAAK,EAAE,SAASC,IAAIA,CAACC,KAAK,EAAEF,KAAK,EAAEG,OAAO,EAAE;MAC1C,IAAI,CAACN,iBAAiB,CAACO,IAAI,CAACJ,KAAK,CAAC,EAAE;QAClC,OAAOA,KAAK;MACd;MAEA,OAAOA,KAAK,CAACK,OAAO,CAACR,iBAAiB,EAAE,UAASS,KAAK,EAAEC,GAAG,EAAE;QAC3D,IAAIC,QAAQ;QACZ,IAAIC,MAAM,GAAGC,QAAQ,CAACH,GAAG,CAAC;QAE1B,IAAIE,MAAM,KAAK,CAAC,EAAE;UAChB,OAAOH,KAAK;QACd;QAEA,IAAIH,OAAO,CAACQ,aAAa,CAACC,UAAU,CAACC,kBAAkB,IAClDV,OAAO,CAACQ,aAAa,CAACG,KAAK,CAACC,EAAE,IAC9BN,MAAM,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE;UACzBD,QAAQ,GAAGC,MAAM,GAAG,CAAC,GAAG,CAAC,GAAG,IAAI;QAClC;QAEA,IAAIN,OAAO,CAACQ,aAAa,CAACC,UAAU,CAACC,kBAAkB,IAClDV,OAAO,CAACQ,aAAa,CAACG,KAAK,CAACE,EAAE,IAC9BP,MAAM,GAAG,EAAE,KAAK,CAAC,EAAE;UACtBD,QAAQ,GAAGC,MAAM,GAAG,EAAE,GAAG,IAAI;QAC/B;QAEA,IAAIN,OAAO,CAACQ,aAAa,CAACC,UAAU,CAACC,kBAAkB,IAClDV,OAAO,CAACQ,aAAa,CAACG,KAAK,CAACG,EAAE,IAC9BR,MAAM,GAAG,EAAE,KAAK,CAAC,EAAE;UACtBD,QAAQ,GAAGC,MAAM,GAAG,EAAE,GAAG,IAAI;QAC/B;QAEA,IAAID,QAAQ,EAAE;UACZA,QAAQ,GAAGF,KAAK,CAACY,SAAS,CAAC,CAAC,EAAEZ,KAAK,CAACa,OAAO,CAACZ,GAAG,CAAC,CAAC,GAAGC,QAAQ;QAC9D;QAEA,OAAOA,QAAQ,IAAIA,QAAQ,CAACY,MAAM,GAAGd,KAAK,CAACc,MAAM,GAAGZ,QAAQ,GAAGF,KAAK;MACtE,CAAC,CAAC;IACJ;EACF;AACF,CAAC;AAEDe,MAAM,CAACC,OAAO,GAAGxB,MAAM","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}