{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.intRange = void 0;\nconst codegen_1 = require(\"../../compile/codegen\");\nconst timestamp_1 = require(\"../../runtime/timestamp\");\nconst util_1 = require(\"../../compile/util\");\nconst metadata_1 = require(\"./metadata\");\nconst error_1 = require(\"./error\");\nexports.intRange = {\n  int8: [-128, 127, 3],\n  uint8: [0, 255, 3],\n  int16: [-32768, 32767, 5],\n  uint16: [0, 65535, 5],\n  int32: [-2147483648, 2147483647, 10],\n  uint32: [0, 4294967295, 10]\n};\nconst error = {\n  message: cxt => (0, error_1.typeErrorMessage)(cxt, cxt.schema),\n  params: cxt => (0, error_1.typeErrorParams)(cxt, cxt.schema)\n};\nfunction timestampCode(cxt) {\n  const {\n    gen,\n    data,\n    it\n  } = cxt;\n  const {\n    timestamp,\n    allowDate\n  } = it.opts;\n  if (timestamp === \"date\") return (0, codegen_1._)`${data} instanceof Date `;\n  const vts = (0, util_1.useFunc)(gen, timestamp_1.default);\n  const allowDateArg = allowDate ? (0, codegen_1._)`, true` : codegen_1.nil;\n  const validString = (0, codegen_1._)`typeof ${data} == \"string\" && ${vts}(${data}${allowDateArg})`;\n  return timestamp === \"string\" ? validString : (0, codegen_1.or)((0, codegen_1._)`${data} instanceof Date`, validString);\n}\nconst def = {\n  keyword: \"type\",\n  schemaType: \"string\",\n  error,\n  code(cxt) {\n    (0, metadata_1.checkMetadata)(cxt);\n    const {\n      data,\n      schema,\n      parentSchema,\n      it\n    } = cxt;\n    let cond;\n    switch (schema) {\n      case \"boolean\":\n      case \"string\":\n        cond = (0, codegen_1._)`typeof ${data} == ${schema}`;\n        break;\n      case \"timestamp\":\n        {\n          cond = timestampCode(cxt);\n          break;\n        }\n      case \"float32\":\n      case \"float64\":\n        cond = (0, codegen_1._)`typeof ${data} == \"number\"`;\n        break;\n      default:\n        {\n          const sch = schema;\n          cond = (0, codegen_1._)`typeof ${data} == \"number\" && isFinite(${data}) && !(${data} % 1)`;\n          if (!it.opts.int32range && (sch === \"int32\" || sch === \"uint32\")) {\n            if (sch === \"uint32\") cond = (0, codegen_1._)`${cond} && ${data} >= 0`;\n          } else {\n            const [min, max] = exports.intRange[sch];\n            cond = (0, codegen_1._)`${cond} && ${data} >= ${min} && ${data} <= ${max}`;\n          }\n        }\n    }\n    cxt.pass(parentSchema.nullable ? (0, codegen_1.or)((0, codegen_1._)`${data} === null`, cond) : cond);\n  }\n};\nexports.default = def;","map":{"version":3,"names":["codegen_1","require","timestamp_1","util_1","metadata_1","error_1","exports","intRange","int8","uint8","int16","uint16","int32","uint32","error","message","cxt","typeErrorMessage","schema","params","typeErrorParams","timestampCode","gen","data","it","timestamp","allowDate","opts","_","vts","useFunc","default","allowDateArg","nil","validString","or","def","keyword","schemaType","code","checkMetadata","parentSchema","cond","sch","int32range","min","max","pass","nullable"],"sources":["C:\\Users\\chest\\OneDrive\\Documentos\\GitHub\\HackUPC\\frontend\\node_modules\\ajv-formats\\node_modules\\ajv\\lib\\vocabularies\\jtd\\type.ts"],"sourcesContent":["import type {CodeKeywordDefinition, KeywordErrorDefinition} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, nil, or, Code} from \"../../compile/codegen\"\nimport validTimestamp from \"../../runtime/timestamp\"\nimport {useFunc} from \"../../compile/util\"\nimport {checkMetadata} from \"./metadata\"\nimport {typeErrorMessage, typeErrorParams, _JTDTypeError} from \"./error\"\n\nexport type JTDTypeError = _JTDTypeError<\"type\", JTDType, JTDType>\n\nexport type IntType = \"int8\" | \"uint8\" | \"int16\" | \"uint16\" | \"int32\" | \"uint32\"\n\nexport const intRange: {[T in IntType]: [number, number, number]} = {\n  int8: [-128, 127, 3],\n  uint8: [0, 255, 3],\n  int16: [-32768, 32767, 5],\n  uint16: [0, 65535, 5],\n  int32: [-2147483648, 2147483647, 10],\n  uint32: [0, 4294967295, 10],\n}\n\nexport type JTDType = \"boolean\" | \"string\" | \"timestamp\" | \"float32\" | \"float64\" | IntType\n\nconst error: KeywordErrorDefinition = {\n  message: (cxt) => typeErrorMessage(cxt, cxt.schema),\n  params: (cxt) => typeErrorParams(cxt, cxt.schema),\n}\n\nfunction timestampCode(cxt: KeywordCxt): Code {\n  const {gen, data, it} = cxt\n  const {timestamp, allowDate} = it.opts\n  if (timestamp === \"date\") return _`${data} instanceof Date `\n  const vts = useFunc(gen, validTimestamp)\n  const allowDateArg = allowDate ? _`, true` : nil\n  const validString = _`typeof ${data} == \"string\" && ${vts}(${data}${allowDateArg})`\n  return timestamp === \"string\" ? validString : or(_`${data} instanceof Date`, validString)\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"type\",\n  schemaType: \"string\",\n  error,\n  code(cxt: KeywordCxt) {\n    checkMetadata(cxt)\n    const {data, schema, parentSchema, it} = cxt\n    let cond: Code\n    switch (schema) {\n      case \"boolean\":\n      case \"string\":\n        cond = _`typeof ${data} == ${schema}`\n        break\n      case \"timestamp\": {\n        cond = timestampCode(cxt)\n        break\n      }\n      case \"float32\":\n      case \"float64\":\n        cond = _`typeof ${data} == \"number\"`\n        break\n      default: {\n        const sch = schema as IntType\n        cond = _`typeof ${data} == \"number\" && isFinite(${data}) && !(${data} % 1)`\n        if (!it.opts.int32range && (sch === \"int32\" || sch === \"uint32\")) {\n          if (sch === \"uint32\") cond = _`${cond} && ${data} >= 0`\n        } else {\n          const [min, max] = intRange[sch]\n          cond = _`${cond} && ${data} >= ${min} && ${data} <= ${max}`\n        }\n      }\n    }\n    cxt.pass(parentSchema.nullable ? or(_`${data} === null`, cond) : cond)\n  },\n}\n\nexport default def\n"],"mappings":";;;;;;AAEA,MAAAA,SAAA,GAAAC,OAAA;AACA,MAAAC,WAAA,GAAAD,OAAA;AACA,MAAAE,MAAA,GAAAF,OAAA;AACA,MAAAG,UAAA,GAAAH,OAAA;AACA,MAAAI,OAAA,GAAAJ,OAAA;AAMaK,OAAA,CAAAC,QAAQ,GAA+C;EAClEC,IAAI,EAAE,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;EACpBC,KAAK,EAAE,CAAC,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC;EAClBC,KAAK,EAAE,CAAC,CAAC,KAAK,EAAE,KAAK,EAAE,CAAC,CAAC;EACzBC,MAAM,EAAE,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC;EACrBC,KAAK,EAAE,CAAC,CAAC,UAAU,EAAE,UAAU,EAAE,EAAE,CAAC;EACpCC,MAAM,EAAE,CAAC,CAAC,EAAE,UAAU,EAAE,EAAE;CAC3B;AAID,MAAMC,KAAK,GAA2B;EACpCC,OAAO,EAAGC,GAAG,IAAK,IAAAX,OAAA,CAAAY,gBAAgB,EAACD,GAAG,EAAEA,GAAG,CAACE,MAAM,CAAC;EACnDC,MAAM,EAAGH,GAAG,IAAK,IAAAX,OAAA,CAAAe,eAAe,EAACJ,GAAG,EAAEA,GAAG,CAACE,MAAM;CACjD;AAED,SAASG,aAAaA,CAACL,GAAe;EACpC,MAAM;IAACM,GAAG;IAAEC,IAAI;IAAEC;EAAE,CAAC,GAAGR,GAAG;EAC3B,MAAM;IAACS,SAAS;IAAEC;EAAS,CAAC,GAAGF,EAAE,CAACG,IAAI;EACtC,IAAIF,SAAS,KAAK,MAAM,EAAE,OAAO,IAAAzB,SAAA,CAAA4B,CAAC,IAAGL,IAAI,mBAAmB;EAC5D,MAAMM,GAAG,GAAG,IAAA1B,MAAA,CAAA2B,OAAO,EAACR,GAAG,EAAEpB,WAAA,CAAA6B,OAAc,CAAC;EACxC,MAAMC,YAAY,GAAGN,SAAS,GAAG,IAAA1B,SAAA,CAAA4B,CAAC,SAAQ,GAAG5B,SAAA,CAAAiC,GAAG;EAChD,MAAMC,WAAW,GAAG,IAAAlC,SAAA,CAAA4B,CAAC,WAAUL,IAAI,mBAAmBM,GAAG,IAAIN,IAAI,GAAGS,YAAY,GAAG;EACnF,OAAOP,SAAS,KAAK,QAAQ,GAAGS,WAAW,GAAG,IAAAlC,SAAA,CAAAmC,EAAE,EAAC,IAAAnC,SAAA,CAAA4B,CAAC,IAAGL,IAAI,kBAAkB,EAAEW,WAAW,CAAC;AAC3F;AAEA,MAAME,GAAG,GAA0B;EACjCC,OAAO,EAAE,MAAM;EACfC,UAAU,EAAE,QAAQ;EACpBxB,KAAK;EACLyB,IAAIA,CAACvB,GAAe;IAClB,IAAAZ,UAAA,CAAAoC,aAAa,EAACxB,GAAG,CAAC;IAClB,MAAM;MAACO,IAAI;MAAEL,MAAM;MAAEuB,YAAY;MAAEjB;IAAE,CAAC,GAAGR,GAAG;IAC5C,IAAI0B,IAAU;IACd,QAAQxB,MAAM;MACZ,KAAK,SAAS;MACd,KAAK,QAAQ;QACXwB,IAAI,GAAG,IAAA1C,SAAA,CAAA4B,CAAC,WAAUL,IAAI,OAAOL,MAAM,EAAE;QACrC;MACF,KAAK,WAAW;QAAE;UAChBwB,IAAI,GAAGrB,aAAa,CAACL,GAAG,CAAC;UACzB;QACF;MACA,KAAK,SAAS;MACd,KAAK,SAAS;QACZ0B,IAAI,GAAG,IAAA1C,SAAA,CAAA4B,CAAC,WAAUL,IAAI,cAAc;QACpC;MACF;QAAS;UACP,MAAMoB,GAAG,GAAGzB,MAAiB;UAC7BwB,IAAI,GAAG,IAAA1C,SAAA,CAAA4B,CAAC,WAAUL,IAAI,4BAA4BA,IAAI,UAAUA,IAAI,OAAO;UAC3E,IAAI,CAACC,EAAE,CAACG,IAAI,CAACiB,UAAU,KAAKD,GAAG,KAAK,OAAO,IAAIA,GAAG,KAAK,QAAQ,CAAC,EAAE;YAChE,IAAIA,GAAG,KAAK,QAAQ,EAAED,IAAI,GAAG,IAAA1C,SAAA,CAAA4B,CAAC,IAAGc,IAAI,OAAOnB,IAAI,OAAO;UACzD,CAAC,MAAM;YACL,MAAM,CAACsB,GAAG,EAAEC,GAAG,CAAC,GAAGxC,OAAA,CAAAC,QAAQ,CAACoC,GAAG,CAAC;YAChCD,IAAI,GAAG,IAAA1C,SAAA,CAAA4B,CAAC,IAAGc,IAAI,OAAOnB,IAAI,OAAOsB,GAAG,OAAOtB,IAAI,OAAOuB,GAAG,EAAE;UAC7D;QACF;IACF;IACA9B,GAAG,CAAC+B,IAAI,CAACN,YAAY,CAACO,QAAQ,GAAG,IAAAhD,SAAA,CAAAmC,EAAE,EAAC,IAAAnC,SAAA,CAAA4B,CAAC,IAAGL,IAAI,WAAW,EAAEmB,IAAI,CAAC,GAAGA,IAAI,CAAC;EACxE;CACD;AAEDpC,OAAA,CAAAyB,OAAA,GAAeK,GAAG","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}