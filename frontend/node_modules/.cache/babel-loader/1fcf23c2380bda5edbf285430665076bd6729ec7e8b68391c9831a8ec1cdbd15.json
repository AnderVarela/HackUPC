{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _helperPluginUtils = require(\"@babel/helper-plugin-utils\");\nvar _pluginSyntaxNullishCoalescingOperator = require(\"@babel/plugin-syntax-nullish-coalescing-operator\");\nvar _core = require(\"@babel/core\");\nvar _default = (0, _helperPluginUtils.declare)((api, {\n  loose = false\n}) => {\n  var _api$assumption;\n  api.assertVersion(7);\n  const noDocumentAll = (_api$assumption = api.assumption(\"noDocumentAll\")) != null ? _api$assumption : loose;\n  return {\n    name: \"proposal-nullish-coalescing-operator\",\n    inherits: _pluginSyntaxNullishCoalescingOperator.default,\n    visitor: {\n      LogicalExpression(path) {\n        const {\n          node,\n          scope\n        } = path;\n        if (node.operator !== \"??\") {\n          return;\n        }\n        let ref;\n        let assignment;\n        if (scope.isStatic(node.left)) {\n          ref = node.left;\n          assignment = _core.types.cloneNode(node.left);\n        } else if (scope.path.isPattern()) {\n          path.replaceWith(_core.template.statement.ast`(() => ${path.node})()`);\n          return;\n        } else {\n          ref = scope.generateUidIdentifierBasedOnNode(node.left);\n          scope.push({\n            id: _core.types.cloneNode(ref)\n          });\n          assignment = _core.types.assignmentExpression(\"=\", ref, node.left);\n        }\n        path.replaceWith(_core.types.conditionalExpression(noDocumentAll ? _core.types.binaryExpression(\"!=\", assignment, _core.types.nullLiteral()) : _core.types.logicalExpression(\"&&\", _core.types.binaryExpression(\"!==\", assignment, _core.types.nullLiteral()), _core.types.binaryExpression(\"!==\", _core.types.cloneNode(ref), scope.buildUndefinedNode())), _core.types.cloneNode(ref), node.right));\n      }\n    }\n  };\n});\nexports.default = _default;","map":{"version":3,"names":["Object","defineProperty","exports","value","default","_helperPluginUtils","require","_pluginSyntaxNullishCoalescingOperator","_core","_default","declare","api","loose","_api$assumption","assertVersion","noDocumentAll","assumption","name","inherits","visitor","LogicalExpression","path","node","scope","operator","ref","assignment","isStatic","left","types","cloneNode","isPattern","replaceWith","template","statement","ast","generateUidIdentifierBasedOnNode","push","id","assignmentExpression","conditionalExpression","binaryExpression","nullLiteral","logicalExpression","buildUndefinedNode","right"],"sources":["C:/Users/chest/OneDrive/Documentos/GitHub/HackUPC/frontend/node_modules/@babel/plugin-proposal-nullish-coalescing-operator/lib/index.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _helperPluginUtils = require(\"@babel/helper-plugin-utils\");\n\nvar _pluginSyntaxNullishCoalescingOperator = require(\"@babel/plugin-syntax-nullish-coalescing-operator\");\n\nvar _core = require(\"@babel/core\");\n\nvar _default = (0, _helperPluginUtils.declare)((api, {\n  loose = false\n}) => {\n  var _api$assumption;\n\n  api.assertVersion(7);\n  const noDocumentAll = (_api$assumption = api.assumption(\"noDocumentAll\")) != null ? _api$assumption : loose;\n  return {\n    name: \"proposal-nullish-coalescing-operator\",\n    inherits: _pluginSyntaxNullishCoalescingOperator.default,\n    visitor: {\n      LogicalExpression(path) {\n        const {\n          node,\n          scope\n        } = path;\n\n        if (node.operator !== \"??\") {\n          return;\n        }\n\n        let ref;\n        let assignment;\n\n        if (scope.isStatic(node.left)) {\n          ref = node.left;\n          assignment = _core.types.cloneNode(node.left);\n        } else if (scope.path.isPattern()) {\n          path.replaceWith(_core.template.statement.ast`(() => ${path.node})()`);\n          return;\n        } else {\n          ref = scope.generateUidIdentifierBasedOnNode(node.left);\n          scope.push({\n            id: _core.types.cloneNode(ref)\n          });\n          assignment = _core.types.assignmentExpression(\"=\", ref, node.left);\n        }\n\n        path.replaceWith(_core.types.conditionalExpression(noDocumentAll ? _core.types.binaryExpression(\"!=\", assignment, _core.types.nullLiteral()) : _core.types.logicalExpression(\"&&\", _core.types.binaryExpression(\"!==\", assignment, _core.types.nullLiteral()), _core.types.binaryExpression(\"!==\", _core.types.cloneNode(ref), scope.buildUndefinedNode())), _core.types.cloneNode(ref), node.right));\n      }\n\n    }\n  };\n});\n\nexports.default = _default;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}