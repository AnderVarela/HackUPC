{"ast":null,"code":"'use strict';\n\nconst {\n  deserialize\n} = require('./deserialize.js');\nconst {\n  serialize\n} = require('./serialize.js');\n\n/**\n * @typedef {Array<string,any>} Record a type representation\n */\n\n/**\n * Returns an array of serialized Records.\n * @param {any} any a serializable value.\n * @param {{transfer?: any[], json?: boolean, lossy?: boolean}?} options an object with\n * a transfer option (ignored when polyfilled) and/or non standard fields that\n * fallback to the polyfill if present.\n * @returns {Record[]}\n */\nObject.defineProperty(exports, '__esModule', {\n  value: true\n}).default = typeof structuredClone === \"function\" ? /* c8 ignore start */\n(any, options) => options && ('json' in options || 'lossy' in options) ? deserialize(serialize(any, options)) : structuredClone(any) : (any, options) => deserialize(serialize(any, options));\n/* c8 ignore stop */\n\nexports.deserialize = deserialize;\nexports.serialize = serialize;","map":{"version":3,"names":["deserialize","require","serialize","Object","defineProperty","exports","value","default","structuredClone","any","options"],"sources":["C:/Users/chest/OneDrive/Documentos/GitHub/HackUPC/frontend/node_modules/@ungap/structured-clone/cjs/index.js"],"sourcesContent":["'use strict';\nconst {deserialize} = require('./deserialize.js');\nconst {serialize} = require('./serialize.js');\n\n/**\n * @typedef {Array<string,any>} Record a type representation\n */\n\n/**\n * Returns an array of serialized Records.\n * @param {any} any a serializable value.\n * @param {{transfer?: any[], json?: boolean, lossy?: boolean}?} options an object with\n * a transfer option (ignored when polyfilled) and/or non standard fields that\n * fallback to the polyfill if present.\n * @returns {Record[]}\n */\nObject.defineProperty(exports, '__esModule', {value: true}).default = typeof structuredClone === \"function\" ?\n  /* c8 ignore start */\n  (any, options) => (\n    options && ('json' in options || 'lossy' in options) ?\n      deserialize(serialize(any, options)) : structuredClone(any)\n  ) :\n  (any, options) => deserialize(serialize(any, options));\n  /* c8 ignore stop */\n\nexports.deserialize = deserialize;\nexports.serialize = serialize;\n"],"mappings":"AAAA,YAAY;;AACZ,MAAM;EAACA;AAAW,CAAC,GAAGC,OAAO,CAAC,kBAAkB,CAAC;AACjD,MAAM;EAACC;AAAS,CAAC,GAAGD,OAAO,CAAC,gBAAgB,CAAC;;AAE7C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAE,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAACC,KAAK,EAAE;AAAI,CAAC,CAAC,CAACC,OAAO,GAAG,OAAOC,eAAe,KAAK,UAAU,GACzG;AACA,CAACC,GAAG,EAAEC,OAAO,KACXA,OAAO,KAAK,MAAM,IAAIA,OAAO,IAAI,OAAO,IAAIA,OAAO,CAAC,GAClDV,WAAW,CAACE,SAAS,CAACO,GAAG,EAAEC,OAAO,CAAC,CAAC,GAAGF,eAAe,CAACC,GAAG,CAC7D,GACD,CAACA,GAAG,EAAEC,OAAO,KAAKV,WAAW,CAACE,SAAS,CAACO,GAAG,EAAEC,OAAO,CAAC,CAAC;AACtD;;AAEFL,OAAO,CAACL,WAAW,GAAGA,WAAW;AACjCK,OAAO,CAACH,SAAS,GAAGA,SAAS","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}