{"ast":null,"code":"/*! (c) Andrea Giammarchi - ISC */\n\nimport { deserialize } from './deserialize.js';\nimport { serialize } from './serialize.js';\nconst {\n  parse: $parse,\n  stringify: $stringify\n} = JSON;\nconst options = {\n  json: true,\n  lossy: true\n};\n\n/**\n * Revive a previously stringified structured clone.\n * @param {string} str previously stringified data as string.\n * @returns {any} whatever was previously stringified as clone.\n */\nexport const parse = str => deserialize($parse(str));\n\n/**\n * Represent a structured clone value as string.\n * @param {any} any some clone-able value to stringify.\n * @returns {string} the value stringified.\n */\nexport const stringify = any => $stringify(serialize(any, options));","map":{"version":3,"names":["deserialize","serialize","parse","$parse","stringify","$stringify","JSON","options","json","lossy","str","any"],"sources":["C:/Users/chest/OneDrive/Documentos/GitHub/HackUPC/frontend/node_modules/@ungap/structured-clone/esm/json.js"],"sourcesContent":["/*! (c) Andrea Giammarchi - ISC */\n\nimport {deserialize} from './deserialize.js';\nimport {serialize} from './serialize.js';\n\nconst {parse: $parse, stringify: $stringify} = JSON;\nconst options = {json: true, lossy: true};\n\n/**\n * Revive a previously stringified structured clone.\n * @param {string} str previously stringified data as string.\n * @returns {any} whatever was previously stringified as clone.\n */\nexport const parse = str => deserialize($parse(str));\n\n/**\n * Represent a structured clone value as string.\n * @param {any} any some clone-able value to stringify.\n * @returns {string} the value stringified.\n */\nexport const stringify = any => $stringify(serialize(any, options));\n"],"mappings":"AAAA;;AAEA,SAAQA,WAAW,QAAO,kBAAkB;AAC5C,SAAQC,SAAS,QAAO,gBAAgB;AAExC,MAAM;EAACC,KAAK,EAAEC,MAAM;EAAEC,SAAS,EAAEC;AAAU,CAAC,GAAGC,IAAI;AACnD,MAAMC,OAAO,GAAG;EAACC,IAAI,EAAE,IAAI;EAAEC,KAAK,EAAE;AAAI,CAAC;;AAEzC;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMP,KAAK,GAAGQ,GAAG,IAAIV,WAAW,CAACG,MAAM,CAACO,GAAG,CAAC,CAAC;;AAEpD;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMN,SAAS,GAAGO,GAAG,IAAIN,UAAU,CAACJ,SAAS,CAACU,GAAG,EAAEJ,OAAO,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}