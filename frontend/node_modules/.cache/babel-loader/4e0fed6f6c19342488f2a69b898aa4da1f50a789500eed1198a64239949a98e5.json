{"ast":null,"code":"/**\n * @fileoverview The instance of Ajv validator.\n * @author Evgeny Poberezkin\n */\n\n//------------------------------------------------------------------------------\n// Requirements\n//------------------------------------------------------------------------------\n\nimport Ajv from \"ajv\";\n\n//-----------------------------------------------------------------------------\n// Helpers\n//-----------------------------------------------------------------------------\n\n/*\n * Copied from ajv/lib/refs/json-schema-draft-04.json\n * The MIT License (MIT)\n * Copyright (c) 2015-2017 Evgeny Poberezkin\n */\nconst metaSchema = {\n  id: \"http://json-schema.org/draft-04/schema#\",\n  $schema: \"http://json-schema.org/draft-04/schema#\",\n  description: \"Core schema meta-schema\",\n  definitions: {\n    schemaArray: {\n      type: \"array\",\n      minItems: 1,\n      items: {\n        $ref: \"#\"\n      }\n    },\n    positiveInteger: {\n      type: \"integer\",\n      minimum: 0\n    },\n    positiveIntegerDefault0: {\n      allOf: [{\n        $ref: \"#/definitions/positiveInteger\"\n      }, {\n        default: 0\n      }]\n    },\n    simpleTypes: {\n      enum: [\"array\", \"boolean\", \"integer\", \"null\", \"number\", \"object\", \"string\"]\n    },\n    stringArray: {\n      type: \"array\",\n      items: {\n        type: \"string\"\n      },\n      minItems: 1,\n      uniqueItems: true\n    }\n  },\n  type: \"object\",\n  properties: {\n    id: {\n      type: \"string\"\n    },\n    $schema: {\n      type: \"string\"\n    },\n    title: {\n      type: \"string\"\n    },\n    description: {\n      type: \"string\"\n    },\n    default: {},\n    multipleOf: {\n      type: \"number\",\n      minimum: 0,\n      exclusiveMinimum: true\n    },\n    maximum: {\n      type: \"number\"\n    },\n    exclusiveMaximum: {\n      type: \"boolean\",\n      default: false\n    },\n    minimum: {\n      type: \"number\"\n    },\n    exclusiveMinimum: {\n      type: \"boolean\",\n      default: false\n    },\n    maxLength: {\n      $ref: \"#/definitions/positiveInteger\"\n    },\n    minLength: {\n      $ref: \"#/definitions/positiveIntegerDefault0\"\n    },\n    pattern: {\n      type: \"string\",\n      format: \"regex\"\n    },\n    additionalItems: {\n      anyOf: [{\n        type: \"boolean\"\n      }, {\n        $ref: \"#\"\n      }],\n      default: {}\n    },\n    items: {\n      anyOf: [{\n        $ref: \"#\"\n      }, {\n        $ref: \"#/definitions/schemaArray\"\n      }],\n      default: {}\n    },\n    maxItems: {\n      $ref: \"#/definitions/positiveInteger\"\n    },\n    minItems: {\n      $ref: \"#/definitions/positiveIntegerDefault0\"\n    },\n    uniqueItems: {\n      type: \"boolean\",\n      default: false\n    },\n    maxProperties: {\n      $ref: \"#/definitions/positiveInteger\"\n    },\n    minProperties: {\n      $ref: \"#/definitions/positiveIntegerDefault0\"\n    },\n    required: {\n      $ref: \"#/definitions/stringArray\"\n    },\n    additionalProperties: {\n      anyOf: [{\n        type: \"boolean\"\n      }, {\n        $ref: \"#\"\n      }],\n      default: {}\n    },\n    definitions: {\n      type: \"object\",\n      additionalProperties: {\n        $ref: \"#\"\n      },\n      default: {}\n    },\n    properties: {\n      type: \"object\",\n      additionalProperties: {\n        $ref: \"#\"\n      },\n      default: {}\n    },\n    patternProperties: {\n      type: \"object\",\n      additionalProperties: {\n        $ref: \"#\"\n      },\n      default: {}\n    },\n    dependencies: {\n      type: \"object\",\n      additionalProperties: {\n        anyOf: [{\n          $ref: \"#\"\n        }, {\n          $ref: \"#/definitions/stringArray\"\n        }]\n      }\n    },\n    enum: {\n      type: \"array\",\n      minItems: 1,\n      uniqueItems: true\n    },\n    type: {\n      anyOf: [{\n        $ref: \"#/definitions/simpleTypes\"\n      }, {\n        type: \"array\",\n        items: {\n          $ref: \"#/definitions/simpleTypes\"\n        },\n        minItems: 1,\n        uniqueItems: true\n      }]\n    },\n    format: {\n      type: \"string\"\n    },\n    allOf: {\n      $ref: \"#/definitions/schemaArray\"\n    },\n    anyOf: {\n      $ref: \"#/definitions/schemaArray\"\n    },\n    oneOf: {\n      $ref: \"#/definitions/schemaArray\"\n    },\n    not: {\n      $ref: \"#\"\n    }\n  },\n  dependencies: {\n    exclusiveMaximum: [\"maximum\"],\n    exclusiveMinimum: [\"minimum\"]\n  },\n  default: {}\n};\n\n//------------------------------------------------------------------------------\n// Public Interface\n//------------------------------------------------------------------------------\n\nexport default ((additionalOptions = {}) => {\n  const ajv = new Ajv({\n    meta: false,\n    useDefaults: true,\n    validateSchema: false,\n    missingRefs: \"ignore\",\n    verbose: true,\n    schemaId: \"auto\",\n    ...additionalOptions\n  });\n  ajv.addMetaSchema(metaSchema);\n  // eslint-disable-next-line no-underscore-dangle\n  ajv._opts.defaultMeta = metaSchema.id;\n  return ajv;\n});","map":{"version":3,"names":["Ajv","metaSchema","id","$schema","description","definitions","schemaArray","type","minItems","items","$ref","positiveInteger","minimum","positiveIntegerDefault0","allOf","default","simpleTypes","enum","stringArray","uniqueItems","properties","title","multipleOf","exclusiveMinimum","maximum","exclusiveMaximum","maxLength","minLength","pattern","format","additionalItems","anyOf","maxItems","maxProperties","minProperties","required","additionalProperties","patternProperties","dependencies","oneOf","not","additionalOptions","ajv","meta","useDefaults","validateSchema","missingRefs","verbose","schemaId","addMetaSchema","_opts","defaultMeta"],"sources":["C:/Users/chest/OneDrive/Documentos/GitHub/HackUPC/frontend/node_modules/@eslint/eslintrc/lib/shared/ajv.js"],"sourcesContent":["/**\n * @fileoverview The instance of Ajv validator.\n * @author Evgeny Poberezkin\n */\n\n//------------------------------------------------------------------------------\n// Requirements\n//------------------------------------------------------------------------------\n\nimport Ajv from \"ajv\";\n\n//-----------------------------------------------------------------------------\n// Helpers\n//-----------------------------------------------------------------------------\n\n/*\n * Copied from ajv/lib/refs/json-schema-draft-04.json\n * The MIT License (MIT)\n * Copyright (c) 2015-2017 Evgeny Poberezkin\n */\nconst metaSchema = {\n    id: \"http://json-schema.org/draft-04/schema#\",\n    $schema: \"http://json-schema.org/draft-04/schema#\",\n    description: \"Core schema meta-schema\",\n    definitions: {\n        schemaArray: {\n            type: \"array\",\n            minItems: 1,\n            items: { $ref: \"#\" }\n        },\n        positiveInteger: {\n            type: \"integer\",\n            minimum: 0\n        },\n        positiveIntegerDefault0: {\n            allOf: [{ $ref: \"#/definitions/positiveInteger\" }, { default: 0 }]\n        },\n        simpleTypes: {\n            enum: [\"array\", \"boolean\", \"integer\", \"null\", \"number\", \"object\", \"string\"]\n        },\n        stringArray: {\n            type: \"array\",\n            items: { type: \"string\" },\n            minItems: 1,\n            uniqueItems: true\n        }\n    },\n    type: \"object\",\n    properties: {\n        id: {\n            type: \"string\"\n        },\n        $schema: {\n            type: \"string\"\n        },\n        title: {\n            type: \"string\"\n        },\n        description: {\n            type: \"string\"\n        },\n        default: { },\n        multipleOf: {\n            type: \"number\",\n            minimum: 0,\n            exclusiveMinimum: true\n        },\n        maximum: {\n            type: \"number\"\n        },\n        exclusiveMaximum: {\n            type: \"boolean\",\n            default: false\n        },\n        minimum: {\n            type: \"number\"\n        },\n        exclusiveMinimum: {\n            type: \"boolean\",\n            default: false\n        },\n        maxLength: { $ref: \"#/definitions/positiveInteger\" },\n        minLength: { $ref: \"#/definitions/positiveIntegerDefault0\" },\n        pattern: {\n            type: \"string\",\n            format: \"regex\"\n        },\n        additionalItems: {\n            anyOf: [\n                { type: \"boolean\" },\n                { $ref: \"#\" }\n            ],\n            default: { }\n        },\n        items: {\n            anyOf: [\n                { $ref: \"#\" },\n                { $ref: \"#/definitions/schemaArray\" }\n            ],\n            default: { }\n        },\n        maxItems: { $ref: \"#/definitions/positiveInteger\" },\n        minItems: { $ref: \"#/definitions/positiveIntegerDefault0\" },\n        uniqueItems: {\n            type: \"boolean\",\n            default: false\n        },\n        maxProperties: { $ref: \"#/definitions/positiveInteger\" },\n        minProperties: { $ref: \"#/definitions/positiveIntegerDefault0\" },\n        required: { $ref: \"#/definitions/stringArray\" },\n        additionalProperties: {\n            anyOf: [\n                { type: \"boolean\" },\n                { $ref: \"#\" }\n            ],\n            default: { }\n        },\n        definitions: {\n            type: \"object\",\n            additionalProperties: { $ref: \"#\" },\n            default: { }\n        },\n        properties: {\n            type: \"object\",\n            additionalProperties: { $ref: \"#\" },\n            default: { }\n        },\n        patternProperties: {\n            type: \"object\",\n            additionalProperties: { $ref: \"#\" },\n            default: { }\n        },\n        dependencies: {\n            type: \"object\",\n            additionalProperties: {\n                anyOf: [\n                    { $ref: \"#\" },\n                    { $ref: \"#/definitions/stringArray\" }\n                ]\n            }\n        },\n        enum: {\n            type: \"array\",\n            minItems: 1,\n            uniqueItems: true\n        },\n        type: {\n            anyOf: [\n                { $ref: \"#/definitions/simpleTypes\" },\n                {\n                    type: \"array\",\n                    items: { $ref: \"#/definitions/simpleTypes\" },\n                    minItems: 1,\n                    uniqueItems: true\n                }\n            ]\n        },\n        format: { type: \"string\" },\n        allOf: { $ref: \"#/definitions/schemaArray\" },\n        anyOf: { $ref: \"#/definitions/schemaArray\" },\n        oneOf: { $ref: \"#/definitions/schemaArray\" },\n        not: { $ref: \"#\" }\n    },\n    dependencies: {\n        exclusiveMaximum: [\"maximum\"],\n        exclusiveMinimum: [\"minimum\"]\n    },\n    default: { }\n};\n\n//------------------------------------------------------------------------------\n// Public Interface\n//------------------------------------------------------------------------------\n\nexport default (additionalOptions = {}) => {\n    const ajv = new Ajv({\n        meta: false,\n        useDefaults: true,\n        validateSchema: false,\n        missingRefs: \"ignore\",\n        verbose: true,\n        schemaId: \"auto\",\n        ...additionalOptions\n    });\n\n    ajv.addMetaSchema(metaSchema);\n    // eslint-disable-next-line no-underscore-dangle\n    ajv._opts.defaultMeta = metaSchema.id;\n\n    return ajv;\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}