{"ast":null,"code":"/*\nThis file is copied from https://github.com/nodejs/node/blob/v14.19.3/lib/internal/per_context/primordials.js\nunder the following license:\n\nCopyright Node.js contributors. All rights reserved.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to\ndeal in the Software without restriction, including without limitation the\nrights to use, copy, modify, merge, publish, distribute, sublicense, and/or\nsell copies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\nFROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\nIN THE SOFTWARE.\n*/\n\n'use strict';\n\n/* eslint-disable node-core/prefer-primordials */\n\n// This file subclasses and stores the JS builtins that come from the VM\n// so that Node.js's builtin modules do not need to later look these up from\n// the global proxy, which can be mutated by users.\n\n// Use of primordials have sometimes a dramatic impact on performance, please\n// benchmark all changes made in performance-sensitive areas of the codebase.\n// See: https://github.com/nodejs/node/pull/38248\nconst primordials = {};\nconst {\n  defineProperty: ReflectDefineProperty,\n  getOwnPropertyDescriptor: ReflectGetOwnPropertyDescriptor,\n  ownKeys: ReflectOwnKeys\n} = Reflect;\n\n// `uncurryThis` is equivalent to `func => Function.prototype.call.bind(func)`.\n// It is using `bind.bind(call)` to avoid using `Function.prototype.bind`\n// and `Function.prototype.call` after it may have been mutated by users.\nconst {\n  apply,\n  bind,\n  call\n} = Function.prototype;\nconst uncurryThis = bind.bind(call);\nprimordials.uncurryThis = uncurryThis;\n\n// `applyBind` is equivalent to `func => Function.prototype.apply.bind(func)`.\n// It is using `bind.bind(apply)` to avoid using `Function.prototype.bind`\n// and `Function.prototype.apply` after it may have been mutated by users.\nconst applyBind = bind.bind(apply);\nprimordials.applyBind = applyBind;\n\n// Methods that accept a variable number of arguments, and thus it's useful to\n// also create `${prefix}${key}Apply`, which uses `Function.prototype.apply`,\n// instead of `Function.prototype.call`, and thus doesn't require iterator\n// destructuring.\nconst varargsMethods = [\n// 'ArrayPrototypeConcat' is omitted, because it performs the spread\n// on its own for arrays and array-likes with a truthy\n// @@isConcatSpreadable symbol property.\n'ArrayOf', 'ArrayPrototypePush', 'ArrayPrototypeUnshift',\n// 'FunctionPrototypeCall' is omitted, since there's 'ReflectApply'\n// and 'FunctionPrototypeApply'.\n'MathHypot', 'MathMax', 'MathMin', 'StringPrototypeConcat', 'TypedArrayOf'];\nfunction getNewKey(key) {\n  return typeof key === 'symbol' ? `Symbol${key.description[7].toUpperCase()}${key.description.slice(8)}` : `${key[0].toUpperCase()}${key.slice(1)}`;\n}\nfunction copyAccessor(dest, prefix, key, {\n  enumerable,\n  get,\n  set\n}) {\n  ReflectDefineProperty(dest, `${prefix}Get${key}`, {\n    value: uncurryThis(get),\n    enumerable\n  });\n  if (set !== undefined) {\n    ReflectDefineProperty(dest, `${prefix}Set${key}`, {\n      value: uncurryThis(set),\n      enumerable\n    });\n  }\n}\nfunction copyPropsRenamed(src, dest, prefix) {\n  for (const key of ReflectOwnKeys(src)) {\n    const newKey = getNewKey(key);\n    const desc = ReflectGetOwnPropertyDescriptor(src, key);\n    if ('get' in desc) {\n      copyAccessor(dest, prefix, newKey, desc);\n    } else {\n      const name = `${prefix}${newKey}`;\n      ReflectDefineProperty(dest, name, desc);\n      if (varargsMethods.includes(name)) {\n        ReflectDefineProperty(dest, `${name}Apply`, {\n          // `src` is bound as the `this` so that the static `this` points\n          // to the object it was defined on,\n          // e.g.: `ArrayOfApply` gets a `this` of `Array`:\n          value: applyBind(desc.value, src)\n        });\n      }\n    }\n  }\n}\nfunction copyPropsRenamedBound(src, dest, prefix) {\n  for (const key of ReflectOwnKeys(src)) {\n    const newKey = getNewKey(key);\n    const desc = ReflectGetOwnPropertyDescriptor(src, key);\n    if ('get' in desc) {\n      copyAccessor(dest, prefix, newKey, desc);\n    } else {\n      const {\n        value\n      } = desc;\n      if (typeof value === 'function') {\n        desc.value = value.bind(src);\n      }\n      const name = `${prefix}${newKey}`;\n      ReflectDefineProperty(dest, name, desc);\n      if (varargsMethods.includes(name)) {\n        ReflectDefineProperty(dest, `${name}Apply`, {\n          value: applyBind(value, src)\n        });\n      }\n    }\n  }\n}\nfunction copyPrototype(src, dest, prefix) {\n  for (const key of ReflectOwnKeys(src)) {\n    const newKey = getNewKey(key);\n    const desc = ReflectGetOwnPropertyDescriptor(src, key);\n    if ('get' in desc) {\n      copyAccessor(dest, prefix, newKey, desc);\n    } else {\n      const {\n        value\n      } = desc;\n      if (typeof value === 'function') {\n        desc.value = uncurryThis(value);\n      }\n      const name = `${prefix}${newKey}`;\n      ReflectDefineProperty(dest, name, desc);\n      if (varargsMethods.includes(name)) {\n        ReflectDefineProperty(dest, `${name}Apply`, {\n          value: applyBind(value)\n        });\n      }\n    }\n  }\n}\n\n// Create copies of configurable value properties of the global object\n['Proxy', 'globalThis'].forEach(name => {\n  // eslint-disable-next-line no-restricted-globals\n  primordials[name] = globalThis[name];\n});\n\n// Create copies of URI handling functions\n[decodeURI, decodeURIComponent, encodeURI, encodeURIComponent].forEach(fn => {\n  primordials[fn.name] = fn;\n});\n\n// Create copies of the namespace objects\n['JSON', 'Math', 'Proxy', 'Reflect'].forEach(name => {\n  // eslint-disable-next-line no-restricted-globals\n  copyPropsRenamed(global[name], primordials, name);\n});\n\n// Create copies of intrinsic objects\n['Array', 'ArrayBuffer', 'BigInt', 'BigInt64Array', 'BigUint64Array', 'Boolean', 'DataView', 'Date', 'Error', 'EvalError', 'Float32Array', 'Float64Array', 'Function', 'Int16Array', 'Int32Array', 'Int8Array', 'Map', 'Number', 'Object', 'RangeError', 'ReferenceError', 'RegExp', 'Set', 'String', 'Symbol', 'SyntaxError', 'TypeError', 'URIError', 'Uint16Array', 'Uint32Array', 'Uint8Array', 'Uint8ClampedArray', 'WeakMap', 'WeakSet'].forEach(name => {\n  // eslint-disable-next-line no-restricted-globals\n  const original = global[name];\n  primordials[name] = original;\n  copyPropsRenamed(original, primordials, name);\n  copyPrototype(original.prototype, primordials, `${name}Prototype`);\n});\n\n// Create copies of intrinsic objects that require a valid `this` to call\n// static methods.\n// Refs: https://www.ecma-international.org/ecma-262/#sec-promise.all\n['Promise'].forEach(name => {\n  // eslint-disable-next-line no-restricted-globals\n  const original = global[name];\n  primordials[name] = original;\n  copyPropsRenamedBound(original, primordials, name);\n  copyPrototype(original.prototype, primordials, `${name}Prototype`);\n});\n\n// Create copies of abstract intrinsic objects that are not directly exposed\n// on the global object.\n// Refs: https://tc39.es/ecma262/#sec-%typedarray%-intrinsic-object\n[{\n  name: 'TypedArray',\n  original: Reflect.getPrototypeOf(Uint8Array)\n}, {\n  name: 'ArrayIterator',\n  original: {\n    prototype: Reflect.getPrototypeOf(Array.prototype[Symbol.iterator]())\n  }\n}, {\n  name: 'StringIterator',\n  original: {\n    prototype: Reflect.getPrototypeOf(String.prototype[Symbol.iterator]())\n  }\n}].forEach(({\n  name,\n  original\n}) => {\n  primordials[name] = original;\n  // The static %TypedArray% methods require a valid `this`, but can't be bound,\n  // as they need a subclass constructor as the receiver:\n  copyPrototype(original, primordials, name);\n  copyPrototype(original.prototype, primordials, `${name}Prototype`);\n});\n\n/* eslint-enable node-core/prefer-primordials */\n\nconst {\n  ArrayPrototypeForEach,\n  FunctionPrototypeCall,\n  Map,\n  ObjectFreeze,\n  ObjectSetPrototypeOf,\n  Set,\n  SymbolIterator,\n  WeakMap,\n  WeakSet\n} = primordials;\n\n// Because these functions are used by `makeSafe`, which is exposed\n// on the `primordials` object, it's important to use const references\n// to the primordials that they use:\nconst createSafeIterator = (factory, next) => {\n  class SafeIterator {\n    constructor(iterable) {\n      this._iterator = factory(iterable);\n    }\n    next() {\n      return next(this._iterator);\n    }\n    [SymbolIterator]() {\n      return this;\n    }\n  }\n  ObjectSetPrototypeOf(SafeIterator.prototype, null);\n  ObjectFreeze(SafeIterator.prototype);\n  ObjectFreeze(SafeIterator);\n  return SafeIterator;\n};\nprimordials.SafeArrayIterator = createSafeIterator(primordials.ArrayPrototypeSymbolIterator, primordials.ArrayIteratorPrototypeNext);\nprimordials.SafeStringIterator = createSafeIterator(primordials.StringPrototypeSymbolIterator, primordials.StringIteratorPrototypeNext);\nconst copyProps = (src, dest) => {\n  ArrayPrototypeForEach(ReflectOwnKeys(src), key => {\n    if (!ReflectGetOwnPropertyDescriptor(dest, key)) {\n      ReflectDefineProperty(dest, key, ReflectGetOwnPropertyDescriptor(src, key));\n    }\n  });\n};\nconst makeSafe = (unsafe, safe) => {\n  if (SymbolIterator in unsafe.prototype) {\n    const dummy = new unsafe();\n    let next; // We can reuse the same `next` method.\n\n    ArrayPrototypeForEach(ReflectOwnKeys(unsafe.prototype), key => {\n      if (!ReflectGetOwnPropertyDescriptor(safe.prototype, key)) {\n        const desc = ReflectGetOwnPropertyDescriptor(unsafe.prototype, key);\n        if (typeof desc.value === 'function' && desc.value.length === 0 && SymbolIterator in (FunctionPrototypeCall(desc.value, dummy) ?? {})) {\n          const createIterator = uncurryThis(desc.value);\n          next = next ?? uncurryThis(createIterator(dummy).next);\n          const SafeIterator = createSafeIterator(createIterator, next);\n          desc.value = function () {\n            return new SafeIterator(this);\n          };\n        }\n        ReflectDefineProperty(safe.prototype, key, desc);\n      }\n    });\n  } else {\n    copyProps(unsafe.prototype, safe.prototype);\n  }\n  copyProps(unsafe, safe);\n  ObjectSetPrototypeOf(safe.prototype, null);\n  ObjectFreeze(safe.prototype);\n  ObjectFreeze(safe);\n  return safe;\n};\nprimordials.makeSafe = makeSafe;\n\n// Subclass the constructors because we need to use their prototype\n// methods later.\n// Defining the `constructor` is necessary here to avoid the default\n// constructor which uses the user-mutable `%ArrayIteratorPrototype%.next`.\nprimordials.SafeMap = makeSafe(Map, class SafeMap extends Map {\n  constructor(i) {\n    super(i);\n  } // eslint-disable-line no-useless-constructor\n});\nprimordials.SafeWeakMap = makeSafe(WeakMap, class SafeWeakMap extends WeakMap {\n  constructor(i) {\n    super(i);\n  } // eslint-disable-line no-useless-constructor\n});\nprimordials.SafeSet = makeSafe(Set, class SafeSet extends Set {\n  constructor(i) {\n    super(i);\n  } // eslint-disable-line no-useless-constructor\n});\nprimordials.SafeWeakSet = makeSafe(WeakSet, class SafeWeakSet extends WeakSet {\n  constructor(i) {\n    super(i);\n  } // eslint-disable-line no-useless-constructor\n});\nObjectSetPrototypeOf(primordials, null);\nObjectFreeze(primordials);\nmodule.exports = primordials;","map":{"version":3,"names":["primordials","defineProperty","ReflectDefineProperty","getOwnPropertyDescriptor","ReflectGetOwnPropertyDescriptor","ownKeys","ReflectOwnKeys","Reflect","apply","bind","call","Function","prototype","uncurryThis","applyBind","varargsMethods","getNewKey","key","description","toUpperCase","slice","copyAccessor","dest","prefix","enumerable","get","set","value","undefined","copyPropsRenamed","src","newKey","desc","name","includes","copyPropsRenamedBound","copyPrototype","forEach","globalThis","decodeURI","decodeURIComponent","encodeURI","encodeURIComponent","fn","global","original","getPrototypeOf","Uint8Array","Array","Symbol","iterator","String","ArrayPrototypeForEach","FunctionPrototypeCall","Map","ObjectFreeze","ObjectSetPrototypeOf","Set","SymbolIterator","WeakMap","WeakSet","createSafeIterator","factory","next","SafeIterator","constructor","iterable","_iterator","SafeArrayIterator","ArrayPrototypeSymbolIterator","ArrayIteratorPrototypeNext","SafeStringIterator","StringPrototypeSymbolIterator","StringIteratorPrototypeNext","copyProps","makeSafe","unsafe","safe","dummy","length","createIterator","SafeMap","i","SafeWeakMap","SafeSet","SafeWeakSet","module","exports"],"sources":["C:/Users/chest/OneDrive/Documentos/GitHub/HackUPC/frontend/node_modules/@pkgjs/parseargs/internal/primordials.js"],"sourcesContent":["/*\nThis file is copied from https://github.com/nodejs/node/blob/v14.19.3/lib/internal/per_context/primordials.js\nunder the following license:\n\nCopyright Node.js contributors. All rights reserved.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to\ndeal in the Software without restriction, including without limitation the\nrights to use, copy, modify, merge, publish, distribute, sublicense, and/or\nsell copies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\nFROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\nIN THE SOFTWARE.\n*/\n\n'use strict';\n\n/* eslint-disable node-core/prefer-primordials */\n\n// This file subclasses and stores the JS builtins that come from the VM\n// so that Node.js's builtin modules do not need to later look these up from\n// the global proxy, which can be mutated by users.\n\n// Use of primordials have sometimes a dramatic impact on performance, please\n// benchmark all changes made in performance-sensitive areas of the codebase.\n// See: https://github.com/nodejs/node/pull/38248\n\nconst primordials = {};\n\nconst {\n  defineProperty: ReflectDefineProperty,\n  getOwnPropertyDescriptor: ReflectGetOwnPropertyDescriptor,\n  ownKeys: ReflectOwnKeys,\n} = Reflect;\n\n// `uncurryThis` is equivalent to `func => Function.prototype.call.bind(func)`.\n// It is using `bind.bind(call)` to avoid using `Function.prototype.bind`\n// and `Function.prototype.call` after it may have been mutated by users.\nconst { apply, bind, call } = Function.prototype;\nconst uncurryThis = bind.bind(call);\nprimordials.uncurryThis = uncurryThis;\n\n// `applyBind` is equivalent to `func => Function.prototype.apply.bind(func)`.\n// It is using `bind.bind(apply)` to avoid using `Function.prototype.bind`\n// and `Function.prototype.apply` after it may have been mutated by users.\nconst applyBind = bind.bind(apply);\nprimordials.applyBind = applyBind;\n\n// Methods that accept a variable number of arguments, and thus it's useful to\n// also create `${prefix}${key}Apply`, which uses `Function.prototype.apply`,\n// instead of `Function.prototype.call`, and thus doesn't require iterator\n// destructuring.\nconst varargsMethods = [\n  // 'ArrayPrototypeConcat' is omitted, because it performs the spread\n  // on its own for arrays and array-likes with a truthy\n  // @@isConcatSpreadable symbol property.\n  'ArrayOf',\n  'ArrayPrototypePush',\n  'ArrayPrototypeUnshift',\n  // 'FunctionPrototypeCall' is omitted, since there's 'ReflectApply'\n  // and 'FunctionPrototypeApply'.\n  'MathHypot',\n  'MathMax',\n  'MathMin',\n  'StringPrototypeConcat',\n  'TypedArrayOf',\n];\n\nfunction getNewKey(key) {\n  return typeof key === 'symbol' ?\n    `Symbol${key.description[7].toUpperCase()}${key.description.slice(8)}` :\n    `${key[0].toUpperCase()}${key.slice(1)}`;\n}\n\nfunction copyAccessor(dest, prefix, key, { enumerable, get, set }) {\n  ReflectDefineProperty(dest, `${prefix}Get${key}`, {\n    value: uncurryThis(get),\n    enumerable\n  });\n  if (set !== undefined) {\n    ReflectDefineProperty(dest, `${prefix}Set${key}`, {\n      value: uncurryThis(set),\n      enumerable\n    });\n  }\n}\n\nfunction copyPropsRenamed(src, dest, prefix) {\n  for (const key of ReflectOwnKeys(src)) {\n    const newKey = getNewKey(key);\n    const desc = ReflectGetOwnPropertyDescriptor(src, key);\n    if ('get' in desc) {\n      copyAccessor(dest, prefix, newKey, desc);\n    } else {\n      const name = `${prefix}${newKey}`;\n      ReflectDefineProperty(dest, name, desc);\n      if (varargsMethods.includes(name)) {\n        ReflectDefineProperty(dest, `${name}Apply`, {\n          // `src` is bound as the `this` so that the static `this` points\n          // to the object it was defined on,\n          // e.g.: `ArrayOfApply` gets a `this` of `Array`:\n          value: applyBind(desc.value, src),\n        });\n      }\n    }\n  }\n}\n\nfunction copyPropsRenamedBound(src, dest, prefix) {\n  for (const key of ReflectOwnKeys(src)) {\n    const newKey = getNewKey(key);\n    const desc = ReflectGetOwnPropertyDescriptor(src, key);\n    if ('get' in desc) {\n      copyAccessor(dest, prefix, newKey, desc);\n    } else {\n      const { value } = desc;\n      if (typeof value === 'function') {\n        desc.value = value.bind(src);\n      }\n\n      const name = `${prefix}${newKey}`;\n      ReflectDefineProperty(dest, name, desc);\n      if (varargsMethods.includes(name)) {\n        ReflectDefineProperty(dest, `${name}Apply`, {\n          value: applyBind(value, src),\n        });\n      }\n    }\n  }\n}\n\nfunction copyPrototype(src, dest, prefix) {\n  for (const key of ReflectOwnKeys(src)) {\n    const newKey = getNewKey(key);\n    const desc = ReflectGetOwnPropertyDescriptor(src, key);\n    if ('get' in desc) {\n      copyAccessor(dest, prefix, newKey, desc);\n    } else {\n      const { value } = desc;\n      if (typeof value === 'function') {\n        desc.value = uncurryThis(value);\n      }\n\n      const name = `${prefix}${newKey}`;\n      ReflectDefineProperty(dest, name, desc);\n      if (varargsMethods.includes(name)) {\n        ReflectDefineProperty(dest, `${name}Apply`, {\n          value: applyBind(value),\n        });\n      }\n    }\n  }\n}\n\n// Create copies of configurable value properties of the global object\n[\n  'Proxy',\n  'globalThis',\n].forEach((name) => {\n  // eslint-disable-next-line no-restricted-globals\n  primordials[name] = globalThis[name];\n});\n\n// Create copies of URI handling functions\n[\n  decodeURI,\n  decodeURIComponent,\n  encodeURI,\n  encodeURIComponent,\n].forEach((fn) => {\n  primordials[fn.name] = fn;\n});\n\n// Create copies of the namespace objects\n[\n  'JSON',\n  'Math',\n  'Proxy',\n  'Reflect',\n].forEach((name) => {\n  // eslint-disable-next-line no-restricted-globals\n  copyPropsRenamed(global[name], primordials, name);\n});\n\n// Create copies of intrinsic objects\n[\n  'Array',\n  'ArrayBuffer',\n  'BigInt',\n  'BigInt64Array',\n  'BigUint64Array',\n  'Boolean',\n  'DataView',\n  'Date',\n  'Error',\n  'EvalError',\n  'Float32Array',\n  'Float64Array',\n  'Function',\n  'Int16Array',\n  'Int32Array',\n  'Int8Array',\n  'Map',\n  'Number',\n  'Object',\n  'RangeError',\n  'ReferenceError',\n  'RegExp',\n  'Set',\n  'String',\n  'Symbol',\n  'SyntaxError',\n  'TypeError',\n  'URIError',\n  'Uint16Array',\n  'Uint32Array',\n  'Uint8Array',\n  'Uint8ClampedArray',\n  'WeakMap',\n  'WeakSet',\n].forEach((name) => {\n  // eslint-disable-next-line no-restricted-globals\n  const original = global[name];\n  primordials[name] = original;\n  copyPropsRenamed(original, primordials, name);\n  copyPrototype(original.prototype, primordials, `${name}Prototype`);\n});\n\n// Create copies of intrinsic objects that require a valid `this` to call\n// static methods.\n// Refs: https://www.ecma-international.org/ecma-262/#sec-promise.all\n[\n  'Promise',\n].forEach((name) => {\n  // eslint-disable-next-line no-restricted-globals\n  const original = global[name];\n  primordials[name] = original;\n  copyPropsRenamedBound(original, primordials, name);\n  copyPrototype(original.prototype, primordials, `${name}Prototype`);\n});\n\n// Create copies of abstract intrinsic objects that are not directly exposed\n// on the global object.\n// Refs: https://tc39.es/ecma262/#sec-%typedarray%-intrinsic-object\n[\n  { name: 'TypedArray', original: Reflect.getPrototypeOf(Uint8Array) },\n  { name: 'ArrayIterator', original: {\n    prototype: Reflect.getPrototypeOf(Array.prototype[Symbol.iterator]()),\n  } },\n  { name: 'StringIterator', original: {\n    prototype: Reflect.getPrototypeOf(String.prototype[Symbol.iterator]()),\n  } },\n].forEach(({ name, original }) => {\n  primordials[name] = original;\n  // The static %TypedArray% methods require a valid `this`, but can't be bound,\n  // as they need a subclass constructor as the receiver:\n  copyPrototype(original, primordials, name);\n  copyPrototype(original.prototype, primordials, `${name}Prototype`);\n});\n\n/* eslint-enable node-core/prefer-primordials */\n\nconst {\n  ArrayPrototypeForEach,\n  FunctionPrototypeCall,\n  Map,\n  ObjectFreeze,\n  ObjectSetPrototypeOf,\n  Set,\n  SymbolIterator,\n  WeakMap,\n  WeakSet,\n} = primordials;\n\n// Because these functions are used by `makeSafe`, which is exposed\n// on the `primordials` object, it's important to use const references\n// to the primordials that they use:\nconst createSafeIterator = (factory, next) => {\n  class SafeIterator {\n    constructor(iterable) {\n      this._iterator = factory(iterable);\n    }\n    next() {\n      return next(this._iterator);\n    }\n    [SymbolIterator]() {\n      return this;\n    }\n  }\n  ObjectSetPrototypeOf(SafeIterator.prototype, null);\n  ObjectFreeze(SafeIterator.prototype);\n  ObjectFreeze(SafeIterator);\n  return SafeIterator;\n};\n\nprimordials.SafeArrayIterator = createSafeIterator(\n  primordials.ArrayPrototypeSymbolIterator,\n  primordials.ArrayIteratorPrototypeNext\n);\nprimordials.SafeStringIterator = createSafeIterator(\n  primordials.StringPrototypeSymbolIterator,\n  primordials.StringIteratorPrototypeNext\n);\n\nconst copyProps = (src, dest) => {\n  ArrayPrototypeForEach(ReflectOwnKeys(src), (key) => {\n    if (!ReflectGetOwnPropertyDescriptor(dest, key)) {\n      ReflectDefineProperty(\n        dest,\n        key,\n        ReflectGetOwnPropertyDescriptor(src, key));\n    }\n  });\n};\n\nconst makeSafe = (unsafe, safe) => {\n  if (SymbolIterator in unsafe.prototype) {\n    const dummy = new unsafe();\n    let next; // We can reuse the same `next` method.\n\n    ArrayPrototypeForEach(ReflectOwnKeys(unsafe.prototype), (key) => {\n      if (!ReflectGetOwnPropertyDescriptor(safe.prototype, key)) {\n        const desc = ReflectGetOwnPropertyDescriptor(unsafe.prototype, key);\n        if (\n          typeof desc.value === 'function' &&\n          desc.value.length === 0 &&\n          SymbolIterator in (FunctionPrototypeCall(desc.value, dummy) ?? {})\n        ) {\n          const createIterator = uncurryThis(desc.value);\n          next = next ?? uncurryThis(createIterator(dummy).next);\n          const SafeIterator = createSafeIterator(createIterator, next);\n          desc.value = function() {\n            return new SafeIterator(this);\n          };\n        }\n        ReflectDefineProperty(safe.prototype, key, desc);\n      }\n    });\n  } else {\n    copyProps(unsafe.prototype, safe.prototype);\n  }\n  copyProps(unsafe, safe);\n\n  ObjectSetPrototypeOf(safe.prototype, null);\n  ObjectFreeze(safe.prototype);\n  ObjectFreeze(safe);\n  return safe;\n};\nprimordials.makeSafe = makeSafe;\n\n// Subclass the constructors because we need to use their prototype\n// methods later.\n// Defining the `constructor` is necessary here to avoid the default\n// constructor which uses the user-mutable `%ArrayIteratorPrototype%.next`.\nprimordials.SafeMap = makeSafe(\n  Map,\n  class SafeMap extends Map {\n    constructor(i) { super(i); } // eslint-disable-line no-useless-constructor\n  }\n);\nprimordials.SafeWeakMap = makeSafe(\n  WeakMap,\n  class SafeWeakMap extends WeakMap {\n    constructor(i) { super(i); } // eslint-disable-line no-useless-constructor\n  }\n);\nprimordials.SafeSet = makeSafe(\n  Set,\n  class SafeSet extends Set {\n    constructor(i) { super(i); } // eslint-disable-line no-useless-constructor\n  }\n);\nprimordials.SafeWeakSet = makeSafe(\n  WeakSet,\n  class SafeWeakSet extends WeakSet {\n    constructor(i) { super(i); } // eslint-disable-line no-useless-constructor\n  }\n);\n\nObjectSetPrototypeOf(primordials, null);\nObjectFreeze(primordials);\n\nmodule.exports = primordials;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}