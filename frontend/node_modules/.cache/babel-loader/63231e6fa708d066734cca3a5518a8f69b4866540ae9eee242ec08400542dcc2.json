{"ast":null,"code":"var iterate = require('./lib/iterate.js'),\n  initState = require('./lib/state.js'),\n  terminator = require('./lib/terminator.js');\n\n// Public API\nmodule.exports = parallel;\n\n/**\n * Runs iterator over provided array elements in parallel\n *\n * @param   {array|object} list - array or object (named list) to iterate over\n * @param   {function} iterator - iterator to run\n * @param   {function} callback - invoked when all elements processed\n * @returns {function} - jobs terminator\n */\nfunction parallel(list, iterator, callback) {\n  var state = initState(list);\n  while (state.index < (state['keyedList'] || list).length) {\n    iterate(list, iterator, state, function (error, result) {\n      if (error) {\n        callback(error, result);\n        return;\n      }\n\n      // looks like it's the last one\n      if (Object.keys(state.jobs).length === 0) {\n        callback(null, state.results);\n        return;\n      }\n    });\n    state.index++;\n  }\n  return terminator.bind(state, callback);\n}","map":{"version":3,"names":["iterate","require","initState","terminator","module","exports","parallel","list","iterator","callback","state","index","length","error","result","Object","keys","jobs","results","bind"],"sources":["C:/Users/chest/OneDrive/Documentos/GitHub/HackUPC/frontend/node_modules/asynckit/parallel.js"],"sourcesContent":["var iterate    = require('./lib/iterate.js')\n  , initState  = require('./lib/state.js')\n  , terminator = require('./lib/terminator.js')\n  ;\n\n// Public API\nmodule.exports = parallel;\n\n/**\n * Runs iterator over provided array elements in parallel\n *\n * @param   {array|object} list - array or object (named list) to iterate over\n * @param   {function} iterator - iterator to run\n * @param   {function} callback - invoked when all elements processed\n * @returns {function} - jobs terminator\n */\nfunction parallel(list, iterator, callback)\n{\n  var state = initState(list);\n\n  while (state.index < (state['keyedList'] || list).length)\n  {\n    iterate(list, iterator, state, function(error, result)\n    {\n      if (error)\n      {\n        callback(error, result);\n        return;\n      }\n\n      // looks like it's the last one\n      if (Object.keys(state.jobs).length === 0)\n      {\n        callback(null, state.results);\n        return;\n      }\n    });\n\n    state.index++;\n  }\n\n  return terminator.bind(state, callback);\n}\n"],"mappings":"AAAA,IAAIA,OAAO,GAAMC,OAAO,CAAC,kBAAkB,CAAC;EACxCC,SAAS,GAAID,OAAO,CAAC,gBAAgB,CAAC;EACtCE,UAAU,GAAGF,OAAO,CAAC,qBAAqB,CAAC;;AAG/C;AACAG,MAAM,CAACC,OAAO,GAAGC,QAAQ;;AAEzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,QAAQA,CAACC,IAAI,EAAEC,QAAQ,EAAEC,QAAQ,EAC1C;EACE,IAAIC,KAAK,GAAGR,SAAS,CAACK,IAAI,CAAC;EAE3B,OAAOG,KAAK,CAACC,KAAK,GAAG,CAACD,KAAK,CAAC,WAAW,CAAC,IAAIH,IAAI,EAAEK,MAAM,EACxD;IACEZ,OAAO,CAACO,IAAI,EAAEC,QAAQ,EAAEE,KAAK,EAAE,UAASG,KAAK,EAAEC,MAAM,EACrD;MACE,IAAID,KAAK,EACT;QACEJ,QAAQ,CAACI,KAAK,EAAEC,MAAM,CAAC;QACvB;MACF;;MAEA;MACA,IAAIC,MAAM,CAACC,IAAI,CAACN,KAAK,CAACO,IAAI,CAAC,CAACL,MAAM,KAAK,CAAC,EACxC;QACEH,QAAQ,CAAC,IAAI,EAAEC,KAAK,CAACQ,OAAO,CAAC;QAC7B;MACF;IACF,CAAC,CAAC;IAEFR,KAAK,CAACC,KAAK,EAAE;EACf;EAEA,OAAOR,UAAU,CAACgB,IAAI,CAACT,KAAK,EAAED,QAAQ,CAAC;AACzC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}