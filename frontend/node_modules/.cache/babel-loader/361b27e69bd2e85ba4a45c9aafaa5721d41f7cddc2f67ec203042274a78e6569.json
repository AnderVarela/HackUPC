{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _helperPluginUtils = require(\"@babel/helper-plugin-utils\");\nvar _core = require(\"@babel/core\");\nvar _default = exports.default = (0, _helperPluginUtils.declare)(api => {\n  api.assertVersion(7);\n  return {\n    name: \"transform-shorthand-properties\",\n    visitor: {\n      ObjectMethod(path) {\n        const {\n          node\n        } = path;\n        if (node.kind === \"method\") {\n          const func = _core.types.functionExpression(null, node.params, node.body, node.generator, node.async);\n          func.returnType = node.returnType;\n          const computedKey = _core.types.toComputedKey(node);\n          if (_core.types.isStringLiteral(computedKey, {\n            value: \"__proto__\"\n          })) {\n            path.replaceWith(_core.types.objectProperty(computedKey, func, true));\n          } else {\n            path.replaceWith(_core.types.objectProperty(node.key, func, node.computed));\n          }\n        }\n      },\n      ObjectProperty(path) {\n        const {\n          node\n        } = path;\n        if (node.shorthand) {\n          const computedKey = _core.types.toComputedKey(node);\n          if (_core.types.isStringLiteral(computedKey, {\n            value: \"__proto__\"\n          })) {\n            path.replaceWith(_core.types.objectProperty(computedKey, node.value, true));\n          } else {\n            node.shorthand = false;\n          }\n        }\n      }\n    }\n  };\n});","map":{"version":3,"names":["_helperPluginUtils","require","_core","_default","exports","default","declare","api","assertVersion","name","visitor","ObjectMethod","path","node","kind","func","types","functionExpression","params","body","generator","async","returnType","computedKey","toComputedKey","isStringLiteral","value","replaceWith","objectProperty","key","computed","ObjectProperty","shorthand"],"sources":["C:\\Users\\chest\\OneDrive\\Documentos\\GitHub\\HackUPC\\frontend\\node_modules\\@babel\\plugin-transform-shorthand-properties\\src\\index.ts"],"sourcesContent":["import { declare } from \"@babel/helper-plugin-utils\";\nimport { types as t } from \"@babel/core\";\n\nexport default declare(api => {\n  api.assertVersion(REQUIRED_VERSION(7));\n\n  return {\n    name: \"transform-shorthand-properties\",\n\n    visitor: {\n      ObjectMethod(path) {\n        const { node } = path;\n        if (node.kind === \"method\") {\n          const func = t.functionExpression(\n            null,\n            node.params,\n            node.body,\n            node.generator,\n            node.async,\n          );\n          func.returnType = node.returnType;\n\n          const computedKey = t.toComputedKey(node);\n          if (t.isStringLiteral(computedKey, { value: \"__proto__\" })) {\n            path.replaceWith(t.objectProperty(computedKey, func, true));\n          } else {\n            path.replaceWith(t.objectProperty(node.key, func, node.computed));\n          }\n        }\n      },\n\n      ObjectProperty(path) {\n        const { node } = path;\n        if (node.shorthand) {\n          const computedKey = t.toComputedKey(node);\n          if (t.isStringLiteral(computedKey, { value: \"__proto__\" })) {\n            path.replaceWith(t.objectProperty(computedKey, node.value, true));\n          } else {\n            node.shorthand = false;\n          }\n        }\n      },\n    },\n  };\n});\n"],"mappings":";;;;;;AAAA,IAAAA,kBAAA,GAAAC,OAAA;AACA,IAAAC,KAAA,GAAAD,OAAA;AAAyC,IAAAE,QAAA,GAAAC,OAAA,CAAAC,OAAA,GAE1B,IAAAL,kBAAA,CAAAM,OAAO,EAACC,GAAG,IAAI;EAC5BA,GAAG,CAACC,aAAa,CAAkB,CAAE,CAAC;EAEtC,OAAO;IACLC,IAAI,EAAE,gCAAgC;IAEtCC,OAAO,EAAE;MACPC,YAAYA,CAACC,IAAI,EAAE;QACjB,MAAM;UAAEC;QAAK,CAAC,GAAGD,IAAI;QACrB,IAAIC,IAAI,CAACC,IAAI,KAAK,QAAQ,EAAE;UAC1B,MAAMC,IAAI,GAAGb,KAAA,CAAAc,KAAC,CAACC,kBAAkB,CAC/B,IAAI,EACJJ,IAAI,CAACK,MAAM,EACXL,IAAI,CAACM,IAAI,EACTN,IAAI,CAACO,SAAS,EACdP,IAAI,CAACQ,KACP,CAAC;UACDN,IAAI,CAACO,UAAU,GAAGT,IAAI,CAACS,UAAU;UAEjC,MAAMC,WAAW,GAAGrB,KAAA,CAAAc,KAAC,CAACQ,aAAa,CAACX,IAAI,CAAC;UACzC,IAAIX,KAAA,CAAAc,KAAC,CAACS,eAAe,CAACF,WAAW,EAAE;YAAEG,KAAK,EAAE;UAAY,CAAC,CAAC,EAAE;YAC1Dd,IAAI,CAACe,WAAW,CAACzB,KAAA,CAAAc,KAAC,CAACY,cAAc,CAACL,WAAW,EAAER,IAAI,EAAE,IAAI,CAAC,CAAC;UAC7D,CAAC,MAAM;YACLH,IAAI,CAACe,WAAW,CAACzB,KAAA,CAAAc,KAAC,CAACY,cAAc,CAACf,IAAI,CAACgB,GAAG,EAAEd,IAAI,EAAEF,IAAI,CAACiB,QAAQ,CAAC,CAAC;UACnE;QACF;MACF,CAAC;MAEDC,cAAcA,CAACnB,IAAI,EAAE;QACnB,MAAM;UAAEC;QAAK,CAAC,GAAGD,IAAI;QACrB,IAAIC,IAAI,CAACmB,SAAS,EAAE;UAClB,MAAMT,WAAW,GAAGrB,KAAA,CAAAc,KAAC,CAACQ,aAAa,CAACX,IAAI,CAAC;UACzC,IAAIX,KAAA,CAAAc,KAAC,CAACS,eAAe,CAACF,WAAW,EAAE;YAAEG,KAAK,EAAE;UAAY,CAAC,CAAC,EAAE;YAC1Dd,IAAI,CAACe,WAAW,CAACzB,KAAA,CAAAc,KAAC,CAACY,cAAc,CAACL,WAAW,EAAEV,IAAI,CAACa,KAAK,EAAE,IAAI,CAAC,CAAC;UACnE,CAAC,MAAM;YACLb,IAAI,CAACmB,SAAS,GAAG,KAAK;UACxB;QACF;MACF;IACF;EACF,CAAC;AACH,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}