{"ast":null,"code":"'use strict';\n\nvar IS_PURE = require('../internals/is-pure');\nvar $ = require('../internals/export');\nvar global = require('../internals/global');\nvar getBuiltIn = require('../internals/get-built-in');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar fails = require('../internals/fails');\nvar uid = require('../internals/uid');\nvar isCallable = require('../internals/is-callable');\nvar isConstructor = require('../internals/is-constructor');\nvar isNullOrUndefined = require('../internals/is-null-or-undefined');\nvar isObject = require('../internals/is-object');\nvar isSymbol = require('../internals/is-symbol');\nvar iterate = require('../internals/iterate');\nvar anObject = require('../internals/an-object');\nvar classof = require('../internals/classof');\nvar hasOwn = require('../internals/has-own-property');\nvar createProperty = require('../internals/create-property');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar lengthOfArrayLike = require('../internals/length-of-array-like');\nvar validateArgumentsLength = require('../internals/validate-arguments-length');\nvar getRegExpFlags = require('../internals/regexp-get-flags');\nvar MapHelpers = require('../internals/map-helpers');\nvar SetHelpers = require('../internals/set-helpers');\nvar setIterate = require('../internals/set-iterate');\nvar detachTransferable = require('../internals/detach-transferable');\nvar ERROR_STACK_INSTALLABLE = require('../internals/error-stack-installable');\nvar PROPER_STRUCTURED_CLONE_TRANSFER = require('../internals/structured-clone-proper-transfer');\nvar Object = global.Object;\nvar Array = global.Array;\nvar Date = global.Date;\nvar Error = global.Error;\nvar TypeError = global.TypeError;\nvar PerformanceMark = global.PerformanceMark;\nvar DOMException = getBuiltIn('DOMException');\nvar Map = MapHelpers.Map;\nvar mapHas = MapHelpers.has;\nvar mapGet = MapHelpers.get;\nvar mapSet = MapHelpers.set;\nvar Set = SetHelpers.Set;\nvar setAdd = SetHelpers.add;\nvar setHas = SetHelpers.has;\nvar objectKeys = getBuiltIn('Object', 'keys');\nvar push = uncurryThis([].push);\nvar thisBooleanValue = uncurryThis(true.valueOf);\nvar thisNumberValue = uncurryThis(1.0.valueOf);\nvar thisStringValue = uncurryThis(''.valueOf);\nvar thisTimeValue = uncurryThis(Date.prototype.getTime);\nvar PERFORMANCE_MARK = uid('structuredClone');\nvar DATA_CLONE_ERROR = 'DataCloneError';\nvar TRANSFERRING = 'Transferring';\nvar checkBasicSemantic = function (structuredCloneImplementation) {\n  return !fails(function () {\n    var set1 = new global.Set([7]);\n    var set2 = structuredCloneImplementation(set1);\n    var number = structuredCloneImplementation(Object(7));\n    return set2 === set1 || !set2.has(7) || !isObject(number) || +number !== 7;\n  }) && structuredCloneImplementation;\n};\nvar checkErrorsCloning = function (structuredCloneImplementation, $Error) {\n  return !fails(function () {\n    var error = new $Error();\n    var test = structuredCloneImplementation({\n      a: error,\n      b: error\n    });\n    return !(test && test.a === test.b && test.a instanceof $Error && test.a.stack === error.stack);\n  });\n};\n\n// https://github.com/whatwg/html/pull/5749\nvar checkNewErrorsCloningSemantic = function (structuredCloneImplementation) {\n  return !fails(function () {\n    var test = structuredCloneImplementation(new global.AggregateError([1], PERFORMANCE_MARK, {\n      cause: 3\n    }));\n    return test.name !== 'AggregateError' || test.errors[0] !== 1 || test.message !== PERFORMANCE_MARK || test.cause !== 3;\n  });\n};\n\n// FF94+, Safari 15.4+, Chrome 98+, NodeJS 17.0+, Deno 1.13+\n// FF<103 and Safari implementations can't clone errors\n// https://bugzilla.mozilla.org/show_bug.cgi?id=1556604\n// FF103 can clone errors, but `.stack` of clone is an empty string\n// https://bugzilla.mozilla.org/show_bug.cgi?id=1778762\n// FF104+ fixed it on usual errors, but not on DOMExceptions\n// https://bugzilla.mozilla.org/show_bug.cgi?id=1777321\n// Chrome <102 returns `null` if cloned object contains multiple references to one error\n// https://bugs.chromium.org/p/v8/issues/detail?id=12542\n// NodeJS implementation can't clone DOMExceptions\n// https://github.com/nodejs/node/issues/41038\n// only FF103+ supports new (html/5749) error cloning semantic\nvar nativeStructuredClone = global.structuredClone;\nvar FORCED_REPLACEMENT = IS_PURE || !checkErrorsCloning(nativeStructuredClone, Error) || !checkErrorsCloning(nativeStructuredClone, DOMException) || !checkNewErrorsCloningSemantic(nativeStructuredClone);\n\n// Chrome 82+, Safari 14.1+, Deno 1.11+\n// Chrome 78-81 implementation swaps `.name` and `.message` of cloned `DOMException`\n// Chrome returns `null` if cloned object contains multiple references to one error\n// Safari 14.1 implementation doesn't clone some `RegExp` flags, so requires a workaround\n// Safari implementation can't clone errors\n// Deno 1.2-1.10 implementations too naive\n// NodeJS 16.0+ does not have `PerformanceMark` constructor\n// NodeJS <17.2 structured cloning implementation from `performance.mark` is too naive\n// and can't clone, for example, `RegExp` or some boxed primitives\n// https://github.com/nodejs/node/issues/40840\n// no one of those implementations supports new (html/5749) error cloning semantic\nvar structuredCloneFromMark = !nativeStructuredClone && checkBasicSemantic(function (value) {\n  return new PerformanceMark(PERFORMANCE_MARK, {\n    detail: value\n  }).detail;\n});\nvar nativeRestrictedStructuredClone = checkBasicSemantic(nativeStructuredClone) || structuredCloneFromMark;\nvar throwUncloneable = function (type) {\n  throw new DOMException('Uncloneable type: ' + type, DATA_CLONE_ERROR);\n};\nvar throwUnpolyfillable = function (type, action) {\n  throw new DOMException((action || 'Cloning') + ' of ' + type + ' cannot be properly polyfilled in this engine', DATA_CLONE_ERROR);\n};\nvar tryNativeRestrictedStructuredClone = function (value, type) {\n  if (!nativeRestrictedStructuredClone) throwUnpolyfillable(type);\n  return nativeRestrictedStructuredClone(value);\n};\nvar createDataTransfer = function () {\n  var dataTransfer;\n  try {\n    dataTransfer = new global.DataTransfer();\n  } catch (error) {\n    try {\n      dataTransfer = new global.ClipboardEvent('').clipboardData;\n    } catch (error2) {/* empty */}\n  }\n  return dataTransfer && dataTransfer.items && dataTransfer.files ? dataTransfer : null;\n};\nvar cloneBuffer = function (value, map, $type) {\n  if (mapHas(map, value)) return mapGet(map, value);\n  var type = $type || classof(value);\n  var clone, length, options, source, target, i;\n  if (type === 'SharedArrayBuffer') {\n    if (nativeRestrictedStructuredClone) clone = nativeRestrictedStructuredClone(value);\n    // SharedArrayBuffer should use shared memory, we can't polyfill it, so return the original\n    else clone = value;\n  } else {\n    var DataView = global.DataView;\n\n    // `ArrayBuffer#slice` is not available in IE10\n    // `ArrayBuffer#slice` and `DataView` are not available in old FF\n    if (!DataView && !isCallable(value.slice)) throwUnpolyfillable('ArrayBuffer');\n    // detached buffers throws in `DataView` and `.slice`\n    try {\n      if (isCallable(value.slice) && !value.resizable) {\n        clone = value.slice(0);\n      } else {\n        length = value.byteLength;\n        options = 'maxByteLength' in value ? {\n          maxByteLength: value.maxByteLength\n        } : undefined;\n        // eslint-disable-next-line es/no-resizable-and-growable-arraybuffers -- safe\n        clone = new ArrayBuffer(length, options);\n        source = new DataView(value);\n        target = new DataView(clone);\n        for (i = 0; i < length; i++) {\n          target.setUint8(i, source.getUint8(i));\n        }\n      }\n    } catch (error) {\n      throw new DOMException('ArrayBuffer is detached', DATA_CLONE_ERROR);\n    }\n  }\n  mapSet(map, value, clone);\n  return clone;\n};\nvar cloneView = function (value, type, offset, length, map) {\n  var C = global[type];\n  // in some old engines like Safari 9, typeof C is 'object'\n  // on Uint8ClampedArray or some other constructors\n  if (!isObject(C)) throwUnpolyfillable(type);\n  return new C(cloneBuffer(value.buffer, map), offset, length);\n};\nvar structuredCloneInternal = function (value, map) {\n  if (isSymbol(value)) throwUncloneable('Symbol');\n  if (!isObject(value)) return value;\n  // effectively preserves circular references\n  if (map) {\n    if (mapHas(map, value)) return mapGet(map, value);\n  } else map = new Map();\n  var type = classof(value);\n  var C, name, cloned, dataTransfer, i, length, keys, key;\n  switch (type) {\n    case 'Array':\n      cloned = Array(lengthOfArrayLike(value));\n      break;\n    case 'Object':\n      cloned = {};\n      break;\n    case 'Map':\n      cloned = new Map();\n      break;\n    case 'Set':\n      cloned = new Set();\n      break;\n    case 'RegExp':\n      // in this block because of a Safari 14.1 bug\n      // old FF does not clone regexes passed to the constructor, so get the source and flags directly\n      cloned = new RegExp(value.source, getRegExpFlags(value));\n      break;\n    case 'Error':\n      name = value.name;\n      switch (name) {\n        case 'AggregateError':\n          cloned = new (getBuiltIn(name))([]);\n          break;\n        case 'EvalError':\n        case 'RangeError':\n        case 'ReferenceError':\n        case 'SuppressedError':\n        case 'SyntaxError':\n        case 'TypeError':\n        case 'URIError':\n          cloned = new (getBuiltIn(name))();\n          break;\n        case 'CompileError':\n        case 'LinkError':\n        case 'RuntimeError':\n          cloned = new (getBuiltIn('WebAssembly', name))();\n          break;\n        default:\n          cloned = new Error();\n      }\n      break;\n    case 'DOMException':\n      cloned = new DOMException(value.message, value.name);\n      break;\n    case 'ArrayBuffer':\n    case 'SharedArrayBuffer':\n      cloned = cloneBuffer(value, map, type);\n      break;\n    case 'DataView':\n    case 'Int8Array':\n    case 'Uint8Array':\n    case 'Uint8ClampedArray':\n    case 'Int16Array':\n    case 'Uint16Array':\n    case 'Int32Array':\n    case 'Uint32Array':\n    case 'Float16Array':\n    case 'Float32Array':\n    case 'Float64Array':\n    case 'BigInt64Array':\n    case 'BigUint64Array':\n      length = type === 'DataView' ? value.byteLength : value.length;\n      cloned = cloneView(value, type, value.byteOffset, length, map);\n      break;\n    case 'DOMQuad':\n      try {\n        cloned = new DOMQuad(structuredCloneInternal(value.p1, map), structuredCloneInternal(value.p2, map), structuredCloneInternal(value.p3, map), structuredCloneInternal(value.p4, map));\n      } catch (error) {\n        cloned = tryNativeRestrictedStructuredClone(value, type);\n      }\n      break;\n    case 'File':\n      if (nativeRestrictedStructuredClone) try {\n        cloned = nativeRestrictedStructuredClone(value);\n        // NodeJS 20.0.0 bug, https://github.com/nodejs/node/issues/47612\n        if (classof(cloned) !== type) cloned = undefined;\n      } catch (error) {/* empty */}\n      if (!cloned) try {\n        cloned = new File([value], value.name, value);\n      } catch (error) {/* empty */}\n      if (!cloned) throwUnpolyfillable(type);\n      break;\n    case 'FileList':\n      dataTransfer = createDataTransfer();\n      if (dataTransfer) {\n        for (i = 0, length = lengthOfArrayLike(value); i < length; i++) {\n          dataTransfer.items.add(structuredCloneInternal(value[i], map));\n        }\n        cloned = dataTransfer.files;\n      } else cloned = tryNativeRestrictedStructuredClone(value, type);\n      break;\n    case 'ImageData':\n      // Safari 9 ImageData is a constructor, but typeof ImageData is 'object'\n      try {\n        cloned = new ImageData(structuredCloneInternal(value.data, map), value.width, value.height, {\n          colorSpace: value.colorSpace\n        });\n      } catch (error) {\n        cloned = tryNativeRestrictedStructuredClone(value, type);\n      }\n      break;\n    default:\n      if (nativeRestrictedStructuredClone) {\n        cloned = nativeRestrictedStructuredClone(value);\n      } else switch (type) {\n        case 'BigInt':\n          // can be a 3rd party polyfill\n          cloned = Object(value.valueOf());\n          break;\n        case 'Boolean':\n          cloned = Object(thisBooleanValue(value));\n          break;\n        case 'Number':\n          cloned = Object(thisNumberValue(value));\n          break;\n        case 'String':\n          cloned = Object(thisStringValue(value));\n          break;\n        case 'Date':\n          cloned = new Date(thisTimeValue(value));\n          break;\n        case 'Blob':\n          try {\n            cloned = value.slice(0, value.size, value.type);\n          } catch (error) {\n            throwUnpolyfillable(type);\n          }\n          break;\n        case 'DOMPoint':\n        case 'DOMPointReadOnly':\n          C = global[type];\n          try {\n            cloned = C.fromPoint ? C.fromPoint(value) : new C(value.x, value.y, value.z, value.w);\n          } catch (error) {\n            throwUnpolyfillable(type);\n          }\n          break;\n        case 'DOMRect':\n        case 'DOMRectReadOnly':\n          C = global[type];\n          try {\n            cloned = C.fromRect ? C.fromRect(value) : new C(value.x, value.y, value.width, value.height);\n          } catch (error) {\n            throwUnpolyfillable(type);\n          }\n          break;\n        case 'DOMMatrix':\n        case 'DOMMatrixReadOnly':\n          C = global[type];\n          try {\n            cloned = C.fromMatrix ? C.fromMatrix(value) : new C(value);\n          } catch (error) {\n            throwUnpolyfillable(type);\n          }\n          break;\n        case 'AudioData':\n        case 'VideoFrame':\n          if (!isCallable(value.clone)) throwUnpolyfillable(type);\n          try {\n            cloned = value.clone();\n          } catch (error) {\n            throwUncloneable(type);\n          }\n          break;\n        case 'CropTarget':\n        case 'CryptoKey':\n        case 'FileSystemDirectoryHandle':\n        case 'FileSystemFileHandle':\n        case 'FileSystemHandle':\n        case 'GPUCompilationInfo':\n        case 'GPUCompilationMessage':\n        case 'ImageBitmap':\n        case 'RTCCertificate':\n        case 'WebAssembly.Module':\n          throwUnpolyfillable(type);\n        // break omitted\n        default:\n          throwUncloneable(type);\n      }\n  }\n  mapSet(map, value, cloned);\n  switch (type) {\n    case 'Array':\n    case 'Object':\n      keys = objectKeys(value);\n      for (i = 0, length = lengthOfArrayLike(keys); i < length; i++) {\n        key = keys[i];\n        createProperty(cloned, key, structuredCloneInternal(value[key], map));\n      }\n      break;\n    case 'Map':\n      value.forEach(function (v, k) {\n        mapSet(cloned, structuredCloneInternal(k, map), structuredCloneInternal(v, map));\n      });\n      break;\n    case 'Set':\n      value.forEach(function (v) {\n        setAdd(cloned, structuredCloneInternal(v, map));\n      });\n      break;\n    case 'Error':\n      createNonEnumerableProperty(cloned, 'message', structuredCloneInternal(value.message, map));\n      if (hasOwn(value, 'cause')) {\n        createNonEnumerableProperty(cloned, 'cause', structuredCloneInternal(value.cause, map));\n      }\n      if (name === 'AggregateError') {\n        cloned.errors = structuredCloneInternal(value.errors, map);\n      } else if (name === 'SuppressedError') {\n        cloned.error = structuredCloneInternal(value.error, map);\n        cloned.suppressed = structuredCloneInternal(value.suppressed, map);\n      }\n    // break omitted\n    case 'DOMException':\n      if (ERROR_STACK_INSTALLABLE) {\n        createNonEnumerableProperty(cloned, 'stack', structuredCloneInternal(value.stack, map));\n      }\n  }\n  return cloned;\n};\nvar tryToTransfer = function (rawTransfer, map) {\n  if (!isObject(rawTransfer)) throw new TypeError('Transfer option cannot be converted to a sequence');\n  var transfer = [];\n  iterate(rawTransfer, function (value) {\n    push(transfer, anObject(value));\n  });\n  var i = 0;\n  var length = lengthOfArrayLike(transfer);\n  var buffers = new Set();\n  var value, type, C, transferred, canvas, context;\n  while (i < length) {\n    value = transfer[i++];\n    type = classof(value);\n    if (type === 'ArrayBuffer' ? setHas(buffers, value) : mapHas(map, value)) {\n      throw new DOMException('Duplicate transferable', DATA_CLONE_ERROR);\n    }\n    if (type === 'ArrayBuffer') {\n      setAdd(buffers, value);\n      continue;\n    }\n    if (PROPER_STRUCTURED_CLONE_TRANSFER) {\n      transferred = nativeStructuredClone(value, {\n        transfer: [value]\n      });\n    } else switch (type) {\n      case 'ImageBitmap':\n        C = global.OffscreenCanvas;\n        if (!isConstructor(C)) throwUnpolyfillable(type, TRANSFERRING);\n        try {\n          canvas = new C(value.width, value.height);\n          context = canvas.getContext('bitmaprenderer');\n          context.transferFromImageBitmap(value);\n          transferred = canvas.transferToImageBitmap();\n        } catch (error) {/* empty */}\n        break;\n      case 'AudioData':\n      case 'VideoFrame':\n        if (!isCallable(value.clone) || !isCallable(value.close)) throwUnpolyfillable(type, TRANSFERRING);\n        try {\n          transferred = value.clone();\n          value.close();\n        } catch (error) {/* empty */}\n        break;\n      case 'MediaSourceHandle':\n      case 'MessagePort':\n      case 'OffscreenCanvas':\n      case 'ReadableStream':\n      case 'TransformStream':\n      case 'WritableStream':\n        throwUnpolyfillable(type, TRANSFERRING);\n    }\n    if (transferred === undefined) throw new DOMException('This object cannot be transferred: ' + type, DATA_CLONE_ERROR);\n    mapSet(map, value, transferred);\n  }\n  return buffers;\n};\nvar detachBuffers = function (buffers) {\n  setIterate(buffers, function (buffer) {\n    if (PROPER_STRUCTURED_CLONE_TRANSFER) {\n      nativeRestrictedStructuredClone(buffer, {\n        transfer: [buffer]\n      });\n    } else if (isCallable(buffer.transfer)) {\n      buffer.transfer();\n    } else if (detachTransferable) {\n      detachTransferable(buffer);\n    } else {\n      throwUnpolyfillable('ArrayBuffer', TRANSFERRING);\n    }\n  });\n};\n\n// `structuredClone` method\n// https://html.spec.whatwg.org/multipage/structured-data.html#dom-structuredclone\n$({\n  global: true,\n  enumerable: true,\n  sham: !PROPER_STRUCTURED_CLONE_TRANSFER,\n  forced: FORCED_REPLACEMENT\n}, {\n  structuredClone: function structuredClone(value /* , { transfer } */) {\n    var options = validateArgumentsLength(arguments.length, 1) > 1 && !isNullOrUndefined(arguments[1]) ? anObject(arguments[1]) : undefined;\n    var transfer = options ? options.transfer : undefined;\n    var map, buffers;\n    if (transfer !== undefined) {\n      map = new Map();\n      buffers = tryToTransfer(transfer, map);\n    }\n    var clone = structuredCloneInternal(value, map);\n\n    // since of an issue with cloning views of transferred buffers, we a forced to detach them later\n    // https://github.com/zloirock/core-js/issues/1265\n    if (buffers) detachBuffers(buffers);\n    return clone;\n  }\n});","map":{"version":3,"names":["IS_PURE","require","$","global","getBuiltIn","uncurryThis","fails","uid","isCallable","isConstructor","isNullOrUndefined","isObject","isSymbol","iterate","anObject","classof","hasOwn","createProperty","createNonEnumerableProperty","lengthOfArrayLike","validateArgumentsLength","getRegExpFlags","MapHelpers","SetHelpers","setIterate","detachTransferable","ERROR_STACK_INSTALLABLE","PROPER_STRUCTURED_CLONE_TRANSFER","Object","Array","Date","Error","TypeError","PerformanceMark","DOMException","Map","mapHas","has","mapGet","get","mapSet","set","Set","setAdd","add","setHas","objectKeys","push","thisBooleanValue","valueOf","thisNumberValue","thisStringValue","thisTimeValue","prototype","getTime","PERFORMANCE_MARK","DATA_CLONE_ERROR","TRANSFERRING","checkBasicSemantic","structuredCloneImplementation","set1","set2","number","checkErrorsCloning","$Error","error","test","a","b","stack","checkNewErrorsCloningSemantic","AggregateError","cause","name","errors","message","nativeStructuredClone","structuredClone","FORCED_REPLACEMENT","structuredCloneFromMark","value","detail","nativeRestrictedStructuredClone","throwUncloneable","type","throwUnpolyfillable","action","tryNativeRestrictedStructuredClone","createDataTransfer","dataTransfer","DataTransfer","ClipboardEvent","clipboardData","error2","items","files","cloneBuffer","map","$type","clone","length","options","source","target","i","DataView","slice","resizable","byteLength","maxByteLength","undefined","ArrayBuffer","setUint8","getUint8","cloneView","offset","C","buffer","structuredCloneInternal","cloned","keys","key","RegExp","byteOffset","DOMQuad","p1","p2","p3","p4","File","ImageData","data","width","height","colorSpace","size","fromPoint","x","y","z","w","fromRect","fromMatrix","forEach","v","k","suppressed","tryToTransfer","rawTransfer","transfer","buffers","transferred","canvas","context","OffscreenCanvas","getContext","transferFromImageBitmap","transferToImageBitmap","close","detachBuffers","enumerable","sham","forced","arguments"],"sources":["C:/Users/chest/OneDrive/Documentos/GitHub/HackUPC/frontend/node_modules/core-js-pure/modules/web.structured-clone.js"],"sourcesContent":["'use strict';\nvar IS_PURE = require('../internals/is-pure');\nvar $ = require('../internals/export');\nvar global = require('../internals/global');\nvar getBuiltIn = require('../internals/get-built-in');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar fails = require('../internals/fails');\nvar uid = require('../internals/uid');\nvar isCallable = require('../internals/is-callable');\nvar isConstructor = require('../internals/is-constructor');\nvar isNullOrUndefined = require('../internals/is-null-or-undefined');\nvar isObject = require('../internals/is-object');\nvar isSymbol = require('../internals/is-symbol');\nvar iterate = require('../internals/iterate');\nvar anObject = require('../internals/an-object');\nvar classof = require('../internals/classof');\nvar hasOwn = require('../internals/has-own-property');\nvar createProperty = require('../internals/create-property');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar lengthOfArrayLike = require('../internals/length-of-array-like');\nvar validateArgumentsLength = require('../internals/validate-arguments-length');\nvar getRegExpFlags = require('../internals/regexp-get-flags');\nvar MapHelpers = require('../internals/map-helpers');\nvar SetHelpers = require('../internals/set-helpers');\nvar setIterate = require('../internals/set-iterate');\nvar detachTransferable = require('../internals/detach-transferable');\nvar ERROR_STACK_INSTALLABLE = require('../internals/error-stack-installable');\nvar PROPER_STRUCTURED_CLONE_TRANSFER = require('../internals/structured-clone-proper-transfer');\n\nvar Object = global.Object;\nvar Array = global.Array;\nvar Date = global.Date;\nvar Error = global.Error;\nvar TypeError = global.TypeError;\nvar PerformanceMark = global.PerformanceMark;\nvar DOMException = getBuiltIn('DOMException');\nvar Map = MapHelpers.Map;\nvar mapHas = MapHelpers.has;\nvar mapGet = MapHelpers.get;\nvar mapSet = MapHelpers.set;\nvar Set = SetHelpers.Set;\nvar setAdd = SetHelpers.add;\nvar setHas = SetHelpers.has;\nvar objectKeys = getBuiltIn('Object', 'keys');\nvar push = uncurryThis([].push);\nvar thisBooleanValue = uncurryThis(true.valueOf);\nvar thisNumberValue = uncurryThis(1.0.valueOf);\nvar thisStringValue = uncurryThis(''.valueOf);\nvar thisTimeValue = uncurryThis(Date.prototype.getTime);\nvar PERFORMANCE_MARK = uid('structuredClone');\nvar DATA_CLONE_ERROR = 'DataCloneError';\nvar TRANSFERRING = 'Transferring';\n\nvar checkBasicSemantic = function (structuredCloneImplementation) {\n  return !fails(function () {\n    var set1 = new global.Set([7]);\n    var set2 = structuredCloneImplementation(set1);\n    var number = structuredCloneImplementation(Object(7));\n    return set2 === set1 || !set2.has(7) || !isObject(number) || +number !== 7;\n  }) && structuredCloneImplementation;\n};\n\nvar checkErrorsCloning = function (structuredCloneImplementation, $Error) {\n  return !fails(function () {\n    var error = new $Error();\n    var test = structuredCloneImplementation({ a: error, b: error });\n    return !(test && test.a === test.b && test.a instanceof $Error && test.a.stack === error.stack);\n  });\n};\n\n// https://github.com/whatwg/html/pull/5749\nvar checkNewErrorsCloningSemantic = function (structuredCloneImplementation) {\n  return !fails(function () {\n    var test = structuredCloneImplementation(new global.AggregateError([1], PERFORMANCE_MARK, { cause: 3 }));\n    return test.name !== 'AggregateError' || test.errors[0] !== 1 || test.message !== PERFORMANCE_MARK || test.cause !== 3;\n  });\n};\n\n// FF94+, Safari 15.4+, Chrome 98+, NodeJS 17.0+, Deno 1.13+\n// FF<103 and Safari implementations can't clone errors\n// https://bugzilla.mozilla.org/show_bug.cgi?id=1556604\n// FF103 can clone errors, but `.stack` of clone is an empty string\n// https://bugzilla.mozilla.org/show_bug.cgi?id=1778762\n// FF104+ fixed it on usual errors, but not on DOMExceptions\n// https://bugzilla.mozilla.org/show_bug.cgi?id=1777321\n// Chrome <102 returns `null` if cloned object contains multiple references to one error\n// https://bugs.chromium.org/p/v8/issues/detail?id=12542\n// NodeJS implementation can't clone DOMExceptions\n// https://github.com/nodejs/node/issues/41038\n// only FF103+ supports new (html/5749) error cloning semantic\nvar nativeStructuredClone = global.structuredClone;\n\nvar FORCED_REPLACEMENT = IS_PURE\n  || !checkErrorsCloning(nativeStructuredClone, Error)\n  || !checkErrorsCloning(nativeStructuredClone, DOMException)\n  || !checkNewErrorsCloningSemantic(nativeStructuredClone);\n\n// Chrome 82+, Safari 14.1+, Deno 1.11+\n// Chrome 78-81 implementation swaps `.name` and `.message` of cloned `DOMException`\n// Chrome returns `null` if cloned object contains multiple references to one error\n// Safari 14.1 implementation doesn't clone some `RegExp` flags, so requires a workaround\n// Safari implementation can't clone errors\n// Deno 1.2-1.10 implementations too naive\n// NodeJS 16.0+ does not have `PerformanceMark` constructor\n// NodeJS <17.2 structured cloning implementation from `performance.mark` is too naive\n// and can't clone, for example, `RegExp` or some boxed primitives\n// https://github.com/nodejs/node/issues/40840\n// no one of those implementations supports new (html/5749) error cloning semantic\nvar structuredCloneFromMark = !nativeStructuredClone && checkBasicSemantic(function (value) {\n  return new PerformanceMark(PERFORMANCE_MARK, { detail: value }).detail;\n});\n\nvar nativeRestrictedStructuredClone = checkBasicSemantic(nativeStructuredClone) || structuredCloneFromMark;\n\nvar throwUncloneable = function (type) {\n  throw new DOMException('Uncloneable type: ' + type, DATA_CLONE_ERROR);\n};\n\nvar throwUnpolyfillable = function (type, action) {\n  throw new DOMException((action || 'Cloning') + ' of ' + type + ' cannot be properly polyfilled in this engine', DATA_CLONE_ERROR);\n};\n\nvar tryNativeRestrictedStructuredClone = function (value, type) {\n  if (!nativeRestrictedStructuredClone) throwUnpolyfillable(type);\n  return nativeRestrictedStructuredClone(value);\n};\n\nvar createDataTransfer = function () {\n  var dataTransfer;\n  try {\n    dataTransfer = new global.DataTransfer();\n  } catch (error) {\n    try {\n      dataTransfer = new global.ClipboardEvent('').clipboardData;\n    } catch (error2) { /* empty */ }\n  }\n  return dataTransfer && dataTransfer.items && dataTransfer.files ? dataTransfer : null;\n};\n\nvar cloneBuffer = function (value, map, $type) {\n  if (mapHas(map, value)) return mapGet(map, value);\n\n  var type = $type || classof(value);\n  var clone, length, options, source, target, i;\n\n  if (type === 'SharedArrayBuffer') {\n    if (nativeRestrictedStructuredClone) clone = nativeRestrictedStructuredClone(value);\n    // SharedArrayBuffer should use shared memory, we can't polyfill it, so return the original\n    else clone = value;\n  } else {\n    var DataView = global.DataView;\n\n    // `ArrayBuffer#slice` is not available in IE10\n    // `ArrayBuffer#slice` and `DataView` are not available in old FF\n    if (!DataView && !isCallable(value.slice)) throwUnpolyfillable('ArrayBuffer');\n    // detached buffers throws in `DataView` and `.slice`\n    try {\n      if (isCallable(value.slice) && !value.resizable) {\n        clone = value.slice(0);\n      } else {\n        length = value.byteLength;\n        options = 'maxByteLength' in value ? { maxByteLength: value.maxByteLength } : undefined;\n        // eslint-disable-next-line es/no-resizable-and-growable-arraybuffers -- safe\n        clone = new ArrayBuffer(length, options);\n        source = new DataView(value);\n        target = new DataView(clone);\n        for (i = 0; i < length; i++) {\n          target.setUint8(i, source.getUint8(i));\n        }\n      }\n    } catch (error) {\n      throw new DOMException('ArrayBuffer is detached', DATA_CLONE_ERROR);\n    }\n  }\n\n  mapSet(map, value, clone);\n\n  return clone;\n};\n\nvar cloneView = function (value, type, offset, length, map) {\n  var C = global[type];\n  // in some old engines like Safari 9, typeof C is 'object'\n  // on Uint8ClampedArray or some other constructors\n  if (!isObject(C)) throwUnpolyfillable(type);\n  return new C(cloneBuffer(value.buffer, map), offset, length);\n};\n\nvar structuredCloneInternal = function (value, map) {\n  if (isSymbol(value)) throwUncloneable('Symbol');\n  if (!isObject(value)) return value;\n  // effectively preserves circular references\n  if (map) {\n    if (mapHas(map, value)) return mapGet(map, value);\n  } else map = new Map();\n\n  var type = classof(value);\n  var C, name, cloned, dataTransfer, i, length, keys, key;\n\n  switch (type) {\n    case 'Array':\n      cloned = Array(lengthOfArrayLike(value));\n      break;\n    case 'Object':\n      cloned = {};\n      break;\n    case 'Map':\n      cloned = new Map();\n      break;\n    case 'Set':\n      cloned = new Set();\n      break;\n    case 'RegExp':\n      // in this block because of a Safari 14.1 bug\n      // old FF does not clone regexes passed to the constructor, so get the source and flags directly\n      cloned = new RegExp(value.source, getRegExpFlags(value));\n      break;\n    case 'Error':\n      name = value.name;\n      switch (name) {\n        case 'AggregateError':\n          cloned = new (getBuiltIn(name))([]);\n          break;\n        case 'EvalError':\n        case 'RangeError':\n        case 'ReferenceError':\n        case 'SuppressedError':\n        case 'SyntaxError':\n        case 'TypeError':\n        case 'URIError':\n          cloned = new (getBuiltIn(name))();\n          break;\n        case 'CompileError':\n        case 'LinkError':\n        case 'RuntimeError':\n          cloned = new (getBuiltIn('WebAssembly', name))();\n          break;\n        default:\n          cloned = new Error();\n      }\n      break;\n    case 'DOMException':\n      cloned = new DOMException(value.message, value.name);\n      break;\n    case 'ArrayBuffer':\n    case 'SharedArrayBuffer':\n      cloned = cloneBuffer(value, map, type);\n      break;\n    case 'DataView':\n    case 'Int8Array':\n    case 'Uint8Array':\n    case 'Uint8ClampedArray':\n    case 'Int16Array':\n    case 'Uint16Array':\n    case 'Int32Array':\n    case 'Uint32Array':\n    case 'Float16Array':\n    case 'Float32Array':\n    case 'Float64Array':\n    case 'BigInt64Array':\n    case 'BigUint64Array':\n      length = type === 'DataView' ? value.byteLength : value.length;\n      cloned = cloneView(value, type, value.byteOffset, length, map);\n      break;\n    case 'DOMQuad':\n      try {\n        cloned = new DOMQuad(\n          structuredCloneInternal(value.p1, map),\n          structuredCloneInternal(value.p2, map),\n          structuredCloneInternal(value.p3, map),\n          structuredCloneInternal(value.p4, map)\n        );\n      } catch (error) {\n        cloned = tryNativeRestrictedStructuredClone(value, type);\n      }\n      break;\n    case 'File':\n      if (nativeRestrictedStructuredClone) try {\n        cloned = nativeRestrictedStructuredClone(value);\n        // NodeJS 20.0.0 bug, https://github.com/nodejs/node/issues/47612\n        if (classof(cloned) !== type) cloned = undefined;\n      } catch (error) { /* empty */ }\n      if (!cloned) try {\n        cloned = new File([value], value.name, value);\n      } catch (error) { /* empty */ }\n      if (!cloned) throwUnpolyfillable(type);\n      break;\n    case 'FileList':\n      dataTransfer = createDataTransfer();\n      if (dataTransfer) {\n        for (i = 0, length = lengthOfArrayLike(value); i < length; i++) {\n          dataTransfer.items.add(structuredCloneInternal(value[i], map));\n        }\n        cloned = dataTransfer.files;\n      } else cloned = tryNativeRestrictedStructuredClone(value, type);\n      break;\n    case 'ImageData':\n      // Safari 9 ImageData is a constructor, but typeof ImageData is 'object'\n      try {\n        cloned = new ImageData(\n          structuredCloneInternal(value.data, map),\n          value.width,\n          value.height,\n          { colorSpace: value.colorSpace }\n        );\n      } catch (error) {\n        cloned = tryNativeRestrictedStructuredClone(value, type);\n      } break;\n    default:\n      if (nativeRestrictedStructuredClone) {\n        cloned = nativeRestrictedStructuredClone(value);\n      } else switch (type) {\n        case 'BigInt':\n          // can be a 3rd party polyfill\n          cloned = Object(value.valueOf());\n          break;\n        case 'Boolean':\n          cloned = Object(thisBooleanValue(value));\n          break;\n        case 'Number':\n          cloned = Object(thisNumberValue(value));\n          break;\n        case 'String':\n          cloned = Object(thisStringValue(value));\n          break;\n        case 'Date':\n          cloned = new Date(thisTimeValue(value));\n          break;\n        case 'Blob':\n          try {\n            cloned = value.slice(0, value.size, value.type);\n          } catch (error) {\n            throwUnpolyfillable(type);\n          } break;\n        case 'DOMPoint':\n        case 'DOMPointReadOnly':\n          C = global[type];\n          try {\n            cloned = C.fromPoint\n              ? C.fromPoint(value)\n              : new C(value.x, value.y, value.z, value.w);\n          } catch (error) {\n            throwUnpolyfillable(type);\n          } break;\n        case 'DOMRect':\n        case 'DOMRectReadOnly':\n          C = global[type];\n          try {\n            cloned = C.fromRect\n              ? C.fromRect(value)\n              : new C(value.x, value.y, value.width, value.height);\n          } catch (error) {\n            throwUnpolyfillable(type);\n          } break;\n        case 'DOMMatrix':\n        case 'DOMMatrixReadOnly':\n          C = global[type];\n          try {\n            cloned = C.fromMatrix\n              ? C.fromMatrix(value)\n              : new C(value);\n          } catch (error) {\n            throwUnpolyfillable(type);\n          } break;\n        case 'AudioData':\n        case 'VideoFrame':\n          if (!isCallable(value.clone)) throwUnpolyfillable(type);\n          try {\n            cloned = value.clone();\n          } catch (error) {\n            throwUncloneable(type);\n          } break;\n        case 'CropTarget':\n        case 'CryptoKey':\n        case 'FileSystemDirectoryHandle':\n        case 'FileSystemFileHandle':\n        case 'FileSystemHandle':\n        case 'GPUCompilationInfo':\n        case 'GPUCompilationMessage':\n        case 'ImageBitmap':\n        case 'RTCCertificate':\n        case 'WebAssembly.Module':\n          throwUnpolyfillable(type);\n          // break omitted\n        default:\n          throwUncloneable(type);\n      }\n  }\n\n  mapSet(map, value, cloned);\n\n  switch (type) {\n    case 'Array':\n    case 'Object':\n      keys = objectKeys(value);\n      for (i = 0, length = lengthOfArrayLike(keys); i < length; i++) {\n        key = keys[i];\n        createProperty(cloned, key, structuredCloneInternal(value[key], map));\n      } break;\n    case 'Map':\n      value.forEach(function (v, k) {\n        mapSet(cloned, structuredCloneInternal(k, map), structuredCloneInternal(v, map));\n      });\n      break;\n    case 'Set':\n      value.forEach(function (v) {\n        setAdd(cloned, structuredCloneInternal(v, map));\n      });\n      break;\n    case 'Error':\n      createNonEnumerableProperty(cloned, 'message', structuredCloneInternal(value.message, map));\n      if (hasOwn(value, 'cause')) {\n        createNonEnumerableProperty(cloned, 'cause', structuredCloneInternal(value.cause, map));\n      }\n      if (name === 'AggregateError') {\n        cloned.errors = structuredCloneInternal(value.errors, map);\n      } else if (name === 'SuppressedError') {\n        cloned.error = structuredCloneInternal(value.error, map);\n        cloned.suppressed = structuredCloneInternal(value.suppressed, map);\n      } // break omitted\n    case 'DOMException':\n      if (ERROR_STACK_INSTALLABLE) {\n        createNonEnumerableProperty(cloned, 'stack', structuredCloneInternal(value.stack, map));\n      }\n  }\n\n  return cloned;\n};\n\nvar tryToTransfer = function (rawTransfer, map) {\n  if (!isObject(rawTransfer)) throw new TypeError('Transfer option cannot be converted to a sequence');\n\n  var transfer = [];\n\n  iterate(rawTransfer, function (value) {\n    push(transfer, anObject(value));\n  });\n\n  var i = 0;\n  var length = lengthOfArrayLike(transfer);\n  var buffers = new Set();\n  var value, type, C, transferred, canvas, context;\n\n  while (i < length) {\n    value = transfer[i++];\n\n    type = classof(value);\n\n    if (type === 'ArrayBuffer' ? setHas(buffers, value) : mapHas(map, value)) {\n      throw new DOMException('Duplicate transferable', DATA_CLONE_ERROR);\n    }\n\n    if (type === 'ArrayBuffer') {\n      setAdd(buffers, value);\n      continue;\n    }\n\n    if (PROPER_STRUCTURED_CLONE_TRANSFER) {\n      transferred = nativeStructuredClone(value, { transfer: [value] });\n    } else switch (type) {\n      case 'ImageBitmap':\n        C = global.OffscreenCanvas;\n        if (!isConstructor(C)) throwUnpolyfillable(type, TRANSFERRING);\n        try {\n          canvas = new C(value.width, value.height);\n          context = canvas.getContext('bitmaprenderer');\n          context.transferFromImageBitmap(value);\n          transferred = canvas.transferToImageBitmap();\n        } catch (error) { /* empty */ }\n        break;\n      case 'AudioData':\n      case 'VideoFrame':\n        if (!isCallable(value.clone) || !isCallable(value.close)) throwUnpolyfillable(type, TRANSFERRING);\n        try {\n          transferred = value.clone();\n          value.close();\n        } catch (error) { /* empty */ }\n        break;\n      case 'MediaSourceHandle':\n      case 'MessagePort':\n      case 'OffscreenCanvas':\n      case 'ReadableStream':\n      case 'TransformStream':\n      case 'WritableStream':\n        throwUnpolyfillable(type, TRANSFERRING);\n    }\n\n    if (transferred === undefined) throw new DOMException('This object cannot be transferred: ' + type, DATA_CLONE_ERROR);\n\n    mapSet(map, value, transferred);\n  }\n\n  return buffers;\n};\n\nvar detachBuffers = function (buffers) {\n  setIterate(buffers, function (buffer) {\n    if (PROPER_STRUCTURED_CLONE_TRANSFER) {\n      nativeRestrictedStructuredClone(buffer, { transfer: [buffer] });\n    } else if (isCallable(buffer.transfer)) {\n      buffer.transfer();\n    } else if (detachTransferable) {\n      detachTransferable(buffer);\n    } else {\n      throwUnpolyfillable('ArrayBuffer', TRANSFERRING);\n    }\n  });\n};\n\n// `structuredClone` method\n// https://html.spec.whatwg.org/multipage/structured-data.html#dom-structuredclone\n$({ global: true, enumerable: true, sham: !PROPER_STRUCTURED_CLONE_TRANSFER, forced: FORCED_REPLACEMENT }, {\n  structuredClone: function structuredClone(value /* , { transfer } */) {\n    var options = validateArgumentsLength(arguments.length, 1) > 1 && !isNullOrUndefined(arguments[1]) ? anObject(arguments[1]) : undefined;\n    var transfer = options ? options.transfer : undefined;\n    var map, buffers;\n\n    if (transfer !== undefined) {\n      map = new Map();\n      buffers = tryToTransfer(transfer, map);\n    }\n\n    var clone = structuredCloneInternal(value, map);\n\n    // since of an issue with cloning views of transferred buffers, we a forced to detach them later\n    // https://github.com/zloirock/core-js/issues/1265\n    if (buffers) detachBuffers(buffers);\n\n    return clone;\n  }\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}