{"ast":null,"code":"/* global __react_refresh_error_overlay__, __react_refresh_socket__, __resourceQuery */\n\nconst events = require('./utils/errorEventHandlers.js');\nconst formatWebpackErrors = require('./utils/formatWebpackErrors.js');\nconst runWithPatchedUrl = require('./utils/patchUrl.js');\nconst runWithRetry = require('./utils/retry.js');\n\n// Setup error states\nlet isHotReload = false;\nlet hasRuntimeErrors = false;\n\n/**\n * Try dismissing the compile error overlay.\n * This will also reset runtime error records (if any),\n * because we have new source to evaluate.\n * @returns {void}\n */\nfunction tryDismissErrorOverlay() {\n  __react_refresh_error_overlay__.clearCompileError();\n  __react_refresh_error_overlay__.clearRuntimeErrors(!hasRuntimeErrors);\n  hasRuntimeErrors = false;\n}\n\n/**\n * A function called after a compile success signal is received from Webpack.\n * @returns {void}\n */\nfunction handleCompileSuccess() {\n  isHotReload = true;\n  if (isHotReload) {\n    tryDismissErrorOverlay();\n  }\n}\n\n/**\n * A function called after a compile errored signal is received from Webpack.\n * @param {string[]} errors\n * @returns {void}\n */\nfunction handleCompileErrors(errors) {\n  isHotReload = true;\n  const formattedErrors = formatWebpackErrors(errors);\n\n  // Only show the first error\n  __react_refresh_error_overlay__.showCompileError(formattedErrors[0]);\n}\n\n/**\n * Handles compilation messages from Webpack.\n * Integrates with a compile error overlay.\n * @param {*} message A Webpack HMR message sent via WebSockets.\n * @returns {void}\n */\nfunction compileMessageHandler(message) {\n  switch (message.type) {\n    case 'ok':\n    case 'still-ok':\n    case 'warnings':\n      {\n        // TODO: Implement handling for warnings\n        handleCompileSuccess();\n        break;\n      }\n    case 'errors':\n      {\n        handleCompileErrors(message.data);\n        break;\n      }\n    default:\n      {\n        // Do nothing.\n      }\n  }\n}\nif (process.env.NODE_ENV !== 'production') {\n  if (typeof window !== 'undefined') {\n    runWithPatchedUrl(function setupOverlay() {\n      // Only register if no other overlay have been registered\n      if (!window.__reactRefreshOverlayInjected && __react_refresh_socket__) {\n        // Registers handlers for compile errors with retry -\n        // This is to prevent mismatching injection order causing errors to be thrown\n        runWithRetry(function initSocket() {\n          __react_refresh_socket__.init(compileMessageHandler, __resourceQuery);\n        }, 3);\n        // Registers handlers for runtime errors\n        events.handleError(function handleError(error) {\n          hasRuntimeErrors = true;\n          __react_refresh_error_overlay__.handleRuntimeError(error);\n        });\n        events.handleUnhandledRejection(function handleUnhandledPromiseRejection(error) {\n          hasRuntimeErrors = true;\n          __react_refresh_error_overlay__.handleRuntimeError(error);\n        });\n\n        // Mark overlay as injected to prevent double-injection\n        window.__reactRefreshOverlayInjected = true;\n      }\n    });\n  }\n}","map":{"version":3,"names":["events","require","formatWebpackErrors","runWithPatchedUrl","runWithRetry","isHotReload","hasRuntimeErrors","tryDismissErrorOverlay","__react_refresh_error_overlay__","clearCompileError","clearRuntimeErrors","handleCompileSuccess","handleCompileErrors","errors","formattedErrors","showCompileError","compileMessageHandler","message","type","data","process","env","NODE_ENV","window","setupOverlay","__reactRefreshOverlayInjected","__react_refresh_socket__","initSocket","init","__resourceQuery","handleError","error","handleRuntimeError","handleUnhandledRejection","handleUnhandledPromiseRejection"],"sources":["C:/Users/chest/OneDrive/Documentos/GitHub/HackUPC/frontend/node_modules/@pmmmwh/react-refresh-webpack-plugin/client/ErrorOverlayEntry.js"],"sourcesContent":["/* global __react_refresh_error_overlay__, __react_refresh_socket__, __resourceQuery */\n\nconst events = require('./utils/errorEventHandlers.js');\nconst formatWebpackErrors = require('./utils/formatWebpackErrors.js');\nconst runWithPatchedUrl = require('./utils/patchUrl.js');\nconst runWithRetry = require('./utils/retry.js');\n\n// Setup error states\nlet isHotReload = false;\nlet hasRuntimeErrors = false;\n\n/**\n * Try dismissing the compile error overlay.\n * This will also reset runtime error records (if any),\n * because we have new source to evaluate.\n * @returns {void}\n */\nfunction tryDismissErrorOverlay() {\n  __react_refresh_error_overlay__.clearCompileError();\n  __react_refresh_error_overlay__.clearRuntimeErrors(!hasRuntimeErrors);\n  hasRuntimeErrors = false;\n}\n\n/**\n * A function called after a compile success signal is received from Webpack.\n * @returns {void}\n */\nfunction handleCompileSuccess() {\n  isHotReload = true;\n\n  if (isHotReload) {\n    tryDismissErrorOverlay();\n  }\n}\n\n/**\n * A function called after a compile errored signal is received from Webpack.\n * @param {string[]} errors\n * @returns {void}\n */\nfunction handleCompileErrors(errors) {\n  isHotReload = true;\n\n  const formattedErrors = formatWebpackErrors(errors);\n\n  // Only show the first error\n  __react_refresh_error_overlay__.showCompileError(formattedErrors[0]);\n}\n\n/**\n * Handles compilation messages from Webpack.\n * Integrates with a compile error overlay.\n * @param {*} message A Webpack HMR message sent via WebSockets.\n * @returns {void}\n */\nfunction compileMessageHandler(message) {\n  switch (message.type) {\n    case 'ok':\n    case 'still-ok':\n    case 'warnings': {\n      // TODO: Implement handling for warnings\n      handleCompileSuccess();\n      break;\n    }\n    case 'errors': {\n      handleCompileErrors(message.data);\n      break;\n    }\n    default: {\n      // Do nothing.\n    }\n  }\n}\n\nif (process.env.NODE_ENV !== 'production') {\n  if (typeof window !== 'undefined') {\n    runWithPatchedUrl(function setupOverlay() {\n      // Only register if no other overlay have been registered\n      if (!window.__reactRefreshOverlayInjected && __react_refresh_socket__) {\n        // Registers handlers for compile errors with retry -\n        // This is to prevent mismatching injection order causing errors to be thrown\n        runWithRetry(function initSocket() {\n          __react_refresh_socket__.init(compileMessageHandler, __resourceQuery);\n        }, 3);\n        // Registers handlers for runtime errors\n        events.handleError(function handleError(error) {\n          hasRuntimeErrors = true;\n          __react_refresh_error_overlay__.handleRuntimeError(error);\n        });\n        events.handleUnhandledRejection(function handleUnhandledPromiseRejection(error) {\n          hasRuntimeErrors = true;\n          __react_refresh_error_overlay__.handleRuntimeError(error);\n        });\n\n        // Mark overlay as injected to prevent double-injection\n        window.__reactRefreshOverlayInjected = true;\n      }\n    });\n  }\n}\n"],"mappings":"AAAA;;AAEA,MAAMA,MAAM,GAAGC,OAAO,CAAC,+BAA+B,CAAC;AACvD,MAAMC,mBAAmB,GAAGD,OAAO,CAAC,gCAAgC,CAAC;AACrE,MAAME,iBAAiB,GAAGF,OAAO,CAAC,qBAAqB,CAAC;AACxD,MAAMG,YAAY,GAAGH,OAAO,CAAC,kBAAkB,CAAC;;AAEhD;AACA,IAAII,WAAW,GAAG,KAAK;AACvB,IAAIC,gBAAgB,GAAG,KAAK;;AAE5B;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,sBAAsBA,CAAA,EAAG;EAChCC,+BAA+B,CAACC,iBAAiB,CAAC,CAAC;EACnDD,+BAA+B,CAACE,kBAAkB,CAAC,CAACJ,gBAAgB,CAAC;EACrEA,gBAAgB,GAAG,KAAK;AAC1B;;AAEA;AACA;AACA;AACA;AACA,SAASK,oBAAoBA,CAAA,EAAG;EAC9BN,WAAW,GAAG,IAAI;EAElB,IAAIA,WAAW,EAAE;IACfE,sBAAsB,CAAC,CAAC;EAC1B;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA,SAASK,mBAAmBA,CAACC,MAAM,EAAE;EACnCR,WAAW,GAAG,IAAI;EAElB,MAAMS,eAAe,GAAGZ,mBAAmB,CAACW,MAAM,CAAC;;EAEnD;EACAL,+BAA+B,CAACO,gBAAgB,CAACD,eAAe,CAAC,CAAC,CAAC,CAAC;AACtE;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAASE,qBAAqBA,CAACC,OAAO,EAAE;EACtC,QAAQA,OAAO,CAACC,IAAI;IAClB,KAAK,IAAI;IACT,KAAK,UAAU;IACf,KAAK,UAAU;MAAE;QACf;QACAP,oBAAoB,CAAC,CAAC;QACtB;MACF;IACA,KAAK,QAAQ;MAAE;QACbC,mBAAmB,CAACK,OAAO,CAACE,IAAI,CAAC;QACjC;MACF;IACA;MAAS;QACP;MAAA;EAEJ;AACF;AAEA,IAAIC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;EACzC,IAAI,OAAOC,MAAM,KAAK,WAAW,EAAE;IACjCpB,iBAAiB,CAAC,SAASqB,YAAYA,CAAA,EAAG;MACxC;MACA,IAAI,CAACD,MAAM,CAACE,6BAA6B,IAAIC,wBAAwB,EAAE;QACrE;QACA;QACAtB,YAAY,CAAC,SAASuB,UAAUA,CAAA,EAAG;UACjCD,wBAAwB,CAACE,IAAI,CAACZ,qBAAqB,EAAEa,eAAe,CAAC;QACvE,CAAC,EAAE,CAAC,CAAC;QACL;QACA7B,MAAM,CAAC8B,WAAW,CAAC,SAASA,WAAWA,CAACC,KAAK,EAAE;UAC7CzB,gBAAgB,GAAG,IAAI;UACvBE,+BAA+B,CAACwB,kBAAkB,CAACD,KAAK,CAAC;QAC3D,CAAC,CAAC;QACF/B,MAAM,CAACiC,wBAAwB,CAAC,SAASC,+BAA+BA,CAACH,KAAK,EAAE;UAC9EzB,gBAAgB,GAAG,IAAI;UACvBE,+BAA+B,CAACwB,kBAAkB,CAACD,KAAK,CAAC;QAC3D,CAAC,CAAC;;QAEF;QACAR,MAAM,CAACE,6BAA6B,GAAG,IAAI;MAC7C;IACF,CAAC,CAAC;EACJ;AACF","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}