{"ast":null,"code":"import e from \"postcss-value-parser\";\nconst t = /calc\\(/gim;\nconst a = a => {\n  const r = Object.assign({\n    preserve: !0\n  }, a);\n  return {\n    postcssPlugin: \"postcss-nested-calc\",\n    Declaration(a, {\n      result: s\n    }) {\n      if ((a.value.match(t) || []).length < 2) return;\n      if (a.variable) return;\n      const n = a.value;\n      let o;\n      try {\n        o = e(n);\n      } catch (e) {\n        return void a.warn(s, `Failed to parse value '${n}'. Leaving the original value intact.`);\n      }\n      if (void 0 === o) return;\n      e.walk(o.nodes, t => {\n        t.type && \"function\" === t.type && \"calc\" === t.value.toLowerCase() && e.walk(t.nodes, e => {\n          if (e.type && \"function\" === e.type) return \"calc\" === e.value.toLowerCase() && void (e.value = \"\");\n        });\n      }, !0);\n      const c = String(o);\n      c !== n && (r.preserve ? a.cloneBefore({\n        value: c\n      }) : a.replaceWith(a.clone({\n        value: c\n      })));\n    }\n  };\n};\na.postcss = !0;\nexport { a as default };","map":{"version":3,"names":["e","t","a","r","Object","assign","preserve","postcssPlugin","Declaration","result","s","value","match","length","variable","n","o","warn","walk","nodes","type","toLowerCase","c","String","cloneBefore","replaceWith","clone","postcss","default"],"sources":["C:/Users/chest/OneDrive/Documentos/GitHub/HackUPC/frontend/node_modules/@csstools/postcss-nested-calc/dist/index.mjs"],"sourcesContent":["import e from\"postcss-value-parser\";const t=/calc\\(/gim;const a=a=>{const r=Object.assign({preserve:!0},a);return{postcssPlugin:\"postcss-nested-calc\",Declaration(a,{result:s}){if((a.value.match(t)||[]).length<2)return;if(a.variable)return;const n=a.value;let o;try{o=e(n)}catch(e){return void a.warn(s,`Failed to parse value '${n}'. Leaving the original value intact.`)}if(void 0===o)return;e.walk(o.nodes,(t=>{t.type&&\"function\"===t.type&&\"calc\"===t.value.toLowerCase()&&e.walk(t.nodes,(e=>{if(e.type&&\"function\"===e.type)return\"calc\"===e.value.toLowerCase()&&void(e.value=\"\")}))}),!0);const c=String(o);c!==n&&(r.preserve?a.cloneBefore({value:c}):a.replaceWith(a.clone({value:c})))}}};a.postcss=!0;export{a as default};\n"],"mappings":"AAAA,OAAOA,CAAC,MAAK,sBAAsB;AAAC,MAAMC,CAAC,GAAC,WAAW;AAAC,MAAMC,CAAC,GAACA,CAAC,IAAE;EAAC,MAAMC,CAAC,GAACC,MAAM,CAACC,MAAM,CAAC;IAACC,QAAQ,EAAC,CAAC;EAAC,CAAC,EAACJ,CAAC,CAAC;EAAC,OAAM;IAACK,aAAa,EAAC,qBAAqB;IAACC,WAAWA,CAACN,CAAC,EAAC;MAACO,MAAM,EAACC;IAAC,CAAC,EAAC;MAAC,IAAG,CAACR,CAAC,CAACS,KAAK,CAACC,KAAK,CAACX,CAAC,CAAC,IAAE,EAAE,EAAEY,MAAM,GAAC,CAAC,EAAC;MAAO,IAAGX,CAAC,CAACY,QAAQ,EAAC;MAAO,MAAMC,CAAC,GAACb,CAAC,CAACS,KAAK;MAAC,IAAIK,CAAC;MAAC,IAAG;QAACA,CAAC,GAAChB,CAAC,CAACe,CAAC,CAAC;MAAA,CAAC,QAAMf,CAAC,EAAC;QAAC,OAAO,KAAKE,CAAC,CAACe,IAAI,CAACP,CAAC,EAAE,0BAAyBK,CAAE,uCAAsC,CAAC;MAAA;MAAC,IAAG,KAAK,CAAC,KAAGC,CAAC,EAAC;MAAOhB,CAAC,CAACkB,IAAI,CAACF,CAAC,CAACG,KAAK,EAAElB,CAAC,IAAE;QAACA,CAAC,CAACmB,IAAI,IAAE,UAAU,KAAGnB,CAAC,CAACmB,IAAI,IAAE,MAAM,KAAGnB,CAAC,CAACU,KAAK,CAACU,WAAW,CAAC,CAAC,IAAErB,CAAC,CAACkB,IAAI,CAACjB,CAAC,CAACkB,KAAK,EAAEnB,CAAC,IAAE;UAAC,IAAGA,CAAC,CAACoB,IAAI,IAAE,UAAU,KAAGpB,CAAC,CAACoB,IAAI,EAAC,OAAM,MAAM,KAAGpB,CAAC,CAACW,KAAK,CAACU,WAAW,CAAC,CAAC,IAAE,MAAKrB,CAAC,CAACW,KAAK,GAAC,EAAE,CAAC;QAAA,CAAE,CAAC;MAAA,CAAC,EAAE,CAAC,CAAC,CAAC;MAAC,MAAMW,CAAC,GAACC,MAAM,CAACP,CAAC,CAAC;MAACM,CAAC,KAAGP,CAAC,KAAGZ,CAAC,CAACG,QAAQ,GAACJ,CAAC,CAACsB,WAAW,CAAC;QAACb,KAAK,EAACW;MAAC,CAAC,CAAC,GAACpB,CAAC,CAACuB,WAAW,CAACvB,CAAC,CAACwB,KAAK,CAAC;QAACf,KAAK,EAACW;MAAC,CAAC,CAAC,CAAC,CAAC;IAAA;EAAC,CAAC;AAAA,CAAC;AAACpB,CAAC,CAACyB,OAAO,GAAC,CAAC,CAAC;AAAC,SAAOzB,CAAC,IAAI0B,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}