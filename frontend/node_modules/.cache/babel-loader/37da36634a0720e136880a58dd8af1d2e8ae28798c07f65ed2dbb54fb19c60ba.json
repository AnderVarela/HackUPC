{"ast":null,"code":"'use strict';\n\nvar bind = require('../internals/function-bind-context');\nvar IndexedObject = require('../internals/indexed-object');\nvar toObject = require('../internals/to-object');\nvar lengthOfArrayLike = require('../internals/length-of-array-like');\n\n// `Array.prototype.{ findLast, findLastIndex }` methods implementation\nvar createMethod = function (TYPE) {\n  var IS_FIND_LAST_INDEX = TYPE === 1;\n  return function ($this, callbackfn, that) {\n    var O = toObject($this);\n    var self = IndexedObject(O);\n    var index = lengthOfArrayLike(self);\n    var boundFunction = bind(callbackfn, that);\n    var value, result;\n    while (index-- > 0) {\n      value = self[index];\n      result = boundFunction(value, index, O);\n      if (result) switch (TYPE) {\n        case 0:\n          return value;\n        // findLast\n        case 1:\n          return index;\n        // findLastIndex\n      }\n    }\n    return IS_FIND_LAST_INDEX ? -1 : undefined;\n  };\n};\nmodule.exports = {\n  // `Array.prototype.findLast` method\n  // https://github.com/tc39/proposal-array-find-from-last\n  findLast: createMethod(0),\n  // `Array.prototype.findLastIndex` method\n  // https://github.com/tc39/proposal-array-find-from-last\n  findLastIndex: createMethod(1)\n};","map":{"version":3,"names":["bind","require","IndexedObject","toObject","lengthOfArrayLike","createMethod","TYPE","IS_FIND_LAST_INDEX","$this","callbackfn","that","O","self","index","boundFunction","value","result","undefined","module","exports","findLast","findLastIndex"],"sources":["C:/Users/chest/OneDrive/Documentos/GitHub/HackUPC/frontend/node_modules/core-js-pure/internals/array-iteration-from-last.js"],"sourcesContent":["'use strict';\nvar bind = require('../internals/function-bind-context');\nvar IndexedObject = require('../internals/indexed-object');\nvar toObject = require('../internals/to-object');\nvar lengthOfArrayLike = require('../internals/length-of-array-like');\n\n// `Array.prototype.{ findLast, findLastIndex }` methods implementation\nvar createMethod = function (TYPE) {\n  var IS_FIND_LAST_INDEX = TYPE === 1;\n  return function ($this, callbackfn, that) {\n    var O = toObject($this);\n    var self = IndexedObject(O);\n    var index = lengthOfArrayLike(self);\n    var boundFunction = bind(callbackfn, that);\n    var value, result;\n    while (index-- > 0) {\n      value = self[index];\n      result = boundFunction(value, index, O);\n      if (result) switch (TYPE) {\n        case 0: return value; // findLast\n        case 1: return index; // findLastIndex\n      }\n    }\n    return IS_FIND_LAST_INDEX ? -1 : undefined;\n  };\n};\n\nmodule.exports = {\n  // `Array.prototype.findLast` method\n  // https://github.com/tc39/proposal-array-find-from-last\n  findLast: createMethod(0),\n  // `Array.prototype.findLastIndex` method\n  // https://github.com/tc39/proposal-array-find-from-last\n  findLastIndex: createMethod(1)\n};\n"],"mappings":"AAAA,YAAY;;AACZ,IAAIA,IAAI,GAAGC,OAAO,CAAC,oCAAoC,CAAC;AACxD,IAAIC,aAAa,GAAGD,OAAO,CAAC,6BAA6B,CAAC;AAC1D,IAAIE,QAAQ,GAAGF,OAAO,CAAC,wBAAwB,CAAC;AAChD,IAAIG,iBAAiB,GAAGH,OAAO,CAAC,mCAAmC,CAAC;;AAEpE;AACA,IAAII,YAAY,GAAG,SAAAA,CAAUC,IAAI,EAAE;EACjC,IAAIC,kBAAkB,GAAGD,IAAI,KAAK,CAAC;EACnC,OAAO,UAAUE,KAAK,EAAEC,UAAU,EAAEC,IAAI,EAAE;IACxC,IAAIC,CAAC,GAAGR,QAAQ,CAACK,KAAK,CAAC;IACvB,IAAII,IAAI,GAAGV,aAAa,CAACS,CAAC,CAAC;IAC3B,IAAIE,KAAK,GAAGT,iBAAiB,CAACQ,IAAI,CAAC;IACnC,IAAIE,aAAa,GAAGd,IAAI,CAACS,UAAU,EAAEC,IAAI,CAAC;IAC1C,IAAIK,KAAK,EAAEC,MAAM;IACjB,OAAOH,KAAK,EAAE,GAAG,CAAC,EAAE;MAClBE,KAAK,GAAGH,IAAI,CAACC,KAAK,CAAC;MACnBG,MAAM,GAAGF,aAAa,CAACC,KAAK,EAAEF,KAAK,EAAEF,CAAC,CAAC;MACvC,IAAIK,MAAM,EAAE,QAAQV,IAAI;QACtB,KAAK,CAAC;UAAE,OAAOS,KAAK;QAAE;QACtB,KAAK,CAAC;UAAE,OAAOF,KAAK;QAAE;MACxB;IACF;IACA,OAAON,kBAAkB,GAAG,CAAC,CAAC,GAAGU,SAAS;EAC5C,CAAC;AACH,CAAC;AAEDC,MAAM,CAACC,OAAO,GAAG;EACf;EACA;EACAC,QAAQ,EAAEf,YAAY,CAAC,CAAC,CAAC;EACzB;EACA;EACAgB,aAAa,EAAEhB,YAAY,CAAC,CAAC;AAC/B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}