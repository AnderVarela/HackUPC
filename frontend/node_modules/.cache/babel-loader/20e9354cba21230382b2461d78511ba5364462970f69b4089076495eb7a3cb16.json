{"ast":null,"code":"var configuration = require('../../configuration');\nvar InvalidPropertyError = require('../../invalid-property-error');\nfunction populateComponents(properties, validator, warnings) {\n  var component;\n  var j, m;\n  for (var i = properties.length - 1; i >= 0; i--) {\n    var property = properties[i];\n    var descriptor = configuration[property.name];\n    if (!property.dynamic && descriptor && descriptor.shorthand) {\n      if (onlyValueIsVariable(property, validator) || moreThanOneValueIsVariable(property, validator)) {\n        property.optimizable = false;\n        continue;\n      }\n      property.shorthand = true;\n      property.dirty = true;\n      try {\n        property.components = descriptor.breakUp(property, configuration, validator);\n        if (descriptor.shorthandComponents) {\n          for (j = 0, m = property.components.length; j < m; j++) {\n            component = property.components[j];\n            component.components = configuration[component.name].breakUp(component, configuration, validator);\n          }\n        }\n      } catch (e) {\n        if (e instanceof InvalidPropertyError) {\n          property.components = []; // this will set property.unused to true below\n          warnings.push(e.message);\n        } else {\n          throw e;\n        }\n      }\n      if (property.components.length > 0) {\n        property.multiplex = property.components[0].multiplex;\n      } else {\n        property.unused = true;\n      }\n    }\n  }\n}\nfunction onlyValueIsVariable(property, validator) {\n  return property.value.length == 1 && validator.isVariable(property.value[0][1]);\n}\nfunction moreThanOneValueIsVariable(property, validator) {\n  return property.value.length > 1 && property.value.filter(function (value) {\n    return validator.isVariable(value[1]);\n  }).length > 1;\n}\nmodule.exports = populateComponents;","map":{"version":3,"names":["configuration","require","InvalidPropertyError","populateComponents","properties","validator","warnings","component","j","m","i","length","property","descriptor","name","dynamic","shorthand","onlyValueIsVariable","moreThanOneValueIsVariable","optimizable","dirty","components","breakUp","shorthandComponents","e","push","message","multiplex","unused","value","isVariable","filter","module","exports"],"sources":["C:/Users/chest/OneDrive/Documentos/GitHub/HackUPC/frontend/node_modules/clean-css/lib/optimizer/level-2/properties/populate-components.js"],"sourcesContent":["var configuration = require('../../configuration');\nvar InvalidPropertyError = require('../../invalid-property-error');\n\nfunction populateComponents(properties, validator, warnings) {\n  var component;\n  var j, m;\n\n  for (var i = properties.length - 1; i >= 0; i--) {\n    var property = properties[i];\n    var descriptor = configuration[property.name];\n\n    if (!property.dynamic && descriptor && descriptor.shorthand) {\n      if (onlyValueIsVariable(property, validator) || moreThanOneValueIsVariable(property, validator)) {\n        property.optimizable = false;\n        continue;\n      }\n\n      property.shorthand = true;\n      property.dirty = true;\n\n      try {\n        property.components = descriptor.breakUp(property, configuration, validator);\n\n        if (descriptor.shorthandComponents) {\n          for (j = 0, m = property.components.length; j < m; j++) {\n            component = property.components[j];\n            component.components = configuration[component.name].breakUp(component, configuration, validator);\n          }\n        }\n      } catch (e) {\n        if (e instanceof InvalidPropertyError) {\n          property.components = []; // this will set property.unused to true below\n          warnings.push(e.message);\n        } else {\n          throw e;\n        }\n      }\n\n      if (property.components.length > 0) {\n        property.multiplex = property.components[0].multiplex;\n      } else {\n        property.unused = true;\n      }\n    }\n  }\n}\n\nfunction onlyValueIsVariable(property, validator) {\n  return property.value.length == 1 && validator.isVariable(property.value[0][1]);\n}\n\nfunction moreThanOneValueIsVariable(property, validator) {\n  return property.value.length > 1\n    && property.value.filter(\n      function(value) {\n        return validator.isVariable(value[1]);\n      }\n    ).length > 1;\n}\n\nmodule.exports = populateComponents;\n"],"mappings":"AAAA,IAAIA,aAAa,GAAGC,OAAO,CAAC,qBAAqB,CAAC;AAClD,IAAIC,oBAAoB,GAAGD,OAAO,CAAC,8BAA8B,CAAC;AAElE,SAASE,kBAAkBA,CAACC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,EAAE;EAC3D,IAAIC,SAAS;EACb,IAAIC,CAAC,EAAEC,CAAC;EAER,KAAK,IAAIC,CAAC,GAAGN,UAAU,CAACO,MAAM,GAAG,CAAC,EAAED,CAAC,IAAI,CAAC,EAAEA,CAAC,EAAE,EAAE;IAC/C,IAAIE,QAAQ,GAAGR,UAAU,CAACM,CAAC,CAAC;IAC5B,IAAIG,UAAU,GAAGb,aAAa,CAACY,QAAQ,CAACE,IAAI,CAAC;IAE7C,IAAI,CAACF,QAAQ,CAACG,OAAO,IAAIF,UAAU,IAAIA,UAAU,CAACG,SAAS,EAAE;MAC3D,IAAIC,mBAAmB,CAACL,QAAQ,EAAEP,SAAS,CAAC,IAAIa,0BAA0B,CAACN,QAAQ,EAAEP,SAAS,CAAC,EAAE;QAC/FO,QAAQ,CAACO,WAAW,GAAG,KAAK;QAC5B;MACF;MAEAP,QAAQ,CAACI,SAAS,GAAG,IAAI;MACzBJ,QAAQ,CAACQ,KAAK,GAAG,IAAI;MAErB,IAAI;QACFR,QAAQ,CAACS,UAAU,GAAGR,UAAU,CAACS,OAAO,CAACV,QAAQ,EAAEZ,aAAa,EAAEK,SAAS,CAAC;QAE5E,IAAIQ,UAAU,CAACU,mBAAmB,EAAE;UAClC,KAAKf,CAAC,GAAG,CAAC,EAAEC,CAAC,GAAGG,QAAQ,CAACS,UAAU,CAACV,MAAM,EAAEH,CAAC,GAAGC,CAAC,EAAED,CAAC,EAAE,EAAE;YACtDD,SAAS,GAAGK,QAAQ,CAACS,UAAU,CAACb,CAAC,CAAC;YAClCD,SAAS,CAACc,UAAU,GAAGrB,aAAa,CAACO,SAAS,CAACO,IAAI,CAAC,CAACQ,OAAO,CAACf,SAAS,EAAEP,aAAa,EAAEK,SAAS,CAAC;UACnG;QACF;MACF,CAAC,CAAC,OAAOmB,CAAC,EAAE;QACV,IAAIA,CAAC,YAAYtB,oBAAoB,EAAE;UACrCU,QAAQ,CAACS,UAAU,GAAG,EAAE,CAAC,CAAC;UAC1Bf,QAAQ,CAACmB,IAAI,CAACD,CAAC,CAACE,OAAO,CAAC;QAC1B,CAAC,MAAM;UACL,MAAMF,CAAC;QACT;MACF;MAEA,IAAIZ,QAAQ,CAACS,UAAU,CAACV,MAAM,GAAG,CAAC,EAAE;QAClCC,QAAQ,CAACe,SAAS,GAAGf,QAAQ,CAACS,UAAU,CAAC,CAAC,CAAC,CAACM,SAAS;MACvD,CAAC,MAAM;QACLf,QAAQ,CAACgB,MAAM,GAAG,IAAI;MACxB;IACF;EACF;AACF;AAEA,SAASX,mBAAmBA,CAACL,QAAQ,EAAEP,SAAS,EAAE;EAChD,OAAOO,QAAQ,CAACiB,KAAK,CAAClB,MAAM,IAAI,CAAC,IAAIN,SAAS,CAACyB,UAAU,CAAClB,QAAQ,CAACiB,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjF;AAEA,SAASX,0BAA0BA,CAACN,QAAQ,EAAEP,SAAS,EAAE;EACvD,OAAOO,QAAQ,CAACiB,KAAK,CAAClB,MAAM,GAAG,CAAC,IAC3BC,QAAQ,CAACiB,KAAK,CAACE,MAAM,CACtB,UAASF,KAAK,EAAE;IACd,OAAOxB,SAAS,CAACyB,UAAU,CAACD,KAAK,CAAC,CAAC,CAAC,CAAC;EACvC,CACF,CAAC,CAAClB,MAAM,GAAG,CAAC;AAChB;AAEAqB,MAAM,CAACC,OAAO,GAAG9B,kBAAkB","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}