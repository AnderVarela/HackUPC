{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createPath = createPath;\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n    keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n  return target;\n}\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction findParent(_ref, cb) {\n  var parentPath = _ref.parentPath;\n  if (parentPath == null) {\n    throw new Error(\"node is root\");\n  }\n  var currentPath = parentPath;\n  while (cb(currentPath) !== false) {\n    // Hit the root node, stop\n    // $FlowIgnore\n    if (currentPath.parentPath == null) {\n      return null;\n    } // $FlowIgnore\n\n    currentPath = currentPath.parentPath;\n  }\n  return currentPath.node;\n}\nfunction insertBefore(context, newNode) {\n  return insert(context, newNode);\n}\nfunction insertAfter(context, newNode) {\n  return insert(context, newNode, 1);\n}\nfunction insert(_ref2, newNode) {\n  var node = _ref2.node,\n    inList = _ref2.inList,\n    parentPath = _ref2.parentPath,\n    parentKey = _ref2.parentKey;\n  var indexOffset = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n  if (!inList) {\n    throw new Error('inList' + \" error: \" + (\"insert can only be used for nodes that are within lists\" || \"unknown\"));\n  }\n  if (!(parentPath != null)) {\n    throw new Error('parentPath != null' + \" error: \" + (\"Can not remove root node\" || \"unknown\"));\n  }\n\n  // $FlowIgnore\n  var parentList = parentPath.node[parentKey];\n  var indexInList = parentList.findIndex(function (n) {\n    return n === node;\n  });\n  parentList.splice(indexInList + indexOffset, 0, newNode);\n}\nfunction remove(_ref3) {\n  var node = _ref3.node,\n    parentKey = _ref3.parentKey,\n    parentPath = _ref3.parentPath;\n  if (!(parentPath != null)) {\n    throw new Error('parentPath != null' + \" error: \" + (\"Can not remove root node\" || \"unknown\"));\n  }\n\n  // $FlowIgnore\n  var parentNode = parentPath.node; // $FlowIgnore\n\n  var parentProperty = parentNode[parentKey];\n  if (Array.isArray(parentProperty)) {\n    // $FlowIgnore\n    parentNode[parentKey] = parentProperty.filter(function (n) {\n      return n !== node;\n    });\n  } else {\n    // $FlowIgnore\n    delete parentNode[parentKey];\n  }\n  node._deleted = true;\n}\nfunction stop(context) {\n  context.shouldStop = true;\n}\nfunction replaceWith(context, newNode) {\n  // $FlowIgnore\n  var parentNode = context.parentPath.node; // $FlowIgnore\n\n  var parentProperty = parentNode[context.parentKey];\n  if (Array.isArray(parentProperty)) {\n    var indexInList = parentProperty.findIndex(function (n) {\n      return n === context.node;\n    });\n    parentProperty.splice(indexInList, 1, newNode);\n  } else {\n    // $FlowIgnore\n    parentNode[context.parentKey] = newNode;\n  }\n  context.node._deleted = true;\n  context.node = newNode;\n} // bind the context to the first argument of node operations\n\nfunction bindNodeOperations(operations, context) {\n  var keys = Object.keys(operations);\n  var boundOperations = {};\n  keys.forEach(function (key) {\n    boundOperations[key] = operations[key].bind(null, context);\n  });\n  return boundOperations;\n}\nfunction createPathOperations(context) {\n  // $FlowIgnore\n  return bindNodeOperations({\n    findParent: findParent,\n    replaceWith: replaceWith,\n    remove: remove,\n    insertBefore: insertBefore,\n    insertAfter: insertAfter,\n    stop: stop\n  }, context);\n}\nfunction createPath(context) {\n  var path = _objectSpread({}, context); // $FlowIgnore\n\n  Object.assign(path, createPathOperations(path)); // $FlowIgnore\n\n  return path;\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","createPath","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","obj","configurable","writable","findParent","_ref","cb","parentPath","Error","currentPath","node","insertBefore","context","newNode","insert","insertAfter","_ref2","inList","parentKey","indexOffset","undefined","parentList","indexInList","findIndex","n","splice","remove","_ref3","parentNode","parentProperty","Array","isArray","_deleted","stop","shouldStop","replaceWith","bindNodeOperations","operations","boundOperations","bind","createPathOperations","path","assign"],"sources":["C:/Users/chest/OneDrive/Documentos/GitHub/HackUPC/frontend/node_modules/@webassemblyjs/ast/lib/node-path.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createPath = createPath;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction findParent(_ref, cb) {\n  var parentPath = _ref.parentPath;\n\n  if (parentPath == null) {\n    throw new Error(\"node is root\");\n  }\n\n  var currentPath = parentPath;\n\n  while (cb(currentPath) !== false) {\n    // Hit the root node, stop\n    // $FlowIgnore\n    if (currentPath.parentPath == null) {\n      return null;\n    } // $FlowIgnore\n\n\n    currentPath = currentPath.parentPath;\n  }\n\n  return currentPath.node;\n}\n\nfunction insertBefore(context, newNode) {\n  return insert(context, newNode);\n}\n\nfunction insertAfter(context, newNode) {\n  return insert(context, newNode, 1);\n}\n\nfunction insert(_ref2, newNode) {\n  var node = _ref2.node,\n      inList = _ref2.inList,\n      parentPath = _ref2.parentPath,\n      parentKey = _ref2.parentKey;\n  var indexOffset = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n\n  if (!inList) {\n    throw new Error('inList' + \" error: \" + (\"insert can only be used for nodes that are within lists\" || \"unknown\"));\n  }\n\n  if (!(parentPath != null)) {\n    throw new Error('parentPath != null' + \" error: \" + (\"Can not remove root node\" || \"unknown\"));\n  }\n\n  // $FlowIgnore\n  var parentList = parentPath.node[parentKey];\n  var indexInList = parentList.findIndex(function (n) {\n    return n === node;\n  });\n  parentList.splice(indexInList + indexOffset, 0, newNode);\n}\n\nfunction remove(_ref3) {\n  var node = _ref3.node,\n      parentKey = _ref3.parentKey,\n      parentPath = _ref3.parentPath;\n\n  if (!(parentPath != null)) {\n    throw new Error('parentPath != null' + \" error: \" + (\"Can not remove root node\" || \"unknown\"));\n  }\n\n  // $FlowIgnore\n  var parentNode = parentPath.node; // $FlowIgnore\n\n  var parentProperty = parentNode[parentKey];\n\n  if (Array.isArray(parentProperty)) {\n    // $FlowIgnore\n    parentNode[parentKey] = parentProperty.filter(function (n) {\n      return n !== node;\n    });\n  } else {\n    // $FlowIgnore\n    delete parentNode[parentKey];\n  }\n\n  node._deleted = true;\n}\n\nfunction stop(context) {\n  context.shouldStop = true;\n}\n\nfunction replaceWith(context, newNode) {\n  // $FlowIgnore\n  var parentNode = context.parentPath.node; // $FlowIgnore\n\n  var parentProperty = parentNode[context.parentKey];\n\n  if (Array.isArray(parentProperty)) {\n    var indexInList = parentProperty.findIndex(function (n) {\n      return n === context.node;\n    });\n    parentProperty.splice(indexInList, 1, newNode);\n  } else {\n    // $FlowIgnore\n    parentNode[context.parentKey] = newNode;\n  }\n\n  context.node._deleted = true;\n  context.node = newNode;\n} // bind the context to the first argument of node operations\n\n\nfunction bindNodeOperations(operations, context) {\n  var keys = Object.keys(operations);\n  var boundOperations = {};\n  keys.forEach(function (key) {\n    boundOperations[key] = operations[key].bind(null, context);\n  });\n  return boundOperations;\n}\n\nfunction createPathOperations(context) {\n  // $FlowIgnore\n  return bindNodeOperations({\n    findParent: findParent,\n    replaceWith: replaceWith,\n    remove: remove,\n    insertBefore: insertBefore,\n    insertAfter: insertAfter,\n    stop: stop\n  }, context);\n}\n\nfunction createPath(context) {\n  var path = _objectSpread({}, context); // $FlowIgnore\n\n\n  Object.assign(path, createPathOperations(path)); // $FlowIgnore\n\n  return path;\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}