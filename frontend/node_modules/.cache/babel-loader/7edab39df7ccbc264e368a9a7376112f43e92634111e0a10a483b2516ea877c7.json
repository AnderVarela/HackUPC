{"ast":null,"code":"const {\n  assert\n} = require(\"chai\");\nconst {\n  decode,\n  encode\n} = require(\"../lib\");\ndescribe(\"UTF8\", () => {\n  it(\"should f-1(f(x)) = x\", () => {\n    assert.equal(decode(encode(\"foo\")), \"foo\");\n    assert.equal(decode(encode(\"√©√©\")), \"√©√©\");\n\n    // TODO(sven): utf8 encoder fails here\n    // assert.equal(decode(encode(\"ü§£ËßÅË¶ã\")), \"ü§£ËßÅË¶ã\");\n  });\n});","map":{"version":3,"names":["assert","require","decode","encode","describe","it","equal"],"sources":["C:/Users/chest/OneDrive/Documentos/GitHub/HackUPC/frontend/node_modules/@webassemblyjs/utf8/test/index.js"],"sourcesContent":["const { assert } = require(\"chai\");\n\nconst { decode, encode } = require(\"../lib\");\n\ndescribe(\"UTF8\", () => {\n  it(\"should f-1(f(x)) = x\", () => {\n    assert.equal(decode(encode(\"foo\")), \"foo\");\n    assert.equal(decode(encode(\"√©√©\")), \"√©√©\");\n\n    // TODO(sven): utf8 encoder fails here\n    // assert.equal(decode(encode(\"ü§£ËßÅË¶ã\")), \"ü§£ËßÅË¶ã\");\n  });\n});\n"],"mappings":"AAAA,MAAM;EAAEA;AAAO,CAAC,GAAGC,OAAO,CAAC,MAAM,CAAC;AAElC,MAAM;EAAEC,MAAM;EAAEC;AAAO,CAAC,GAAGF,OAAO,CAAC,QAAQ,CAAC;AAE5CG,QAAQ,CAAC,MAAM,EAAE,MAAM;EACrBC,EAAE,CAAC,sBAAsB,EAAE,MAAM;IAC/BL,MAAM,CAACM,KAAK,CAACJ,MAAM,CAACC,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC;IAC1CH,MAAM,CAACM,KAAK,CAACJ,MAAM,CAACC,MAAM,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC;;IAExC;IACA;EACF,CAAC,CAAC;AACJ,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}