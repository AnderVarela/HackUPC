{"ast":null,"code":"import { match } from '@formatjs/intl-localematcher';\nimport { supportedLocales } from './supported-locales.generated';\nfunction supportedLocalesOf(locale) {\n  if (!locale) {\n    return true;\n  }\n  var locales = Array.isArray(locale) ? locale : [locale];\n  return Intl.ListFormat.supportedLocalesOf(locales).length === locales.length;\n}\nexport function shouldPolyfill(locale) {\n  if (locale === void 0) {\n    locale = 'en';\n  }\n  if (!('ListFormat' in Intl) || !supportedLocalesOf(locale)) {\n    return locale ? match([locale], supportedLocales, 'en') : undefined;\n  }\n}","map":{"version":3,"names":["match","supportedLocales","supportedLocalesOf","locale","locales","Array","isArray","Intl","ListFormat","length","shouldPolyfill","undefined"],"sources":["C:/Users/chest/OneDrive/Documentos/GitHub/HackUPC/frontend/node_modules/@formatjs/intl-listformat/lib/should-polyfill.js"],"sourcesContent":["import { match } from '@formatjs/intl-localematcher';\nimport { supportedLocales } from './supported-locales.generated';\nfunction supportedLocalesOf(locale) {\n    if (!locale) {\n        return true;\n    }\n    var locales = Array.isArray(locale) ? locale : [locale];\n    return (Intl.ListFormat.supportedLocalesOf(locales).length ===\n        locales.length);\n}\nexport function shouldPolyfill(locale) {\n    if (locale === void 0) { locale = 'en'; }\n    if (!('ListFormat' in Intl) || !supportedLocalesOf(locale)) {\n        return locale ? match([locale], supportedLocales, 'en') : undefined;\n    }\n}\n"],"mappings":"AAAA,SAASA,KAAK,QAAQ,8BAA8B;AACpD,SAASC,gBAAgB,QAAQ,+BAA+B;AAChE,SAASC,kBAAkBA,CAACC,MAAM,EAAE;EAChC,IAAI,CAACA,MAAM,EAAE;IACT,OAAO,IAAI;EACf;EACA,IAAIC,OAAO,GAAGC,KAAK,CAACC,OAAO,CAACH,MAAM,CAAC,GAAGA,MAAM,GAAG,CAACA,MAAM,CAAC;EACvD,OAAQI,IAAI,CAACC,UAAU,CAACN,kBAAkB,CAACE,OAAO,CAAC,CAACK,MAAM,KACtDL,OAAO,CAACK,MAAM;AACtB;AACA,OAAO,SAASC,cAAcA,CAACP,MAAM,EAAE;EACnC,IAAIA,MAAM,KAAK,KAAK,CAAC,EAAE;IAAEA,MAAM,GAAG,IAAI;EAAE;EACxC,IAAI,EAAE,YAAY,IAAII,IAAI,CAAC,IAAI,CAACL,kBAAkB,CAACC,MAAM,CAAC,EAAE;IACxD,OAAOA,MAAM,GAAGH,KAAK,CAAC,CAACG,MAAM,CAAC,EAAEF,gBAAgB,EAAE,IAAI,CAAC,GAAGU,SAAS;EACvE;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}