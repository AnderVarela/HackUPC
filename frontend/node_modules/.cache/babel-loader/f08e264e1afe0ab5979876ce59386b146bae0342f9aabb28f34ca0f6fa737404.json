{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.default = void 0;\nvar _jestGetType = require('jest-get-type');\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nconst supportTypes = ['map', 'array', 'object'];\n\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\nclass Replaceable {\n  constructor(object) {\n    _defineProperty(this, 'object', void 0);\n    _defineProperty(this, 'type', void 0);\n    this.object = object;\n    this.type = (0, _jestGetType.getType)(object);\n    if (!supportTypes.includes(this.type)) {\n      throw new Error(`Type ${this.type} is not support in Replaceable!`);\n    }\n  }\n  static isReplaceable(obj1, obj2) {\n    const obj1Type = (0, _jestGetType.getType)(obj1);\n    const obj2Type = (0, _jestGetType.getType)(obj2);\n    return obj1Type === obj2Type && supportTypes.includes(obj1Type);\n  }\n  forEach(cb) {\n    if (this.type === 'object') {\n      const descriptors = Object.getOwnPropertyDescriptors(this.object);\n      [...Object.keys(descriptors), ...Object.getOwnPropertySymbols(descriptors)] //@ts-expect-error because typescript do not support symbol key in object\n      //https://github.com/microsoft/TypeScript/issues/1863\n      .filter(key => descriptors[key].enumerable).forEach(key => {\n        cb(this.object[key], key, this.object);\n      });\n    } else {\n      this.object.forEach(cb);\n    }\n  }\n  get(key) {\n    if (this.type === 'map') {\n      return this.object.get(key);\n    }\n    return this.object[key];\n  }\n  set(key, value) {\n    if (this.type === 'map') {\n      this.object.set(key, value);\n    } else {\n      this.object[key] = value;\n    }\n  }\n}\n/* eslint-enable */\n\nexports.default = Replaceable;","map":{"version":3,"names":["Object","defineProperty","exports","value","default","_jestGetType","require","_defineProperty","obj","key","enumerable","configurable","writable","supportTypes","Replaceable","constructor","object","type","getType","includes","Error","isReplaceable","obj1","obj2","obj1Type","obj2Type","forEach","cb","descriptors","getOwnPropertyDescriptors","keys","getOwnPropertySymbols","filter","get","set"],"sources":["C:/Users/chest/OneDrive/Documentos/GitHub/HackUPC/frontend/node_modules/@jest/globals/node_modules/jest-matcher-utils/build/Replaceable.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.default = void 0;\n\nvar _jestGetType = require('jest-get-type');\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\n\nconst supportTypes = ['map', 'array', 'object'];\n\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\nclass Replaceable {\n  constructor(object) {\n    _defineProperty(this, 'object', void 0);\n\n    _defineProperty(this, 'type', void 0);\n\n    this.object = object;\n    this.type = (0, _jestGetType.getType)(object);\n\n    if (!supportTypes.includes(this.type)) {\n      throw new Error(`Type ${this.type} is not support in Replaceable!`);\n    }\n  }\n\n  static isReplaceable(obj1, obj2) {\n    const obj1Type = (0, _jestGetType.getType)(obj1);\n    const obj2Type = (0, _jestGetType.getType)(obj2);\n    return obj1Type === obj2Type && supportTypes.includes(obj1Type);\n  }\n\n  forEach(cb) {\n    if (this.type === 'object') {\n      const descriptors = Object.getOwnPropertyDescriptors(this.object);\n      [\n        ...Object.keys(descriptors),\n        ...Object.getOwnPropertySymbols(descriptors)\n      ] //@ts-expect-error because typescript do not support symbol key in object\n        //https://github.com/microsoft/TypeScript/issues/1863\n        .filter(key => descriptors[key].enumerable)\n        .forEach(key => {\n          cb(this.object[key], key, this.object);\n        });\n    } else {\n      this.object.forEach(cb);\n    }\n  }\n\n  get(key) {\n    if (this.type === 'map') {\n      return this.object.get(key);\n    }\n\n    return this.object[key];\n  }\n\n  set(key, value) {\n    if (this.type === 'map') {\n      this.object.set(key, value);\n    } else {\n      this.object[key] = value;\n    }\n  }\n}\n/* eslint-enable */\n\nexports.default = Replaceable;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}