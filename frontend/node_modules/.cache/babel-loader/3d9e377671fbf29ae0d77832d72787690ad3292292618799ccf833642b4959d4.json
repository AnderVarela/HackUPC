{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.default = getCallsite;\nfunction _callsites() {\n  const data = _interopRequireDefault(require('callsites'));\n  _callsites = function () {\n    return data;\n  };\n  return data;\n}\nfunction _gracefulFs() {\n  const data = require('graceful-fs');\n  _gracefulFs = function () {\n    return data;\n  };\n  return data;\n}\nfunction _sourceMap() {\n  const data = require('source-map');\n  _sourceMap = function () {\n    return data;\n  };\n  return data;\n}\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n// Copied from https://github.com/rexxars/sourcemap-decorate-callsites/blob/5b9735a156964973a75dc62fd2c7f0c1975458e8/lib/index.js#L113-L158\nconst addSourceMapConsumer = (callsite, consumer) => {\n  const getLineNumber = callsite.getLineNumber;\n  const getColumnNumber = callsite.getColumnNumber;\n  let position = null;\n  function getPosition() {\n    if (!position) {\n      position = consumer.originalPositionFor({\n        column: getColumnNumber.call(callsite) || -1,\n        line: getLineNumber.call(callsite) || -1\n      });\n    }\n    return position;\n  }\n  Object.defineProperties(callsite, {\n    getColumnNumber: {\n      value() {\n        return getPosition().column || getColumnNumber.call(callsite);\n      },\n      writable: false\n    },\n    getLineNumber: {\n      value() {\n        return getPosition().line || getLineNumber.call(callsite);\n      },\n      writable: false\n    }\n  });\n};\nfunction getCallsite(level, sourceMaps) {\n  const levelAfterThisCall = level + 1;\n  const stack = (0, _callsites().default)()[levelAfterThisCall];\n  const sourceMapFileName = sourceMaps === null || sourceMaps === void 0 ? void 0 : sourceMaps.get(stack.getFileName() || '');\n  if (sourceMapFileName) {\n    try {\n      const sourceMap = (0, _gracefulFs().readFileSync)(sourceMapFileName, 'utf8'); // @ts-expect-error: Not allowed to pass string\n\n      addSourceMapConsumer(stack, new (_sourceMap().SourceMapConsumer)(sourceMap));\n    } catch {\n      // ignore\n    }\n  }\n  return stack;\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","default","getCallsite","_callsites","data","_interopRequireDefault","require","_gracefulFs","_sourceMap","obj","__esModule","addSourceMapConsumer","callsite","consumer","getLineNumber","getColumnNumber","position","getPosition","originalPositionFor","column","call","line","defineProperties","writable","level","sourceMaps","levelAfterThisCall","stack","sourceMapFileName","get","getFileName","sourceMap","readFileSync","SourceMapConsumer"],"sources":["C:/Users/chest/OneDrive/Documentos/GitHub/HackUPC/frontend/node_modules/@jest/source-map/build/getCallsite.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.default = getCallsite;\n\nfunction _callsites() {\n  const data = _interopRequireDefault(require('callsites'));\n\n  _callsites = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _gracefulFs() {\n  const data = require('graceful-fs');\n\n  _gracefulFs = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _sourceMap() {\n  const data = require('source-map');\n\n  _sourceMap = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {default: obj};\n}\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n// Copied from https://github.com/rexxars/sourcemap-decorate-callsites/blob/5b9735a156964973a75dc62fd2c7f0c1975458e8/lib/index.js#L113-L158\nconst addSourceMapConsumer = (callsite, consumer) => {\n  const getLineNumber = callsite.getLineNumber;\n  const getColumnNumber = callsite.getColumnNumber;\n  let position = null;\n\n  function getPosition() {\n    if (!position) {\n      position = consumer.originalPositionFor({\n        column: getColumnNumber.call(callsite) || -1,\n        line: getLineNumber.call(callsite) || -1\n      });\n    }\n\n    return position;\n  }\n\n  Object.defineProperties(callsite, {\n    getColumnNumber: {\n      value() {\n        return getPosition().column || getColumnNumber.call(callsite);\n      },\n\n      writable: false\n    },\n    getLineNumber: {\n      value() {\n        return getPosition().line || getLineNumber.call(callsite);\n      },\n\n      writable: false\n    }\n  });\n};\n\nfunction getCallsite(level, sourceMaps) {\n  const levelAfterThisCall = level + 1;\n  const stack = (0, _callsites().default)()[levelAfterThisCall];\n  const sourceMapFileName =\n    sourceMaps === null || sourceMaps === void 0\n      ? void 0\n      : sourceMaps.get(stack.getFileName() || '');\n\n  if (sourceMapFileName) {\n    try {\n      const sourceMap = (0, _gracefulFs().readFileSync)(\n        sourceMapFileName,\n        'utf8'\n      ); // @ts-expect-error: Not allowed to pass string\n\n      addSourceMapConsumer(\n        stack,\n        new (_sourceMap().SourceMapConsumer)(sourceMap)\n      );\n    } catch {\n      // ignore\n    }\n  }\n\n  return stack;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}