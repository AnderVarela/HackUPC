{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.default = getNoTestFoundVerbose;\nfunction _chalk() {\n  const data = _interopRequireDefault(require('chalk'));\n  _chalk = function () {\n    return data;\n  };\n  return data;\n}\nvar _pluralize = _interopRequireDefault(require('./pluralize'));\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nfunction getNoTestFoundVerbose(testRunData, globalConfig) {\n  const individualResults = testRunData.map(testRun => {\n    const stats = testRun.matches.stats || {};\n    const config = testRun.context.config;\n    const statsMessage = Object.keys(stats).map(key => {\n      if (key === 'roots' && config.roots.length === 1) {\n        return null;\n      }\n      const value = config[key];\n      if (value) {\n        const valueAsString = Array.isArray(value) ? value.join(', ') : String(value);\n        const matches = (0, _pluralize.default)('match', stats[key] || 0, 'es');\n        return `  ${key}: ${_chalk().default.yellow(valueAsString)} - ${matches}`;\n      }\n      return null;\n    }).filter(line => line).join('\\n');\n    return testRun.matches.total ? `In ${_chalk().default.bold(config.rootDir)}\\n` + `  ${(0, _pluralize.default)('file', testRun.matches.total || 0, 's')} checked.\\n` + statsMessage : `No files found in ${config.rootDir}.\\n` + \"Make sure Jest's configuration does not exclude this directory.\" + '\\nTo set up Jest, make sure a package.json file exists.\\n' + 'Jest Documentation: ' + 'https://jestjs.io/docs/configuration';\n  });\n  let dataMessage;\n  if (globalConfig.runTestsByPath) {\n    dataMessage = `Files: ${globalConfig.nonFlagArgs.map(p => `\"${p}\"`).join(', ')}`;\n  } else {\n    dataMessage = `Pattern: ${_chalk().default.yellow(globalConfig.testPathPattern)} - 0 matches`;\n  }\n  return _chalk().default.bold('No tests found, exiting with code 1') + '\\n' + 'Run with `--passWithNoTests` to exit with code 0' + '\\n' + individualResults.join('\\n') + '\\n' + dataMessage;\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","default","getNoTestFoundVerbose","_chalk","data","_interopRequireDefault","require","_pluralize","obj","__esModule","testRunData","globalConfig","individualResults","map","testRun","stats","matches","config","context","statsMessage","keys","key","roots","length","valueAsString","Array","isArray","join","String","yellow","filter","line","total","bold","rootDir","dataMessage","runTestsByPath","nonFlagArgs","p","testPathPattern"],"sources":["C:/Users/chest/OneDrive/Documentos/GitHub/HackUPC/frontend/node_modules/@jest/core/build/getNoTestFoundVerbose.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.default = getNoTestFoundVerbose;\n\nfunction _chalk() {\n  const data = _interopRequireDefault(require('chalk'));\n\n  _chalk = function () {\n    return data;\n  };\n\n  return data;\n}\n\nvar _pluralize = _interopRequireDefault(require('./pluralize'));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {default: obj};\n}\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nfunction getNoTestFoundVerbose(testRunData, globalConfig) {\n  const individualResults = testRunData.map(testRun => {\n    const stats = testRun.matches.stats || {};\n    const config = testRun.context.config;\n    const statsMessage = Object.keys(stats)\n      .map(key => {\n        if (key === 'roots' && config.roots.length === 1) {\n          return null;\n        }\n\n        const value = config[key];\n\n        if (value) {\n          const valueAsString = Array.isArray(value)\n            ? value.join(', ')\n            : String(value);\n          const matches = (0, _pluralize.default)(\n            'match',\n            stats[key] || 0,\n            'es'\n          );\n          return `  ${key}: ${_chalk().default.yellow(\n            valueAsString\n          )} - ${matches}`;\n        }\n\n        return null;\n      })\n      .filter(line => line)\n      .join('\\n');\n    return testRun.matches.total\n      ? `In ${_chalk().default.bold(config.rootDir)}\\n` +\n          `  ${(0, _pluralize.default)(\n            'file',\n            testRun.matches.total || 0,\n            's'\n          )} checked.\\n` +\n          statsMessage\n      : `No files found in ${config.rootDir}.\\n` +\n          \"Make sure Jest's configuration does not exclude this directory.\" +\n          '\\nTo set up Jest, make sure a package.json file exists.\\n' +\n          'Jest Documentation: ' +\n          'https://jestjs.io/docs/configuration';\n  });\n  let dataMessage;\n\n  if (globalConfig.runTestsByPath) {\n    dataMessage = `Files: ${globalConfig.nonFlagArgs\n      .map(p => `\"${p}\"`)\n      .join(', ')}`;\n  } else {\n    dataMessage = `Pattern: ${_chalk().default.yellow(\n      globalConfig.testPathPattern\n    )} - 0 matches`;\n  }\n\n  return (\n    _chalk().default.bold('No tests found, exiting with code 1') +\n    '\\n' +\n    'Run with `--passWithNoTests` to exit with code 0' +\n    '\\n' +\n    individualResults.join('\\n') +\n    '\\n' +\n    dataMessage\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}