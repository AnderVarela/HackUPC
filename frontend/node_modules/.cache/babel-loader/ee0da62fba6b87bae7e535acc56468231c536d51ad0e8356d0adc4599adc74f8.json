{"ast":null,"code":"var populateComponents = require('./properties/populate-components');\nvar wrapForOptimizing = require('../wrap-for-optimizing').single;\nvar restoreFromOptimizing = require('../restore-from-optimizing');\nvar Token = require('../../tokenizer/token');\nvar animationNameRegex = /^(-moz-|-o-|-webkit-)?animation-name$/;\nvar animationRegex = /^(-moz-|-o-|-webkit-)?animation$/;\nvar keyframeRegex = /^@(-moz-|-o-|-webkit-)?keyframes /;\nvar importantRegex = /\\s{0,31}!important$/;\nvar optionalMatchingQuotesRegex = /^(['\"]?)(.*)\\1$/;\nfunction normalize(value) {\n  return value.replace(optionalMatchingQuotesRegex, '$2').replace(importantRegex, '');\n}\nfunction removeUnusedAtRules(tokens, context) {\n  removeUnusedAtRule(tokens, matchCounterStyle, markCounterStylesAsUsed, context);\n  removeUnusedAtRule(tokens, matchFontFace, markFontFacesAsUsed, context);\n  removeUnusedAtRule(tokens, matchKeyframe, markKeyframesAsUsed, context);\n  removeUnusedAtRule(tokens, matchNamespace, markNamespacesAsUsed, context);\n}\nfunction removeUnusedAtRule(tokens, matchCallback, markCallback, context) {\n  var atRules = {};\n  var atRule;\n  var atRuleTokens;\n  var atRuleToken;\n  var zeroAt;\n  var i, l;\n  for (i = 0, l = tokens.length; i < l; i++) {\n    matchCallback(tokens[i], atRules);\n  }\n  if (Object.keys(atRules).length === 0) {\n    return;\n  }\n  markUsedAtRules(tokens, markCallback, atRules, context);\n  for (atRule in atRules) {\n    atRuleTokens = atRules[atRule];\n    for (i = 0, l = atRuleTokens.length; i < l; i++) {\n      atRuleToken = atRuleTokens[i];\n      zeroAt = atRuleToken[0] == Token.AT_RULE ? 1 : 2;\n      atRuleToken[zeroAt] = [];\n    }\n  }\n}\nfunction markUsedAtRules(tokens, markCallback, atRules, context) {\n  var boundMarkCallback = markCallback(atRules);\n  var i, l;\n  for (i = 0, l = tokens.length; i < l; i++) {\n    switch (tokens[i][0]) {\n      case Token.RULE:\n        boundMarkCallback(tokens[i], context);\n        break;\n      case Token.NESTED_BLOCK:\n        markUsedAtRules(tokens[i][2], markCallback, atRules, context);\n    }\n  }\n}\nfunction matchCounterStyle(token, atRules) {\n  var match;\n  if (token[0] == Token.AT_RULE_BLOCK && token[1][0][1].indexOf('@counter-style') === 0) {\n    match = token[1][0][1].split(' ')[1];\n    atRules[match] = atRules[match] || [];\n    atRules[match].push(token);\n  }\n}\nfunction markCounterStylesAsUsed(atRules) {\n  return function (token, context) {\n    var property;\n    var wrappedProperty;\n    var i, l;\n    for (i = 0, l = token[2].length; i < l; i++) {\n      property = token[2][i];\n      if (property[1][1] == 'list-style') {\n        wrappedProperty = wrapForOptimizing(property);\n        populateComponents([wrappedProperty], context.validator, context.warnings);\n        if (wrappedProperty.components[0].value[0][1] in atRules) {\n          delete atRules[property[2][1]];\n        }\n        restoreFromOptimizing([wrappedProperty]);\n      }\n      if (property[1][1] == 'list-style-type' && property[2][1] in atRules) {\n        delete atRules[property[2][1]];\n      }\n    }\n  };\n}\nfunction matchFontFace(token, atRules) {\n  var property;\n  var match;\n  var i, l;\n  if (token[0] == Token.AT_RULE_BLOCK && token[1][0][1] == '@font-face') {\n    for (i = 0, l = token[2].length; i < l; i++) {\n      property = token[2][i];\n      if (property[1][1] == 'font-family') {\n        match = normalize(property[2][1].toLowerCase());\n        atRules[match] = atRules[match] || [];\n        atRules[match].push(token);\n        break;\n      }\n    }\n  }\n}\nfunction markFontFacesAsUsed(atRules) {\n  return function (token, context) {\n    var property;\n    var wrappedProperty;\n    var component;\n    var normalizedMatch;\n    var i, l;\n    var j, m;\n    for (i = 0, l = token[2].length; i < l; i++) {\n      property = token[2][i];\n      if (property[1][1] == 'font') {\n        wrappedProperty = wrapForOptimizing(property);\n        populateComponents([wrappedProperty], context.validator, context.warnings);\n        component = wrappedProperty.components[6];\n        for (j = 0, m = component.value.length; j < m; j++) {\n          normalizedMatch = normalize(component.value[j][1].toLowerCase());\n          if (normalizedMatch in atRules) {\n            delete atRules[normalizedMatch];\n          }\n        }\n        restoreFromOptimizing([wrappedProperty]);\n      }\n      if (property[1][1] == 'font-family') {\n        for (j = 2, m = property.length; j < m; j++) {\n          normalizedMatch = normalize(property[j][1].toLowerCase());\n          if (normalizedMatch in atRules) {\n            delete atRules[normalizedMatch];\n          }\n        }\n      }\n    }\n  };\n}\nfunction matchKeyframe(token, atRules) {\n  var match;\n  if (token[0] == Token.NESTED_BLOCK && keyframeRegex.test(token[1][0][1])) {\n    match = token[1][0][1].split(' ')[1];\n    atRules[match] = atRules[match] || [];\n    atRules[match].push(token);\n  }\n}\nfunction markKeyframesAsUsed(atRules) {\n  return function (token, context) {\n    var property;\n    var wrappedProperty;\n    var component;\n    var i, l;\n    var j, m;\n    for (i = 0, l = token[2].length; i < l; i++) {\n      property = token[2][i];\n      if (animationRegex.test(property[1][1])) {\n        wrappedProperty = wrapForOptimizing(property);\n        populateComponents([wrappedProperty], context.validator, context.warnings);\n        component = wrappedProperty.components[7];\n        for (j = 0, m = component.value.length; j < m; j++) {\n          if (component.value[j][1] in atRules) {\n            delete atRules[component.value[j][1]];\n          }\n        }\n        restoreFromOptimizing([wrappedProperty]);\n      }\n      if (animationNameRegex.test(property[1][1])) {\n        for (j = 2, m = property.length; j < m; j++) {\n          if (property[j][1] in atRules) {\n            delete atRules[property[j][1]];\n          }\n        }\n      }\n    }\n  };\n}\nfunction matchNamespace(token, atRules) {\n  var match;\n  if (token[0] == Token.AT_RULE && token[1].indexOf('@namespace') === 0) {\n    match = token[1].split(' ')[1];\n    atRules[match] = atRules[match] || [];\n    atRules[match].push(token);\n  }\n}\nfunction markNamespacesAsUsed(atRules) {\n  var namespaceRegex = new RegExp(Object.keys(atRules).join('\\\\||') + '\\\\|', 'g');\n  return function (token) {\n    var match;\n    var scope;\n    var normalizedMatch;\n    var i, l;\n    var j, m;\n    for (i = 0, l = token[1].length; i < l; i++) {\n      scope = token[1][i];\n      match = scope[1].match(namespaceRegex);\n      for (j = 0, m = match.length; j < m; j++) {\n        normalizedMatch = match[j].substring(0, match[j].length - 1);\n        if (normalizedMatch in atRules) {\n          delete atRules[normalizedMatch];\n        }\n      }\n    }\n  };\n}\nmodule.exports = removeUnusedAtRules;","map":{"version":3,"names":["populateComponents","require","wrapForOptimizing","single","restoreFromOptimizing","Token","animationNameRegex","animationRegex","keyframeRegex","importantRegex","optionalMatchingQuotesRegex","normalize","value","replace","removeUnusedAtRules","tokens","context","removeUnusedAtRule","matchCounterStyle","markCounterStylesAsUsed","matchFontFace","markFontFacesAsUsed","matchKeyframe","markKeyframesAsUsed","matchNamespace","markNamespacesAsUsed","matchCallback","markCallback","atRules","atRule","atRuleTokens","atRuleToken","zeroAt","i","l","length","Object","keys","markUsedAtRules","AT_RULE","boundMarkCallback","RULE","NESTED_BLOCK","token","match","AT_RULE_BLOCK","indexOf","split","push","property","wrappedProperty","validator","warnings","components","toLowerCase","component","normalizedMatch","j","m","test","namespaceRegex","RegExp","join","scope","substring","module","exports"],"sources":["C:/Users/chest/OneDrive/Documentos/GitHub/HackUPC/frontend/node_modules/clean-css/lib/optimizer/level-2/remove-unused-at-rules.js"],"sourcesContent":["var populateComponents = require('./properties/populate-components');\n\nvar wrapForOptimizing = require('../wrap-for-optimizing').single;\nvar restoreFromOptimizing = require('../restore-from-optimizing');\n\nvar Token = require('../../tokenizer/token');\n\nvar animationNameRegex = /^(-moz-|-o-|-webkit-)?animation-name$/;\nvar animationRegex = /^(-moz-|-o-|-webkit-)?animation$/;\nvar keyframeRegex = /^@(-moz-|-o-|-webkit-)?keyframes /;\nvar importantRegex = /\\s{0,31}!important$/;\nvar optionalMatchingQuotesRegex = /^(['\"]?)(.*)\\1$/;\n\nfunction normalize(value) {\n  return value\n    .replace(optionalMatchingQuotesRegex, '$2')\n    .replace(importantRegex, '');\n}\n\nfunction removeUnusedAtRules(tokens, context) {\n  removeUnusedAtRule(tokens, matchCounterStyle, markCounterStylesAsUsed, context);\n  removeUnusedAtRule(tokens, matchFontFace, markFontFacesAsUsed, context);\n  removeUnusedAtRule(tokens, matchKeyframe, markKeyframesAsUsed, context);\n  removeUnusedAtRule(tokens, matchNamespace, markNamespacesAsUsed, context);\n}\n\nfunction removeUnusedAtRule(tokens, matchCallback, markCallback, context) {\n  var atRules = {};\n  var atRule;\n  var atRuleTokens;\n  var atRuleToken;\n  var zeroAt;\n  var i, l;\n\n  for (i = 0, l = tokens.length; i < l; i++) {\n    matchCallback(tokens[i], atRules);\n  }\n\n  if (Object.keys(atRules).length === 0) {\n    return;\n  }\n\n  markUsedAtRules(tokens, markCallback, atRules, context);\n\n  for (atRule in atRules) {\n    atRuleTokens = atRules[atRule];\n\n    for (i = 0, l = atRuleTokens.length; i < l; i++) {\n      atRuleToken = atRuleTokens[i];\n      zeroAt = atRuleToken[0] == Token.AT_RULE ? 1 : 2;\n      atRuleToken[zeroAt] = [];\n    }\n  }\n}\n\nfunction markUsedAtRules(tokens, markCallback, atRules, context) {\n  var boundMarkCallback = markCallback(atRules);\n  var i, l;\n\n  for (i = 0, l = tokens.length; i < l; i++) {\n    switch (tokens[i][0]) {\n    case Token.RULE:\n      boundMarkCallback(tokens[i], context);\n      break;\n    case Token.NESTED_BLOCK:\n      markUsedAtRules(tokens[i][2], markCallback, atRules, context);\n    }\n  }\n}\n\nfunction matchCounterStyle(token, atRules) {\n  var match;\n\n  if (token[0] == Token.AT_RULE_BLOCK && token[1][0][1].indexOf('@counter-style') === 0) {\n    match = token[1][0][1].split(' ')[1];\n    atRules[match] = atRules[match] || [];\n    atRules[match].push(token);\n  }\n}\n\nfunction markCounterStylesAsUsed(atRules) {\n  return function(token, context) {\n    var property;\n    var wrappedProperty;\n    var i, l;\n\n    for (i = 0, l = token[2].length; i < l; i++) {\n      property = token[2][i];\n\n      if (property[1][1] == 'list-style') {\n        wrappedProperty = wrapForOptimizing(property);\n        populateComponents([wrappedProperty], context.validator, context.warnings);\n\n        if (wrappedProperty.components[0].value[0][1] in atRules) {\n          delete atRules[property[2][1]];\n        }\n\n        restoreFromOptimizing([wrappedProperty]);\n      }\n\n      if (property[1][1] == 'list-style-type' && property[2][1] in atRules) {\n        delete atRules[property[2][1]];\n      }\n    }\n  };\n}\n\nfunction matchFontFace(token, atRules) {\n  var property;\n  var match;\n  var i, l;\n\n  if (token[0] == Token.AT_RULE_BLOCK && token[1][0][1] == '@font-face') {\n    for (i = 0, l = token[2].length; i < l; i++) {\n      property = token[2][i];\n\n      if (property[1][1] == 'font-family') {\n        match = normalize(property[2][1].toLowerCase());\n        atRules[match] = atRules[match] || [];\n        atRules[match].push(token);\n        break;\n      }\n    }\n  }\n}\n\nfunction markFontFacesAsUsed(atRules) {\n  return function(token, context) {\n    var property;\n    var wrappedProperty;\n    var component;\n    var normalizedMatch;\n    var i, l;\n    var j, m;\n\n    for (i = 0, l = token[2].length; i < l; i++) {\n      property = token[2][i];\n\n      if (property[1][1] == 'font') {\n        wrappedProperty = wrapForOptimizing(property);\n        populateComponents([wrappedProperty], context.validator, context.warnings);\n        component = wrappedProperty.components[6];\n\n        for (j = 0, m = component.value.length; j < m; j++) {\n          normalizedMatch = normalize(component.value[j][1].toLowerCase());\n\n          if (normalizedMatch in atRules) {\n            delete atRules[normalizedMatch];\n          }\n        }\n\n        restoreFromOptimizing([wrappedProperty]);\n      }\n\n      if (property[1][1] == 'font-family') {\n        for (j = 2, m = property.length; j < m; j++) {\n          normalizedMatch = normalize(property[j][1].toLowerCase());\n\n          if (normalizedMatch in atRules) {\n            delete atRules[normalizedMatch];\n          }\n        }\n      }\n    }\n  };\n}\n\nfunction matchKeyframe(token, atRules) {\n  var match;\n\n  if (token[0] == Token.NESTED_BLOCK && keyframeRegex.test(token[1][0][1])) {\n    match = token[1][0][1].split(' ')[1];\n    atRules[match] = atRules[match] || [];\n    atRules[match].push(token);\n  }\n}\n\nfunction markKeyframesAsUsed(atRules) {\n  return function(token, context) {\n    var property;\n    var wrappedProperty;\n    var component;\n    var i, l;\n    var j, m;\n\n    for (i = 0, l = token[2].length; i < l; i++) {\n      property = token[2][i];\n\n      if (animationRegex.test(property[1][1])) {\n        wrappedProperty = wrapForOptimizing(property);\n        populateComponents([wrappedProperty], context.validator, context.warnings);\n        component = wrappedProperty.components[7];\n\n        for (j = 0, m = component.value.length; j < m; j++) {\n          if (component.value[j][1] in atRules) {\n            delete atRules[component.value[j][1]];\n          }\n        }\n\n        restoreFromOptimizing([wrappedProperty]);\n      }\n\n      if (animationNameRegex.test(property[1][1])) {\n        for (j = 2, m = property.length; j < m; j++) {\n          if (property[j][1] in atRules) {\n            delete atRules[property[j][1]];\n          }\n        }\n      }\n    }\n  };\n}\n\nfunction matchNamespace(token, atRules) {\n  var match;\n\n  if (token[0] == Token.AT_RULE && token[1].indexOf('@namespace') === 0) {\n    match = token[1].split(' ')[1];\n    atRules[match] = atRules[match] || [];\n    atRules[match].push(token);\n  }\n}\n\nfunction markNamespacesAsUsed(atRules) {\n  var namespaceRegex = new RegExp(Object.keys(atRules).join('\\\\||') + '\\\\|', 'g');\n\n  return function(token) {\n    var match;\n    var scope;\n    var normalizedMatch;\n    var i, l;\n    var j, m;\n\n    for (i = 0, l = token[1].length; i < l; i++) {\n      scope = token[1][i];\n      match = scope[1].match(namespaceRegex);\n\n      for (j = 0, m = match.length; j < m; j++) {\n        normalizedMatch = match[j].substring(0, match[j].length - 1);\n\n        if (normalizedMatch in atRules) {\n          delete atRules[normalizedMatch];\n        }\n      }\n    }\n  };\n}\n\nmodule.exports = removeUnusedAtRules;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}