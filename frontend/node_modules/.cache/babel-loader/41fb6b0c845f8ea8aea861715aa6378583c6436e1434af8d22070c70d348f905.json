{"ast":null,"code":"var mergeAdjacent = require('./merge-adjacent');\nvar mergeMediaQueries = require('./merge-media-queries');\nvar mergeNonAdjacentByBody = require('./merge-non-adjacent-by-body');\nvar mergeNonAdjacentBySelector = require('./merge-non-adjacent-by-selector');\nvar reduceNonAdjacent = require('./reduce-non-adjacent');\nvar removeDuplicateFontAtRules = require('./remove-duplicate-font-at-rules');\nvar removeDuplicateMediaQueries = require('./remove-duplicate-media-queries');\nvar removeDuplicates = require('./remove-duplicates');\nvar removeUnusedAtRules = require('./remove-unused-at-rules');\nvar restructure = require('./restructure');\nvar optimizeProperties = require('./properties/optimize');\nvar OptimizationLevel = require('../../options/optimization-level').OptimizationLevel;\nvar Token = require('../../tokenizer/token');\nfunction removeEmpty(tokens) {\n  for (var i = 0, l = tokens.length; i < l; i++) {\n    var token = tokens[i];\n    var isEmpty = false;\n    switch (token[0]) {\n      case Token.RULE:\n        isEmpty = token[1].length === 0 || token[2].length === 0;\n        break;\n      case Token.NESTED_BLOCK:\n        removeEmpty(token[2]);\n        isEmpty = token[2].length === 0;\n        break;\n      case Token.AT_RULE:\n        isEmpty = token[1].length === 0;\n        break;\n      case Token.AT_RULE_BLOCK:\n        isEmpty = token[2].length === 0;\n    }\n    if (isEmpty) {\n      tokens.splice(i, 1);\n      i--;\n      l--;\n    }\n  }\n}\nfunction recursivelyOptimizeBlocks(tokens, context) {\n  for (var i = 0, l = tokens.length; i < l; i++) {\n    var token = tokens[i];\n    if (token[0] == Token.NESTED_BLOCK) {\n      var isKeyframes = /@(-moz-|-o-|-webkit-)?keyframes/.test(token[1][0][1]);\n      level2Optimize(token[2], context, !isKeyframes);\n    }\n  }\n}\nfunction recursivelyOptimizeProperties(tokens, context) {\n  for (var i = 0, l = tokens.length; i < l; i++) {\n    var token = tokens[i];\n    switch (token[0]) {\n      case Token.RULE:\n        optimizeProperties(token[2], true, true, context);\n        break;\n      case Token.NESTED_BLOCK:\n        recursivelyOptimizeProperties(token[2], context);\n    }\n  }\n}\nfunction level2Optimize(tokens, context, withRestructuring) {\n  var levelOptions = context.options.level[OptimizationLevel.Two];\n  var level2Plugins = context.options.plugins.level2Block;\n  var reduced;\n  var i;\n  recursivelyOptimizeBlocks(tokens, context);\n  recursivelyOptimizeProperties(tokens, context);\n  if (levelOptions.removeDuplicateRules) {\n    removeDuplicates(tokens, context);\n  }\n  if (levelOptions.mergeAdjacentRules) {\n    mergeAdjacent(tokens, context);\n  }\n  if (levelOptions.reduceNonAdjacentRules) {\n    reduceNonAdjacent(tokens, context);\n  }\n  if (levelOptions.mergeNonAdjacentRules && levelOptions.mergeNonAdjacentRules != 'body') {\n    mergeNonAdjacentBySelector(tokens, context);\n  }\n  if (levelOptions.mergeNonAdjacentRules && levelOptions.mergeNonAdjacentRules != 'selector') {\n    mergeNonAdjacentByBody(tokens, context);\n  }\n  if (levelOptions.restructureRules && levelOptions.mergeAdjacentRules && withRestructuring) {\n    restructure(tokens, context);\n    mergeAdjacent(tokens, context);\n  }\n  if (levelOptions.restructureRules && !levelOptions.mergeAdjacentRules && withRestructuring) {\n    restructure(tokens, context);\n  }\n  if (levelOptions.removeDuplicateFontRules) {\n    removeDuplicateFontAtRules(tokens, context);\n  }\n  if (levelOptions.removeDuplicateMediaBlocks) {\n    removeDuplicateMediaQueries(tokens, context);\n  }\n  if (levelOptions.removeUnusedAtRules) {\n    removeUnusedAtRules(tokens, context);\n  }\n  if (levelOptions.mergeMedia) {\n    reduced = mergeMediaQueries(tokens, context);\n    for (i = reduced.length - 1; i >= 0; i--) {\n      level2Optimize(reduced[i][2], context, false);\n    }\n  }\n  for (i = 0; i < level2Plugins.length; i++) {\n    level2Plugins[i](tokens);\n  }\n  if (levelOptions.removeEmpty) {\n    removeEmpty(tokens);\n  }\n  return tokens;\n}\nmodule.exports = level2Optimize;","map":{"version":3,"names":["mergeAdjacent","require","mergeMediaQueries","mergeNonAdjacentByBody","mergeNonAdjacentBySelector","reduceNonAdjacent","removeDuplicateFontAtRules","removeDuplicateMediaQueries","removeDuplicates","removeUnusedAtRules","restructure","optimizeProperties","OptimizationLevel","Token","removeEmpty","tokens","i","l","length","token","isEmpty","RULE","NESTED_BLOCK","AT_RULE","AT_RULE_BLOCK","splice","recursivelyOptimizeBlocks","context","isKeyframes","test","level2Optimize","recursivelyOptimizeProperties","withRestructuring","levelOptions","options","level","Two","level2Plugins","plugins","level2Block","reduced","removeDuplicateRules","mergeAdjacentRules","reduceNonAdjacentRules","mergeNonAdjacentRules","restructureRules","removeDuplicateFontRules","removeDuplicateMediaBlocks","mergeMedia","module","exports"],"sources":["C:/Users/chest/OneDrive/Documentos/GitHub/HackUPC/frontend/node_modules/clean-css/lib/optimizer/level-2/optimize.js"],"sourcesContent":["var mergeAdjacent = require('./merge-adjacent');\nvar mergeMediaQueries = require('./merge-media-queries');\nvar mergeNonAdjacentByBody = require('./merge-non-adjacent-by-body');\nvar mergeNonAdjacentBySelector = require('./merge-non-adjacent-by-selector');\nvar reduceNonAdjacent = require('./reduce-non-adjacent');\nvar removeDuplicateFontAtRules = require('./remove-duplicate-font-at-rules');\nvar removeDuplicateMediaQueries = require('./remove-duplicate-media-queries');\nvar removeDuplicates = require('./remove-duplicates');\nvar removeUnusedAtRules = require('./remove-unused-at-rules');\nvar restructure = require('./restructure');\n\nvar optimizeProperties = require('./properties/optimize');\n\nvar OptimizationLevel = require('../../options/optimization-level').OptimizationLevel;\n\nvar Token = require('../../tokenizer/token');\n\nfunction removeEmpty(tokens) {\n  for (var i = 0, l = tokens.length; i < l; i++) {\n    var token = tokens[i];\n    var isEmpty = false;\n\n    switch (token[0]) {\n    case Token.RULE:\n      isEmpty = token[1].length === 0 || token[2].length === 0;\n      break;\n    case Token.NESTED_BLOCK:\n      removeEmpty(token[2]);\n      isEmpty = token[2].length === 0;\n      break;\n    case Token.AT_RULE:\n      isEmpty = token[1].length === 0;\n      break;\n    case Token.AT_RULE_BLOCK:\n      isEmpty = token[2].length === 0;\n    }\n\n    if (isEmpty) {\n      tokens.splice(i, 1);\n      i--;\n      l--;\n    }\n  }\n}\n\nfunction recursivelyOptimizeBlocks(tokens, context) {\n  for (var i = 0, l = tokens.length; i < l; i++) {\n    var token = tokens[i];\n\n    if (token[0] == Token.NESTED_BLOCK) {\n      var isKeyframes = /@(-moz-|-o-|-webkit-)?keyframes/.test(token[1][0][1]);\n      level2Optimize(token[2], context, !isKeyframes);\n    }\n  }\n}\n\nfunction recursivelyOptimizeProperties(tokens, context) {\n  for (var i = 0, l = tokens.length; i < l; i++) {\n    var token = tokens[i];\n\n    switch (token[0]) {\n    case Token.RULE:\n      optimizeProperties(token[2], true, true, context);\n      break;\n    case Token.NESTED_BLOCK:\n      recursivelyOptimizeProperties(token[2], context);\n    }\n  }\n}\n\nfunction level2Optimize(tokens, context, withRestructuring) {\n  var levelOptions = context.options.level[OptimizationLevel.Two];\n  var level2Plugins = context.options.plugins.level2Block;\n  var reduced;\n  var i;\n\n  recursivelyOptimizeBlocks(tokens, context);\n  recursivelyOptimizeProperties(tokens, context);\n\n  if (levelOptions.removeDuplicateRules) {\n    removeDuplicates(tokens, context);\n  }\n\n  if (levelOptions.mergeAdjacentRules) {\n    mergeAdjacent(tokens, context);\n  }\n\n  if (levelOptions.reduceNonAdjacentRules) {\n    reduceNonAdjacent(tokens, context);\n  }\n\n  if (levelOptions.mergeNonAdjacentRules && levelOptions.mergeNonAdjacentRules != 'body') {\n    mergeNonAdjacentBySelector(tokens, context);\n  }\n\n  if (levelOptions.mergeNonAdjacentRules && levelOptions.mergeNonAdjacentRules != 'selector') {\n    mergeNonAdjacentByBody(tokens, context);\n  }\n\n  if (levelOptions.restructureRules && levelOptions.mergeAdjacentRules && withRestructuring) {\n    restructure(tokens, context);\n    mergeAdjacent(tokens, context);\n  }\n\n  if (levelOptions.restructureRules && !levelOptions.mergeAdjacentRules && withRestructuring) {\n    restructure(tokens, context);\n  }\n\n  if (levelOptions.removeDuplicateFontRules) {\n    removeDuplicateFontAtRules(tokens, context);\n  }\n\n  if (levelOptions.removeDuplicateMediaBlocks) {\n    removeDuplicateMediaQueries(tokens, context);\n  }\n\n  if (levelOptions.removeUnusedAtRules) {\n    removeUnusedAtRules(tokens, context);\n  }\n\n  if (levelOptions.mergeMedia) {\n    reduced = mergeMediaQueries(tokens, context);\n    for (i = reduced.length - 1; i >= 0; i--) {\n      level2Optimize(reduced[i][2], context, false);\n    }\n  }\n\n  for (i = 0; i < level2Plugins.length; i++) {\n    level2Plugins[i](tokens);\n  }\n\n  if (levelOptions.removeEmpty) {\n    removeEmpty(tokens);\n  }\n\n  return tokens;\n}\n\nmodule.exports = level2Optimize;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}