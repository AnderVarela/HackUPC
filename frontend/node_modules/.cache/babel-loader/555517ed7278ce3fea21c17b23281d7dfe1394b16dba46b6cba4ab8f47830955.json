{"ast":null,"code":"import { __assign, __rest } from \"tslib\";\n/*\n * Copyright 2015, Yahoo Inc.\n * Copyrights licensed under the New BSD License.\n * See the accompanying LICENSE file for terms.\n */\nimport * as React from 'react';\nimport { invariant } from '@formatjs/ecma402-abstract';\nimport useIntl from './useIntl';\nvar MINUTE = 60;\nvar HOUR = 60 * 60;\nvar DAY = 60 * 60 * 24;\nfunction selectUnit(seconds) {\n  var absValue = Math.abs(seconds);\n  if (absValue < MINUTE) {\n    return 'second';\n  }\n  if (absValue < HOUR) {\n    return 'minute';\n  }\n  if (absValue < DAY) {\n    return 'hour';\n  }\n  return 'day';\n}\nfunction getDurationInSeconds(unit) {\n  switch (unit) {\n    case 'second':\n      return 1;\n    case 'minute':\n      return MINUTE;\n    case 'hour':\n      return HOUR;\n    default:\n      return DAY;\n  }\n}\nfunction valueToSeconds(value, unit) {\n  if (!value) {\n    return 0;\n  }\n  switch (unit) {\n    case 'second':\n      return value;\n    case 'minute':\n      return value * MINUTE;\n    default:\n      return value * HOUR;\n  }\n}\nvar INCREMENTABLE_UNITS = ['second', 'minute', 'hour'];\nfunction canIncrement(unit) {\n  if (unit === void 0) {\n    unit = 'second';\n  }\n  return INCREMENTABLE_UNITS.indexOf(unit) > -1;\n}\nvar SimpleFormattedRelativeTime = function (props) {\n  var _a = useIntl(),\n    formatRelativeTime = _a.formatRelativeTime,\n    Text = _a.textComponent;\n  var children = props.children,\n    value = props.value,\n    unit = props.unit,\n    otherProps = __rest(props, [\"children\", \"value\", \"unit\"]);\n  var formattedRelativeTime = formatRelativeTime(value || 0, unit, otherProps);\n  if (typeof children === 'function') {\n    return children(formattedRelativeTime);\n  }\n  if (Text) {\n    return React.createElement(Text, null, formattedRelativeTime);\n  }\n  return React.createElement(React.Fragment, null, formattedRelativeTime);\n};\nvar FormattedRelativeTime = function (_a) {\n  var _b = _a.value,\n    value = _b === void 0 ? 0 : _b,\n    _c = _a.unit,\n    unit = _c === void 0 ? 'second' : _c,\n    updateIntervalInSeconds = _a.updateIntervalInSeconds,\n    otherProps = __rest(_a, [\"value\", \"unit\", \"updateIntervalInSeconds\"]);\n  invariant(!updateIntervalInSeconds || !!(updateIntervalInSeconds && canIncrement(unit)), 'Cannot schedule update with unit longer than hour');\n  var _d = React.useState(),\n    prevUnit = _d[0],\n    setPrevUnit = _d[1];\n  var _e = React.useState(0),\n    prevValue = _e[0],\n    setPrevValue = _e[1];\n  var _f = React.useState(0),\n    currentValueInSeconds = _f[0],\n    setCurrentValueInSeconds = _f[1];\n  var updateTimer;\n  if (unit !== prevUnit || value !== prevValue) {\n    setPrevValue(value || 0);\n    setPrevUnit(unit);\n    setCurrentValueInSeconds(canIncrement(unit) ? valueToSeconds(value, unit) : 0);\n  }\n  React.useEffect(function () {\n    function clearUpdateTimer() {\n      clearTimeout(updateTimer);\n    }\n    clearUpdateTimer();\n    // If there's no interval and we cannot increment this unit, do nothing\n    if (!updateIntervalInSeconds || !canIncrement(unit)) {\n      return clearUpdateTimer;\n    }\n    // Figure out the next interesting time\n    var nextValueInSeconds = currentValueInSeconds - updateIntervalInSeconds;\n    var nextUnit = selectUnit(nextValueInSeconds);\n    // We've reached the max auto incrementable unit, don't schedule another update\n    if (nextUnit === 'day') {\n      return clearUpdateTimer;\n    }\n    var unitDuration = getDurationInSeconds(nextUnit);\n    var remainder = nextValueInSeconds % unitDuration;\n    var prevInterestingValueInSeconds = nextValueInSeconds - remainder;\n    var nextInterestingValueInSeconds = prevInterestingValueInSeconds >= currentValueInSeconds ? prevInterestingValueInSeconds - unitDuration : prevInterestingValueInSeconds;\n    var delayInSeconds = Math.abs(nextInterestingValueInSeconds - currentValueInSeconds);\n    if (currentValueInSeconds !== nextInterestingValueInSeconds) {\n      updateTimer = setTimeout(function () {\n        return setCurrentValueInSeconds(nextInterestingValueInSeconds);\n      }, delayInSeconds * 1e3);\n    }\n    return clearUpdateTimer;\n  }, [currentValueInSeconds, updateIntervalInSeconds, unit]);\n  var currentValue = value || 0;\n  var currentUnit = unit;\n  if (canIncrement(unit) && typeof currentValueInSeconds === 'number' && updateIntervalInSeconds) {\n    currentUnit = selectUnit(currentValueInSeconds);\n    var unitDuration = getDurationInSeconds(currentUnit);\n    currentValue = Math.round(currentValueInSeconds / unitDuration);\n  }\n  return React.createElement(SimpleFormattedRelativeTime, __assign({\n    value: currentValue,\n    unit: currentUnit\n  }, otherProps));\n};\nFormattedRelativeTime.displayName = 'FormattedRelativeTime';\nexport default FormattedRelativeTime;","map":{"version":3,"names":["__assign","__rest","React","invariant","useIntl","MINUTE","HOUR","DAY","selectUnit","seconds","absValue","Math","abs","getDurationInSeconds","unit","valueToSeconds","value","INCREMENTABLE_UNITS","canIncrement","indexOf","SimpleFormattedRelativeTime","props","_a","formatRelativeTime","Text","textComponent","children","otherProps","formattedRelativeTime","createElement","Fragment","FormattedRelativeTime","_b","_c","updateIntervalInSeconds","_d","useState","prevUnit","setPrevUnit","_e","prevValue","setPrevValue","_f","currentValueInSeconds","setCurrentValueInSeconds","updateTimer","useEffect","clearUpdateTimer","clearTimeout","nextValueInSeconds","nextUnit","unitDuration","remainder","prevInterestingValueInSeconds","nextInterestingValueInSeconds","delayInSeconds","setTimeout","currentValue","currentUnit","round","displayName"],"sources":["C:/Users/chest/OneDrive/Documentos/GitHub/HackUPC/frontend/node_modules/react-intl/lib/src/components/relative.js"],"sourcesContent":["import { __assign, __rest } from \"tslib\";\n/*\n * Copyright 2015, Yahoo Inc.\n * Copyrights licensed under the New BSD License.\n * See the accompanying LICENSE file for terms.\n */\nimport * as React from 'react';\nimport { invariant, } from '@formatjs/ecma402-abstract';\nimport useIntl from './useIntl';\nvar MINUTE = 60;\nvar HOUR = 60 * 60;\nvar DAY = 60 * 60 * 24;\nfunction selectUnit(seconds) {\n    var absValue = Math.abs(seconds);\n    if (absValue < MINUTE) {\n        return 'second';\n    }\n    if (absValue < HOUR) {\n        return 'minute';\n    }\n    if (absValue < DAY) {\n        return 'hour';\n    }\n    return 'day';\n}\nfunction getDurationInSeconds(unit) {\n    switch (unit) {\n        case 'second':\n            return 1;\n        case 'minute':\n            return MINUTE;\n        case 'hour':\n            return HOUR;\n        default:\n            return DAY;\n    }\n}\nfunction valueToSeconds(value, unit) {\n    if (!value) {\n        return 0;\n    }\n    switch (unit) {\n        case 'second':\n            return value;\n        case 'minute':\n            return value * MINUTE;\n        default:\n            return value * HOUR;\n    }\n}\nvar INCREMENTABLE_UNITS = [\n    'second',\n    'minute',\n    'hour',\n];\nfunction canIncrement(unit) {\n    if (unit === void 0) { unit = 'second'; }\n    return INCREMENTABLE_UNITS.indexOf(unit) > -1;\n}\nvar SimpleFormattedRelativeTime = function (props) {\n    var _a = useIntl(), formatRelativeTime = _a.formatRelativeTime, Text = _a.textComponent;\n    var children = props.children, value = props.value, unit = props.unit, otherProps = __rest(props, [\"children\", \"value\", \"unit\"]);\n    var formattedRelativeTime = formatRelativeTime(value || 0, unit, otherProps);\n    if (typeof children === 'function') {\n        return children(formattedRelativeTime);\n    }\n    if (Text) {\n        return React.createElement(Text, null, formattedRelativeTime);\n    }\n    return React.createElement(React.Fragment, null, formattedRelativeTime);\n};\nvar FormattedRelativeTime = function (_a) {\n    var _b = _a.value, value = _b === void 0 ? 0 : _b, _c = _a.unit, unit = _c === void 0 ? 'second' : _c, updateIntervalInSeconds = _a.updateIntervalInSeconds, otherProps = __rest(_a, [\"value\", \"unit\", \"updateIntervalInSeconds\"]);\n    invariant(!updateIntervalInSeconds ||\n        !!(updateIntervalInSeconds && canIncrement(unit)), 'Cannot schedule update with unit longer than hour');\n    var _d = React.useState(), prevUnit = _d[0], setPrevUnit = _d[1];\n    var _e = React.useState(0), prevValue = _e[0], setPrevValue = _e[1];\n    var _f = React.useState(0), currentValueInSeconds = _f[0], setCurrentValueInSeconds = _f[1];\n    var updateTimer;\n    if (unit !== prevUnit || value !== prevValue) {\n        setPrevValue(value || 0);\n        setPrevUnit(unit);\n        setCurrentValueInSeconds(canIncrement(unit) ? valueToSeconds(value, unit) : 0);\n    }\n    React.useEffect(function () {\n        function clearUpdateTimer() {\n            clearTimeout(updateTimer);\n        }\n        clearUpdateTimer();\n        // If there's no interval and we cannot increment this unit, do nothing\n        if (!updateIntervalInSeconds || !canIncrement(unit)) {\n            return clearUpdateTimer;\n        }\n        // Figure out the next interesting time\n        var nextValueInSeconds = currentValueInSeconds - updateIntervalInSeconds;\n        var nextUnit = selectUnit(nextValueInSeconds);\n        // We've reached the max auto incrementable unit, don't schedule another update\n        if (nextUnit === 'day') {\n            return clearUpdateTimer;\n        }\n        var unitDuration = getDurationInSeconds(nextUnit);\n        var remainder = nextValueInSeconds % unitDuration;\n        var prevInterestingValueInSeconds = nextValueInSeconds - remainder;\n        var nextInterestingValueInSeconds = prevInterestingValueInSeconds >= currentValueInSeconds\n            ? prevInterestingValueInSeconds - unitDuration\n            : prevInterestingValueInSeconds;\n        var delayInSeconds = Math.abs(nextInterestingValueInSeconds - currentValueInSeconds);\n        if (currentValueInSeconds !== nextInterestingValueInSeconds) {\n            updateTimer = setTimeout(function () { return setCurrentValueInSeconds(nextInterestingValueInSeconds); }, delayInSeconds * 1e3);\n        }\n        return clearUpdateTimer;\n    }, [currentValueInSeconds, updateIntervalInSeconds, unit]);\n    var currentValue = value || 0;\n    var currentUnit = unit;\n    if (canIncrement(unit) &&\n        typeof currentValueInSeconds === 'number' &&\n        updateIntervalInSeconds) {\n        currentUnit = selectUnit(currentValueInSeconds);\n        var unitDuration = getDurationInSeconds(currentUnit);\n        currentValue = Math.round(currentValueInSeconds / unitDuration);\n    }\n    return (React.createElement(SimpleFormattedRelativeTime, __assign({ value: currentValue, unit: currentUnit }, otherProps)));\n};\nFormattedRelativeTime.displayName = 'FormattedRelativeTime';\nexport default FormattedRelativeTime;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}