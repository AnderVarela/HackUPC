{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nexports.isPluginRequired = isPluginRequired;\nexports.transformIncludesAndExcludes = void 0;\nvar _semver = require(\"semver\");\nvar _debug = require(\"./debug.js\");\nvar _filterItems = require(\"./filter-items.js\");\nvar _moduleTransformations = require(\"./module-transformations.js\");\nvar _normalizeOptions = require(\"./normalize-options.js\");\nvar _shippedProposals = require(\"./shipped-proposals.js\");\nvar _pluginsCompatData = require(\"./plugins-compat-data.js\");\nvar _babelPluginPolyfillCorejs = require(\"babel-plugin-polyfill-corejs3\");\nvar _babel7Plugins = require(\"./polyfills/babel-7-plugins.cjs\");\nvar _helperCompilationTargets = require(\"@babel/helper-compilation-targets\");\nvar _availablePlugins = require(\"./available-plugins.js\");\nvar _helperPluginUtils = require(\"@babel/helper-plugin-utils\");\nconst pluginCoreJS3 = _babelPluginPolyfillCorejs.default || _babelPluginPolyfillCorejs;\nfunction isPluginRequired(targets, support) {\n  return (0, _helperCompilationTargets.isRequired)(\"fake-name\", targets, {\n    compatData: {\n      \"fake-name\": support\n    }\n  });\n}\nfunction filterStageFromList(list, stageList) {\n  return Object.keys(list).reduce((result, item) => {\n    if (!stageList.has(item)) {\n      result[item] = list[item];\n    }\n    return result;\n  }, {});\n}\nconst pluginLists = {\n  withProposals: {\n    withoutBugfixes: _pluginsCompatData.plugins,\n    withBugfixes: Object.assign({}, _pluginsCompatData.plugins, _pluginsCompatData.pluginsBugfixes)\n  },\n  withoutProposals: {\n    withoutBugfixes: filterStageFromList(_pluginsCompatData.plugins, _shippedProposals.proposalPlugins),\n    withBugfixes: filterStageFromList(Object.assign({}, _pluginsCompatData.plugins, _pluginsCompatData.pluginsBugfixes), _shippedProposals.proposalPlugins)\n  }\n};\nfunction getPluginList(proposals, bugfixes) {\n  if (proposals) {\n    if (bugfixes) return pluginLists.withProposals.withBugfixes;else return pluginLists.withProposals.withoutBugfixes;\n  } else {\n    if (bugfixes) return pluginLists.withoutProposals.withBugfixes;else return pluginLists.withoutProposals.withoutBugfixes;\n  }\n}\nconst getPlugin = pluginName => {\n  const plugin = _availablePlugins.default[pluginName]();\n  if (!plugin) {\n    throw new Error(`Could not find plugin \"${pluginName}\". Ensure there is an entry in ./available-plugins.js for it.`);\n  }\n  return plugin;\n};\nconst transformIncludesAndExcludes = opts => {\n  return opts.reduce((result, opt) => {\n    const target = opt.match(/^(es|es6|es7|esnext|web)\\./) ? \"builtIns\" : \"plugins\";\n    result[target].add(opt);\n    return result;\n  }, {\n    all: opts,\n    plugins: new Set(),\n    builtIns: new Set()\n  });\n};\nexports.transformIncludesAndExcludes = transformIncludesAndExcludes;\nfunction getSpecialModulesPluginNames(modules, shouldTransformDynamicImport, babelVersion) {\n  const modulesPluginNames = [];\n  if (modules) {\n    modulesPluginNames.push(_moduleTransformations.default[modules]);\n  }\n  if (shouldTransformDynamicImport) {\n    if (modules && modules !== \"umd\") {\n      modulesPluginNames.push(\"transform-dynamic-import\");\n    } else {\n      console.warn(\"Dynamic import can only be transformed when transforming ES\" + \" modules to AMD, CommonJS or SystemJS.\");\n    }\n  }\n  if (babelVersion[0] !== \"8\") {\n    if (!shouldTransformDynamicImport) {\n      modulesPluginNames.push(\"syntax-dynamic-import\");\n    }\n    modulesPluginNames.push(\"syntax-top-level-await\");\n    modulesPluginNames.push(\"syntax-import-meta\");\n  }\n  return modulesPluginNames;\n}\nconst getCoreJSOptions = ({\n  useBuiltIns,\n  corejs,\n  polyfillTargets,\n  include,\n  exclude,\n  proposals,\n  shippedProposals,\n  debug\n}) => ({\n  method: `${useBuiltIns}-global`,\n  version: corejs ? corejs.toString() : undefined,\n  targets: polyfillTargets,\n  include,\n  exclude,\n  proposals,\n  shippedProposals,\n  debug,\n  \"#__secret_key__@babel/preset-env__compatibility\": {\n    noRuntimeName: true\n  }\n});\n{\n  var getPolyfillPlugins = ({\n    useBuiltIns,\n    corejs,\n    polyfillTargets,\n    include,\n    exclude,\n    proposals,\n    shippedProposals,\n    regenerator,\n    debug\n  }) => {\n    const polyfillPlugins = [];\n    if (useBuiltIns === \"usage\" || useBuiltIns === \"entry\") {\n      const pluginOptions = getCoreJSOptions({\n        useBuiltIns,\n        corejs,\n        polyfillTargets,\n        include,\n        exclude,\n        proposals,\n        shippedProposals,\n        debug\n      });\n      if (corejs) {\n        {\n          if (useBuiltIns === \"usage\") {\n            if (corejs.major === 2) {\n              polyfillPlugins.push([_babel7Plugins.pluginCoreJS2, pluginOptions], [_babel7Plugins.legacyBabelPolyfillPlugin, {\n                usage: true\n              }]);\n            } else {\n              polyfillPlugins.push([pluginCoreJS3, pluginOptions], [_babel7Plugins.legacyBabelPolyfillPlugin, {\n                usage: true,\n                deprecated: true\n              }]);\n            }\n            if (regenerator) {\n              polyfillPlugins.push([_babel7Plugins.pluginRegenerator, {\n                method: \"usage-global\",\n                debug\n              }]);\n            }\n          } else {\n            if (corejs.major === 2) {\n              polyfillPlugins.push([_babel7Plugins.legacyBabelPolyfillPlugin, {\n                regenerator\n              }], [_babel7Plugins.pluginCoreJS2, pluginOptions]);\n            } else {\n              polyfillPlugins.push([pluginCoreJS3, pluginOptions], [_babel7Plugins.legacyBabelPolyfillPlugin, {\n                deprecated: true\n              }]);\n              if (!regenerator) {\n                polyfillPlugins.push([_babel7Plugins.removeRegeneratorEntryPlugin, pluginOptions]);\n              }\n            }\n          }\n        }\n      }\n    }\n    return polyfillPlugins;\n  };\n  {\n    exports.getPolyfillPlugins = getPolyfillPlugins;\n  }\n}\nfunction getLocalTargets(optionsTargets, ignoreBrowserslistConfig, configPath, browserslistEnv) {\n  if (optionsTargets != null && optionsTargets.esmodules && optionsTargets.browsers) {\n    console.warn(`\n@babel/preset-env: esmodules and browsers targets have been specified together.\n\\`browsers\\` target, \\`${optionsTargets.browsers.toString()}\\` will be ignored.\n`);\n  }\n  return (0, _helperCompilationTargets.default)(optionsTargets, {\n    ignoreBrowserslistConfig,\n    configPath,\n    browserslistEnv\n  });\n}\nfunction supportsStaticESM(caller) {\n  return !!(caller != null && caller.supportsStaticESM);\n}\nfunction supportsDynamicImport(caller) {\n  return !!(caller != null && caller.supportsDynamicImport);\n}\nfunction supportsExportNamespaceFrom(caller) {\n  return !!(caller != null && caller.supportsExportNamespaceFrom);\n}\nvar _default = exports.default = (0, _helperPluginUtils.declarePreset)((api, opts) => {\n  api.assertVersion(7);\n  const babelTargets = api.targets();\n  ;\n  const {\n    bugfixes,\n    configPath,\n    debug,\n    exclude: optionsExclude,\n    forceAllTransforms,\n    ignoreBrowserslistConfig,\n    include: optionsInclude,\n    modules: optionsModules,\n    shippedProposals,\n    targets: optionsTargets,\n    useBuiltIns,\n    corejs: {\n      version: corejs,\n      proposals\n    },\n    browserslistEnv\n  } = (0, _normalizeOptions.default)(opts);\n  {\n    var {\n      loose,\n      spec = false\n    } = opts;\n  }\n  let targets = babelTargets;\n  if (_semver.lt(api.version, \"7.13.0\") || opts.targets || opts.configPath || opts.browserslistEnv || opts.ignoreBrowserslistConfig) {\n    {\n      var hasUglifyTarget = false;\n      if (optionsTargets != null && optionsTargets.uglify) {\n        hasUglifyTarget = true;\n        delete optionsTargets.uglify;\n        console.warn(`\nThe uglify target has been deprecated. Set the top level\noption \\`forceAllTransforms: true\\` instead.\n`);\n      }\n    }\n    targets = getLocalTargets(optionsTargets, ignoreBrowserslistConfig, configPath, browserslistEnv);\n  }\n  const transformTargets = forceAllTransforms || hasUglifyTarget ? {} : targets;\n  const include = transformIncludesAndExcludes(optionsInclude);\n  const exclude = transformIncludesAndExcludes(optionsExclude);\n  const compatData = getPluginList(shippedProposals, bugfixes);\n  const modules = optionsModules === \"auto\" ? api.caller(supportsStaticESM) ? false : \"commonjs\" : optionsModules;\n  const shouldTransformDynamicImport = optionsModules === \"auto\" ? !api.caller(supportsDynamicImport) : !!modules;\n  if (!exclude.plugins.has(\"transform-export-namespace-from\") && (optionsModules === \"auto\" ? !api.caller(supportsExportNamespaceFrom) : !!modules)) {\n    include.plugins.add(\"transform-export-namespace-from\");\n  }\n  const pluginNames = (0, _helperCompilationTargets.filterItems)(compatData, include.plugins, exclude.plugins, transformTargets, getSpecialModulesPluginNames(modules, shouldTransformDynamicImport, api.version), !loose ? undefined : [\"transform-typeof-symbol\"], _shippedProposals.pluginSyntaxMap);\n  if (shippedProposals) {\n    (0, _filterItems.addProposalSyntaxPlugins)(pluginNames, _shippedProposals.proposalSyntaxPlugins);\n  }\n  (0, _filterItems.removeUnsupportedItems)(pluginNames, api.version);\n  (0, _filterItems.removeUnnecessaryItems)(pluginNames, _pluginsCompatData.overlappingPlugins);\n  const polyfillPlugins = getPolyfillPlugins({\n    useBuiltIns,\n    corejs,\n    polyfillTargets: targets,\n    include: include.builtIns,\n    exclude: exclude.builtIns,\n    proposals,\n    shippedProposals,\n    regenerator: pluginNames.has(\"transform-regenerator\"),\n    debug\n  });\n  const pluginUseBuiltIns = useBuiltIns !== false;\n  const plugins = Array.from(pluginNames).map(pluginName => {\n    if (pluginName === \"transform-class-properties\" || pluginName === \"transform-private-methods\" || pluginName === \"transform-private-property-in-object\") {\n      return [getPlugin(pluginName), {\n        loose: loose ? \"#__internal__@babel/preset-env__prefer-true-but-false-is-ok-if-it-prevents-an-error\" : \"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"\n      }];\n    }\n    if (pluginName === \"syntax-import-attributes\") {\n      return [getPlugin(pluginName), {\n        deprecatedAssertSyntax: true\n      }];\n    }\n    return [getPlugin(pluginName), {\n      spec,\n      loose,\n      useBuiltIns: pluginUseBuiltIns\n    }];\n  }).concat(polyfillPlugins);\n  if (debug) {\n    console.log(\"@babel/preset-env: `DEBUG` option\");\n    console.log(\"\\nUsing targets:\");\n    console.log(JSON.stringify((0, _helperCompilationTargets.prettifyTargets)(targets), null, 2));\n    console.log(`\\nUsing modules transform: ${optionsModules.toString()}`);\n    console.log(\"\\nUsing plugins:\");\n    pluginNames.forEach(pluginName => {\n      (0, _debug.logPlugin)(pluginName, targets, compatData);\n    });\n    if (!useBuiltIns) {\n      console.log(\"\\nUsing polyfills: No polyfills were added, since the `useBuiltIns` option was not set.\");\n    }\n  }\n  return {\n    plugins\n  };\n});\n{\n  exports.getModulesPluginNames = ({\n    modules,\n    transformations,\n    shouldTransformESM,\n    shouldTransformDynamicImport,\n    shouldTransformExportNamespaceFrom\n  }) => {\n    const modulesPluginNames = [];\n    if (modules !== false && transformations[modules]) {\n      if (shouldTransformESM) {\n        modulesPluginNames.push(transformations[modules]);\n      }\n      if (shouldTransformDynamicImport) {\n        if (shouldTransformESM && modules !== \"umd\") {\n          modulesPluginNames.push(\"transform-dynamic-import\");\n        } else {\n          console.warn(\"Dynamic import can only be transformed when transforming ES\" + \" modules to AMD, CommonJS or SystemJS.\");\n        }\n      }\n    }\n    if (shouldTransformExportNamespaceFrom) {\n      modulesPluginNames.push(\"transform-export-namespace-from\");\n    }\n    if (!shouldTransformDynamicImport) {\n      modulesPluginNames.push(\"syntax-dynamic-import\");\n    }\n    if (!shouldTransformExportNamespaceFrom) {\n      modulesPluginNames.push(\"syntax-export-namespace-from\");\n    }\n    modulesPluginNames.push(\"syntax-top-level-await\");\n    modulesPluginNames.push(\"syntax-import-meta\");\n    return modulesPluginNames;\n  };\n}","map":{"version":3,"names":["_semver","require","_debug","_filterItems","_moduleTransformations","_normalizeOptions","_shippedProposals","_pluginsCompatData","_babelPluginPolyfillCorejs","_babel7Plugins","_helperCompilationTargets","_availablePlugins","_helperPluginUtils","pluginCoreJS3","default","isPluginRequired","targets","support","isRequired","compatData","filterStageFromList","list","stageList","Object","keys","reduce","result","item","has","pluginLists","withProposals","withoutBugfixes","plugins","withBugfixes","assign","pluginsBugfixes","withoutProposals","proposalPlugins","getPluginList","proposals","bugfixes","getPlugin","pluginName","plugin","Error","transformIncludesAndExcludes","opts","opt","target","match","add","all","Set","builtIns","exports","getSpecialModulesPluginNames","modules","shouldTransformDynamicImport","babelVersion","modulesPluginNames","push","console","warn","getCoreJSOptions","useBuiltIns","corejs","polyfillTargets","include","exclude","shippedProposals","debug","method","version","toString","undefined","noRuntimeName","getPolyfillPlugins","regenerator","polyfillPlugins","pluginOptions","major","pluginCoreJS2","legacyBabelPolyfillPlugin","usage","deprecated","pluginRegenerator","removeRegeneratorEntryPlugin","getLocalTargets","optionsTargets","ignoreBrowserslistConfig","configPath","browserslistEnv","esmodules","browsers","supportsStaticESM","caller","supportsDynamicImport","supportsExportNamespaceFrom","_default","declarePreset","api","assertVersion","babelTargets","optionsExclude","forceAllTransforms","optionsInclude","optionsModules","loose","spec","lt","hasUglifyTarget","uglify","transformTargets","pluginNames","filterItems","pluginSyntaxMap","addProposalSyntaxPlugins","proposalSyntaxPlugins","removeUnsupportedItems","removeUnnecessaryItems","overlappingPlugins","pluginUseBuiltIns","Array","from","map","deprecatedAssertSyntax","concat","log","JSON","stringify","prettifyTargets","forEach","logPlugin","getModulesPluginNames","transformations","shouldTransformESM","shouldTransformExportNamespaceFrom"],"sources":["C:\\Users\\chest\\OneDrive\\Documentos\\GitHub\\HackUPC\\frontend\\node_modules\\@babel\\preset-env\\src\\index.ts"],"sourcesContent":["import semver, { type SemVer } from \"semver\";\nimport { logPlugin } from \"./debug.ts\";\nimport {\n  addProposalSyntaxPlugins,\n  removeUnnecessaryItems,\n  removeUnsupportedItems,\n} from \"./filter-items.ts\";\nimport moduleTransformations from \"./module-transformations.ts\";\nimport normalizeOptions from \"./normalize-options.ts\";\nimport {\n  pluginSyntaxMap,\n  proposalPlugins,\n  proposalSyntaxPlugins,\n} from \"./shipped-proposals.ts\";\nimport {\n  plugins as pluginsList,\n  pluginsBugfixes as pluginsBugfixesList,\n  overlappingPlugins,\n} from \"./plugins-compat-data.ts\";\n\nimport type { CallerMetadata } from \"@babel/core\";\n\nimport _pluginCoreJS3 from \"babel-plugin-polyfill-corejs3\";\n// TODO(Babel 8): Just use the default import\nconst pluginCoreJS3 = _pluginCoreJS3.default || _pluginCoreJS3;\n\n// TODO(Babel 8): Remove this\nimport babel7 from \"./polyfills/babel-7-plugins.cjs\";\n\nimport getTargets, {\n  prettifyTargets,\n  filterItems,\n  isRequired,\n} from \"@babel/helper-compilation-targets\";\nimport type { Targets, InputTargets } from \"@babel/helper-compilation-targets\";\nimport availablePlugins from \"./available-plugins.ts\";\nimport { declarePreset } from \"@babel/helper-plugin-utils\";\n\nimport type { BuiltInsOption, ModuleOption, Options } from \"./types.ts\";\n\n// TODO: Remove in Babel 8\nexport function isPluginRequired(targets: Targets, support: Targets) {\n  return isRequired(\"fake-name\", targets, {\n    compatData: { \"fake-name\": support },\n  });\n}\n\nfunction filterStageFromList(\n  list: { [feature: string]: Targets },\n  stageList: Set<string>,\n) {\n  return Object.keys(list).reduce((result, item) => {\n    if (!stageList.has(item)) {\n      // @ts-expect-error todo: refine result types\n      result[item] = list[item];\n    }\n\n    return result;\n  }, {});\n}\n\nconst pluginLists = {\n  withProposals: {\n    withoutBugfixes: pluginsList,\n    withBugfixes: Object.assign({}, pluginsList, pluginsBugfixesList),\n  },\n  withoutProposals: {\n    withoutBugfixes: filterStageFromList(pluginsList, proposalPlugins),\n    withBugfixes: filterStageFromList(\n      Object.assign({}, pluginsList, pluginsBugfixesList),\n      proposalPlugins,\n    ),\n  },\n};\n\nfunction getPluginList(proposals: boolean, bugfixes: boolean) {\n  if (proposals) {\n    if (bugfixes) return pluginLists.withProposals.withBugfixes;\n    else return pluginLists.withProposals.withoutBugfixes;\n  } else {\n    if (bugfixes) return pluginLists.withoutProposals.withBugfixes;\n    else return pluginLists.withoutProposals.withoutBugfixes;\n  }\n}\n\nconst getPlugin = (pluginName: string) => {\n  const plugin =\n    // @ts-expect-error plugin name is constructed from available plugin list\n    availablePlugins[pluginName]();\n\n  if (!plugin) {\n    throw new Error(\n      `Could not find plugin \"${pluginName}\". Ensure there is an entry in ./available-plugins.js for it.`,\n    );\n  }\n\n  return plugin;\n};\n\nexport const transformIncludesAndExcludes = (opts: Array<string>): any => {\n  return opts.reduce(\n    (result, opt) => {\n      const target = opt.match(/^(es|es6|es7|esnext|web)\\./)\n        ? \"builtIns\"\n        : \"plugins\";\n      result[target].add(opt);\n      return result;\n    },\n    {\n      all: opts,\n      plugins: new Set(),\n      builtIns: new Set(),\n    },\n  );\n};\n\nfunction getSpecialModulesPluginNames(\n  modules: Exclude<ModuleOption, \"auto\">,\n  shouldTransformDynamicImport: boolean,\n  babelVersion: string,\n) {\n  const modulesPluginNames = [];\n  if (modules) {\n    modulesPluginNames.push(moduleTransformations[modules]);\n  }\n\n  if (shouldTransformDynamicImport) {\n    if (modules && modules !== \"umd\") {\n      modulesPluginNames.push(\"transform-dynamic-import\");\n    } else {\n      console.warn(\n        \"Dynamic import can only be transformed when transforming ES\" +\n          \" modules to AMD, CommonJS or SystemJS.\",\n      );\n    }\n  }\n\n  if (!process.env.BABEL_8_BREAKING && babelVersion[0] !== \"8\") {\n    // Enable module-related syntax plugins for older Babel versions\n    if (!shouldTransformDynamicImport) {\n      modulesPluginNames.push(\"syntax-dynamic-import\");\n    }\n    modulesPluginNames.push(\"syntax-top-level-await\");\n    modulesPluginNames.push(\"syntax-import-meta\");\n  }\n\n  return modulesPluginNames;\n}\n\nconst getCoreJSOptions = ({\n  useBuiltIns,\n  corejs,\n  polyfillTargets,\n  include,\n  exclude,\n  proposals,\n  shippedProposals,\n  debug,\n}: {\n  useBuiltIns: BuiltInsOption;\n  corejs: SemVer | null | false;\n  polyfillTargets: Targets;\n  include: Set<string>;\n  exclude: Set<string>;\n  proposals: boolean;\n  shippedProposals: boolean;\n  debug: boolean;\n}) => ({\n  method: `${useBuiltIns}-global`,\n  version: corejs ? corejs.toString() : undefined,\n  targets: polyfillTargets,\n  include,\n  exclude,\n  proposals,\n  shippedProposals,\n  debug,\n  \"#__secret_key__@babel/preset-env__compatibility\": {\n    noRuntimeName: true,\n  },\n});\n\nif (!process.env.BABEL_8_BREAKING) {\n  // eslint-disable-next-line no-var\n  var getPolyfillPlugins = ({\n    useBuiltIns,\n    corejs,\n    polyfillTargets,\n    include,\n    exclude,\n    proposals,\n    shippedProposals,\n    regenerator,\n    debug,\n  }: {\n    useBuiltIns: BuiltInsOption;\n    corejs: SemVer | null | false;\n    polyfillTargets: Targets;\n    include: Set<string>;\n    exclude: Set<string>;\n    proposals: boolean;\n    shippedProposals: boolean;\n    regenerator: boolean;\n    debug: boolean;\n  }) => {\n    const polyfillPlugins = [];\n    if (useBuiltIns === \"usage\" || useBuiltIns === \"entry\") {\n      const pluginOptions = getCoreJSOptions({\n        useBuiltIns,\n        corejs,\n        polyfillTargets,\n        include,\n        exclude,\n        proposals,\n        shippedProposals,\n        debug,\n      });\n\n      if (corejs) {\n        if (process.env.BABEL_8_BREAKING) {\n          polyfillPlugins.push([pluginCoreJS3, pluginOptions]);\n        } else {\n          if (useBuiltIns === \"usage\") {\n            if (corejs.major === 2) {\n              polyfillPlugins.push(\n                [babel7.pluginCoreJS2, pluginOptions],\n                [babel7.legacyBabelPolyfillPlugin, { usage: true }],\n              );\n            } else {\n              polyfillPlugins.push(\n                [pluginCoreJS3, pluginOptions],\n                [\n                  babel7.legacyBabelPolyfillPlugin,\n                  { usage: true, deprecated: true },\n                ],\n              );\n            }\n            if (regenerator) {\n              polyfillPlugins.push([\n                babel7.pluginRegenerator,\n                { method: \"usage-global\", debug },\n              ]);\n            }\n          } else {\n            if (corejs.major === 2) {\n              polyfillPlugins.push(\n                [babel7.legacyBabelPolyfillPlugin, { regenerator }],\n                [babel7.pluginCoreJS2, pluginOptions],\n              );\n            } else {\n              polyfillPlugins.push(\n                [pluginCoreJS3, pluginOptions],\n                [babel7.legacyBabelPolyfillPlugin, { deprecated: true }],\n              );\n              if (!regenerator) {\n                polyfillPlugins.push([\n                  babel7.removeRegeneratorEntryPlugin,\n                  pluginOptions,\n                ]);\n              }\n            }\n          }\n        }\n      }\n    }\n    return polyfillPlugins;\n  };\n\n  if (!USE_ESM) {\n    // eslint-disable-next-line no-restricted-globals\n    exports.getPolyfillPlugins = getPolyfillPlugins;\n  }\n}\n\nfunction getLocalTargets(\n  optionsTargets: Options[\"targets\"],\n  ignoreBrowserslistConfig: boolean,\n  configPath: string,\n  browserslistEnv: string,\n) {\n  if (optionsTargets?.esmodules && optionsTargets.browsers) {\n    console.warn(`\n@babel/preset-env: esmodules and browsers targets have been specified together.\n\\`browsers\\` target, \\`${optionsTargets.browsers.toString()}\\` will be ignored.\n`);\n  }\n\n  return getTargets(optionsTargets as InputTargets, {\n    ignoreBrowserslistConfig,\n    configPath,\n    browserslistEnv,\n  });\n}\n\nfunction supportsStaticESM(caller: CallerMetadata | undefined) {\n  // TODO(Babel 8): Fallback to true\n  // @ts-expect-error supportsStaticESM is not defined in CallerMetadata\n  return !!caller?.supportsStaticESM;\n}\n\nfunction supportsDynamicImport(caller: CallerMetadata | undefined) {\n  // TODO(Babel 8): Fallback to true\n  // @ts-expect-error supportsDynamicImport is not defined in CallerMetadata\n  return !!caller?.supportsDynamicImport;\n}\n\nfunction supportsExportNamespaceFrom(caller: CallerMetadata | undefined) {\n  // TODO(Babel 8): Fallback to null\n  // @ts-expect-error supportsExportNamespaceFrom is not defined in CallerMetadata\n  return !!caller?.supportsExportNamespaceFrom;\n}\n\nexport default declarePreset((api, opts: Options) => {\n  api.assertVersion(REQUIRED_VERSION(7));\n\n  const babelTargets = api.targets();\n\n  if (process.env.BABEL_8_BREAKING && (\"loose\" in opts || \"spec\" in opts)) {\n    throw new Error(\n      \"@babel/preset-env: The 'loose' and 'spec' options have been removed, \" +\n        \"and you should configure granular compiler assumptions instead. See \" +\n        \"https://babeljs.io/assumptions for more information.\",\n    );\n  }\n\n  const {\n    bugfixes,\n    configPath,\n    debug,\n    exclude: optionsExclude,\n    forceAllTransforms,\n    ignoreBrowserslistConfig,\n    include: optionsInclude,\n    modules: optionsModules,\n    shippedProposals,\n    targets: optionsTargets,\n    useBuiltIns,\n    corejs: { version: corejs, proposals },\n    browserslistEnv,\n  } = normalizeOptions(opts);\n\n  if (!process.env.BABEL_8_BREAKING) {\n    // eslint-disable-next-line no-var\n    var { loose, spec = false } = opts;\n  }\n\n  let targets = babelTargets;\n\n  if (\n    // @babel/core < 7.13.0 doesn't load targets (api.targets() always\n    // returns {} thanks to @babel/helper-plugin-utils), so we always want\n    // to fallback to the old targets behavior in this case.\n    semver.lt(api.version, \"7.13.0\") ||\n    // If any browserslist-related option is specified, fallback to the old\n    // behavior of not using the targets specified in the top-level options.\n    opts.targets ||\n    opts.configPath ||\n    opts.browserslistEnv ||\n    opts.ignoreBrowserslistConfig\n  ) {\n    if (!process.env.BABEL_8_BREAKING) {\n      // eslint-disable-next-line no-var\n      var hasUglifyTarget = false;\n\n      if (optionsTargets?.uglify) {\n        hasUglifyTarget = true;\n        delete optionsTargets.uglify;\n\n        console.warn(`\nThe uglify target has been deprecated. Set the top level\noption \\`forceAllTransforms: true\\` instead.\n`);\n      }\n    }\n\n    targets = getLocalTargets(\n      optionsTargets,\n      ignoreBrowserslistConfig,\n      configPath,\n      browserslistEnv,\n    );\n  }\n\n  const transformTargets = (\n    process.env.BABEL_8_BREAKING\n      ? forceAllTransforms\n      : forceAllTransforms || hasUglifyTarget\n  )\n    ? ({} as Targets)\n    : targets;\n\n  const include = transformIncludesAndExcludes(optionsInclude);\n  const exclude = transformIncludesAndExcludes(optionsExclude);\n\n  const compatData = getPluginList(shippedProposals, bugfixes);\n  const modules =\n    optionsModules === \"auto\"\n      ? api.caller(supportsStaticESM)\n        ? false\n        : \"commonjs\"\n      : optionsModules;\n  const shouldTransformDynamicImport =\n    optionsModules === \"auto\" ? !api.caller(supportsDynamicImport) : !!modules;\n\n  // If the caller does not support export-namespace-from, we forcefully add\n  // the plugin to `includes`.\n  // TODO(Babel 8): stop doing this, similarly to how we don't do this for any\n  // other plugin. We can consider adding bundlers as targets in the future,\n  // but we should not have a one-off special case for this plugin.\n  if (\n    !exclude.plugins.has(\"transform-export-namespace-from\") &&\n    (optionsModules === \"auto\"\n      ? !api.caller(supportsExportNamespaceFrom)\n      : !!modules)\n  ) {\n    include.plugins.add(\"transform-export-namespace-from\");\n  }\n\n  const pluginNames = filterItems(\n    compatData,\n    include.plugins,\n    exclude.plugins,\n    transformTargets,\n    getSpecialModulesPluginNames(\n      modules,\n      shouldTransformDynamicImport,\n      api.version,\n    ),\n    process.env.BABEL_8_BREAKING || !loose\n      ? undefined\n      : [\"transform-typeof-symbol\"],\n    pluginSyntaxMap,\n  );\n  if (shippedProposals) {\n    addProposalSyntaxPlugins(pluginNames, proposalSyntaxPlugins);\n  }\n  removeUnsupportedItems(pluginNames, api.version);\n  removeUnnecessaryItems(pluginNames, overlappingPlugins);\n\n  const polyfillPlugins = process.env.BABEL_8_BREAKING\n    ? useBuiltIns\n      ? [\n          [\n            pluginCoreJS3,\n            getCoreJSOptions({\n              useBuiltIns,\n              corejs,\n              polyfillTargets: targets,\n              include: include.builtIns,\n              exclude: exclude.builtIns,\n              proposals,\n              shippedProposals,\n              debug,\n            }),\n          ],\n        ]\n      : []\n    : getPolyfillPlugins({\n        useBuiltIns,\n        corejs,\n        polyfillTargets: targets,\n        include: include.builtIns,\n        exclude: exclude.builtIns,\n        proposals,\n        shippedProposals,\n        regenerator: pluginNames.has(\"transform-regenerator\"),\n        debug,\n      });\n\n  const pluginUseBuiltIns = useBuiltIns !== false;\n  const plugins = Array.from(pluginNames)\n    .map(pluginName => {\n      if (\n        !process.env.BABEL_8_BREAKING &&\n        (pluginName === \"transform-class-properties\" ||\n          pluginName === \"transform-private-methods\" ||\n          pluginName === \"transform-private-property-in-object\")\n      ) {\n        return [\n          getPlugin(pluginName),\n          {\n            loose: loose\n              ? \"#__internal__@babel/preset-env__prefer-true-but-false-is-ok-if-it-prevents-an-error\"\n              : \"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\",\n          },\n        ];\n      }\n      if (pluginName === \"syntax-import-attributes\") {\n        // For backward compatibility with the import-assertions plugin, we\n        // allow the deprecated `assert` keyword.\n        // TODO(Babel 8): Revisit this.\n        return [getPlugin(pluginName), { deprecatedAssertSyntax: true }];\n      }\n      return [\n        getPlugin(pluginName),\n        process.env.BABEL_8_BREAKING\n          ? { useBuiltIns: pluginUseBuiltIns }\n          : { spec, loose, useBuiltIns: pluginUseBuiltIns },\n      ];\n    })\n    .concat(polyfillPlugins);\n\n  if (debug) {\n    console.log(\"@babel/preset-env: `DEBUG` option\");\n    console.log(\"\\nUsing targets:\");\n    console.log(JSON.stringify(prettifyTargets(targets), null, 2));\n    console.log(`\\nUsing modules transform: ${optionsModules.toString()}`);\n    console.log(\"\\nUsing plugins:\");\n    pluginNames.forEach(pluginName => {\n      logPlugin(pluginName, targets, compatData);\n    });\n\n    if (!useBuiltIns) {\n      console.log(\n        \"\\nUsing polyfills: No polyfills were added, since the `useBuiltIns` option was not set.\",\n      );\n    }\n  }\n\n  return { plugins };\n});\n\nif (!process.env.BABEL_8_BREAKING && !USE_ESM) {\n  // eslint-disable-next-line no-restricted-globals\n  exports.getModulesPluginNames = ({\n    modules,\n    transformations,\n    shouldTransformESM,\n    shouldTransformDynamicImport,\n    shouldTransformExportNamespaceFrom,\n  }: {\n    modules: ModuleOption;\n    transformations: typeof import(\"./module-transformations\").default;\n    shouldTransformESM: boolean;\n    shouldTransformDynamicImport: boolean;\n    shouldTransformExportNamespaceFrom: boolean;\n  }) => {\n    const modulesPluginNames = [];\n    if (modules !== false && transformations[modules]) {\n      if (shouldTransformESM) {\n        modulesPluginNames.push(transformations[modules]);\n      }\n\n      if (shouldTransformDynamicImport) {\n        if (shouldTransformESM && modules !== \"umd\") {\n          modulesPluginNames.push(\"transform-dynamic-import\");\n        } else {\n          console.warn(\n            \"Dynamic import can only be transformed when transforming ES\" +\n              \" modules to AMD, CommonJS or SystemJS.\",\n          );\n        }\n      }\n    }\n\n    if (shouldTransformExportNamespaceFrom) {\n      modulesPluginNames.push(\"transform-export-namespace-from\");\n    }\n    if (!shouldTransformDynamicImport) {\n      modulesPluginNames.push(\"syntax-dynamic-import\");\n    }\n    if (!shouldTransformExportNamespaceFrom) {\n      modulesPluginNames.push(\"syntax-export-namespace-from\");\n    }\n    modulesPluginNames.push(\"syntax-top-level-await\");\n    modulesPluginNames.push(\"syntax-import-meta\");\n\n    return modulesPluginNames;\n  };\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}