{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.hoistSelectors = void 0;\nvar tslib_1 = require(\"tslib\");\nvar types_1 = require(\"./types\");\nfunction cloneDeep(obj) {\n  if (Array.isArray(obj)) {\n    // @ts-expect-error meh\n    return tslib_1.__spreadArray([], obj.map(cloneDeep), true);\n  }\n  if (obj !== null && typeof obj === 'object') {\n    // @ts-expect-error meh\n    return Object.keys(obj).reduce(function (cloned, k) {\n      // @ts-expect-error meh\n      cloned[k] = cloneDeep(obj[k]);\n      return cloned;\n    }, {});\n  }\n  return obj;\n}\nfunction hoistPluralOrSelectElement(ast, el, positionToInject) {\n  // pull this out of the ast and move it to the top\n  var cloned = cloneDeep(el);\n  var options = cloned.options;\n  cloned.options = Object.keys(options).reduce(function (all, k) {\n    var newValue = hoistSelectors(tslib_1.__spreadArray(tslib_1.__spreadArray(tslib_1.__spreadArray([], ast.slice(0, positionToInject), true), options[k].value, true), ast.slice(positionToInject + 1), true));\n    all[k] = {\n      value: newValue\n    };\n    return all;\n  }, {});\n  return cloned;\n}\nfunction isPluralOrSelectElement(el) {\n  return (0, types_1.isPluralElement)(el) || (0, types_1.isSelectElement)(el);\n}\nfunction findPluralOrSelectElement(ast) {\n  return !!ast.find(function (el) {\n    if (isPluralOrSelectElement(el)) {\n      return true;\n    }\n    if ((0, types_1.isTagElement)(el)) {\n      return findPluralOrSelectElement(el.children);\n    }\n    return false;\n  });\n}\n/**\n * Hoist all selectors to the beginning of the AST & flatten the\n * resulting options. E.g:\n * \"I have {count, plural, one{a dog} other{many dogs}}\"\n * becomes \"{count, plural, one{I have a dog} other{I have many dogs}}\".\n * If there are multiple selectors, the order of which one is hoisted 1st\n * is non-deterministic.\n * The goal is to provide as many full sentences as possible since fragmented\n * sentences are not translator-friendly\n * @param ast AST\n */\nfunction hoistSelectors(ast) {\n  for (var i = 0; i < ast.length; i++) {\n    var el = ast[i];\n    if (isPluralOrSelectElement(el)) {\n      return [hoistPluralOrSelectElement(ast, el, i)];\n    }\n    if ((0, types_1.isTagElement)(el) && findPluralOrSelectElement([el])) {\n      throw new Error('Cannot hoist plural/select within a tag element. Please put the tag element inside each plural/select option');\n    }\n  }\n  return ast;\n}\nexports.hoistSelectors = hoistSelectors;","map":{"version":3,"names":["Object","defineProperty","exports","value","hoistSelectors","tslib_1","require","types_1","cloneDeep","obj","Array","isArray","__spreadArray","map","keys","reduce","cloned","k","hoistPluralOrSelectElement","ast","el","positionToInject","options","all","newValue","slice","isPluralOrSelectElement","isPluralElement","isSelectElement","findPluralOrSelectElement","find","isTagElement","children","i","length","Error"],"sources":["C:/Users/chest/OneDrive/Documentos/GitHub/HackUPC/frontend/node_modules/@formatjs/icu-messageformat-parser/manipulator.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.hoistSelectors = void 0;\nvar tslib_1 = require(\"tslib\");\nvar types_1 = require(\"./types\");\nfunction cloneDeep(obj) {\n    if (Array.isArray(obj)) {\n        // @ts-expect-error meh\n        return tslib_1.__spreadArray([], obj.map(cloneDeep), true);\n    }\n    if (obj !== null && typeof obj === 'object') {\n        // @ts-expect-error meh\n        return Object.keys(obj).reduce(function (cloned, k) {\n            // @ts-expect-error meh\n            cloned[k] = cloneDeep(obj[k]);\n            return cloned;\n        }, {});\n    }\n    return obj;\n}\nfunction hoistPluralOrSelectElement(ast, el, positionToInject) {\n    // pull this out of the ast and move it to the top\n    var cloned = cloneDeep(el);\n    var options = cloned.options;\n    cloned.options = Object.keys(options).reduce(function (all, k) {\n        var newValue = hoistSelectors(tslib_1.__spreadArray(tslib_1.__spreadArray(tslib_1.__spreadArray([], ast.slice(0, positionToInject), true), options[k].value, true), ast.slice(positionToInject + 1), true));\n        all[k] = {\n            value: newValue,\n        };\n        return all;\n    }, {});\n    return cloned;\n}\nfunction isPluralOrSelectElement(el) {\n    return (0, types_1.isPluralElement)(el) || (0, types_1.isSelectElement)(el);\n}\nfunction findPluralOrSelectElement(ast) {\n    return !!ast.find(function (el) {\n        if (isPluralOrSelectElement(el)) {\n            return true;\n        }\n        if ((0, types_1.isTagElement)(el)) {\n            return findPluralOrSelectElement(el.children);\n        }\n        return false;\n    });\n}\n/**\n * Hoist all selectors to the beginning of the AST & flatten the\n * resulting options. E.g:\n * \"I have {count, plural, one{a dog} other{many dogs}}\"\n * becomes \"{count, plural, one{I have a dog} other{I have many dogs}}\".\n * If there are multiple selectors, the order of which one is hoisted 1st\n * is non-deterministic.\n * The goal is to provide as many full sentences as possible since fragmented\n * sentences are not translator-friendly\n * @param ast AST\n */\nfunction hoistSelectors(ast) {\n    for (var i = 0; i < ast.length; i++) {\n        var el = ast[i];\n        if (isPluralOrSelectElement(el)) {\n            return [hoistPluralOrSelectElement(ast, el, i)];\n        }\n        if ((0, types_1.isTagElement)(el) && findPluralOrSelectElement([el])) {\n            throw new Error('Cannot hoist plural/select within a tag element. Please put the tag element inside each plural/select option');\n        }\n    }\n    return ast;\n}\nexports.hoistSelectors = hoistSelectors;\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,cAAc,GAAG,KAAK,CAAC;AAC/B,IAAIC,OAAO,GAAGC,OAAO,CAAC,OAAO,CAAC;AAC9B,IAAIC,OAAO,GAAGD,OAAO,CAAC,SAAS,CAAC;AAChC,SAASE,SAASA,CAACC,GAAG,EAAE;EACpB,IAAIC,KAAK,CAACC,OAAO,CAACF,GAAG,CAAC,EAAE;IACpB;IACA,OAAOJ,OAAO,CAACO,aAAa,CAAC,EAAE,EAAEH,GAAG,CAACI,GAAG,CAACL,SAAS,CAAC,EAAE,IAAI,CAAC;EAC9D;EACA,IAAIC,GAAG,KAAK,IAAI,IAAI,OAAOA,GAAG,KAAK,QAAQ,EAAE;IACzC;IACA,OAAOT,MAAM,CAACc,IAAI,CAACL,GAAG,CAAC,CAACM,MAAM,CAAC,UAAUC,MAAM,EAAEC,CAAC,EAAE;MAChD;MACAD,MAAM,CAACC,CAAC,CAAC,GAAGT,SAAS,CAACC,GAAG,CAACQ,CAAC,CAAC,CAAC;MAC7B,OAAOD,MAAM;IACjB,CAAC,EAAE,CAAC,CAAC,CAAC;EACV;EACA,OAAOP,GAAG;AACd;AACA,SAASS,0BAA0BA,CAACC,GAAG,EAAEC,EAAE,EAAEC,gBAAgB,EAAE;EAC3D;EACA,IAAIL,MAAM,GAAGR,SAAS,CAACY,EAAE,CAAC;EAC1B,IAAIE,OAAO,GAAGN,MAAM,CAACM,OAAO;EAC5BN,MAAM,CAACM,OAAO,GAAGtB,MAAM,CAACc,IAAI,CAACQ,OAAO,CAAC,CAACP,MAAM,CAAC,UAAUQ,GAAG,EAAEN,CAAC,EAAE;IAC3D,IAAIO,QAAQ,GAAGpB,cAAc,CAACC,OAAO,CAACO,aAAa,CAACP,OAAO,CAACO,aAAa,CAACP,OAAO,CAACO,aAAa,CAAC,EAAE,EAAEO,GAAG,CAACM,KAAK,CAAC,CAAC,EAAEJ,gBAAgB,CAAC,EAAE,IAAI,CAAC,EAAEC,OAAO,CAACL,CAAC,CAAC,CAACd,KAAK,EAAE,IAAI,CAAC,EAAEgB,GAAG,CAACM,KAAK,CAACJ,gBAAgB,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;IAC3ME,GAAG,CAACN,CAAC,CAAC,GAAG;MACLd,KAAK,EAAEqB;IACX,CAAC;IACD,OAAOD,GAAG;EACd,CAAC,EAAE,CAAC,CAAC,CAAC;EACN,OAAOP,MAAM;AACjB;AACA,SAASU,uBAAuBA,CAACN,EAAE,EAAE;EACjC,OAAO,CAAC,CAAC,EAAEb,OAAO,CAACoB,eAAe,EAAEP,EAAE,CAAC,IAAI,CAAC,CAAC,EAAEb,OAAO,CAACqB,eAAe,EAAER,EAAE,CAAC;AAC/E;AACA,SAASS,yBAAyBA,CAACV,GAAG,EAAE;EACpC,OAAO,CAAC,CAACA,GAAG,CAACW,IAAI,CAAC,UAAUV,EAAE,EAAE;IAC5B,IAAIM,uBAAuB,CAACN,EAAE,CAAC,EAAE;MAC7B,OAAO,IAAI;IACf;IACA,IAAI,CAAC,CAAC,EAAEb,OAAO,CAACwB,YAAY,EAAEX,EAAE,CAAC,EAAE;MAC/B,OAAOS,yBAAyB,CAACT,EAAE,CAACY,QAAQ,CAAC;IACjD;IACA,OAAO,KAAK;EAChB,CAAC,CAAC;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS5B,cAAcA,CAACe,GAAG,EAAE;EACzB,KAAK,IAAIc,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGd,GAAG,CAACe,MAAM,EAAED,CAAC,EAAE,EAAE;IACjC,IAAIb,EAAE,GAAGD,GAAG,CAACc,CAAC,CAAC;IACf,IAAIP,uBAAuB,CAACN,EAAE,CAAC,EAAE;MAC7B,OAAO,CAACF,0BAA0B,CAACC,GAAG,EAAEC,EAAE,EAAEa,CAAC,CAAC,CAAC;IACnD;IACA,IAAI,CAAC,CAAC,EAAE1B,OAAO,CAACwB,YAAY,EAAEX,EAAE,CAAC,IAAIS,yBAAyB,CAAC,CAACT,EAAE,CAAC,CAAC,EAAE;MAClE,MAAM,IAAIe,KAAK,CAAC,8GAA8G,CAAC;IACnI;EACJ;EACA,OAAOhB,GAAG;AACd;AACAjB,OAAO,CAACE,cAAc,GAAGA,cAAc","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}