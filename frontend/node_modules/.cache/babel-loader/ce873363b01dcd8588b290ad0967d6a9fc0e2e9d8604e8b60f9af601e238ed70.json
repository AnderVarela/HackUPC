{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst utils_1 = require(\"@typescript-eslint/utils\");\nconst util = __importStar(require(\"../util\"));\nconst getESLintCoreRule_1 = require(\"../util/getESLintCoreRule\");\nconst baseRule = (0, getESLintCoreRule_1.getESLintCoreRule)('no-empty-function');\nconst schema = util.deepMerge(\n// eslint-disable-next-line @typescript-eslint/no-unsafe-argument -- https://github.com/microsoft/TypeScript/issues/17002\nArray.isArray(baseRule.meta.schema) ? baseRule.meta.schema[0] : baseRule.meta.schema, {\n  properties: {\n    allow: {\n      items: {\n        enum: ['functions', 'arrowFunctions', 'generatorFunctions', 'methods', 'generatorMethods', 'getters', 'setters', 'constructors', 'private-constructors', 'protected-constructors', 'asyncFunctions', 'asyncMethods', 'decoratedFunctions', 'overrideMethods']\n      }\n    }\n  }\n});\nexports.default = util.createRule({\n  name: 'no-empty-function',\n  meta: {\n    type: 'suggestion',\n    docs: {\n      description: 'Disallow empty functions',\n      recommended: 'error',\n      extendsBaseRule: true\n    },\n    hasSuggestions: baseRule.meta.hasSuggestions,\n    schema: [schema],\n    messages: baseRule.meta.messages\n  },\n  defaultOptions: [{\n    allow: []\n  }],\n  create(context, [{\n    allow = []\n  }]) {\n    const rules = baseRule.create(context);\n    const isAllowedProtectedConstructors = allow.includes('protected-constructors');\n    const isAllowedPrivateConstructors = allow.includes('private-constructors');\n    const isAllowedDecoratedFunctions = allow.includes('decoratedFunctions');\n    const isAllowedOverrideMethods = allow.includes('overrideMethods');\n    /**\n     * Check if the method body is empty\n     * @param node the node to be validated\n     * @returns true if the body is empty\n     * @private\n     */\n    function isBodyEmpty(node) {\n      return !node.body || node.body.body.length === 0;\n    }\n    /**\n     * Check if method has parameter properties\n     * @param node the node to be validated\n     * @returns true if the body has parameter properties\n     * @private\n     */\n    function hasParameterProperties(node) {\n      var _a;\n      return (_a = node.params) === null || _a === void 0 ? void 0 : _a.some(param => param.type === utils_1.AST_NODE_TYPES.TSParameterProperty);\n    }\n    /**\n     * @param node the node to be validated\n     * @returns true if the constructor is allowed to be empty\n     * @private\n     */\n    function isAllowedEmptyConstructor(node) {\n      const parent = node.parent;\n      if (isBodyEmpty(node) && (parent === null || parent === void 0 ? void 0 : parent.type) === utils_1.AST_NODE_TYPES.MethodDefinition && parent.kind === 'constructor') {\n        const {\n          accessibility\n        } = parent;\n        return (\n          // allow protected constructors\n          accessibility === 'protected' && isAllowedProtectedConstructors ||\n          // allow private constructors\n          accessibility === 'private' && isAllowedPrivateConstructors ||\n          // allow constructors which have parameter properties\n          hasParameterProperties(node)\n        );\n      }\n      return false;\n    }\n    /**\n     * @param node the node to be validated\n     * @returns true if a function has decorators\n     * @private\n     */\n    function isAllowedEmptyDecoratedFunctions(node) {\n      var _a;\n      if (isAllowedDecoratedFunctions && isBodyEmpty(node)) {\n        const decorators = ((_a = node.parent) === null || _a === void 0 ? void 0 : _a.type) === utils_1.AST_NODE_TYPES.MethodDefinition ? node.parent.decorators : undefined;\n        return !!decorators && !!decorators.length;\n      }\n      return false;\n    }\n    function isAllowedEmptyOverrideMethod(node) {\n      var _a;\n      return isAllowedOverrideMethods && isBodyEmpty(node) && ((_a = node.parent) === null || _a === void 0 ? void 0 : _a.type) === utils_1.AST_NODE_TYPES.MethodDefinition && node.parent.override === true;\n    }\n    return Object.assign(Object.assign({}, rules), {\n      FunctionExpression(node) {\n        if (isAllowedEmptyConstructor(node) || isAllowedEmptyDecoratedFunctions(node) || isAllowedEmptyOverrideMethod(node)) {\n          return;\n        }\n        rules.FunctionExpression(node);\n      },\n      FunctionDeclaration(node) {\n        if (isAllowedEmptyDecoratedFunctions(node)) {\n          return;\n        }\n        rules.FunctionDeclaration(node);\n      }\n    });\n  }\n});","map":{"version":3,"names":["utils_1","require","util","__importStar","getESLintCoreRule_1","baseRule","getESLintCoreRule","schema","deepMerge","Array","isArray","meta","properties","allow","items","enum","exports","default","createRule","name","type","docs","description","recommended","extendsBaseRule","hasSuggestions","messages","defaultOptions","create","context","rules","isAllowedProtectedConstructors","includes","isAllowedPrivateConstructors","isAllowedDecoratedFunctions","isAllowedOverrideMethods","isBodyEmpty","node","body","length","hasParameterProperties","_a","params","some","param","AST_NODE_TYPES","TSParameterProperty","isAllowedEmptyConstructor","parent","MethodDefinition","kind","accessibility","isAllowedEmptyDecoratedFunctions","decorators","undefined","isAllowedEmptyOverrideMethod","override","Object","assign","FunctionExpression","FunctionDeclaration"],"sources":["../../src/rules/no-empty-function.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}