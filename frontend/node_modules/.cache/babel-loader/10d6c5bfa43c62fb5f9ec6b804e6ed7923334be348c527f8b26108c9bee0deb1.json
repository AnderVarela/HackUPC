{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst utils_1 = require(\"@typescript-eslint/utils\");\nconst util = __importStar(require(\"../util\"));\nexports.default = util.createRule({\n  name: 'no-empty-interface',\n  meta: {\n    type: 'suggestion',\n    docs: {\n      description: 'Disallow the declaration of empty interfaces',\n      recommended: 'error'\n    },\n    fixable: 'code',\n    hasSuggestions: true,\n    messages: {\n      noEmpty: 'An empty interface is equivalent to `{}`.',\n      noEmptyWithSuper: 'An interface declaring no members is equivalent to its supertype.'\n    },\n    schema: [{\n      type: 'object',\n      additionalProperties: false,\n      properties: {\n        allowSingleExtends: {\n          type: 'boolean'\n        }\n      }\n    }]\n  },\n  defaultOptions: [{\n    allowSingleExtends: false\n  }],\n  create(context, [{\n    allowSingleExtends\n  }]) {\n    return {\n      TSInterfaceDeclaration(node) {\n        var _a, _b;\n        const sourceCode = context.getSourceCode();\n        const filename = context.getFilename();\n        if (node.body.body.length !== 0) {\n          // interface contains members --> Nothing to report\n          return;\n        }\n        const extend = node.extends;\n        if (!extend || extend.length === 0) {\n          context.report({\n            node: node.id,\n            messageId: 'noEmpty'\n          });\n        } else if (extend.length === 1) {\n          // interface extends exactly 1 interface --> Report depending on rule setting\n          if (!allowSingleExtends) {\n            const fix = fixer => {\n              let typeParam = '';\n              if (node.typeParameters) {\n                typeParam = sourceCode.getText(node.typeParameters);\n              }\n              return fixer.replaceText(node, `type ${sourceCode.getText(node.id)}${typeParam} = ${sourceCode.getText(extend[0])}`);\n            };\n            const scope = context.getScope();\n            const mergedWithClassDeclaration = (_b = (_a = scope.set.get(node.id.name)) === null || _a === void 0 ? void 0 : _a.defs) === null || _b === void 0 ? void 0 : _b.some(def => def.node.type === utils_1.AST_NODE_TYPES.ClassDeclaration);\n            const isInAmbientDeclaration = !!(util.isDefinitionFile(filename) && scope.type === 'tsModule' && scope.block.declare);\n            const useAutoFix = !(isInAmbientDeclaration || mergedWithClassDeclaration);\n            context.report(Object.assign({\n              node: node.id,\n              messageId: 'noEmptyWithSuper'\n            }, useAutoFix ? {\n              fix\n            } : !mergedWithClassDeclaration ? {\n              suggest: [{\n                messageId: 'noEmptyWithSuper',\n                fix\n              }]\n            } : null));\n          }\n        }\n      }\n    };\n  }\n});","map":{"version":3,"names":["utils_1","require","util","__importStar","exports","default","createRule","name","meta","type","docs","description","recommended","fixable","hasSuggestions","messages","noEmpty","noEmptyWithSuper","schema","additionalProperties","properties","allowSingleExtends","defaultOptions","create","context","TSInterfaceDeclaration","node","sourceCode","getSourceCode","filename","getFilename","body","length","extend","extends","report","id","messageId","fix","fixer","typeParam","typeParameters","getText","replaceText","scope","getScope","mergedWithClassDeclaration","_b","_a","set","get","defs","some","def","AST_NODE_TYPES","ClassDeclaration","isInAmbientDeclaration","isDefinitionFile","block","declare","useAutoFix","Object","assign","suggest"],"sources":["../../src/rules/no-empty-interface.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}