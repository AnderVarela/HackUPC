{"ast":null,"code":"import e from \"postcss-value-parser\";\nconst r = [{\n  supports: \"color(srgb 0 0 0)\",\n  property: \"color\",\n  sniff: \"color\",\n  matchers: [{\n    type: \"function\",\n    value: \"color\",\n    nodes: [{\n      type: \"word\",\n      value: \"srgb\"\n    }, {\n      type: \"space\"\n    }, {\n      type: \"word\",\n      isVariable: !0\n    }, {\n      type: \"space\"\n    }, {\n      type: \"word\",\n      isVariable: !0\n    }, {\n      type: \"space\"\n    }, {\n      type: \"word\",\n      isVariable: !0\n    }]\n  }, {\n    type: \"function\",\n    value: \"color\",\n    nodes: [{\n      type: \"word\",\n      value: \"srgb\"\n    }, {\n      type: \"space\"\n    }, {\n      type: \"word\",\n      isVariable: !0\n    }, {\n      type: \"space\"\n    }, {\n      type: \"word\",\n      isVariable: !0\n    }, {\n      type: \"space\"\n    }, {\n      type: \"word\",\n      isVariable: !0\n    }, {\n      type: \"div\",\n      value: \"/\"\n    }, {\n      type: \"word\",\n      isVariable: !0\n    }]\n  }]\n}, {\n  supports: \"color(srgb-linear 0 0 0)\",\n  property: \"color\",\n  sniff: \"color\",\n  matchers: [{\n    type: \"function\",\n    value: \"color\",\n    nodes: [{\n      type: \"word\",\n      value: \"srgb-linear\"\n    }, {\n      type: \"space\"\n    }, {\n      type: \"word\",\n      isVariable: !0\n    }, {\n      type: \"space\"\n    }, {\n      type: \"word\",\n      isVariable: !0\n    }, {\n      type: \"space\"\n    }, {\n      type: \"word\",\n      isVariable: !0\n    }]\n  }, {\n    type: \"function\",\n    value: \"color\",\n    nodes: [{\n      type: \"word\",\n      value: \"srgb-linear\"\n    }, {\n      type: \"space\"\n    }, {\n      type: \"word\",\n      isVariable: !0\n    }, {\n      type: \"space\"\n    }, {\n      type: \"word\",\n      isVariable: !0\n    }, {\n      type: \"space\"\n    }, {\n      type: \"word\",\n      isVariable: !0\n    }, {\n      type: \"div\",\n      value: \"/\"\n    }, {\n      type: \"word\",\n      isVariable: !0\n    }]\n  }]\n}, {\n  supports: \"color(a98-rgb 0 0 0)\",\n  property: \"color\",\n  sniff: \"color\",\n  matchers: [{\n    type: \"function\",\n    value: \"color\",\n    nodes: [{\n      type: \"word\",\n      value: \"a98-rgb\"\n    }, {\n      type: \"space\"\n    }, {\n      type: \"word\",\n      isVariable: !0\n    }, {\n      type: \"space\"\n    }, {\n      type: \"word\",\n      isVariable: !0\n    }, {\n      type: \"space\"\n    }, {\n      type: \"word\",\n      isVariable: !0\n    }]\n  }, {\n    type: \"function\",\n    value: \"color\",\n    nodes: [{\n      type: \"word\",\n      value: \"a98-rgb\"\n    }, {\n      type: \"space\"\n    }, {\n      type: \"word\",\n      isVariable: !0\n    }, {\n      type: \"space\"\n    }, {\n      type: \"word\",\n      isVariable: !0\n    }, {\n      type: \"space\"\n    }, {\n      type: \"word\",\n      isVariable: !0\n    }, {\n      type: \"div\",\n      value: \"/\"\n    }, {\n      type: \"word\",\n      isVariable: !0\n    }]\n  }]\n}, {\n  supports: \"color(prophoto-rgb 0 0 0)\",\n  property: \"color\",\n  sniff: \"color\",\n  matchers: [{\n    type: \"function\",\n    value: \"color\",\n    nodes: [{\n      type: \"word\",\n      value: \"prophoto-rgb\"\n    }, {\n      type: \"space\"\n    }, {\n      type: \"word\",\n      isVariable: !0\n    }, {\n      type: \"space\"\n    }, {\n      type: \"word\",\n      isVariable: !0\n    }, {\n      type: \"space\"\n    }, {\n      type: \"word\",\n      isVariable: !0\n    }]\n  }, {\n    type: \"function\",\n    value: \"color\",\n    nodes: [{\n      type: \"word\",\n      value: \"prophoto-rgb\"\n    }, {\n      type: \"space\"\n    }, {\n      type: \"word\",\n      isVariable: !0\n    }, {\n      type: \"space\"\n    }, {\n      type: \"word\",\n      isVariable: !0\n    }, {\n      type: \"space\"\n    }, {\n      type: \"word\",\n      isVariable: !0\n    }, {\n      type: \"div\",\n      value: \"/\"\n    }, {\n      type: \"word\",\n      isVariable: !0\n    }]\n  }]\n}, {\n  supports: \"color(display-p3 0 0 0)\",\n  property: \"color\",\n  sniff: \"color\",\n  matchers: [{\n    type: \"function\",\n    value: \"color\",\n    nodes: [{\n      type: \"word\",\n      value: \"display-p3\"\n    }, {\n      type: \"space\"\n    }, {\n      type: \"word\",\n      isVariable: !0\n    }, {\n      type: \"space\"\n    }, {\n      type: \"word\",\n      isVariable: !0\n    }, {\n      type: \"space\"\n    }, {\n      type: \"word\",\n      isVariable: !0\n    }]\n  }, {\n    type: \"function\",\n    value: \"color\",\n    nodes: [{\n      type: \"word\",\n      value: \"display-p3\"\n    }, {\n      type: \"space\"\n    }, {\n      type: \"word\",\n      isVariable: !0\n    }, {\n      type: \"space\"\n    }, {\n      type: \"word\",\n      isVariable: !0\n    }, {\n      type: \"space\"\n    }, {\n      type: \"word\",\n      isVariable: !0\n    }, {\n      type: \"div\",\n      value: \"/\"\n    }, {\n      type: \"word\",\n      isVariable: !0\n    }]\n  }]\n}, {\n  supports: \"color(rec2020 0 0 0)\",\n  property: \"color\",\n  sniff: \"color\",\n  matchers: [{\n    type: \"function\",\n    value: \"color\",\n    nodes: [{\n      type: \"word\",\n      value: \"rec2020\"\n    }, {\n      type: \"space\"\n    }, {\n      type: \"word\",\n      isVariable: !0\n    }, {\n      type: \"space\"\n    }, {\n      type: \"word\",\n      isVariable: !0\n    }, {\n      type: \"space\"\n    }, {\n      type: \"word\",\n      isVariable: !0\n    }]\n  }, {\n    type: \"function\",\n    value: \"color\",\n    nodes: [{\n      type: \"word\",\n      value: \"rec2020\"\n    }, {\n      type: \"space\"\n    }, {\n      type: \"word\",\n      isVariable: !0\n    }, {\n      type: \"space\"\n    }, {\n      type: \"word\",\n      isVariable: !0\n    }, {\n      type: \"space\"\n    }, {\n      type: \"word\",\n      isVariable: !0\n    }, {\n      type: \"div\",\n      value: \"/\"\n    }, {\n      type: \"word\",\n      isVariable: !0\n    }]\n  }]\n}, {\n  supports: \"color(xyz-d50 0 0 0)\",\n  property: \"color\",\n  sniff: \"color\",\n  matchers: [{\n    type: \"function\",\n    value: \"color\",\n    nodes: [{\n      type: \"word\",\n      value: \"xyz-d50\"\n    }, {\n      type: \"space\"\n    }, {\n      type: \"word\",\n      isVariable: !0\n    }, {\n      type: \"space\"\n    }, {\n      type: \"word\",\n      isVariable: !0\n    }, {\n      type: \"space\"\n    }, {\n      type: \"word\",\n      isVariable: !0\n    }]\n  }, {\n    type: \"function\",\n    value: \"color\",\n    nodes: [{\n      type: \"word\",\n      value: \"xyz-d50\"\n    }, {\n      type: \"space\"\n    }, {\n      type: \"word\",\n      isVariable: !0\n    }, {\n      type: \"space\"\n    }, {\n      type: \"word\",\n      isVariable: !0\n    }, {\n      type: \"space\"\n    }, {\n      type: \"word\",\n      isVariable: !0\n    }, {\n      type: \"div\",\n      value: \"/\"\n    }, {\n      type: \"word\",\n      isVariable: !0\n    }]\n  }]\n}, {\n  supports: \"color(xyz-d65 0 0 0)\",\n  property: \"color\",\n  sniff: \"color\",\n  matchers: [{\n    type: \"function\",\n    value: \"color\",\n    nodes: [{\n      type: \"word\",\n      value: \"xyz-d65\"\n    }, {\n      type: \"space\"\n    }, {\n      type: \"word\",\n      isVariable: !0\n    }, {\n      type: \"space\"\n    }, {\n      type: \"word\",\n      isVariable: !0\n    }, {\n      type: \"space\"\n    }, {\n      type: \"word\",\n      isVariable: !0\n    }]\n  }, {\n    type: \"function\",\n    value: \"color\",\n    nodes: [{\n      type: \"word\",\n      value: \"xyz-d65\"\n    }, {\n      type: \"space\"\n    }, {\n      type: \"word\",\n      isVariable: !0\n    }, {\n      type: \"space\"\n    }, {\n      type: \"word\",\n      isVariable: !0\n    }, {\n      type: \"space\"\n    }, {\n      type: \"word\",\n      isVariable: !0\n    }, {\n      type: \"div\",\n      value: \"/\"\n    }, {\n      type: \"word\",\n      isVariable: !0\n    }]\n  }]\n}, {\n  supports: \"color(xyz 0 0 0)\",\n  property: \"color\",\n  sniff: \"color\",\n  matchers: [{\n    type: \"function\",\n    value: \"color\",\n    nodes: [{\n      type: \"word\",\n      value: \"xyz\"\n    }, {\n      type: \"space\"\n    }, {\n      type: \"word\",\n      isVariable: !0\n    }, {\n      type: \"space\"\n    }, {\n      type: \"word\",\n      isVariable: !0\n    }, {\n      type: \"space\"\n    }, {\n      type: \"word\",\n      isVariable: !0\n    }]\n  }, {\n    type: \"function\",\n    value: \"color\",\n    nodes: [{\n      type: \"word\",\n      value: \"xyz\"\n    }, {\n      type: \"space\"\n    }, {\n      type: \"word\",\n      isVariable: !0\n    }, {\n      type: \"space\"\n    }, {\n      type: \"word\",\n      isVariable: !0\n    }, {\n      type: \"space\"\n    }, {\n      type: \"word\",\n      isVariable: !0\n    }, {\n      type: \"div\",\n      value: \"/\"\n    }, {\n      type: \"word\",\n      isVariable: !0\n    }]\n  }]\n}, {\n  supports: \"hsl(0, 0%, 0%)\",\n  property: \"color\",\n  sniff: \"hsl\",\n  matchers: [{\n    type: \"function\",\n    value: \"hsl\",\n    nodes: [{\n      type: \"word\",\n      isVariable: !0\n    }, {\n      type: \"div\",\n      value: \",\"\n    }, {\n      type: \"word\",\n      isVariable: !0\n    }, {\n      type: \"div\",\n      value: \",\"\n    }, {\n      type: \"word\",\n      isVariable: !0\n    }, {\n      type: \"div\",\n      value: \",\"\n    }, {\n      type: \"word\",\n      isVariable: !0\n    }]\n  }]\n}, {\n  supports: \"hsl(0 0% 0% / 0)\",\n  property: \"color\",\n  sniff: \"hsl\",\n  matchers: [{\n    type: \"function\",\n    value: \"hsl\",\n    nodes: [{\n      type: \"word\",\n      isVariable: !0\n    }, {\n      type: \"space\"\n    }, {\n      type: \"word\",\n      isVariable: !0\n    }, {\n      type: \"space\"\n    }, {\n      type: \"word\",\n      isVariable: !0\n    }]\n  }, {\n    type: \"function\",\n    value: \"hsl\",\n    nodes: [{\n      type: \"word\",\n      isVariable: !0\n    }, {\n      type: \"space\"\n    }, {\n      type: \"word\",\n      isVariable: !0\n    }, {\n      type: \"space\"\n    }, {\n      type: \"word\",\n      isVariable: !0\n    }, {\n      type: \"div\",\n      value: \"/\"\n    }, {\n      type: \"word\",\n      isVariable: !0\n    }]\n  }]\n}, {\n  supports: \"hsla(0 0% 0% / 0)\",\n  property: \"color\",\n  sniff: \"hsla\",\n  matchers: [{\n    type: \"function\",\n    value: \"hsla\",\n    nodes: [{\n      type: \"word\",\n      isVariable: !0\n    }, {\n      type: \"space\"\n    }, {\n      type: \"word\",\n      isVariable: !0\n    }, {\n      type: \"space\"\n    }, {\n      type: \"word\",\n      isVariable: !0\n    }, {\n      type: \"div\",\n      value: \"/\"\n    }, {\n      type: \"word\",\n      isVariable: !0\n    }]\n  }]\n}, {\n  supports: \"hwb(0 0% 0%)\",\n  property: \"color\",\n  sniff: \"hwb\",\n  matchers: [{\n    type: \"function\",\n    value: \"hwb\",\n    nodes: [{\n      type: \"word\",\n      isVariable: !0\n    }, {\n      type: \"space\"\n    }, {\n      type: \"word\",\n      isVariable: !0\n    }, {\n      type: \"space\"\n    }, {\n      type: \"word\",\n      isVariable: !0\n    }]\n  }, {\n    type: \"function\",\n    value: \"hwb\",\n    nodes: [{\n      type: \"word\",\n      isVariable: !0\n    }, {\n      type: \"space\"\n    }, {\n      type: \"word\",\n      isVariable: !0\n    }, {\n      type: \"space\"\n    }, {\n      type: \"word\",\n      isVariable: !0\n    }, {\n      type: \"div\",\n      value: \"/\"\n    }, {\n      type: \"word\",\n      isVariable: !0\n    }]\n  }]\n}, {\n  supports: \"lab(0% 0 0)\",\n  property: \"color\",\n  sniff: \"lab\",\n  matchers: [{\n    type: \"function\",\n    value: \"lab\",\n    nodes: [{\n      type: \"word\",\n      isVariable: !0\n    }, {\n      type: \"space\"\n    }, {\n      type: \"word\",\n      isVariable: !0\n    }, {\n      type: \"space\"\n    }, {\n      type: \"word\",\n      isVariable: !0\n    }]\n  }, {\n    type: \"function\",\n    value: \"lab\",\n    nodes: [{\n      type: \"word\",\n      isVariable: !0\n    }, {\n      type: \"space\"\n    }, {\n      type: \"word\",\n      isVariable: !0\n    }, {\n      type: \"space\"\n    }, {\n      type: \"word\",\n      isVariable: !0\n    }, {\n      type: \"div\",\n      value: \"/\"\n    }, {\n      type: \"word\",\n      isVariable: !0\n    }]\n  }]\n}, {\n  supports: \"lch(0% 0 0)\",\n  property: \"color\",\n  sniff: \"lch\",\n  matchers: [{\n    type: \"function\",\n    value: \"lch\",\n    nodes: [{\n      type: \"word\",\n      isVariable: !0\n    }, {\n      type: \"space\"\n    }, {\n      type: \"word\",\n      isVariable: !0\n    }, {\n      type: \"space\"\n    }, {\n      type: \"word\",\n      isVariable: !0\n    }]\n  }, {\n    type: \"function\",\n    value: \"lch\",\n    nodes: [{\n      type: \"word\",\n      isVariable: !0\n    }, {\n      type: \"space\"\n    }, {\n      type: \"word\",\n      isVariable: !0\n    }, {\n      type: \"space\"\n    }, {\n      type: \"word\",\n      isVariable: !0\n    }, {\n      type: \"div\",\n      value: \"/\"\n    }, {\n      type: \"word\",\n      isVariable: !0\n    }]\n  }]\n}, {\n  supports: \"oklab(0% 0 0)\",\n  property: \"color\",\n  sniff: \"oklab\",\n  matchers: [{\n    type: \"function\",\n    value: \"oklab\",\n    nodes: [{\n      type: \"word\",\n      isVariable: !0\n    }, {\n      type: \"space\"\n    }, {\n      type: \"word\",\n      isVariable: !0\n    }, {\n      type: \"space\"\n    }, {\n      type: \"word\",\n      isVariable: !0\n    }]\n  }, {\n    type: \"function\",\n    value: \"oklab\",\n    nodes: [{\n      type: \"word\",\n      isVariable: !0\n    }, {\n      type: \"space\"\n    }, {\n      type: \"word\",\n      isVariable: !0\n    }, {\n      type: \"space\"\n    }, {\n      type: \"word\",\n      isVariable: !0\n    }, {\n      type: \"div\",\n      value: \"/\"\n    }, {\n      type: \"word\",\n      isVariable: !0\n    }]\n  }]\n}, {\n  supports: \"oklch(0% 0 0)\",\n  property: \"color\",\n  sniff: \"oklch\",\n  matchers: [{\n    type: \"function\",\n    value: \"oklch\",\n    nodes: [{\n      type: \"word\",\n      isVariable: !0\n    }, {\n      type: \"space\"\n    }, {\n      type: \"word\",\n      isVariable: !0\n    }, {\n      type: \"space\"\n    }, {\n      type: \"word\",\n      isVariable: !0\n    }]\n  }, {\n    type: \"function\",\n    value: \"oklch\",\n    nodes: [{\n      type: \"word\",\n      isVariable: !0\n    }, {\n      type: \"space\"\n    }, {\n      type: \"word\",\n      isVariable: !0\n    }, {\n      type: \"space\"\n    }, {\n      type: \"word\",\n      isVariable: !0\n    }, {\n      type: \"div\",\n      value: \"/\"\n    }, {\n      type: \"word\",\n      isVariable: !0\n    }]\n  }]\n}, {\n  supports: \"rgb(0, 0, 0, 0)\",\n  property: \"color\",\n  sniff: \"rgb\",\n  matchers: [{\n    type: \"function\",\n    value: \"rgb\",\n    nodes: [{\n      type: \"word\",\n      isVariable: !0\n    }, {\n      type: \"div\",\n      value: \",\"\n    }, {\n      type: \"word\",\n      isVariable: !0\n    }, {\n      type: \"div\",\n      value: \",\"\n    }, {\n      type: \"word\",\n      isVariable: !0\n    }, {\n      type: \"div\",\n      value: \",\"\n    }, {\n      type: \"word\",\n      isVariable: !0\n    }]\n  }]\n}, {\n  supports: \"rgb(0 0 0 / 0)\",\n  property: \"color\",\n  sniff: \"rgb\",\n  matchers: [{\n    type: \"function\",\n    value: \"rgb\",\n    nodes: [{\n      type: \"word\",\n      isVariable: !0\n    }, {\n      type: \"space\"\n    }, {\n      type: \"word\",\n      isVariable: !0\n    }, {\n      type: \"space\"\n    }, {\n      type: \"word\",\n      isVariable: !0\n    }]\n  }, {\n    type: \"function\",\n    value: \"rgb\",\n    nodes: [{\n      type: \"word\",\n      isVariable: !0\n    }, {\n      type: \"space\"\n    }, {\n      type: \"word\",\n      isVariable: !0\n    }, {\n      type: \"space\"\n    }, {\n      type: \"word\",\n      isVariable: !0\n    }, {\n      type: \"div\",\n      value: \"/\"\n    }, {\n      type: \"word\",\n      isVariable: !0\n    }]\n  }]\n}, {\n  supports: \"rgba(0 0 0 / 0)\",\n  property: \"color\",\n  sniff: \"rgba\",\n  matchers: [{\n    type: \"function\",\n    value: \"rgba\",\n    nodes: [{\n      type: \"word\",\n      isVariable: !0\n    }, {\n      type: \"space\"\n    }, {\n      type: \"word\",\n      isVariable: !0\n    }, {\n      type: \"space\"\n    }, {\n      type: \"word\",\n      isVariable: !0\n    }, {\n      type: \"div\",\n      value: \"/\"\n    }, {\n      type: \"word\",\n      isVariable: !0\n    }]\n  }]\n}, {\n  supports: \"color-mix(in oklch, #000, #fff)\",\n  property: \"color\",\n  sniff: \"color-mix\",\n  matchers: [{\n    type: \"function\",\n    value: \"color-mix\",\n    nodes: [{\n      type: \"word\",\n      value: \"in\"\n    }, {\n      type: \"space\"\n    }, {\n      type: \"word\",\n      isVariable: !0\n    }, {\n      type: \"div\",\n      value: \",\"\n    }, {\n      type: \"word\",\n      isVariable: !0\n    }, {\n      type: \"div\",\n      value: \",\"\n    }, {\n      type: \"word\",\n      isVariable: !0\n    }]\n  }, {\n    type: \"function\",\n    value: \"color-mix\",\n    nodes: [{\n      type: \"word\",\n      value: \"in\"\n    }, {\n      type: \"space\"\n    }, {\n      type: \"word\",\n      isVariable: !0\n    }, {\n      type: \"div\",\n      value: \",\"\n    }, {\n      type: \"word\",\n      isVariable: !0\n    }, {\n      type: \"space\"\n    }, {\n      type: \"word\",\n      isVariable: !0\n    }, {\n      type: \"div\",\n      value: \",\"\n    }, {\n      type: \"word\",\n      isVariable: !0\n    }]\n  }, {\n    type: \"function\",\n    value: \"color-mix\",\n    nodes: [{\n      type: \"word\",\n      value: \"in\"\n    }, {\n      type: \"space\"\n    }, {\n      type: \"word\",\n      isVariable: !0\n    }, {\n      type: \"div\",\n      value: \",\"\n    }, {\n      type: \"word\",\n      isVariable: !0\n    }, {\n      type: \"div\",\n      value: \",\"\n    }, {\n      type: \"word\",\n      isVariable: !0\n    }, {\n      type: \"space\"\n    }, {\n      type: \"word\",\n      isVariable: !0\n    }]\n  }, {\n    type: \"function\",\n    value: \"color-mix\",\n    nodes: [{\n      type: \"word\",\n      value: \"in\"\n    }, {\n      type: \"space\"\n    }, {\n      type: \"word\",\n      isVariable: !0\n    }, {\n      type: \"div\",\n      value: \",\"\n    }, {\n      type: \"word\",\n      isVariable: !0\n    }, {\n      type: \"space\"\n    }, {\n      type: \"word\",\n      isVariable: !0\n    }, {\n      type: \"div\",\n      value: \",\"\n    }, {\n      type: \"word\",\n      isVariable: !0\n    }, {\n      type: \"space\"\n    }, {\n      type: \"word\",\n      isVariable: !0\n    }]\n  }, {\n    type: \"function\",\n    value: \"color-mix\",\n    nodes: [{\n      type: \"word\",\n      value: \"in\"\n    }, {\n      type: \"space\"\n    }, {\n      type: \"word\",\n      isVariable: !0\n    }, {\n      type: \"space\"\n    }, {\n      type: \"word\",\n      isVariable: !0\n    }, {\n      type: \"div\",\n      value: \",\"\n    }, {\n      type: \"word\",\n      isVariable: !0\n    }, {\n      type: \"div\",\n      value: \",\"\n    }, {\n      type: \"word\",\n      isVariable: !0\n    }]\n  }, {\n    type: \"function\",\n    value: \"color-mix\",\n    nodes: [{\n      type: \"word\",\n      value: \"in\"\n    }, {\n      type: \"space\"\n    }, {\n      type: \"word\",\n      isVariable: !0\n    }, {\n      type: \"space\"\n    }, {\n      type: \"word\",\n      isVariable: !0\n    }, {\n      type: \"div\",\n      value: \",\"\n    }, {\n      type: \"word\",\n      isVariable: !0\n    }, {\n      type: \"space\"\n    }, {\n      type: \"word\",\n      isVariable: !0\n    }, {\n      type: \"div\",\n      value: \",\"\n    }, {\n      type: \"word\",\n      isVariable: !0\n    }]\n  }, {\n    type: \"function\",\n    value: \"color-mix\",\n    nodes: [{\n      type: \"word\",\n      value: \"in\"\n    }, {\n      type: \"space\"\n    }, {\n      type: \"word\",\n      isVariable: !0\n    }, {\n      type: \"space\"\n    }, {\n      type: \"word\",\n      isVariable: !0\n    }, {\n      type: \"div\",\n      value: \",\"\n    }, {\n      type: \"word\",\n      isVariable: !0\n    }, {\n      type: \"div\",\n      value: \",\"\n    }, {\n      type: \"word\",\n      isVariable: !0\n    }, {\n      type: \"space\"\n    }, {\n      type: \"word\",\n      isVariable: !0\n    }]\n  }, {\n    type: \"function\",\n    value: \"color-mix\",\n    nodes: [{\n      type: \"word\",\n      value: \"in\"\n    }, {\n      type: \"space\"\n    }, {\n      type: \"word\",\n      isVariable: !0\n    }, {\n      type: \"space\"\n    }, {\n      type: \"word\",\n      isVariable: !0\n    }, {\n      type: \"div\",\n      value: \",\"\n    }, {\n      type: \"word\",\n      isVariable: !0\n    }, {\n      type: \"space\"\n    }, {\n      type: \"word\",\n      isVariable: !0\n    }, {\n      type: \"div\",\n      value: \",\"\n    }, {\n      type: \"word\",\n      isVariable: !0\n    }, {\n      type: \"space\"\n    }, {\n      type: \"word\",\n      isVariable: !0\n    }]\n  }]\n}, {\n  supports: \"1ic\",\n  property: \"font-size\",\n  sniff: \"ic\",\n  matchers: [{\n    type: \"word\",\n    value: \"1ic\",\n    dimension: {\n      unit: \"ic\"\n    }\n  }]\n}];\nfunction a(e, r) {\n  if (e.isVariable && r) return !0;\n  if (e.type !== r.type) return !1;\n  if (function (e, r) {\n    if (\"space\" === e.type && \"space\" === r.type && e.value.trim() === r.value.trim()) return !1;\n    if (e.dimension && r.dimension) return e.dimension.unit !== r.dimension.unit;\n    if (e.value !== r.value) return !0;\n    return !1;\n  }(e, r)) return !1;\n  if (e.nodes && r.nodes) {\n    for (let p = 0; p < e.nodes.length; p++) {\n      let t = p,\n        i = p;\n      for (; e.nodes[t] && \"space\" === e.nodes[t].type;) t++;\n      for (; r.nodes[i] && \"space\" === r.nodes[i].type;) i++;\n      if (!!e.nodes[t] != !!r.nodes[i]) return !1;\n      if (!a(e.nodes[t], r.nodes[i])) return !1;\n    }\n    return !0;\n  }\n  return !0;\n}\nconst p = [\"at\", \"bottom\", \"center\", \"circle\", \"closest-corner\", \"closest-side\", \"ellipse\", \"farthest-corner\", \"farthest-side\", \"from\", \"in\", \"left\", \"right\", \"to\", \"top\"];\nfunction t(t) {\n  const i = [],\n    o = [];\n  r.forEach(e => {\n    t.indexOf(e.sniff) > -1 && o.push(e);\n  });\n  try {\n    e(t).walk(r => {\n      try {\n        r.dimension = e.unit(r.value);\n      } finally {\n        !1 === r.dimension && delete r.dimension;\n      }\n      for (let e = 0; e < o.length; e++) {\n        const p = o[e];\n        for (let e = 0; e < p.matchers.length; e++) {\n          if (a(p.matchers[e], r)) return void i.push(`(${p.property}: ${p.supports})`);\n        }\n      }\n      i.push(...function (e) {\n        const r = [];\n        if (\"function\" === e.type && (\"conic-gradient\" === e.value || \"linear-gradient\" === e.value || \"radial-gradient\" === e.value || \"repeating-conic-gradient\" === e.value || \"repeating-linear-gradient\" === e.value || \"repeating-radial-gradient\" === e.value)) {\n          let a = 0,\n            t = !1,\n            i = !1;\n          e: for (let o = 0; o < e.nodes.length; o++) {\n            const s = e.nodes[o];\n            if (\"word\" === s.type && p.includes(s.value) && (t = !0), \"div\" !== s.type || \",\" !== s.value.trim()) {\n              if (\"word\" !== s.type || \"in\" !== s.value) {\n                if (\"word\" !== s.type && \"function\" !== s.type || a++, i) switch (e.value) {\n                  case \"conic-gradient\":\n                    r.push(\"(background: conic-gradient(in oklch, red 0deg, red 0deg 1deg, red 2deg))\");\n                    break e;\n                  case \"linear-gradient\":\n                    r.push(\"(background: linear-gradient(in oklch, red 0%, red 0% 1%, red 2%))\");\n                    break e;\n                  case \"radial-gradient\":\n                    r.push(\"(background: radial-gradient(in oklch, red, red 1px 2px, red 3px))\");\n                    break e;\n                  case \"repeating-conic-gradient\":\n                    r.push(\"(background: repeating-conic-gradient(in oklch from 0deg, red 0deg, red 0deg 1deg, red 2deg))\");\n                    break e;\n                  case \"repeating-linear-gradient\":\n                    r.push(\"(background: repeating-linear-gradient(in oklch, red 0%, red 0% 1%, red 2%))\");\n                    break e;\n                  case \"repeating-radial-gradient\":\n                    r.push(\"(background: repeating-radial-gradient(in oklch, red, red 1px 2px, red 3px))\");\n                    break e;\n                }\n                if (!t && 3 === a) switch (e.value) {\n                  case \"conic-gradient\":\n                    r.push(\"(background: conic-gradient(red 0deg, red 0deg 1deg, red 2deg))\");\n                    break e;\n                  case \"linear-gradient\":\n                    r.push(\"(background: linear-gradient(red 0%, red 0% 1%, red 2%))\");\n                    break e;\n                  case \"radial-gradient\":\n                    r.push(\"(background: radial-gradient(red, red 1px 2px, red 3px))\");\n                    break e;\n                  case \"repeating-conic-gradient\":\n                    r.push(\"(background: repeating-conic-gradient(from 0deg, red 0deg, red 0deg 1deg, red 2deg))\");\n                    break e;\n                  case \"repeating-linear-gradient\":\n                    r.push(\"(background: repeating-linear-gradient(red 0%, red 0% 1%, red 2%))\");\n                    break e;\n                  case \"repeating-radial-gradient\":\n                    r.push(\"(background: repeating-radial-gradient(red, red 1px 2px, red 3px))\");\n                    break e;\n                }\n              } else i = !0;\n            } else a = 0, t = !1;\n          }\n        }\n        return r;\n      }(r));\n    });\n  } catch (e) {}\n  return Array.from(new Set(i));\n}\nconst i = () => ({\n  postcssPlugin: \"postcss-progressive-custom-properties\",\n  RuleExit: (e, {\n    postcss: r\n  }) => {\n    const a = [],\n      p = new Set();\n    e.each(i => {\n      if (\"decl\" !== i.type) return;\n      if (!i.variable) return;\n      if (\"initial\" === i.value.trim()) return;\n      if (\"\" === i.value.trim()) return;\n      if (!p.has(i.prop.toString())) return void p.add(i.prop.toString());\n      const o = t(i.value);\n      if (!o.length) return;\n      const s = r.atRule({\n          name: \"supports\",\n          params: o.join(\" and \"),\n          source: e.source,\n          raws: {\n            before: \"\\n\\n\",\n            after: \"\\n\"\n          }\n        }),\n        l = e.clone();\n      l.removeAll(), l.raws.before = \"\\n\", l.append(i.clone()), i.remove(), s.append(l), a.push(s);\n    }), 0 !== a.length && a.reverse().forEach(r => {\n      e.after(r);\n    });\n  }\n});\ni.postcss = !0;\nexport { i as default };","map":{"version":3,"names":["e","r","supports","property","sniff","matchers","type","value","nodes","isVariable","dimension","unit","a","trim","p","length","t","i","o","forEach","indexOf","push","walk","s","includes","Array","from","Set","postcssPlugin","RuleExit","postcss","each","variable","has","prop","toString","add","atRule","name","params","join","source","raws","before","after","l","clone","removeAll","append","remove","reverse","default"],"sources":["C:/Users/chest/OneDrive/Documentos/GitHub/HackUPC/frontend/node_modules/@csstools/postcss-progressive-custom-properties/dist/index.mjs"],"sourcesContent":["import e from\"postcss-value-parser\";const r=[{supports:\"color(srgb 0 0 0)\",property:\"color\",sniff:\"color\",matchers:[{type:\"function\",value:\"color\",nodes:[{type:\"word\",value:\"srgb\"},{type:\"space\"},{type:\"word\",isVariable:!0},{type:\"space\"},{type:\"word\",isVariable:!0},{type:\"space\"},{type:\"word\",isVariable:!0}]},{type:\"function\",value:\"color\",nodes:[{type:\"word\",value:\"srgb\"},{type:\"space\"},{type:\"word\",isVariable:!0},{type:\"space\"},{type:\"word\",isVariable:!0},{type:\"space\"},{type:\"word\",isVariable:!0},{type:\"div\",value:\"/\"},{type:\"word\",isVariable:!0}]}]},{supports:\"color(srgb-linear 0 0 0)\",property:\"color\",sniff:\"color\",matchers:[{type:\"function\",value:\"color\",nodes:[{type:\"word\",value:\"srgb-linear\"},{type:\"space\"},{type:\"word\",isVariable:!0},{type:\"space\"},{type:\"word\",isVariable:!0},{type:\"space\"},{type:\"word\",isVariable:!0}]},{type:\"function\",value:\"color\",nodes:[{type:\"word\",value:\"srgb-linear\"},{type:\"space\"},{type:\"word\",isVariable:!0},{type:\"space\"},{type:\"word\",isVariable:!0},{type:\"space\"},{type:\"word\",isVariable:!0},{type:\"div\",value:\"/\"},{type:\"word\",isVariable:!0}]}]},{supports:\"color(a98-rgb 0 0 0)\",property:\"color\",sniff:\"color\",matchers:[{type:\"function\",value:\"color\",nodes:[{type:\"word\",value:\"a98-rgb\"},{type:\"space\"},{type:\"word\",isVariable:!0},{type:\"space\"},{type:\"word\",isVariable:!0},{type:\"space\"},{type:\"word\",isVariable:!0}]},{type:\"function\",value:\"color\",nodes:[{type:\"word\",value:\"a98-rgb\"},{type:\"space\"},{type:\"word\",isVariable:!0},{type:\"space\"},{type:\"word\",isVariable:!0},{type:\"space\"},{type:\"word\",isVariable:!0},{type:\"div\",value:\"/\"},{type:\"word\",isVariable:!0}]}]},{supports:\"color(prophoto-rgb 0 0 0)\",property:\"color\",sniff:\"color\",matchers:[{type:\"function\",value:\"color\",nodes:[{type:\"word\",value:\"prophoto-rgb\"},{type:\"space\"},{type:\"word\",isVariable:!0},{type:\"space\"},{type:\"word\",isVariable:!0},{type:\"space\"},{type:\"word\",isVariable:!0}]},{type:\"function\",value:\"color\",nodes:[{type:\"word\",value:\"prophoto-rgb\"},{type:\"space\"},{type:\"word\",isVariable:!0},{type:\"space\"},{type:\"word\",isVariable:!0},{type:\"space\"},{type:\"word\",isVariable:!0},{type:\"div\",value:\"/\"},{type:\"word\",isVariable:!0}]}]},{supports:\"color(display-p3 0 0 0)\",property:\"color\",sniff:\"color\",matchers:[{type:\"function\",value:\"color\",nodes:[{type:\"word\",value:\"display-p3\"},{type:\"space\"},{type:\"word\",isVariable:!0},{type:\"space\"},{type:\"word\",isVariable:!0},{type:\"space\"},{type:\"word\",isVariable:!0}]},{type:\"function\",value:\"color\",nodes:[{type:\"word\",value:\"display-p3\"},{type:\"space\"},{type:\"word\",isVariable:!0},{type:\"space\"},{type:\"word\",isVariable:!0},{type:\"space\"},{type:\"word\",isVariable:!0},{type:\"div\",value:\"/\"},{type:\"word\",isVariable:!0}]}]},{supports:\"color(rec2020 0 0 0)\",property:\"color\",sniff:\"color\",matchers:[{type:\"function\",value:\"color\",nodes:[{type:\"word\",value:\"rec2020\"},{type:\"space\"},{type:\"word\",isVariable:!0},{type:\"space\"},{type:\"word\",isVariable:!0},{type:\"space\"},{type:\"word\",isVariable:!0}]},{type:\"function\",value:\"color\",nodes:[{type:\"word\",value:\"rec2020\"},{type:\"space\"},{type:\"word\",isVariable:!0},{type:\"space\"},{type:\"word\",isVariable:!0},{type:\"space\"},{type:\"word\",isVariable:!0},{type:\"div\",value:\"/\"},{type:\"word\",isVariable:!0}]}]},{supports:\"color(xyz-d50 0 0 0)\",property:\"color\",sniff:\"color\",matchers:[{type:\"function\",value:\"color\",nodes:[{type:\"word\",value:\"xyz-d50\"},{type:\"space\"},{type:\"word\",isVariable:!0},{type:\"space\"},{type:\"word\",isVariable:!0},{type:\"space\"},{type:\"word\",isVariable:!0}]},{type:\"function\",value:\"color\",nodes:[{type:\"word\",value:\"xyz-d50\"},{type:\"space\"},{type:\"word\",isVariable:!0},{type:\"space\"},{type:\"word\",isVariable:!0},{type:\"space\"},{type:\"word\",isVariable:!0},{type:\"div\",value:\"/\"},{type:\"word\",isVariable:!0}]}]},{supports:\"color(xyz-d65 0 0 0)\",property:\"color\",sniff:\"color\",matchers:[{type:\"function\",value:\"color\",nodes:[{type:\"word\",value:\"xyz-d65\"},{type:\"space\"},{type:\"word\",isVariable:!0},{type:\"space\"},{type:\"word\",isVariable:!0},{type:\"space\"},{type:\"word\",isVariable:!0}]},{type:\"function\",value:\"color\",nodes:[{type:\"word\",value:\"xyz-d65\"},{type:\"space\"},{type:\"word\",isVariable:!0},{type:\"space\"},{type:\"word\",isVariable:!0},{type:\"space\"},{type:\"word\",isVariable:!0},{type:\"div\",value:\"/\"},{type:\"word\",isVariable:!0}]}]},{supports:\"color(xyz 0 0 0)\",property:\"color\",sniff:\"color\",matchers:[{type:\"function\",value:\"color\",nodes:[{type:\"word\",value:\"xyz\"},{type:\"space\"},{type:\"word\",isVariable:!0},{type:\"space\"},{type:\"word\",isVariable:!0},{type:\"space\"},{type:\"word\",isVariable:!0}]},{type:\"function\",value:\"color\",nodes:[{type:\"word\",value:\"xyz\"},{type:\"space\"},{type:\"word\",isVariable:!0},{type:\"space\"},{type:\"word\",isVariable:!0},{type:\"space\"},{type:\"word\",isVariable:!0},{type:\"div\",value:\"/\"},{type:\"word\",isVariable:!0}]}]},{supports:\"hsl(0, 0%, 0%)\",property:\"color\",sniff:\"hsl\",matchers:[{type:\"function\",value:\"hsl\",nodes:[{type:\"word\",isVariable:!0},{type:\"div\",value:\",\"},{type:\"word\",isVariable:!0},{type:\"div\",value:\",\"},{type:\"word\",isVariable:!0},{type:\"div\",value:\",\"},{type:\"word\",isVariable:!0}]}]},{supports:\"hsl(0 0% 0% / 0)\",property:\"color\",sniff:\"hsl\",matchers:[{type:\"function\",value:\"hsl\",nodes:[{type:\"word\",isVariable:!0},{type:\"space\"},{type:\"word\",isVariable:!0},{type:\"space\"},{type:\"word\",isVariable:!0}]},{type:\"function\",value:\"hsl\",nodes:[{type:\"word\",isVariable:!0},{type:\"space\"},{type:\"word\",isVariable:!0},{type:\"space\"},{type:\"word\",isVariable:!0},{type:\"div\",value:\"/\"},{type:\"word\",isVariable:!0}]}]},{supports:\"hsla(0 0% 0% / 0)\",property:\"color\",sniff:\"hsla\",matchers:[{type:\"function\",value:\"hsla\",nodes:[{type:\"word\",isVariable:!0},{type:\"space\"},{type:\"word\",isVariable:!0},{type:\"space\"},{type:\"word\",isVariable:!0},{type:\"div\",value:\"/\"},{type:\"word\",isVariable:!0}]}]},{supports:\"hwb(0 0% 0%)\",property:\"color\",sniff:\"hwb\",matchers:[{type:\"function\",value:\"hwb\",nodes:[{type:\"word\",isVariable:!0},{type:\"space\"},{type:\"word\",isVariable:!0},{type:\"space\"},{type:\"word\",isVariable:!0}]},{type:\"function\",value:\"hwb\",nodes:[{type:\"word\",isVariable:!0},{type:\"space\"},{type:\"word\",isVariable:!0},{type:\"space\"},{type:\"word\",isVariable:!0},{type:\"div\",value:\"/\"},{type:\"word\",isVariable:!0}]}]},{supports:\"lab(0% 0 0)\",property:\"color\",sniff:\"lab\",matchers:[{type:\"function\",value:\"lab\",nodes:[{type:\"word\",isVariable:!0},{type:\"space\"},{type:\"word\",isVariable:!0},{type:\"space\"},{type:\"word\",isVariable:!0}]},{type:\"function\",value:\"lab\",nodes:[{type:\"word\",isVariable:!0},{type:\"space\"},{type:\"word\",isVariable:!0},{type:\"space\"},{type:\"word\",isVariable:!0},{type:\"div\",value:\"/\"},{type:\"word\",isVariable:!0}]}]},{supports:\"lch(0% 0 0)\",property:\"color\",sniff:\"lch\",matchers:[{type:\"function\",value:\"lch\",nodes:[{type:\"word\",isVariable:!0},{type:\"space\"},{type:\"word\",isVariable:!0},{type:\"space\"},{type:\"word\",isVariable:!0}]},{type:\"function\",value:\"lch\",nodes:[{type:\"word\",isVariable:!0},{type:\"space\"},{type:\"word\",isVariable:!0},{type:\"space\"},{type:\"word\",isVariable:!0},{type:\"div\",value:\"/\"},{type:\"word\",isVariable:!0}]}]},{supports:\"oklab(0% 0 0)\",property:\"color\",sniff:\"oklab\",matchers:[{type:\"function\",value:\"oklab\",nodes:[{type:\"word\",isVariable:!0},{type:\"space\"},{type:\"word\",isVariable:!0},{type:\"space\"},{type:\"word\",isVariable:!0}]},{type:\"function\",value:\"oklab\",nodes:[{type:\"word\",isVariable:!0},{type:\"space\"},{type:\"word\",isVariable:!0},{type:\"space\"},{type:\"word\",isVariable:!0},{type:\"div\",value:\"/\"},{type:\"word\",isVariable:!0}]}]},{supports:\"oklch(0% 0 0)\",property:\"color\",sniff:\"oklch\",matchers:[{type:\"function\",value:\"oklch\",nodes:[{type:\"word\",isVariable:!0},{type:\"space\"},{type:\"word\",isVariable:!0},{type:\"space\"},{type:\"word\",isVariable:!0}]},{type:\"function\",value:\"oklch\",nodes:[{type:\"word\",isVariable:!0},{type:\"space\"},{type:\"word\",isVariable:!0},{type:\"space\"},{type:\"word\",isVariable:!0},{type:\"div\",value:\"/\"},{type:\"word\",isVariable:!0}]}]},{supports:\"rgb(0, 0, 0, 0)\",property:\"color\",sniff:\"rgb\",matchers:[{type:\"function\",value:\"rgb\",nodes:[{type:\"word\",isVariable:!0},{type:\"div\",value:\",\"},{type:\"word\",isVariable:!0},{type:\"div\",value:\",\"},{type:\"word\",isVariable:!0},{type:\"div\",value:\",\"},{type:\"word\",isVariable:!0}]}]},{supports:\"rgb(0 0 0 / 0)\",property:\"color\",sniff:\"rgb\",matchers:[{type:\"function\",value:\"rgb\",nodes:[{type:\"word\",isVariable:!0},{type:\"space\"},{type:\"word\",isVariable:!0},{type:\"space\"},{type:\"word\",isVariable:!0}]},{type:\"function\",value:\"rgb\",nodes:[{type:\"word\",isVariable:!0},{type:\"space\"},{type:\"word\",isVariable:!0},{type:\"space\"},{type:\"word\",isVariable:!0},{type:\"div\",value:\"/\"},{type:\"word\",isVariable:!0}]}]},{supports:\"rgba(0 0 0 / 0)\",property:\"color\",sniff:\"rgba\",matchers:[{type:\"function\",value:\"rgba\",nodes:[{type:\"word\",isVariable:!0},{type:\"space\"},{type:\"word\",isVariable:!0},{type:\"space\"},{type:\"word\",isVariable:!0},{type:\"div\",value:\"/\"},{type:\"word\",isVariable:!0}]}]},{supports:\"color-mix(in oklch, #000, #fff)\",property:\"color\",sniff:\"color-mix\",matchers:[{type:\"function\",value:\"color-mix\",nodes:[{type:\"word\",value:\"in\"},{type:\"space\"},{type:\"word\",isVariable:!0},{type:\"div\",value:\",\"},{type:\"word\",isVariable:!0},{type:\"div\",value:\",\"},{type:\"word\",isVariable:!0}]},{type:\"function\",value:\"color-mix\",nodes:[{type:\"word\",value:\"in\"},{type:\"space\"},{type:\"word\",isVariable:!0},{type:\"div\",value:\",\"},{type:\"word\",isVariable:!0},{type:\"space\"},{type:\"word\",isVariable:!0},{type:\"div\",value:\",\"},{type:\"word\",isVariable:!0}]},{type:\"function\",value:\"color-mix\",nodes:[{type:\"word\",value:\"in\"},{type:\"space\"},{type:\"word\",isVariable:!0},{type:\"div\",value:\",\"},{type:\"word\",isVariable:!0},{type:\"div\",value:\",\"},{type:\"word\",isVariable:!0},{type:\"space\"},{type:\"word\",isVariable:!0}]},{type:\"function\",value:\"color-mix\",nodes:[{type:\"word\",value:\"in\"},{type:\"space\"},{type:\"word\",isVariable:!0},{type:\"div\",value:\",\"},{type:\"word\",isVariable:!0},{type:\"space\"},{type:\"word\",isVariable:!0},{type:\"div\",value:\",\"},{type:\"word\",isVariable:!0},{type:\"space\"},{type:\"word\",isVariable:!0}]},{type:\"function\",value:\"color-mix\",nodes:[{type:\"word\",value:\"in\"},{type:\"space\"},{type:\"word\",isVariable:!0},{type:\"space\"},{type:\"word\",isVariable:!0},{type:\"div\",value:\",\"},{type:\"word\",isVariable:!0},{type:\"div\",value:\",\"},{type:\"word\",isVariable:!0}]},{type:\"function\",value:\"color-mix\",nodes:[{type:\"word\",value:\"in\"},{type:\"space\"},{type:\"word\",isVariable:!0},{type:\"space\"},{type:\"word\",isVariable:!0},{type:\"div\",value:\",\"},{type:\"word\",isVariable:!0},{type:\"space\"},{type:\"word\",isVariable:!0},{type:\"div\",value:\",\"},{type:\"word\",isVariable:!0}]},{type:\"function\",value:\"color-mix\",nodes:[{type:\"word\",value:\"in\"},{type:\"space\"},{type:\"word\",isVariable:!0},{type:\"space\"},{type:\"word\",isVariable:!0},{type:\"div\",value:\",\"},{type:\"word\",isVariable:!0},{type:\"div\",value:\",\"},{type:\"word\",isVariable:!0},{type:\"space\"},{type:\"word\",isVariable:!0}]},{type:\"function\",value:\"color-mix\",nodes:[{type:\"word\",value:\"in\"},{type:\"space\"},{type:\"word\",isVariable:!0},{type:\"space\"},{type:\"word\",isVariable:!0},{type:\"div\",value:\",\"},{type:\"word\",isVariable:!0},{type:\"space\"},{type:\"word\",isVariable:!0},{type:\"div\",value:\",\"},{type:\"word\",isVariable:!0},{type:\"space\"},{type:\"word\",isVariable:!0}]}]},{supports:\"1ic\",property:\"font-size\",sniff:\"ic\",matchers:[{type:\"word\",value:\"1ic\",dimension:{unit:\"ic\"}}]}];function a(e,r){if(e.isVariable&&r)return!0;if(e.type!==r.type)return!1;if(function(e,r){if(\"space\"===e.type&&\"space\"===r.type&&e.value.trim()===r.value.trim())return!1;if(e.dimension&&r.dimension)return e.dimension.unit!==r.dimension.unit;if(e.value!==r.value)return!0;return!1}(e,r))return!1;if(e.nodes&&r.nodes){for(let p=0;p<e.nodes.length;p++){let t=p,i=p;for(;e.nodes[t]&&\"space\"===e.nodes[t].type;)t++;for(;r.nodes[i]&&\"space\"===r.nodes[i].type;)i++;if(!!e.nodes[t]!=!!r.nodes[i])return!1;if(!a(e.nodes[t],r.nodes[i]))return!1}return!0}return!0}const p=[\"at\",\"bottom\",\"center\",\"circle\",\"closest-corner\",\"closest-side\",\"ellipse\",\"farthest-corner\",\"farthest-side\",\"from\",\"in\",\"left\",\"right\",\"to\",\"top\"];function t(t){const i=[],o=[];r.forEach((e=>{t.indexOf(e.sniff)>-1&&o.push(e)}));try{e(t).walk((r=>{try{r.dimension=e.unit(r.value)}finally{!1===r.dimension&&delete r.dimension}for(let e=0;e<o.length;e++){const p=o[e];for(let e=0;e<p.matchers.length;e++){if(a(p.matchers[e],r))return void i.push(`(${p.property}: ${p.supports})`)}}i.push(...function(e){const r=[];if(\"function\"===e.type&&(\"conic-gradient\"===e.value||\"linear-gradient\"===e.value||\"radial-gradient\"===e.value||\"repeating-conic-gradient\"===e.value||\"repeating-linear-gradient\"===e.value||\"repeating-radial-gradient\"===e.value)){let a=0,t=!1,i=!1;e:for(let o=0;o<e.nodes.length;o++){const s=e.nodes[o];if(\"word\"===s.type&&p.includes(s.value)&&(t=!0),\"div\"!==s.type||\",\"!==s.value.trim())if(\"word\"!==s.type||\"in\"!==s.value){if(\"word\"!==s.type&&\"function\"!==s.type||a++,i)switch(e.value){case\"conic-gradient\":r.push(\"(background: conic-gradient(in oklch, red 0deg, red 0deg 1deg, red 2deg))\");break e;case\"linear-gradient\":r.push(\"(background: linear-gradient(in oklch, red 0%, red 0% 1%, red 2%))\");break e;case\"radial-gradient\":r.push(\"(background: radial-gradient(in oklch, red, red 1px 2px, red 3px))\");break e;case\"repeating-conic-gradient\":r.push(\"(background: repeating-conic-gradient(in oklch from 0deg, red 0deg, red 0deg 1deg, red 2deg))\");break e;case\"repeating-linear-gradient\":r.push(\"(background: repeating-linear-gradient(in oklch, red 0%, red 0% 1%, red 2%))\");break e;case\"repeating-radial-gradient\":r.push(\"(background: repeating-radial-gradient(in oklch, red, red 1px 2px, red 3px))\");break e}if(!t&&3===a)switch(e.value){case\"conic-gradient\":r.push(\"(background: conic-gradient(red 0deg, red 0deg 1deg, red 2deg))\");break e;case\"linear-gradient\":r.push(\"(background: linear-gradient(red 0%, red 0% 1%, red 2%))\");break e;case\"radial-gradient\":r.push(\"(background: radial-gradient(red, red 1px 2px, red 3px))\");break e;case\"repeating-conic-gradient\":r.push(\"(background: repeating-conic-gradient(from 0deg, red 0deg, red 0deg 1deg, red 2deg))\");break e;case\"repeating-linear-gradient\":r.push(\"(background: repeating-linear-gradient(red 0%, red 0% 1%, red 2%))\");break e;case\"repeating-radial-gradient\":r.push(\"(background: repeating-radial-gradient(red, red 1px 2px, red 3px))\");break e}}else i=!0;else a=0,t=!1}}return r}(r))}))}catch(e){}return Array.from(new Set(i))}const i=()=>({postcssPlugin:\"postcss-progressive-custom-properties\",RuleExit:(e,{postcss:r})=>{const a=[],p=new Set;e.each((i=>{if(\"decl\"!==i.type)return;if(!i.variable)return;if(\"initial\"===i.value.trim())return;if(\"\"===i.value.trim())return;if(!p.has(i.prop.toString()))return void p.add(i.prop.toString());const o=t(i.value);if(!o.length)return;const s=r.atRule({name:\"supports\",params:o.join(\" and \"),source:e.source,raws:{before:\"\\n\\n\",after:\"\\n\"}}),l=e.clone();l.removeAll(),l.raws.before=\"\\n\",l.append(i.clone()),i.remove(),s.append(l),a.push(s)})),0!==a.length&&a.reverse().forEach((r=>{e.after(r)}))}});i.postcss=!0;export{i as default};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}