{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst util_1 = require(\"../../compile/util\");\nconst def = {\n  keyword: [\"then\", \"else\"],\n  schemaType: [\"object\", \"boolean\"],\n  code({\n    keyword,\n    parentSchema,\n    it\n  }) {\n    if (parentSchema.if === undefined) (0, util_1.checkStrictMode)(it, `\"${keyword}\" without \"if\" is ignored`);\n  }\n};\nexports.default = def;","map":{"version":3,"names":["util_1","require","def","keyword","schemaType","code","parentSchema","it","if","undefined","checkStrictMode","exports","default"],"sources":["C:\\Users\\chest\\OneDrive\\Documentos\\GitHub\\HackUPC\\frontend\\node_modules\\css-minimizer-webpack-plugin\\node_modules\\ajv\\lib\\vocabularies\\applicator\\thenElse.ts"],"sourcesContent":["import type {CodeKeywordDefinition} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {checkStrictMode} from \"../../compile/util\"\n\nconst def: CodeKeywordDefinition = {\n  keyword: [\"then\", \"else\"],\n  schemaType: [\"object\", \"boolean\"],\n  code({keyword, parentSchema, it}: KeywordCxt) {\n    if (parentSchema.if === undefined) checkStrictMode(it, `\"${keyword}\" without \"if\" is ignored`)\n  },\n}\n\nexport default def\n"],"mappings":";;;;;AAEA,MAAAA,MAAA,GAAAC,OAAA;AAEA,MAAMC,GAAG,GAA0B;EACjCC,OAAO,EAAE,CAAC,MAAM,EAAE,MAAM,CAAC;EACzBC,UAAU,EAAE,CAAC,QAAQ,EAAE,SAAS,CAAC;EACjCC,IAAIA,CAAC;IAACF,OAAO;IAAEG,YAAY;IAAEC;EAAE,CAAa;IAC1C,IAAID,YAAY,CAACE,EAAE,KAAKC,SAAS,EAAE,IAAAT,MAAA,CAAAU,eAAe,EAACH,EAAE,EAAE,IAAIJ,OAAO,2BAA2B,CAAC;EAChG;CACD;AAEDQ,OAAA,CAAAC,OAAA,GAAeV,GAAG","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}