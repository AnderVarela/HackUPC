{"ast":null,"code":"/**\n * Safari ~11 has an issue where variable declarations in a For statement throw if they shadow parameters.\n * This is fixed by renaming any declarations in the left/init part of a For* statement so they don't shadow.\n * @see https://bugs.webkit.org/show_bug.cgi?id=171041\n *\n * @example\n *   e => { for (let e of []) e }   // throws\n *   e => { for (let _e of []) _e }   // works\n */\n\nfunction handle(declaration) {\n  if (!declaration.isVariableDeclaration()) return;\n  const fn = declaration.getFunctionParent();\n  const {\n    name\n  } = declaration.node.declarations[0].id;\n\n  // check if there is a shadowed binding coming from a parameter\n  if (fn && fn.scope.hasOwnBinding(name) && fn.scope.getOwnBinding(name).kind === \"param\") {\n    declaration.scope.rename(name);\n  }\n}\nexport default (() => ({\n  name: \"transform-safari-for-shadowing\",\n  visitor: {\n    ForXStatement(path) {\n      handle(path.get(\"left\"));\n    },\n    ForStatement(path) {\n      handle(path.get(\"init\"));\n    }\n  }\n}));","map":{"version":3,"names":["handle","declaration","isVariableDeclaration","fn","getFunctionParent","name","node","declarations","id","scope","hasOwnBinding","getOwnBinding","kind","rename","visitor","ForXStatement","path","get","ForStatement"],"sources":["C:/Users/chest/OneDrive/Documentos/GitHub/HackUPC/frontend/node_modules/@babel/preset-modules/src/plugins/transform-safari-for-shadowing/index.js"],"sourcesContent":["/**\n * Safari ~11 has an issue where variable declarations in a For statement throw if they shadow parameters.\n * This is fixed by renaming any declarations in the left/init part of a For* statement so they don't shadow.\n * @see https://bugs.webkit.org/show_bug.cgi?id=171041\n *\n * @example\n *   e => { for (let e of []) e }   // throws\n *   e => { for (let _e of []) _e }   // works\n */\n\nfunction handle(declaration) {\n  if (!declaration.isVariableDeclaration()) return;\n\n  const fn = declaration.getFunctionParent();\n  const { name } = declaration.node.declarations[0].id;\n\n  // check if there is a shadowed binding coming from a parameter\n  if (\n    fn &&\n    fn.scope.hasOwnBinding(name) &&\n    fn.scope.getOwnBinding(name).kind === \"param\"\n  ) {\n    declaration.scope.rename(name);\n  }\n}\n\nexport default () => ({\n  name: \"transform-safari-for-shadowing\",\n  visitor: {\n    ForXStatement(path) {\n      handle(path.get(\"left\"));\n    },\n\n    ForStatement(path) {\n      handle(path.get(\"init\"));\n    },\n  },\n});\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,MAAMA,CAACC,WAAW,EAAE;EAC3B,IAAI,CAACA,WAAW,CAACC,qBAAqB,CAAC,CAAC,EAAE;EAE1C,MAAMC,EAAE,GAAGF,WAAW,CAACG,iBAAiB,CAAC,CAAC;EAC1C,MAAM;IAAEC;EAAK,CAAC,GAAGJ,WAAW,CAACK,IAAI,CAACC,YAAY,CAAC,CAAC,CAAC,CAACC,EAAE;;EAEpD;EACA,IACEL,EAAE,IACFA,EAAE,CAACM,KAAK,CAACC,aAAa,CAACL,IAAI,CAAC,IAC5BF,EAAE,CAACM,KAAK,CAACE,aAAa,CAACN,IAAI,CAAC,CAACO,IAAI,KAAK,OAAO,EAC7C;IACAX,WAAW,CAACQ,KAAK,CAACI,MAAM,CAACR,IAAI,CAAC;EAChC;AACF;AAEA,gBAAe,OAAO;EACpBA,IAAI,EAAE,gCAAgC;EACtCS,OAAO,EAAE;IACPC,aAAaA,CAACC,IAAI,EAAE;MAClBhB,MAAM,CAACgB,IAAI,CAACC,GAAG,CAAC,MAAM,CAAC,CAAC;IAC1B,CAAC;IAEDC,YAAYA,CAACF,IAAI,EAAE;MACjBhB,MAAM,CAACgB,IAAI,CAACC,GAAG,CAAC,MAAM,CAAC,CAAC;IAC1B;EACF;AACF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}