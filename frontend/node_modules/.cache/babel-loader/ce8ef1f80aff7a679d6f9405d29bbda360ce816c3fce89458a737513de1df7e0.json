{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst utils_1 = require(\"@typescript-eslint/utils\");\nconst util = __importStar(require(\"../util\"));\nexports.default = util.createRule({\n  name: 'method-signature-style',\n  meta: {\n    type: 'suggestion',\n    docs: {\n      description: 'Enforce using a particular method signature syntax',\n      recommended: false\n    },\n    fixable: 'code',\n    messages: {\n      errorMethod: 'Shorthand method signature is forbidden. Use a function property instead.',\n      errorProperty: 'Function property signature is forbidden. Use a method shorthand instead.'\n    },\n    schema: [{\n      enum: ['property', 'method']\n    }]\n  },\n  defaultOptions: ['property'],\n  create(context, [mode]) {\n    const sourceCode = context.getSourceCode();\n    function getMethodKey(node) {\n      let key = sourceCode.getText(node.key);\n      if (node.computed) {\n        key = `[${key}]`;\n      }\n      if (node.optional) {\n        key = `${key}?`;\n      }\n      if (node.readonly) {\n        key = `readonly ${key}`;\n      }\n      return key;\n    }\n    function getMethodParams(node) {\n      let params = '()';\n      if (node.params.length > 0) {\n        const openingParen = util.nullThrows(sourceCode.getTokenBefore(node.params[0], util.isOpeningParenToken), 'Missing opening paren before first parameter');\n        const closingParen = util.nullThrows(sourceCode.getTokenAfter(node.params[node.params.length - 1], util.isClosingParenToken), 'Missing closing paren after last parameter');\n        params = sourceCode.text.substring(openingParen.range[0], closingParen.range[1]);\n      }\n      if (node.typeParameters != null) {\n        const typeParams = sourceCode.getText(node.typeParameters);\n        params = `${typeParams}${params}`;\n      }\n      return params;\n    }\n    function getMethodReturnType(node) {\n      return node.returnType == null ?\n      // if the method has no return type, it implicitly has an `any` return type\n      // we just make it explicit here so we can do the fix\n      'any' : sourceCode.getText(node.returnType.typeAnnotation);\n    }\n    function getDelimiter(node) {\n      const lastToken = sourceCode.getLastToken(node);\n      if (lastToken && (util.isSemicolonToken(lastToken) || util.isCommaToken(lastToken))) {\n        return lastToken.value;\n      }\n      return '';\n    }\n    function isNodeParentModuleDeclaration(node) {\n      if (!node.parent) {\n        return false;\n      }\n      if (node.parent.type === utils_1.AST_NODE_TYPES.TSModuleDeclaration) {\n        return true;\n      }\n      if (node.parent.type === utils_1.AST_NODE_TYPES.Program) {\n        return false;\n      }\n      return isNodeParentModuleDeclaration(node.parent);\n    }\n    return Object.assign(Object.assign({}, mode === 'property' && {\n      TSMethodSignature(methodNode) {\n        if (methodNode.kind !== 'method') {\n          return;\n        }\n        const parent = methodNode.parent;\n        const members = (parent === null || parent === void 0 ? void 0 : parent.type) === utils_1.AST_NODE_TYPES.TSInterfaceBody ? parent.body : (parent === null || parent === void 0 ? void 0 : parent.type) === utils_1.AST_NODE_TYPES.TSTypeLiteral ? parent.members : [];\n        const duplicatedKeyMethodNodes = members.filter(element => element.type === utils_1.AST_NODE_TYPES.TSMethodSignature && element !== methodNode && getMethodKey(element) === getMethodKey(methodNode));\n        const isParentModule = isNodeParentModuleDeclaration(methodNode);\n        if (duplicatedKeyMethodNodes.length > 0) {\n          if (isParentModule) {\n            context.report({\n              node: methodNode,\n              messageId: 'errorMethod'\n            });\n          } else {\n            context.report({\n              node: methodNode,\n              messageId: 'errorMethod',\n              *fix(fixer) {\n                const methodNodes = [methodNode, ...duplicatedKeyMethodNodes].sort((a, b) => a.range[0] < b.range[0] ? -1 : 1);\n                const typeString = methodNodes.map(node => {\n                  const params = getMethodParams(node);\n                  const returnType = getMethodReturnType(node);\n                  return `(${params} => ${returnType})`;\n                }).join(' & ');\n                const key = getMethodKey(methodNode);\n                const delimiter = getDelimiter(methodNode);\n                yield fixer.replaceText(methodNode, `${key}: ${typeString}${delimiter}`);\n                for (const node of duplicatedKeyMethodNodes) {\n                  const lastToken = sourceCode.getLastToken(node);\n                  if (lastToken) {\n                    const nextToken = sourceCode.getTokenAfter(lastToken);\n                    if (nextToken) {\n                      yield fixer.remove(node);\n                      yield fixer.replaceTextRange([lastToken.range[1], nextToken.range[0]], '');\n                    }\n                  }\n                }\n              }\n            });\n          }\n          return;\n        }\n        if (isParentModule) {\n          context.report({\n            node: methodNode,\n            messageId: 'errorMethod'\n          });\n        } else {\n          context.report({\n            node: methodNode,\n            messageId: 'errorMethod',\n            fix: fixer => {\n              const key = getMethodKey(methodNode);\n              const params = getMethodParams(methodNode);\n              const returnType = getMethodReturnType(methodNode);\n              const delimiter = getDelimiter(methodNode);\n              return fixer.replaceText(methodNode, `${key}: ${params} => ${returnType}${delimiter}`);\n            }\n          });\n        }\n      }\n    }), mode === 'method' && {\n      TSPropertySignature(propertyNode) {\n        var _a;\n        const typeNode = (_a = propertyNode.typeAnnotation) === null || _a === void 0 ? void 0 : _a.typeAnnotation;\n        if ((typeNode === null || typeNode === void 0 ? void 0 : typeNode.type) !== utils_1.AST_NODE_TYPES.TSFunctionType) {\n          return;\n        }\n        context.report({\n          node: propertyNode,\n          messageId: 'errorProperty',\n          fix: fixer => {\n            const key = getMethodKey(propertyNode);\n            const params = getMethodParams(typeNode);\n            const returnType = getMethodReturnType(typeNode);\n            const delimiter = getDelimiter(propertyNode);\n            return fixer.replaceText(propertyNode, `${key}${params}: ${returnType}${delimiter}`);\n          }\n        });\n      }\n    });\n  }\n});","map":{"version":3,"names":["utils_1","require","util","__importStar","exports","default","createRule","name","meta","type","docs","description","recommended","fixable","messages","errorMethod","errorProperty","schema","enum","defaultOptions","create","context","mode","sourceCode","getSourceCode","getMethodKey","node","key","getText","computed","optional","readonly","getMethodParams","params","length","openingParen","nullThrows","getTokenBefore","isOpeningParenToken","closingParen","getTokenAfter","isClosingParenToken","text","substring","range","typeParameters","typeParams","getMethodReturnType","returnType","typeAnnotation","getDelimiter","lastToken","getLastToken","isSemicolonToken","isCommaToken","value","isNodeParentModuleDeclaration","parent","AST_NODE_TYPES","TSModuleDeclaration","Program","Object","assign","TSMethodSignature","methodNode","kind","members","TSInterfaceBody","body","TSTypeLiteral","duplicatedKeyMethodNodes","filter","element","isParentModule","report","messageId","fix","fixer","methodNodes","sort","a","b","typeString","map","join","delimiter","replaceText","nextToken","remove","replaceTextRange","TSPropertySignature","propertyNode","typeNode","_a","TSFunctionType"],"sources":["../../src/rules/method-signature-style.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}