{"ast":null,"code":"\"use strict\";\n\n/* eslint-disable no-empty-function */\nvar assert = require(\"@sinonjs/referee\").assert;\nvar className = require(\"./class-name\");\ndescribe(\"className\", function () {\n  it(\"returns the class name of an instance\", function () {\n    // Because eslint-config-sinon disables es6, we can't\n    // use a class definition here\n    // https://github.com/sinonjs/eslint-config-sinon/blob/master/index.js\n    // var instance = new (class TestClass {})();\n    var instance = new function TestClass() {}();\n    var name = className(instance);\n    assert.equals(name, \"TestClass\");\n  });\n  it(\"returns 'Object' for {}\", function () {\n    var name = className({});\n    assert.equals(name, \"Object\");\n  });\n  it(\"returns null for an object that has no prototype\", function () {\n    var obj = Object.create(null);\n    var name = className(obj);\n    assert.equals(name, null);\n  });\n  it(\"returns null for an object whose prototype was mangled\", function () {\n    // This is what Node v6 and v7 do for objects returned by querystring.parse()\n    function MangledObject() {}\n    MangledObject.prototype = Object.create(null);\n    var obj = new MangledObject();\n    var name = className(obj);\n    assert.equals(name, null);\n  });\n});","map":{"version":3,"names":["assert","require","className","describe","it","instance","TestClass","name","equals","obj","Object","create","MangledObject","prototype"],"sources":["C:/Users/chest/OneDrive/Documentos/GitHub/HackUPC/frontend/node_modules/@sinonjs/commons/lib/class-name.test.js"],"sourcesContent":["\"use strict\";\n/* eslint-disable no-empty-function */\n\nvar assert = require(\"@sinonjs/referee\").assert;\nvar className = require(\"./class-name\");\n\ndescribe(\"className\", function () {\n    it(\"returns the class name of an instance\", function () {\n        // Because eslint-config-sinon disables es6, we can't\n        // use a class definition here\n        // https://github.com/sinonjs/eslint-config-sinon/blob/master/index.js\n        // var instance = new (class TestClass {})();\n        var instance = new (function TestClass() {})();\n        var name = className(instance);\n        assert.equals(name, \"TestClass\");\n    });\n\n    it(\"returns 'Object' for {}\", function () {\n        var name = className({});\n        assert.equals(name, \"Object\");\n    });\n\n    it(\"returns null for an object that has no prototype\", function () {\n        var obj = Object.create(null);\n        var name = className(obj);\n        assert.equals(name, null);\n    });\n\n    it(\"returns null for an object whose prototype was mangled\", function () {\n        // This is what Node v6 and v7 do for objects returned by querystring.parse()\n        function MangledObject() {}\n        MangledObject.prototype = Object.create(null);\n        var obj = new MangledObject();\n        var name = className(obj);\n        assert.equals(name, null);\n    });\n});\n"],"mappings":"AAAA,YAAY;;AACZ;AAEA,IAAIA,MAAM,GAAGC,OAAO,CAAC,kBAAkB,CAAC,CAACD,MAAM;AAC/C,IAAIE,SAAS,GAAGD,OAAO,CAAC,cAAc,CAAC;AAEvCE,QAAQ,CAAC,WAAW,EAAE,YAAY;EAC9BC,EAAE,CAAC,uCAAuC,EAAE,YAAY;IACpD;IACA;IACA;IACA;IACA,IAAIC,QAAQ,GAAG,IAAK,SAASC,SAASA,CAAA,EAAG,CAAC,CAAC,CAAE,CAAC;IAC9C,IAAIC,IAAI,GAAGL,SAAS,CAACG,QAAQ,CAAC;IAC9BL,MAAM,CAACQ,MAAM,CAACD,IAAI,EAAE,WAAW,CAAC;EACpC,CAAC,CAAC;EAEFH,EAAE,CAAC,yBAAyB,EAAE,YAAY;IACtC,IAAIG,IAAI,GAAGL,SAAS,CAAC,CAAC,CAAC,CAAC;IACxBF,MAAM,CAACQ,MAAM,CAACD,IAAI,EAAE,QAAQ,CAAC;EACjC,CAAC,CAAC;EAEFH,EAAE,CAAC,kDAAkD,EAAE,YAAY;IAC/D,IAAIK,GAAG,GAAGC,MAAM,CAACC,MAAM,CAAC,IAAI,CAAC;IAC7B,IAAIJ,IAAI,GAAGL,SAAS,CAACO,GAAG,CAAC;IACzBT,MAAM,CAACQ,MAAM,CAACD,IAAI,EAAE,IAAI,CAAC;EAC7B,CAAC,CAAC;EAEFH,EAAE,CAAC,wDAAwD,EAAE,YAAY;IACrE;IACA,SAASQ,aAAaA,CAAA,EAAG,CAAC;IAC1BA,aAAa,CAACC,SAAS,GAAGH,MAAM,CAACC,MAAM,CAAC,IAAI,CAAC;IAC7C,IAAIF,GAAG,GAAG,IAAIG,aAAa,CAAC,CAAC;IAC7B,IAAIL,IAAI,GAAGL,SAAS,CAACO,GAAG,CAAC;IACzBT,MAAM,CAACQ,MAAM,CAACD,IAAI,EAAE,IAAI,CAAC;EAC7B,CAAC,CAAC;AACN,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}