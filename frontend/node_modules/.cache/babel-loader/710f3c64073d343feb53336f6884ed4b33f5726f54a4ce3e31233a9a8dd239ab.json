{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.parseForESLint = exports.parse = void 0;\nconst scope_manager_1 = require(\"@typescript-eslint/scope-manager\");\nconst typescript_estree_1 = require(\"@typescript-eslint/typescript-estree\");\nconst debug_1 = __importDefault(require(\"debug\"));\nconst typescript_1 = require(\"typescript\");\nconst log = (0, debug_1.default)('typescript-eslint:parser:parser');\nfunction validateBoolean(value, fallback = false) {\n  if (typeof value !== 'boolean') {\n    return fallback;\n  }\n  return value;\n}\nconst LIB_FILENAME_REGEX = /lib\\.(.+)\\.d\\.[cm]?ts$/;\nfunction getLib(compilerOptions) {\n  var _a;\n  if (compilerOptions.lib) {\n    return compilerOptions.lib.reduce((acc, lib) => {\n      const match = LIB_FILENAME_REGEX.exec(lib.toLowerCase());\n      if (match) {\n        acc.push(match[1]);\n      }\n      return acc;\n    }, []);\n  }\n  const target = (_a = compilerOptions.target) !== null && _a !== void 0 ? _a : typescript_1.ScriptTarget.ES5;\n  // https://github.com/microsoft/TypeScript/blob/ae582a22ee1bb052e19b7c1bc4cac60509b574e0/src/compiler/utilitiesPublic.ts#L13-L36\n  switch (target) {\n    case typescript_1.ScriptTarget.ESNext:\n      return ['esnext.full'];\n    case typescript_1.ScriptTarget.ES2022:\n      return ['es2022.full'];\n    case typescript_1.ScriptTarget.ES2021:\n      return ['es2021.full'];\n    case typescript_1.ScriptTarget.ES2020:\n      return ['es2020.full'];\n    case typescript_1.ScriptTarget.ES2019:\n      return ['es2019.full'];\n    case typescript_1.ScriptTarget.ES2018:\n      return ['es2018.full'];\n    case typescript_1.ScriptTarget.ES2017:\n      return ['es2017.full'];\n    case typescript_1.ScriptTarget.ES2016:\n      return ['es2016.full'];\n    case typescript_1.ScriptTarget.ES2015:\n      return ['es6'];\n    default:\n      return ['lib'];\n  }\n}\nfunction parse(code, options) {\n  return parseForESLint(code, options).ast;\n}\nexports.parse = parse;\nfunction parseForESLint(code, options) {\n  if (!options || typeof options !== 'object') {\n    options = {};\n  } else {\n    options = Object.assign({}, options);\n  }\n  // https://eslint.org/docs/user-guide/configuring#specifying-parser-options\n  // if sourceType is not provided by default eslint expect that it will be set to \"script\"\n  if (options.sourceType !== 'module' && options.sourceType !== 'script') {\n    options.sourceType = 'script';\n  }\n  if (typeof options.ecmaFeatures !== 'object') {\n    options.ecmaFeatures = {};\n  }\n  const parserOptions = {};\n  Object.assign(parserOptions, options, {\n    jsx: validateBoolean(options.ecmaFeatures.jsx)\n  });\n  const analyzeOptions = {\n    ecmaVersion: options.ecmaVersion === 'latest' ? 1e8 : options.ecmaVersion,\n    globalReturn: options.ecmaFeatures.globalReturn,\n    jsxPragma: options.jsxPragma,\n    jsxFragmentName: options.jsxFragmentName,\n    lib: options.lib,\n    sourceType: options.sourceType\n  };\n  /**\n   * Allow the user to suppress the warning from typescript-estree if they are using an unsupported\n   * version of TypeScript\n   */\n  const warnOnUnsupportedTypeScriptVersion = validateBoolean(options.warnOnUnsupportedTypeScriptVersion, true);\n  if (!warnOnUnsupportedTypeScriptVersion) {\n    parserOptions.loggerFn = false;\n  }\n  const {\n    ast,\n    services\n  } = (0, typescript_estree_1.parseAndGenerateServices)(code, parserOptions);\n  ast.sourceType = options.sourceType;\n  let emitDecoratorMetadata = options.emitDecoratorMetadata === true;\n  if (services.hasFullTypeInformation) {\n    // automatically apply the options configured for the program\n    const compilerOptions = services.program.getCompilerOptions();\n    if (analyzeOptions.lib == null) {\n      analyzeOptions.lib = getLib(compilerOptions);\n      log('Resolved libs from program: %o', analyzeOptions.lib);\n    }\n    if (analyzeOptions.jsxPragma === undefined && compilerOptions.jsxFactory != null) {\n      // in case the user has specified something like \"preact.h\"\n      const factory = compilerOptions.jsxFactory.split('.')[0].trim();\n      analyzeOptions.jsxPragma = factory;\n      log('Resolved jsxPragma from program: %s', analyzeOptions.jsxPragma);\n    }\n    if (analyzeOptions.jsxFragmentName === undefined && compilerOptions.jsxFragmentFactory != null) {\n      // in case the user has specified something like \"preact.Fragment\"\n      const fragFactory = compilerOptions.jsxFragmentFactory.split('.')[0].trim();\n      analyzeOptions.jsxFragmentName = fragFactory;\n      log('Resolved jsxFragmentName from program: %s', analyzeOptions.jsxFragmentName);\n    }\n    if (compilerOptions.emitDecoratorMetadata === true) {\n      emitDecoratorMetadata = true;\n    }\n  }\n  if (emitDecoratorMetadata) {\n    analyzeOptions.emitDecoratorMetadata = true;\n  }\n  const scopeManager = (0, scope_manager_1.analyze)(ast, analyzeOptions);\n  return {\n    ast,\n    services,\n    scopeManager,\n    visitorKeys: typescript_estree_1.visitorKeys\n  };\n}\nexports.parseForESLint = parseForESLint;","map":{"version":3,"names":["scope_manager_1","require","typescript_estree_1","debug_1","__importDefault","typescript_1","log","default","validateBoolean","value","fallback","LIB_FILENAME_REGEX","getLib","compilerOptions","lib","reduce","acc","match","exec","toLowerCase","push","target","_a","ScriptTarget","ES5","ESNext","ES2022","ES2021","ES2020","ES2019","ES2018","ES2017","ES2016","ES2015","parse","code","options","parseForESLint","ast","exports","Object","assign","sourceType","ecmaFeatures","parserOptions","jsx","analyzeOptions","ecmaVersion","globalReturn","jsxPragma","jsxFragmentName","warnOnUnsupportedTypeScriptVersion","loggerFn","services","parseAndGenerateServices","emitDecoratorMetadata","hasFullTypeInformation","program","getCompilerOptions","undefined","jsxFactory","factory","split","trim","jsxFragmentFactory","fragFactory","scopeManager","analyze","visitorKeys"],"sources":["../src/parser.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}