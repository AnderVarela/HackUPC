{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.parse32F = parse32F;\nexports.parse64F = parse64F;\nexports.parse32I = parse32I;\nexports.parseU32 = parseU32;\nexports.parse64I = parse64I;\nexports.isInfLiteral = isInfLiteral;\nexports.isNanLiteral = isNanLiteral;\nvar _long2 = _interopRequireDefault(require(\"@xtuc/long\"));\nvar _floatingPointHexParser = _interopRequireDefault(require(\"@webassemblyjs/floating-point-hex-parser\"));\nvar _helperApiError = require(\"@webassemblyjs/helper-api-error\");\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\nfunction parse32F(sourceString) {\n  if (isHexLiteral(sourceString)) {\n    return (0, _floatingPointHexParser[\"default\"])(sourceString);\n  }\n  if (isInfLiteral(sourceString)) {\n    return sourceString[0] === \"-\" ? -1 : 1;\n  }\n  if (isNanLiteral(sourceString)) {\n    return (sourceString[0] === \"-\" ? -1 : 1) * (sourceString.includes(\":\") ? parseInt(sourceString.substring(sourceString.indexOf(\":\") + 1), 16) : 0x400000);\n  }\n  return parseFloat(sourceString);\n}\nfunction parse64F(sourceString) {\n  if (isHexLiteral(sourceString)) {\n    return (0, _floatingPointHexParser[\"default\"])(sourceString);\n  }\n  if (isInfLiteral(sourceString)) {\n    return sourceString[0] === \"-\" ? -1 : 1;\n  }\n  if (isNanLiteral(sourceString)) {\n    return (sourceString[0] === \"-\" ? -1 : 1) * (sourceString.includes(\":\") ? parseInt(sourceString.substring(sourceString.indexOf(\":\") + 1), 16) : 0x8000000000000);\n  }\n  if (isHexLiteral(sourceString)) {\n    return (0, _floatingPointHexParser[\"default\"])(sourceString);\n  }\n  return parseFloat(sourceString);\n}\nfunction parse32I(sourceString) {\n  var value = 0;\n  if (isHexLiteral(sourceString)) {\n    value = ~~parseInt(sourceString, 16);\n  } else if (isDecimalExponentLiteral(sourceString)) {\n    throw new Error(\"This number literal format is yet to be implemented.\");\n  } else {\n    value = parseInt(sourceString, 10);\n  }\n  return value;\n}\nfunction parseU32(sourceString) {\n  var value = parse32I(sourceString);\n  if (value < 0) {\n    throw new _helperApiError.CompileError(\"Illegal value for u32: \" + sourceString);\n  }\n  return value;\n}\nfunction parse64I(sourceString) {\n  // $FlowIgnore\n  var _long;\n  if (isHexLiteral(sourceString)) {\n    _long = _long2[\"default\"].fromString(sourceString, false, 16);\n  } else if (isDecimalExponentLiteral(sourceString)) {\n    throw new Error(\"This number literal format is yet to be implemented.\");\n  } else {\n    _long = _long2[\"default\"].fromString(sourceString);\n  }\n  return {\n    high: _long.high,\n    low: _long.low\n  };\n}\nvar NAN_WORD = /^\\+?-?nan/;\nvar INF_WORD = /^\\+?-?inf/;\nfunction isInfLiteral(sourceString) {\n  return INF_WORD.test(sourceString.toLowerCase());\n}\nfunction isNanLiteral(sourceString) {\n  return NAN_WORD.test(sourceString.toLowerCase());\n}\nfunction isDecimalExponentLiteral(sourceString) {\n  return !isHexLiteral(sourceString) && sourceString.toUpperCase().includes(\"E\");\n}\nfunction isHexLiteral(sourceString) {\n  return sourceString.substring(0, 2).toUpperCase() === \"0X\" || sourceString.substring(0, 3).toUpperCase() === \"-0X\";\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","parse32F","parse64F","parse32I","parseU32","parse64I","isInfLiteral","isNanLiteral","_long2","_interopRequireDefault","require","_floatingPointHexParser","_helperApiError","obj","__esModule","sourceString","isHexLiteral","includes","parseInt","substring","indexOf","parseFloat","isDecimalExponentLiteral","Error","CompileError","_long","fromString","high","low","NAN_WORD","INF_WORD","test","toLowerCase","toUpperCase"],"sources":["C:/Users/chest/OneDrive/Documentos/GitHub/HackUPC/frontend/node_modules/@webassemblyjs/helper-numbers/lib/index.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.parse32F = parse32F;\nexports.parse64F = parse64F;\nexports.parse32I = parse32I;\nexports.parseU32 = parseU32;\nexports.parse64I = parse64I;\nexports.isInfLiteral = isInfLiteral;\nexports.isNanLiteral = isNanLiteral;\n\nvar _long2 = _interopRequireDefault(require(\"@xtuc/long\"));\n\nvar _floatingPointHexParser = _interopRequireDefault(require(\"@webassemblyjs/floating-point-hex-parser\"));\n\nvar _helperApiError = require(\"@webassemblyjs/helper-api-error\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction parse32F(sourceString) {\n  if (isHexLiteral(sourceString)) {\n    return (0, _floatingPointHexParser[\"default\"])(sourceString);\n  }\n\n  if (isInfLiteral(sourceString)) {\n    return sourceString[0] === \"-\" ? -1 : 1;\n  }\n\n  if (isNanLiteral(sourceString)) {\n    return (sourceString[0] === \"-\" ? -1 : 1) * (sourceString.includes(\":\") ? parseInt(sourceString.substring(sourceString.indexOf(\":\") + 1), 16) : 0x400000);\n  }\n\n  return parseFloat(sourceString);\n}\n\nfunction parse64F(sourceString) {\n  if (isHexLiteral(sourceString)) {\n    return (0, _floatingPointHexParser[\"default\"])(sourceString);\n  }\n\n  if (isInfLiteral(sourceString)) {\n    return sourceString[0] === \"-\" ? -1 : 1;\n  }\n\n  if (isNanLiteral(sourceString)) {\n    return (sourceString[0] === \"-\" ? -1 : 1) * (sourceString.includes(\":\") ? parseInt(sourceString.substring(sourceString.indexOf(\":\") + 1), 16) : 0x8000000000000);\n  }\n\n  if (isHexLiteral(sourceString)) {\n    return (0, _floatingPointHexParser[\"default\"])(sourceString);\n  }\n\n  return parseFloat(sourceString);\n}\n\nfunction parse32I(sourceString) {\n  var value = 0;\n\n  if (isHexLiteral(sourceString)) {\n    value = ~~parseInt(sourceString, 16);\n  } else if (isDecimalExponentLiteral(sourceString)) {\n    throw new Error(\"This number literal format is yet to be implemented.\");\n  } else {\n    value = parseInt(sourceString, 10);\n  }\n\n  return value;\n}\n\nfunction parseU32(sourceString) {\n  var value = parse32I(sourceString);\n\n  if (value < 0) {\n    throw new _helperApiError.CompileError(\"Illegal value for u32: \" + sourceString);\n  }\n\n  return value;\n}\n\nfunction parse64I(sourceString) {\n  // $FlowIgnore\n  var _long;\n\n  if (isHexLiteral(sourceString)) {\n    _long = _long2[\"default\"].fromString(sourceString, false, 16);\n  } else if (isDecimalExponentLiteral(sourceString)) {\n    throw new Error(\"This number literal format is yet to be implemented.\");\n  } else {\n    _long = _long2[\"default\"].fromString(sourceString);\n  }\n\n  return {\n    high: _long.high,\n    low: _long.low\n  };\n}\n\nvar NAN_WORD = /^\\+?-?nan/;\nvar INF_WORD = /^\\+?-?inf/;\n\nfunction isInfLiteral(sourceString) {\n  return INF_WORD.test(sourceString.toLowerCase());\n}\n\nfunction isNanLiteral(sourceString) {\n  return NAN_WORD.test(sourceString.toLowerCase());\n}\n\nfunction isDecimalExponentLiteral(sourceString) {\n  return !isHexLiteral(sourceString) && sourceString.toUpperCase().includes(\"E\");\n}\n\nfunction isHexLiteral(sourceString) {\n  return sourceString.substring(0, 2).toUpperCase() === \"0X\" || sourceString.substring(0, 3).toUpperCase() === \"-0X\";\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}