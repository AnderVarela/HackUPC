{"ast":null,"code":"import ansiRegex from 'ansi-regex';\nconst regex = ansiRegex();\nexport default function stripAnsi(string) {\n  if (typeof string !== 'string') {\n    throw new TypeError(`Expected a \\`string\\`, got \\`${typeof string}\\``);\n  }\n\n  // Even though the regex is global, we don't need to reset the `.lastIndex`\n  // because unlike `.exec()` and `.test()`, `.replace()` does it automatically\n  // and doing it manually has a performance penalty.\n  return string.replace(regex, '');\n}","map":{"version":3,"names":["ansiRegex","regex","stripAnsi","string","TypeError","replace"],"sources":["C:/Users/chest/OneDrive/Documentos/GitHub/HackUPC/frontend/node_modules/@isaacs/cliui/node_modules/strip-ansi/index.js"],"sourcesContent":["import ansiRegex from 'ansi-regex';\n\nconst regex = ansiRegex();\n\nexport default function stripAnsi(string) {\n\tif (typeof string !== 'string') {\n\t\tthrow new TypeError(`Expected a \\`string\\`, got \\`${typeof string}\\``);\n\t}\n\n\t// Even though the regex is global, we don't need to reset the `.lastIndex`\n\t// because unlike `.exec()` and `.test()`, `.replace()` does it automatically\n\t// and doing it manually has a performance penalty.\n\treturn string.replace(regex, '');\n}\n"],"mappings":"AAAA,OAAOA,SAAS,MAAM,YAAY;AAElC,MAAMC,KAAK,GAAGD,SAAS,CAAC,CAAC;AAEzB,eAAe,SAASE,SAASA,CAACC,MAAM,EAAE;EACzC,IAAI,OAAOA,MAAM,KAAK,QAAQ,EAAE;IAC/B,MAAM,IAAIC,SAAS,CAAE,gCAA+B,OAAOD,MAAO,IAAG,CAAC;EACvE;;EAEA;EACA;EACA;EACA,OAAOA,MAAM,CAACE,OAAO,CAACJ,KAAK,EAAE,EAAE,CAAC;AACjC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}