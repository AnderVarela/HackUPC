{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst utils_1 = require(\"@typescript-eslint/utils\");\nconst tsutils = __importStar(require(\"tsutils\"));\nconst ts = __importStar(require(\"typescript\"));\nconst util = __importStar(require(\"../util\"));\nconst util_1 = require(\"../util\");\nconst functionScopeBoundaries = [utils_1.AST_NODE_TYPES.ArrowFunctionExpression, utils_1.AST_NODE_TYPES.FunctionDeclaration, utils_1.AST_NODE_TYPES.FunctionExpression, utils_1.AST_NODE_TYPES.MethodDefinition].join(', ');\nexports.default = util.createRule({\n  name: 'prefer-readonly',\n  meta: {\n    docs: {\n      description: \"Require private members to be marked as `readonly` if they're never modified outside of the constructor\",\n      recommended: false,\n      requiresTypeChecking: true\n    },\n    fixable: 'code',\n    messages: {\n      preferReadonly: \"Member '{{name}}' is never reassigned; mark it as `readonly`.\"\n    },\n    schema: [{\n      allowAdditionalProperties: false,\n      properties: {\n        onlyInlineLambdas: {\n          type: 'boolean'\n        }\n      },\n      type: 'object'\n    }],\n    type: 'suggestion'\n  },\n  defaultOptions: [{\n    onlyInlineLambdas: false\n  }],\n  create(context, [{\n    onlyInlineLambdas\n  }]) {\n    const parserServices = util.getParserServices(context);\n    const checker = parserServices.program.getTypeChecker();\n    const classScopeStack = [];\n    function handlePropertyAccessExpression(node, parent, classScope) {\n      if (ts.isBinaryExpression(parent)) {\n        handleParentBinaryExpression(node, parent, classScope);\n        return;\n      }\n      if (ts.isDeleteExpression(parent) || isDestructuringAssignment(node)) {\n        classScope.addVariableModification(node);\n        return;\n      }\n      if (ts.isPostfixUnaryExpression(parent) || ts.isPrefixUnaryExpression(parent)) {\n        handleParentPostfixOrPrefixUnaryExpression(parent, classScope);\n      }\n    }\n    function handleParentBinaryExpression(node, parent, classScope) {\n      if (parent.left === node && tsutils.isAssignmentKind(parent.operatorToken.kind)) {\n        classScope.addVariableModification(node);\n      }\n    }\n    function handleParentPostfixOrPrefixUnaryExpression(node, classScope) {\n      if (node.operator === ts.SyntaxKind.PlusPlusToken || node.operator === ts.SyntaxKind.MinusMinusToken) {\n        classScope.addVariableModification(node.operand);\n      }\n    }\n    function isDestructuringAssignment(node) {\n      let current = node.parent;\n      while (current) {\n        const parent = current.parent;\n        if (ts.isObjectLiteralExpression(parent) || ts.isArrayLiteralExpression(parent) || ts.isSpreadAssignment(parent) || ts.isSpreadElement(parent) && ts.isArrayLiteralExpression(parent.parent)) {\n          current = parent;\n        } else if (ts.isBinaryExpression(parent) && !ts.isPropertyAccessExpression(current)) {\n          return parent.left === current && parent.operatorToken.kind === ts.SyntaxKind.EqualsToken;\n        } else {\n          break;\n        }\n      }\n      return false;\n    }\n    function isFunctionScopeBoundaryInStack(node) {\n      if (classScopeStack.length === 0) {\n        return false;\n      }\n      const tsNode = parserServices.esTreeNodeToTSNodeMap.get(node);\n      if (ts.isConstructorDeclaration(tsNode)) {\n        return false;\n      }\n      return tsutils.isFunctionScopeBoundary(tsNode);\n    }\n    function getEsNodesFromViolatingNode(violatingNode) {\n      if (ts.isParameterPropertyDeclaration(violatingNode, violatingNode.parent)) {\n        return {\n          esNode: parserServices.tsNodeToESTreeNodeMap.get(violatingNode.name),\n          nameNode: parserServices.tsNodeToESTreeNodeMap.get(violatingNode.name)\n        };\n      }\n      return {\n        esNode: parserServices.tsNodeToESTreeNodeMap.get(violatingNode),\n        nameNode: parserServices.tsNodeToESTreeNodeMap.get(violatingNode.name)\n      };\n    }\n    return {\n      'ClassDeclaration, ClassExpression'(node) {\n        classScopeStack.push(new ClassScope(checker, parserServices.esTreeNodeToTSNodeMap.get(node), onlyInlineLambdas));\n      },\n      'ClassDeclaration, ClassExpression:exit'() {\n        const finalizedClassScope = classScopeStack.pop();\n        const sourceCode = context.getSourceCode();\n        for (const violatingNode of finalizedClassScope.finalizeUnmodifiedPrivateNonReadonlys()) {\n          const {\n            esNode,\n            nameNode\n          } = getEsNodesFromViolatingNode(violatingNode);\n          context.report({\n            data: {\n              name: sourceCode.getText(nameNode)\n            },\n            fix: fixer => fixer.insertTextBefore(nameNode, 'readonly '),\n            messageId: 'preferReadonly',\n            node: esNode\n          });\n        }\n      },\n      MemberExpression(node) {\n        if (classScopeStack.length !== 0 && !node.computed) {\n          const tsNode = parserServices.esTreeNodeToTSNodeMap.get(node);\n          handlePropertyAccessExpression(tsNode, tsNode.parent, classScopeStack[classScopeStack.length - 1]);\n        }\n      },\n      [functionScopeBoundaries](node) {\n        if (utils_1.ASTUtils.isConstructor(node)) {\n          classScopeStack[classScopeStack.length - 1].enterConstructor(parserServices.esTreeNodeToTSNodeMap.get(node));\n        } else if (isFunctionScopeBoundaryInStack(node)) {\n          classScopeStack[classScopeStack.length - 1].enterNonConstructor();\n        }\n      },\n      [`${functionScopeBoundaries}:exit`](node) {\n        if (utils_1.ASTUtils.isConstructor(node)) {\n          classScopeStack[classScopeStack.length - 1].exitConstructor();\n        } else if (isFunctionScopeBoundaryInStack(node)) {\n          classScopeStack[classScopeStack.length - 1].exitNonConstructor();\n        }\n      }\n    };\n  }\n});\nconst OUTSIDE_CONSTRUCTOR = -1;\nconst DIRECTLY_INSIDE_CONSTRUCTOR = 0;\nclass ClassScope {\n  constructor(checker, classNode, onlyInlineLambdas) {\n    this.checker = checker;\n    this.onlyInlineLambdas = onlyInlineLambdas;\n    this.privateModifiableMembers = new Map();\n    this.privateModifiableStatics = new Map();\n    this.memberVariableModifications = new Set();\n    this.staticVariableModifications = new Set();\n    this.constructorScopeDepth = OUTSIDE_CONSTRUCTOR;\n    const classType = checker.getTypeAtLocation(classNode);\n    if (tsutils.isIntersectionType(classType)) {\n      this.classType = classType.types[0];\n    } else {\n      this.classType = classType;\n    }\n    for (const member of classNode.members) {\n      if (ts.isPropertyDeclaration(member)) {\n        this.addDeclaredVariable(member);\n      }\n    }\n  }\n  addDeclaredVariable(node) {\n    if (!tsutils.isModifierFlagSet(node, ts.ModifierFlags.Private) || tsutils.isModifierFlagSet(node, ts.ModifierFlags.Readonly) || ts.isComputedPropertyName(node.name)) {\n      return;\n    }\n    if (this.onlyInlineLambdas && node.initializer !== undefined && !ts.isArrowFunction(node.initializer)) {\n      return;\n    }\n    (tsutils.isModifierFlagSet(node, ts.ModifierFlags.Static) ? this.privateModifiableStatics : this.privateModifiableMembers).set(node.name.getText(), node);\n  }\n  addVariableModification(node) {\n    const modifierType = this.checker.getTypeAtLocation(node.expression);\n    if (!modifierType.getSymbol() || !(0, util_1.typeIsOrHasBaseType)(modifierType, this.classType)) {\n      return;\n    }\n    const modifyingStatic = tsutils.isObjectType(modifierType) && tsutils.isObjectFlagSet(modifierType, ts.ObjectFlags.Anonymous);\n    if (!modifyingStatic && this.constructorScopeDepth === DIRECTLY_INSIDE_CONSTRUCTOR) {\n      return;\n    }\n    (modifyingStatic ? this.staticVariableModifications : this.memberVariableModifications).add(node.name.text);\n  }\n  enterConstructor(node) {\n    this.constructorScopeDepth = DIRECTLY_INSIDE_CONSTRUCTOR;\n    for (const parameter of node.parameters) {\n      if (tsutils.isModifierFlagSet(parameter, ts.ModifierFlags.Private)) {\n        this.addDeclaredVariable(parameter);\n      }\n    }\n  }\n  exitConstructor() {\n    this.constructorScopeDepth = OUTSIDE_CONSTRUCTOR;\n  }\n  enterNonConstructor() {\n    if (this.constructorScopeDepth !== OUTSIDE_CONSTRUCTOR) {\n      this.constructorScopeDepth += 1;\n    }\n  }\n  exitNonConstructor() {\n    if (this.constructorScopeDepth !== OUTSIDE_CONSTRUCTOR) {\n      this.constructorScopeDepth -= 1;\n    }\n  }\n  finalizeUnmodifiedPrivateNonReadonlys() {\n    this.memberVariableModifications.forEach(variableName => {\n      this.privateModifiableMembers.delete(variableName);\n    });\n    this.staticVariableModifications.forEach(variableName => {\n      this.privateModifiableStatics.delete(variableName);\n    });\n    return [...Array.from(this.privateModifiableMembers.values()), ...Array.from(this.privateModifiableStatics.values())];\n  }\n}","map":{"version":3,"names":["utils_1","require","tsutils","__importStar","ts","util","util_1","functionScopeBoundaries","AST_NODE_TYPES","ArrowFunctionExpression","FunctionDeclaration","FunctionExpression","MethodDefinition","join","exports","default","createRule","name","meta","docs","description","recommended","requiresTypeChecking","fixable","messages","preferReadonly","schema","allowAdditionalProperties","properties","onlyInlineLambdas","type","defaultOptions","create","context","parserServices","getParserServices","checker","program","getTypeChecker","classScopeStack","handlePropertyAccessExpression","node","parent","classScope","isBinaryExpression","handleParentBinaryExpression","isDeleteExpression","isDestructuringAssignment","addVariableModification","isPostfixUnaryExpression","isPrefixUnaryExpression","handleParentPostfixOrPrefixUnaryExpression","left","isAssignmentKind","operatorToken","kind","operator","SyntaxKind","PlusPlusToken","MinusMinusToken","operand","current","isObjectLiteralExpression","isArrayLiteralExpression","isSpreadAssignment","isSpreadElement","isPropertyAccessExpression","EqualsToken","isFunctionScopeBoundaryInStack","length","tsNode","esTreeNodeToTSNodeMap","get","isConstructorDeclaration","isFunctionScopeBoundary","getEsNodesFromViolatingNode","violatingNode","isParameterPropertyDeclaration","esNode","tsNodeToESTreeNodeMap","nameNode","ClassDeclaration, ClassExpression","push","ClassScope","ClassDeclaration, ClassExpression:exit","finalizedClassScope","pop","sourceCode","getSourceCode","finalizeUnmodifiedPrivateNonReadonlys","report","data","getText","fix","fixer","insertTextBefore","messageId","MemberExpression","computed","ASTUtils","isConstructor","enterConstructor","enterNonConstructor","exitConstructor","exitNonConstructor","OUTSIDE_CONSTRUCTOR","DIRECTLY_INSIDE_CONSTRUCTOR","constructor","classNode","privateModifiableMembers","Map","privateModifiableStatics","memberVariableModifications","Set","staticVariableModifications","constructorScopeDepth","classType","getTypeAtLocation","isIntersectionType","types","member","members","isPropertyDeclaration","addDeclaredVariable","isModifierFlagSet","ModifierFlags","Private","Readonly","isComputedPropertyName","initializer","undefined","isArrowFunction","Static","set","modifierType","expression","getSymbol","typeIsOrHasBaseType","modifyingStatic","isObjectType","isObjectFlagSet","ObjectFlags","Anonymous","add","text","parameter","parameters","forEach","variableName","delete","Array","from","values"],"sources":["../../src/rules/prefer-readonly.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}