{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst equal = require(\"fast-deep-equal\");\nconst SCALAR_TYPES = [\"number\", \"integer\", \"string\", \"boolean\", \"null\"];\nfunction getDef() {\n  return {\n    keyword: \"uniqueItemProperties\",\n    type: \"array\",\n    schemaType: \"array\",\n    compile(keys, parentSchema) {\n      const scalar = getScalarKeys(keys, parentSchema);\n      return data => {\n        if (data.length <= 1) return true;\n        for (let k = 0; k < keys.length; k++) {\n          const key = keys[k];\n          if (scalar[k]) {\n            const hash = {};\n            for (const x of data) {\n              if (!x || typeof x != \"object\") continue;\n              let p = x[key];\n              if (p && typeof p == \"object\") continue;\n              if (typeof p == \"string\") p = '\"' + p;\n              if (hash[p]) return false;\n              hash[p] = true;\n            }\n          } else {\n            for (let i = data.length; i--;) {\n              const x = data[i];\n              if (!x || typeof x != \"object\") continue;\n              for (let j = i; j--;) {\n                const y = data[j];\n                if (y && typeof y == \"object\" && equal(x[key], y[key])) return false;\n              }\n            }\n          }\n        }\n        return true;\n      };\n    },\n    metaSchema: {\n      type: \"array\",\n      items: {\n        type: \"string\"\n      }\n    }\n  };\n}\nexports.default = getDef;\nfunction getScalarKeys(keys, schema) {\n  return keys.map(key => {\n    var _a, _b, _c;\n    const t = (_c = (_b = (_a = schema.items) === null || _a === void 0 ? void 0 : _a.properties) === null || _b === void 0 ? void 0 : _b[key]) === null || _c === void 0 ? void 0 : _c.type;\n    return Array.isArray(t) ? !t.includes(\"object\") && !t.includes(\"array\") : SCALAR_TYPES.includes(t);\n  });\n}\nmodule.exports = getDef;","map":{"version":3,"names":["equal","require","SCALAR_TYPES","getDef","keyword","type","schemaType","compile","keys","parentSchema","scalar","getScalarKeys","data","length","k","key","hash","x","p","i","j","y","metaSchema","items","exports","default","schema","map","t","_c","_b","_a","properties","Array","isArray","includes","module"],"sources":["C:\\Users\\chest\\OneDrive\\Documentos\\GitHub\\HackUPC\\frontend\\node_modules\\css-minimizer-webpack-plugin\\node_modules\\ajv-keywords\\src\\definitions\\uniqueItemProperties.ts"],"sourcesContent":["import type {FuncKeywordDefinition, AnySchemaObject} from \"ajv\"\nimport equal = require(\"fast-deep-equal\")\n\nconst SCALAR_TYPES = [\"number\", \"integer\", \"string\", \"boolean\", \"null\"]\n\nexport default function getDef(): FuncKeywordDefinition {\n  return {\n    keyword: \"uniqueItemProperties\",\n    type: \"array\",\n    schemaType: \"array\",\n    compile(keys: string[], parentSchema: AnySchemaObject) {\n      const scalar = getScalarKeys(keys, parentSchema)\n\n      return (data) => {\n        if (data.length <= 1) return true\n        for (let k = 0; k < keys.length; k++) {\n          const key = keys[k]\n          if (scalar[k]) {\n            const hash: Record<string, any> = {}\n            for (const x of data) {\n              if (!x || typeof x != \"object\") continue\n              let p = x[key]\n              if (p && typeof p == \"object\") continue\n              if (typeof p == \"string\") p = '\"' + p\n              if (hash[p]) return false\n              hash[p] = true\n            }\n          } else {\n            for (let i = data.length; i--; ) {\n              const x = data[i]\n              if (!x || typeof x != \"object\") continue\n              for (let j = i; j--; ) {\n                const y = data[j]\n                if (y && typeof y == \"object\" && equal(x[key], y[key])) return false\n              }\n            }\n          }\n        }\n        return true\n      }\n    },\n    metaSchema: {\n      type: \"array\",\n      items: {type: \"string\"},\n    },\n  }\n}\n\nfunction getScalarKeys(keys: string[], schema: AnySchemaObject): boolean[] {\n  return keys.map((key) => {\n    const t = schema.items?.properties?.[key]?.type\n    return Array.isArray(t)\n      ? !t.includes(\"object\") && !t.includes(\"array\")\n      : SCALAR_TYPES.includes(t)\n  })\n}\n\nmodule.exports = getDef\n"],"mappings":";;;;;AACA,MAAAA,KAAA,GAAAC,OAAA;AAEA,MAAMC,YAAY,GAAG,CAAC,QAAQ,EAAE,SAAS,EAAE,QAAQ,EAAE,SAAS,EAAE,MAAM,CAAC;AAEvE,SAAwBC,MAAMA,CAAA;EAC5B,OAAO;IACLC,OAAO,EAAE,sBAAsB;IAC/BC,IAAI,EAAE,OAAO;IACbC,UAAU,EAAE,OAAO;IACnBC,OAAOA,CAACC,IAAc,EAAEC,YAA6B;MACnD,MAAMC,MAAM,GAAGC,aAAa,CAACH,IAAI,EAAEC,YAAY,CAAC;MAEhD,OAAQG,IAAI,IAAI;QACd,IAAIA,IAAI,CAACC,MAAM,IAAI,CAAC,EAAE,OAAO,IAAI;QACjC,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGN,IAAI,CAACK,MAAM,EAAEC,CAAC,EAAE,EAAE;UACpC,MAAMC,GAAG,GAAGP,IAAI,CAACM,CAAC,CAAC;UACnB,IAAIJ,MAAM,CAACI,CAAC,CAAC,EAAE;YACb,MAAME,IAAI,GAAwB,EAAE;YACpC,KAAK,MAAMC,CAAC,IAAIL,IAAI,EAAE;cACpB,IAAI,CAACK,CAAC,IAAI,OAAOA,CAAC,IAAI,QAAQ,EAAE;cAChC,IAAIC,CAAC,GAAGD,CAAC,CAACF,GAAG,CAAC;cACd,IAAIG,CAAC,IAAI,OAAOA,CAAC,IAAI,QAAQ,EAAE;cAC/B,IAAI,OAAOA,CAAC,IAAI,QAAQ,EAAEA,CAAC,GAAG,GAAG,GAAGA,CAAC;cACrC,IAAIF,IAAI,CAACE,CAAC,CAAC,EAAE,OAAO,KAAK;cACzBF,IAAI,CAACE,CAAC,CAAC,GAAG,IAAI;;WAEjB,MAAM;YACL,KAAK,IAAIC,CAAC,GAAGP,IAAI,CAACC,MAAM,EAAEM,CAAC,EAAE,GAAI;cAC/B,MAAMF,CAAC,GAAGL,IAAI,CAACO,CAAC,CAAC;cACjB,IAAI,CAACF,CAAC,IAAI,OAAOA,CAAC,IAAI,QAAQ,EAAE;cAChC,KAAK,IAAIG,CAAC,GAAGD,CAAC,EAAEC,CAAC,EAAE,GAAI;gBACrB,MAAMC,CAAC,GAAGT,IAAI,CAACQ,CAAC,CAAC;gBACjB,IAAIC,CAAC,IAAI,OAAOA,CAAC,IAAI,QAAQ,IAAIrB,KAAK,CAACiB,CAAC,CAACF,GAAG,CAAC,EAAEM,CAAC,CAACN,GAAG,CAAC,CAAC,EAAE,OAAO,KAAK;;;;;QAK5E,OAAO,IAAI;MACb,CAAC;IACH,CAAC;IACDO,UAAU,EAAE;MACVjB,IAAI,EAAE,OAAO;MACbkB,KAAK,EAAE;QAAClB,IAAI,EAAE;MAAQ;;GAEzB;AACH;AAzCAmB,OAAA,CAAAC,OAAA,GAAAtB,MAAA;AA2CA,SAASQ,aAAaA,CAACH,IAAc,EAAEkB,MAAuB;EAC5D,OAAOlB,IAAI,CAACmB,GAAG,CAAEZ,GAAG,IAAI;;IACtB,MAAMa,CAAC,GAAG,CAAAC,EAAA,IAAAC,EAAA,IAAAC,EAAA,GAAAL,MAAM,CAACH,KAAK,cAAAQ,EAAA,uBAAAA,EAAA,CAAEC,UAAU,cAAAF,EAAA,uBAAAA,EAAA,CAAGf,GAAG,CAAC,cAAAc,EAAA,uBAAAA,EAAA,CAAExB,IAAI;IAC/C,OAAO4B,KAAK,CAACC,OAAO,CAACN,CAAC,CAAC,GACnB,CAACA,CAAC,CAACO,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAACP,CAAC,CAACO,QAAQ,CAAC,OAAO,CAAC,GAC7CjC,YAAY,CAACiC,QAAQ,CAACP,CAAC,CAAC;EAC9B,CAAC,CAAC;AACJ;AAEAQ,MAAM,CAACZ,OAAO,GAAGrB,MAAM","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}