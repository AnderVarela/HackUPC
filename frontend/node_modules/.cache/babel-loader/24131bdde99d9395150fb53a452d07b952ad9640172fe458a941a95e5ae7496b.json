{"ast":null,"code":"/* eslint-disable import/no-extraneous-dependencies */\nimport fs from \"fs\";\nimport { join } from \"path\";\nimport { URL, fileURLToPath } from \"url\";\nimport { minify } from \"terser\";\nimport { transformSync } from \"@babel/core\";\nimport presetTypescript from \"@babel/preset-typescript\";\nimport { gzipSync } from \"zlib\";\nimport { IS_BABEL_8 } from \"$repo-utils\";\nconst HELPERS_FOLDER = new URL(\"../src/helpers\", import.meta.url);\nconst IGNORED_FILES = new Set([\"package.json\"]);\nexport default async function generateHelpers() {\n  let output = `/*\n * This file is auto-generated! Do not modify it directly.\n * To re-generate run 'yarn gulp generate-runtime-helpers'\n */\n\nimport template from \"@babel/template\";\n\nfunction helper(minVersion: string, source: string) {\n  return Object.freeze({\n    minVersion,\n    ast: () => template.program.ast(source, { preserveComments: true }),\n  })\n}\n\nexport default Object.freeze({\n`;\n  for (const file of (await fs.promises.readdir(HELPERS_FOLDER)).sort()) {\n    if (IGNORED_FILES.has(file)) continue;\n    if (file.startsWith(\".\")) continue; // ignore e.g. vim swap files\n\n    const [helperName] = file.split(\".\");\n    const isTs = file.endsWith(\".ts\");\n    const filePath = join(fileURLToPath(HELPERS_FOLDER), file);\n    if (!file.endsWith(\".js\") && !isTs) {\n      console.error(\"ignoring\", filePath);\n      continue;\n    }\n    let code = await fs.promises.readFile(filePath, \"utf8\");\n    const minVersionMatch = code.match(/^\\s*\\/\\*\\s*@minVersion\\s+(?<minVersion>\\S+)\\s*\\*\\/\\s*$/m);\n    if (!minVersionMatch) {\n      throw new Error(`@minVersion number missing in ${filePath}`);\n    }\n    const {\n      minVersion\n    } = minVersionMatch.groups;\n    if (IS_BABEL_8() && code.includes(\"@onlyBabel7\")) {\n      continue;\n    }\n    const mangleFns = code.includes(\"@mangleFns\");\n    const noMangleFns = [];\n    code = transformSync(code, {\n      configFile: false,\n      babelrc: false,\n      filename: filePath,\n      presets: [[presetTypescript, {\n        onlyRemoveTypeImports: true,\n        optimizeConstEnums: true\n      }]],\n      plugins: [\n      /**\n       * @type {import(\"@babel/core\").PluginObj}\n       */\n      {\n        visitor: {\n          ImportDeclaration(path) {\n            const source = path.node.source;\n            source.value = source.value.replace(/\\.ts$/, \"\").replace(/^\\.\\//, \"\");\n          },\n          FunctionDeclaration(path) {\n            if (mangleFns && path.node.leadingComments?.find(c => c.value.includes(\"@no-mangle\"))) {\n              const name = path.node.id.name;\n              if (name) noMangleFns.push(name);\n            }\n          }\n        }\n      }]\n    }).code;\n    code = (await minify(code, {\n      ecma: 5,\n      mangle: {\n        keep_fnames: mangleFns ? new RegExp(noMangleFns.join(\"|\")) : true\n      },\n      // The _typeof helper has a custom directive that we must keep\n      compress: {\n        directives: false,\n        passes: 10,\n        unsafe: true,\n        unsafe_proto: true\n      }\n    })).code;\n    output += `\\\n  // size: ${code.length}, gzip size: ${gzipSync(code).length}\n  ${JSON.stringify(helperName)}: helper(\n    ${JSON.stringify(minVersion)},\n    ${JSON.stringify(code)},\n  ),\n`;\n  }\n  output += \"});\";\n  return output;\n}","map":{"version":3,"names":["fs","join","URL","fileURLToPath","minify","transformSync","presetTypescript","gzipSync","IS_BABEL_8","HELPERS_FOLDER","import","meta","url","IGNORED_FILES","Set","generateHelpers","output","file","promises","readdir","sort","has","startsWith","helperName","split","isTs","endsWith","filePath","console","error","code","readFile","minVersionMatch","match","Error","minVersion","groups","includes","mangleFns","noMangleFns","configFile","babelrc","filename","presets","onlyRemoveTypeImports","optimizeConstEnums","plugins","visitor","ImportDeclaration","path","source","node","value","replace","FunctionDeclaration","leadingComments","find","c","name","id","push","ecma","mangle","keep_fnames","RegExp","compress","directives","passes","unsafe","unsafe_proto","length","JSON","stringify"],"sources":["C:/Users/chest/OneDrive/Documentos/GitHub/HackUPC/frontend/node_modules/@babel/helpers/scripts/generate-helpers.js"],"sourcesContent":["/* eslint-disable import/no-extraneous-dependencies */\nimport fs from \"fs\";\nimport { join } from \"path\";\nimport { URL, fileURLToPath } from \"url\";\nimport { minify } from \"terser\";\nimport { transformSync } from \"@babel/core\";\nimport presetTypescript from \"@babel/preset-typescript\";\nimport { gzipSync } from \"zlib\";\nimport { IS_BABEL_8 } from \"$repo-utils\";\n\nconst HELPERS_FOLDER = new URL(\"../src/helpers\", import.meta.url);\nconst IGNORED_FILES = new Set([\"package.json\"]);\n\nexport default async function generateHelpers() {\n  let output = `/*\n * This file is auto-generated! Do not modify it directly.\n * To re-generate run 'yarn gulp generate-runtime-helpers'\n */\n\nimport template from \"@babel/template\";\n\nfunction helper(minVersion: string, source: string) {\n  return Object.freeze({\n    minVersion,\n    ast: () => template.program.ast(source, { preserveComments: true }),\n  })\n}\n\nexport default Object.freeze({\n`;\n\n  for (const file of (await fs.promises.readdir(HELPERS_FOLDER)).sort()) {\n    if (IGNORED_FILES.has(file)) continue;\n    if (file.startsWith(\".\")) continue; // ignore e.g. vim swap files\n\n    const [helperName] = file.split(\".\");\n\n    const isTs = file.endsWith(\".ts\");\n\n    const filePath = join(fileURLToPath(HELPERS_FOLDER), file);\n    if (!file.endsWith(\".js\") && !isTs) {\n      console.error(\"ignoring\", filePath);\n      continue;\n    }\n\n    let code = await fs.promises.readFile(filePath, \"utf8\");\n    const minVersionMatch = code.match(\n      /^\\s*\\/\\*\\s*@minVersion\\s+(?<minVersion>\\S+)\\s*\\*\\/\\s*$/m\n    );\n    if (!minVersionMatch) {\n      throw new Error(`@minVersion number missing in ${filePath}`);\n    }\n    const { minVersion } = minVersionMatch.groups;\n\n    if (IS_BABEL_8() && code.includes(\"@onlyBabel7\")) {\n      continue;\n    }\n\n    const mangleFns = code.includes(\"@mangleFns\");\n    const noMangleFns = [];\n\n    code = transformSync(code, {\n      configFile: false,\n      babelrc: false,\n      filename: filePath,\n      presets: [\n        [\n          presetTypescript,\n          {\n            onlyRemoveTypeImports: true,\n            optimizeConstEnums: true,\n          },\n        ],\n      ],\n      plugins: [\n        /**\n         * @type {import(\"@babel/core\").PluginObj}\n         */\n        {\n          visitor: {\n            ImportDeclaration(path) {\n              const source = path.node.source;\n              source.value = source.value\n                .replace(/\\.ts$/, \"\")\n                .replace(/^\\.\\//, \"\");\n            },\n            FunctionDeclaration(path) {\n              if (\n                mangleFns &&\n                path.node.leadingComments?.find(c =>\n                  c.value.includes(\"@no-mangle\")\n                )\n              ) {\n                const name = path.node.id.name;\n                if (name) noMangleFns.push(name);\n              }\n            },\n          },\n        },\n      ],\n    }).code;\n    code = (\n      await minify(code, {\n        ecma: 5,\n        mangle: {\n          keep_fnames: mangleFns ? new RegExp(noMangleFns.join(\"|\")) : true,\n        },\n        // The _typeof helper has a custom directive that we must keep\n        compress: {\n          directives: false,\n          passes: 10,\n          unsafe: true,\n          unsafe_proto: true,\n        },\n      })\n    ).code;\n\n    output += `\\\n  // size: ${code.length}, gzip size: ${gzipSync(code).length}\n  ${JSON.stringify(helperName)}: helper(\n    ${JSON.stringify(minVersion)},\n    ${JSON.stringify(code)},\n  ),\n`;\n  }\n\n  output += \"});\";\n  return output;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}