{"ast":null,"code":"'use strict';\n\nvar test = require('tape');\nvar isArray = require('isarray');\nvar every = require('array.prototype.every');\nvar availableTypedArrays = require('../');\ntest('available typed arrays', function (t) {\n  t.equal(typeof availableTypedArrays, 'function', 'is a function');\n  var arrays = availableTypedArrays();\n  t.equal(isArray(arrays), true, 'returns an array');\n  t.equal(every(arrays, function (array) {\n    return typeof array === 'string';\n  }), true, 'contains only strings');\n  t.end();\n});","map":{"version":3,"names":["test","require","isArray","every","availableTypedArrays","t","equal","arrays","array","end"],"sources":["C:/Users/chest/OneDrive/Documentos/GitHub/HackUPC/frontend/node_modules/available-typed-arrays/test/index.js"],"sourcesContent":["'use strict';\n\nvar test = require('tape');\nvar isArray = require('isarray');\nvar every = require('array.prototype.every');\n\nvar availableTypedArrays = require('../');\n\ntest('available typed arrays', function (t) {\n\tt.equal(typeof availableTypedArrays, 'function', 'is a function');\n\n\tvar arrays = availableTypedArrays();\n\tt.equal(isArray(arrays), true, 'returns an array');\n\n\tt.equal(every(arrays, function (array) { return typeof array === 'string'; }), true, 'contains only strings');\n\n\tt.end();\n});\n"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,IAAI,GAAGC,OAAO,CAAC,MAAM,CAAC;AAC1B,IAAIC,OAAO,GAAGD,OAAO,CAAC,SAAS,CAAC;AAChC,IAAIE,KAAK,GAAGF,OAAO,CAAC,uBAAuB,CAAC;AAE5C,IAAIG,oBAAoB,GAAGH,OAAO,CAAC,KAAK,CAAC;AAEzCD,IAAI,CAAC,wBAAwB,EAAE,UAAUK,CAAC,EAAE;EAC3CA,CAAC,CAACC,KAAK,CAAC,OAAOF,oBAAoB,EAAE,UAAU,EAAE,eAAe,CAAC;EAEjE,IAAIG,MAAM,GAAGH,oBAAoB,CAAC,CAAC;EACnCC,CAAC,CAACC,KAAK,CAACJ,OAAO,CAACK,MAAM,CAAC,EAAE,IAAI,EAAE,kBAAkB,CAAC;EAElDF,CAAC,CAACC,KAAK,CAACH,KAAK,CAACI,MAAM,EAAE,UAAUC,KAAK,EAAE;IAAE,OAAO,OAAOA,KAAK,KAAK,QAAQ;EAAE,CAAC,CAAC,EAAE,IAAI,EAAE,uBAAuB,CAAC;EAE7GH,CAAC,CAACI,GAAG,CAAC,CAAC;AACR,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}