{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst utils_1 = require(\"@typescript-eslint/utils\");\nconst util = __importStar(require(\"../util\"));\nexports.default = util.createRule({\n  name: 'parameter-properties',\n  meta: {\n    type: 'problem',\n    docs: {\n      description: 'Require or disallow parameter properties in class constructors',\n      recommended: false\n    },\n    messages: {\n      preferClassProperty: 'Property {{parameter}} should be declared as a class property.',\n      preferParameterProperty: 'Property {{parameter}} should be declared as a parameter property.'\n    },\n    schema: {\n      $defs: {\n        modifier: {\n          enum: ['readonly', 'private', 'protected', 'public', 'private readonly', 'protected readonly', 'public readonly']\n        }\n      },\n      prefixItems: [{\n        type: 'object',\n        properties: {\n          allow: {\n            type: 'array',\n            items: {\n              $ref: '#/$defs/modifier'\n            },\n            minItems: 1\n          },\n          prefer: {\n            enum: ['class-property', 'parameter-property']\n          }\n        },\n        additionalProperties: false\n      }],\n      type: 'array'\n    }\n  },\n  defaultOptions: [{\n    allow: [],\n    prefer: 'class-property'\n  }],\n  create(context, [{\n    allow = [],\n    prefer = 'class-property'\n  }]) {\n    /**\n     * Gets the modifiers of `node`.\n     * @param node the node to be inspected.\n     */\n    function getModifiers(node) {\n      const modifiers = [];\n      if (node.accessibility) {\n        modifiers.push(node.accessibility);\n      }\n      if (node.readonly) {\n        modifiers.push('readonly');\n      }\n      return modifiers.filter(Boolean).join(' ');\n    }\n    if (prefer === 'class-property') {\n      return {\n        TSParameterProperty(node) {\n          const modifiers = getModifiers(node);\n          if (!allow.includes(modifiers)) {\n            // HAS to be an identifier or assignment or TSC will throw\n            if (node.parameter.type !== utils_1.AST_NODE_TYPES.Identifier && node.parameter.type !== utils_1.AST_NODE_TYPES.AssignmentPattern) {\n              return;\n            }\n            const name = node.parameter.type === utils_1.AST_NODE_TYPES.Identifier ? node.parameter.name :\n            // has to be an Identifier or TSC will throw an error\n            node.parameter.left.name;\n            context.report({\n              node,\n              messageId: 'preferClassProperty',\n              data: {\n                parameter: name\n              }\n            });\n          }\n        }\n      };\n    }\n    const propertyNodesByNameStack = [];\n    function getNodesByName(name) {\n      const propertyNodesByName = propertyNodesByNameStack[propertyNodesByNameStack.length - 1];\n      const existing = propertyNodesByName.get(name);\n      if (existing) {\n        return existing;\n      }\n      const created = {};\n      propertyNodesByName.set(name, created);\n      return created;\n    }\n    const sourceCode = context.getSourceCode();\n    function typeAnnotationsMatch(classProperty, constructorParameter) {\n      if (!classProperty.typeAnnotation || !constructorParameter.typeAnnotation) {\n        return classProperty.typeAnnotation === constructorParameter.typeAnnotation;\n      }\n      return sourceCode.getText(classProperty.typeAnnotation) === sourceCode.getText(constructorParameter.typeAnnotation);\n    }\n    return {\n      'ClassDeclaration, ClassExpression'() {\n        propertyNodesByNameStack.push(new Map());\n      },\n      ':matches(ClassDeclaration, ClassExpression):exit'() {\n        const propertyNodesByName = propertyNodesByNameStack.pop();\n        for (const [name, nodes] of propertyNodesByName) {\n          if (nodes.classProperty && nodes.constructorAssignment && nodes.constructorParameter && typeAnnotationsMatch(nodes.classProperty, nodes.constructorParameter)) {\n            context.report({\n              data: {\n                parameter: name\n              },\n              messageId: 'preferParameterProperty',\n              node: nodes.classProperty\n            });\n          }\n        }\n      },\n      ClassBody(node) {\n        for (const element of node.body) {\n          if (element.type === utils_1.AST_NODE_TYPES.PropertyDefinition && element.key.type === utils_1.AST_NODE_TYPES.Identifier && !element.value && !allow.includes(getModifiers(element))) {\n            getNodesByName(element.key.name).classProperty = element;\n          }\n        }\n      },\n      'MethodDefinition[kind=\"constructor\"]'(node) {\n        var _a, _b;\n        for (const parameter of node.value.params) {\n          if (parameter.type === utils_1.AST_NODE_TYPES.Identifier) {\n            getNodesByName(parameter.name).constructorParameter = parameter;\n          }\n        }\n        for (const statement of (_b = (_a = node.value.body) === null || _a === void 0 ? void 0 : _a.body) !== null && _b !== void 0 ? _b : []) {\n          if (statement.type !== utils_1.AST_NODE_TYPES.ExpressionStatement || statement.expression.type !== utils_1.AST_NODE_TYPES.AssignmentExpression || statement.expression.left.type !== utils_1.AST_NODE_TYPES.MemberExpression || statement.expression.left.object.type !== utils_1.AST_NODE_TYPES.ThisExpression || statement.expression.left.property.type !== utils_1.AST_NODE_TYPES.Identifier || statement.expression.right.type !== utils_1.AST_NODE_TYPES.Identifier) {\n            break;\n          }\n          getNodesByName(statement.expression.right.name).constructorAssignment = statement.expression;\n        }\n      }\n    };\n  }\n});","map":{"version":3,"names":["utils_1","require","util","__importStar","exports","default","createRule","name","meta","type","docs","description","recommended","messages","preferClassProperty","preferParameterProperty","schema","$defs","modifier","enum","prefixItems","properties","allow","items","$ref","minItems","prefer","additionalProperties","defaultOptions","create","context","getModifiers","node","modifiers","accessibility","push","readonly","filter","Boolean","join","TSParameterProperty","includes","parameter","AST_NODE_TYPES","Identifier","AssignmentPattern","left","report","messageId","data","propertyNodesByNameStack","getNodesByName","propertyNodesByName","length","existing","get","created","set","sourceCode","getSourceCode","typeAnnotationsMatch","classProperty","constructorParameter","typeAnnotation","getText","ClassDeclaration, ClassExpression","Map",":matches(ClassDeclaration, ClassExpression):exit","pop","nodes","constructorAssignment","ClassBody","element","body","PropertyDefinition","key","value","MethodDefinition[kind=\"constructor\"]","params","statement","_b","_a","ExpressionStatement","expression","AssignmentExpression","MemberExpression","object","ThisExpression","property","right"],"sources":["../../src/rules/parameter-properties.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}