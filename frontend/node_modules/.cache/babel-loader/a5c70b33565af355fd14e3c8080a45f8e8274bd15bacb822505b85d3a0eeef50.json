{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.cosmiconfig = cosmiconfig;\nexports.cosmiconfigSync = cosmiconfigSync;\nexports.defaultLoaders = void 0;\nvar _os = _interopRequireDefault(require(\"os\"));\nvar _Explorer = require(\"./Explorer\");\nvar _ExplorerSync = require(\"./ExplorerSync\");\nvar _loaders = require(\"./loaders\");\nvar _types = require(\"./types\");\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\n// eslint-disable-next-line @typescript-eslint/explicit-function-return-type\nfunction cosmiconfig(moduleName, options = {}) {\n  const normalizedOptions = normalizeOptions(moduleName, options);\n  const explorer = new _Explorer.Explorer(normalizedOptions);\n  return {\n    search: explorer.search.bind(explorer),\n    load: explorer.load.bind(explorer),\n    clearLoadCache: explorer.clearLoadCache.bind(explorer),\n    clearSearchCache: explorer.clearSearchCache.bind(explorer),\n    clearCaches: explorer.clearCaches.bind(explorer)\n  };\n} // eslint-disable-next-line @typescript-eslint/explicit-function-return-type\n\nfunction cosmiconfigSync(moduleName, options = {}) {\n  const normalizedOptions = normalizeOptions(moduleName, options);\n  const explorerSync = new _ExplorerSync.ExplorerSync(normalizedOptions);\n  return {\n    search: explorerSync.searchSync.bind(explorerSync),\n    load: explorerSync.loadSync.bind(explorerSync),\n    clearLoadCache: explorerSync.clearLoadCache.bind(explorerSync),\n    clearSearchCache: explorerSync.clearSearchCache.bind(explorerSync),\n    clearCaches: explorerSync.clearCaches.bind(explorerSync)\n  };\n} // do not allow mutation of default loaders. Make sure it is set inside options\n\nconst defaultLoaders = Object.freeze({\n  '.cjs': _loaders.loaders.loadJs,\n  '.js': _loaders.loaders.loadJs,\n  '.json': _loaders.loaders.loadJson,\n  '.yaml': _loaders.loaders.loadYaml,\n  '.yml': _loaders.loaders.loadYaml,\n  noExt: _loaders.loaders.loadYaml\n});\nexports.defaultLoaders = defaultLoaders;\nconst identity = function identity(x) {\n  return x;\n};\nfunction normalizeOptions(moduleName, options) {\n  const defaults = {\n    packageProp: moduleName,\n    searchPlaces: ['package.json', `.${moduleName}rc`, `.${moduleName}rc.json`, `.${moduleName}rc.yaml`, `.${moduleName}rc.yml`, `.${moduleName}rc.js`, `.${moduleName}rc.cjs`, `.config/${moduleName}rc`, `.config/${moduleName}rc.json`, `.config/${moduleName}rc.yaml`, `.config/${moduleName}rc.yml`, `.config/${moduleName}rc.js`, `.config/${moduleName}rc.cjs`, `${moduleName}.config.js`, `${moduleName}.config.cjs`],\n    ignoreEmptySearchPlaces: true,\n    stopDir: _os.default.homedir(),\n    cache: true,\n    transform: identity,\n    loaders: defaultLoaders\n  };\n  const normalizedOptions = {\n    ...defaults,\n    ...options,\n    loaders: {\n      ...defaults.loaders,\n      ...options.loaders\n    }\n  };\n  return normalizedOptions;\n}","map":{"version":3,"names":["_os","_interopRequireDefault","require","_Explorer","_ExplorerSync","_loaders","_types","cosmiconfig","moduleName","options","normalizedOptions","normalizeOptions","explorer","Explorer","search","bind","load","clearLoadCache","clearSearchCache","clearCaches","cosmiconfigSync","explorerSync","ExplorerSync","searchSync","loadSync","defaultLoaders","Object","freeze","loaders","loadJs","loadJson","loadYaml","noExt","identity","x","defaults","packageProp","searchPlaces","ignoreEmptySearchPlaces","stopDir","default","homedir","cache","transform"],"sources":["C:\\Users\\chest\\OneDrive\\Documentos\\GitHub\\HackUPC\\frontend\\node_modules\\cosmiconfig\\src\\index.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\nimport os from 'os';\nimport { Explorer } from './Explorer';\nimport { ExplorerSync } from './ExplorerSync';\nimport { loaders } from './loaders';\nimport {\n  Config,\n  CosmiconfigResult,\n  ExplorerOptions,\n  ExplorerOptionsSync,\n  Loaders,\n  LoadersSync,\n} from './types';\n\ntype LoaderResult = Config | null;\nexport type Loader =\n  | ((filepath: string, content: string) => Promise<LoaderResult>)\n  | LoaderSync;\nexport type LoaderSync = (filepath: string, content: string) => LoaderResult;\n\nexport type Transform =\n  | ((CosmiconfigResult: CosmiconfigResult) => Promise<CosmiconfigResult>)\n  | TransformSync;\n\nexport type TransformSync = (\n  CosmiconfigResult: CosmiconfigResult,\n) => CosmiconfigResult;\n\ninterface OptionsBase {\n  packageProp?: string | Array<string>;\n  searchPlaces?: Array<string>;\n  ignoreEmptySearchPlaces?: boolean;\n  stopDir?: string;\n  cache?: boolean;\n}\n\nexport interface Options extends OptionsBase {\n  loaders?: Loaders;\n  transform?: Transform;\n}\n\nexport interface OptionsSync extends OptionsBase {\n  loaders?: LoadersSync;\n  transform?: TransformSync;\n}\n\n// eslint-disable-next-line @typescript-eslint/explicit-function-return-type\nfunction cosmiconfig(moduleName: string, options: Options = {}) {\n  const normalizedOptions: ExplorerOptions = normalizeOptions(\n    moduleName,\n    options,\n  );\n\n  const explorer = new Explorer(normalizedOptions);\n\n  return {\n    search: explorer.search.bind(explorer),\n    load: explorer.load.bind(explorer),\n    clearLoadCache: explorer.clearLoadCache.bind(explorer),\n    clearSearchCache: explorer.clearSearchCache.bind(explorer),\n    clearCaches: explorer.clearCaches.bind(explorer),\n  } as const;\n}\n\n// eslint-disable-next-line @typescript-eslint/explicit-function-return-type\nfunction cosmiconfigSync(moduleName: string, options: OptionsSync = {}) {\n  const normalizedOptions: ExplorerOptionsSync = normalizeOptions(\n    moduleName,\n    options,\n  );\n\n  const explorerSync = new ExplorerSync(normalizedOptions);\n\n  return {\n    search: explorerSync.searchSync.bind(explorerSync),\n    load: explorerSync.loadSync.bind(explorerSync),\n    clearLoadCache: explorerSync.clearLoadCache.bind(explorerSync),\n    clearSearchCache: explorerSync.clearSearchCache.bind(explorerSync),\n    clearCaches: explorerSync.clearCaches.bind(explorerSync),\n  } as const;\n}\n\n// do not allow mutation of default loaders. Make sure it is set inside options\nconst defaultLoaders = Object.freeze({\n  '.cjs': loaders.loadJs,\n  '.js': loaders.loadJs,\n  '.json': loaders.loadJson,\n  '.yaml': loaders.loadYaml,\n  '.yml': loaders.loadYaml,\n  noExt: loaders.loadYaml,\n} as const);\n\nconst identity: TransformSync = function identity(x) {\n  return x;\n};\n\nfunction normalizeOptions(\n  moduleName: string,\n  options: OptionsSync,\n): ExplorerOptionsSync;\nfunction normalizeOptions(\n  moduleName: string,\n  options: Options,\n): ExplorerOptions;\nfunction normalizeOptions(\n  moduleName: string,\n  options: Options | OptionsSync,\n): ExplorerOptions | ExplorerOptionsSync {\n  const defaults: ExplorerOptions | ExplorerOptionsSync = {\n    packageProp: moduleName,\n    searchPlaces: [\n      'package.json',\n      `.${moduleName}rc`,\n      `.${moduleName}rc.json`,\n      `.${moduleName}rc.yaml`,\n      `.${moduleName}rc.yml`,\n      `.${moduleName}rc.js`,\n      `.${moduleName}rc.cjs`,\n      `.config/${moduleName}rc`,\n      `.config/${moduleName}rc.json`,\n      `.config/${moduleName}rc.yaml`,\n      `.config/${moduleName}rc.yml`,\n      `.config/${moduleName}rc.js`,\n      `.config/${moduleName}rc.cjs`,\n      `${moduleName}.config.js`,\n      `${moduleName}.config.cjs`,\n    ],\n    ignoreEmptySearchPlaces: true,\n    stopDir: os.homedir(),\n    cache: true,\n    transform: identity,\n    loaders: defaultLoaders,\n  };\n\n  const normalizedOptions: ExplorerOptions | ExplorerOptionsSync = {\n    ...defaults,\n    ...options,\n    loaders: {\n      ...defaults.loaders,\n      ...options.loaders,\n    },\n  };\n\n  return normalizedOptions;\n}\n\nexport { cosmiconfig, cosmiconfigSync, defaultLoaders };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}