{"ast":null,"code":"'use strict';\n\nvar arraySlice = require('../internals/array-slice');\nvar floor = Math.floor;\nvar sort = function (array, comparefn) {\n  var length = array.length;\n  if (length < 8) {\n    // insertion sort\n    var i = 1;\n    var element, j;\n    while (i < length) {\n      j = i;\n      element = array[i];\n      while (j && comparefn(array[j - 1], element) > 0) {\n        array[j] = array[--j];\n      }\n      if (j !== i++) array[j] = element;\n    }\n  } else {\n    // merge sort\n    var middle = floor(length / 2);\n    var left = sort(arraySlice(array, 0, middle), comparefn);\n    var right = sort(arraySlice(array, middle), comparefn);\n    var llength = left.length;\n    var rlength = right.length;\n    var lindex = 0;\n    var rindex = 0;\n    while (lindex < llength || rindex < rlength) {\n      array[lindex + rindex] = lindex < llength && rindex < rlength ? comparefn(left[lindex], right[rindex]) <= 0 ? left[lindex++] : right[rindex++] : lindex < llength ? left[lindex++] : right[rindex++];\n    }\n  }\n  return array;\n};\nmodule.exports = sort;","map":{"version":3,"names":["arraySlice","require","floor","Math","sort","array","comparefn","length","i","element","j","middle","left","right","llength","rlength","lindex","rindex","module","exports"],"sources":["C:/Users/chest/OneDrive/Documentos/GitHub/HackUPC/frontend/node_modules/core-js-pure/internals/array-sort.js"],"sourcesContent":["'use strict';\nvar arraySlice = require('../internals/array-slice');\n\nvar floor = Math.floor;\n\nvar sort = function (array, comparefn) {\n  var length = array.length;\n\n  if (length < 8) {\n    // insertion sort\n    var i = 1;\n    var element, j;\n\n    while (i < length) {\n      j = i;\n      element = array[i];\n      while (j && comparefn(array[j - 1], element) > 0) {\n        array[j] = array[--j];\n      }\n      if (j !== i++) array[j] = element;\n    }\n  } else {\n    // merge sort\n    var middle = floor(length / 2);\n    var left = sort(arraySlice(array, 0, middle), comparefn);\n    var right = sort(arraySlice(array, middle), comparefn);\n    var llength = left.length;\n    var rlength = right.length;\n    var lindex = 0;\n    var rindex = 0;\n\n    while (lindex < llength || rindex < rlength) {\n      array[lindex + rindex] = (lindex < llength && rindex < rlength)\n        ? comparefn(left[lindex], right[rindex]) <= 0 ? left[lindex++] : right[rindex++]\n        : lindex < llength ? left[lindex++] : right[rindex++];\n    }\n  }\n\n  return array;\n};\n\nmodule.exports = sort;\n"],"mappings":"AAAA,YAAY;;AACZ,IAAIA,UAAU,GAAGC,OAAO,CAAC,0BAA0B,CAAC;AAEpD,IAAIC,KAAK,GAAGC,IAAI,CAACD,KAAK;AAEtB,IAAIE,IAAI,GAAG,SAAAA,CAAUC,KAAK,EAAEC,SAAS,EAAE;EACrC,IAAIC,MAAM,GAAGF,KAAK,CAACE,MAAM;EAEzB,IAAIA,MAAM,GAAG,CAAC,EAAE;IACd;IACA,IAAIC,CAAC,GAAG,CAAC;IACT,IAAIC,OAAO,EAAEC,CAAC;IAEd,OAAOF,CAAC,GAAGD,MAAM,EAAE;MACjBG,CAAC,GAAGF,CAAC;MACLC,OAAO,GAAGJ,KAAK,CAACG,CAAC,CAAC;MAClB,OAAOE,CAAC,IAAIJ,SAAS,CAACD,KAAK,CAACK,CAAC,GAAG,CAAC,CAAC,EAAED,OAAO,CAAC,GAAG,CAAC,EAAE;QAChDJ,KAAK,CAACK,CAAC,CAAC,GAAGL,KAAK,CAAC,EAAEK,CAAC,CAAC;MACvB;MACA,IAAIA,CAAC,KAAKF,CAAC,EAAE,EAAEH,KAAK,CAACK,CAAC,CAAC,GAAGD,OAAO;IACnC;EACF,CAAC,MAAM;IACL;IACA,IAAIE,MAAM,GAAGT,KAAK,CAACK,MAAM,GAAG,CAAC,CAAC;IAC9B,IAAIK,IAAI,GAAGR,IAAI,CAACJ,UAAU,CAACK,KAAK,EAAE,CAAC,EAAEM,MAAM,CAAC,EAAEL,SAAS,CAAC;IACxD,IAAIO,KAAK,GAAGT,IAAI,CAACJ,UAAU,CAACK,KAAK,EAAEM,MAAM,CAAC,EAAEL,SAAS,CAAC;IACtD,IAAIQ,OAAO,GAAGF,IAAI,CAACL,MAAM;IACzB,IAAIQ,OAAO,GAAGF,KAAK,CAACN,MAAM;IAC1B,IAAIS,MAAM,GAAG,CAAC;IACd,IAAIC,MAAM,GAAG,CAAC;IAEd,OAAOD,MAAM,GAAGF,OAAO,IAAIG,MAAM,GAAGF,OAAO,EAAE;MAC3CV,KAAK,CAACW,MAAM,GAAGC,MAAM,CAAC,GAAID,MAAM,GAAGF,OAAO,IAAIG,MAAM,GAAGF,OAAO,GAC1DT,SAAS,CAACM,IAAI,CAACI,MAAM,CAAC,EAAEH,KAAK,CAACI,MAAM,CAAC,CAAC,IAAI,CAAC,GAAGL,IAAI,CAACI,MAAM,EAAE,CAAC,GAAGH,KAAK,CAACI,MAAM,EAAE,CAAC,GAC9ED,MAAM,GAAGF,OAAO,GAAGF,IAAI,CAACI,MAAM,EAAE,CAAC,GAAGH,KAAK,CAACI,MAAM,EAAE,CAAC;IACzD;EACF;EAEA,OAAOZ,KAAK;AACd,CAAC;AAEDa,MAAM,CAACC,OAAO,GAAGf,IAAI","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}