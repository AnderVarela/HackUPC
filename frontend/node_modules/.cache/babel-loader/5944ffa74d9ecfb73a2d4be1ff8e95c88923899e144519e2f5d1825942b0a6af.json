{"ast":null,"code":"\"use strict\";\n\nvar assert = require(\"@sinonjs/referee-sinon\").assert;\nvar sinon = require(\"@sinonjs/referee-sinon\").sinon;\nvar every = require(\"./every\");\ndescribe(\"util/core/every\", function () {\n  it(\"returns true when the callback function returns true for every element in an iterable\", function () {\n    var obj = [true, true, true, true];\n    var allTrue = every(obj, function (val) {\n      return val;\n    });\n    assert(allTrue);\n  });\n  it(\"returns false when the callback function returns false for any element in an iterable\", function () {\n    var obj = [true, true, true, false];\n    var result = every(obj, function (val) {\n      return val;\n    });\n    assert.isFalse(result);\n  });\n  it(\"calls the given callback once for each item in an iterable until it returns false\", function () {\n    var iterableOne = [true, true, true, true];\n    var iterableTwo = [true, true, false, true];\n    var callback = sinon.spy(function (val) {\n      return val;\n    });\n    every(iterableOne, callback);\n    assert.equals(callback.callCount, 4);\n    callback.resetHistory();\n    every(iterableTwo, callback);\n    assert.equals(callback.callCount, 3);\n  });\n});","map":{"version":3,"names":["assert","require","sinon","every","describe","it","obj","allTrue","val","result","isFalse","iterableOne","iterableTwo","callback","spy","equals","callCount","resetHistory"],"sources":["C:/Users/chest/OneDrive/Documentos/GitHub/HackUPC/frontend/node_modules/@sinonjs/commons/lib/every.test.js"],"sourcesContent":["\"use strict\";\n\nvar assert = require(\"@sinonjs/referee-sinon\").assert;\nvar sinon = require(\"@sinonjs/referee-sinon\").sinon;\nvar every = require(\"./every\");\n\ndescribe(\"util/core/every\", function () {\n    it(\"returns true when the callback function returns true for every element in an iterable\", function () {\n        var obj = [true, true, true, true];\n        var allTrue = every(obj, function (val) {\n            return val;\n        });\n\n        assert(allTrue);\n    });\n\n    it(\"returns false when the callback function returns false for any element in an iterable\", function () {\n        var obj = [true, true, true, false];\n        var result = every(obj, function (val) {\n            return val;\n        });\n\n        assert.isFalse(result);\n    });\n\n    it(\"calls the given callback once for each item in an iterable until it returns false\", function () {\n        var iterableOne = [true, true, true, true];\n        var iterableTwo = [true, true, false, true];\n        var callback = sinon.spy(function (val) {\n            return val;\n        });\n\n        every(iterableOne, callback);\n        assert.equals(callback.callCount, 4);\n\n        callback.resetHistory();\n\n        every(iterableTwo, callback);\n        assert.equals(callback.callCount, 3);\n    });\n});\n"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,MAAM,GAAGC,OAAO,CAAC,wBAAwB,CAAC,CAACD,MAAM;AACrD,IAAIE,KAAK,GAAGD,OAAO,CAAC,wBAAwB,CAAC,CAACC,KAAK;AACnD,IAAIC,KAAK,GAAGF,OAAO,CAAC,SAAS,CAAC;AAE9BG,QAAQ,CAAC,iBAAiB,EAAE,YAAY;EACpCC,EAAE,CAAC,uFAAuF,EAAE,YAAY;IACpG,IAAIC,GAAG,GAAG,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC;IAClC,IAAIC,OAAO,GAAGJ,KAAK,CAACG,GAAG,EAAE,UAAUE,GAAG,EAAE;MACpC,OAAOA,GAAG;IACd,CAAC,CAAC;IAEFR,MAAM,CAACO,OAAO,CAAC;EACnB,CAAC,CAAC;EAEFF,EAAE,CAAC,uFAAuF,EAAE,YAAY;IACpG,IAAIC,GAAG,GAAG,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,CAAC;IACnC,IAAIG,MAAM,GAAGN,KAAK,CAACG,GAAG,EAAE,UAAUE,GAAG,EAAE;MACnC,OAAOA,GAAG;IACd,CAAC,CAAC;IAEFR,MAAM,CAACU,OAAO,CAACD,MAAM,CAAC;EAC1B,CAAC,CAAC;EAEFJ,EAAE,CAAC,mFAAmF,EAAE,YAAY;IAChG,IAAIM,WAAW,GAAG,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC;IAC1C,IAAIC,WAAW,GAAG,CAAC,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,CAAC;IAC3C,IAAIC,QAAQ,GAAGX,KAAK,CAACY,GAAG,CAAC,UAAUN,GAAG,EAAE;MACpC,OAAOA,GAAG;IACd,CAAC,CAAC;IAEFL,KAAK,CAACQ,WAAW,EAAEE,QAAQ,CAAC;IAC5Bb,MAAM,CAACe,MAAM,CAACF,QAAQ,CAACG,SAAS,EAAE,CAAC,CAAC;IAEpCH,QAAQ,CAACI,YAAY,CAAC,CAAC;IAEvBd,KAAK,CAACS,WAAW,EAAEC,QAAQ,CAAC;IAC5Bb,MAAM,CAACe,MAAM,CAACF,QAAQ,CAACG,SAAS,EAAE,CAAC,CAAC;EACxC,CAAC,CAAC;AACN,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}