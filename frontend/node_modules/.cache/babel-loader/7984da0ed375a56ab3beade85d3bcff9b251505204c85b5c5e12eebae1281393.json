{"ast":null,"code":"/*\n * Copyright 2015, Yahoo Inc.\n * Copyrights licensed under the New BSD License.\n * See the accompanying LICENSE file for terms.\n */\nimport { __rest } from \"tslib\";\nimport * as React from 'react';\nimport useIntl from './useIntl';\nimport { shallowEqual } from '../utils';\nfunction areEqual(prevProps, nextProps) {\n  var values = prevProps.values,\n    otherProps = __rest(prevProps, [\"values\"]);\n  var nextValues = nextProps.values,\n    nextOtherProps = __rest(nextProps, [\"values\"]);\n  return shallowEqual(nextValues, values) && shallowEqual(otherProps, nextOtherProps);\n}\nfunction FormattedMessage(props) {\n  var intl = useIntl();\n  var formatMessage = intl.formatMessage,\n    _a = intl.textComponent,\n    Text = _a === void 0 ? React.Fragment : _a;\n  var id = props.id,\n    description = props.description,\n    defaultMessage = props.defaultMessage,\n    values = props.values,\n    children = props.children,\n    _b = props.tagName,\n    Component = _b === void 0 ? Text : _b,\n    ignoreTag = props.ignoreTag;\n  var descriptor = {\n    id: id,\n    description: description,\n    defaultMessage: defaultMessage\n  };\n  var nodes = formatMessage(descriptor, values, {\n    ignoreTag: ignoreTag\n  });\n  if (typeof children === 'function') {\n    return children(Array.isArray(nodes) ? nodes : [nodes]);\n  }\n  if (Component) {\n    return React.createElement(Component, null, React.Children.toArray(nodes));\n  }\n  return React.createElement(React.Fragment, null, nodes);\n}\nFormattedMessage.displayName = 'FormattedMessage';\nvar MemoizedFormattedMessage = React.memo(FormattedMessage, areEqual);\nMemoizedFormattedMessage.displayName = 'MemoizedFormattedMessage';\nexport default MemoizedFormattedMessage;","map":{"version":3,"names":["__rest","React","useIntl","shallowEqual","areEqual","prevProps","nextProps","values","otherProps","nextValues","nextOtherProps","FormattedMessage","props","intl","formatMessage","_a","textComponent","Text","Fragment","id","description","defaultMessage","children","_b","tagName","Component","ignoreTag","descriptor","nodes","Array","isArray","createElement","Children","toArray","displayName","MemoizedFormattedMessage","memo"],"sources":["C:/Users/chest/OneDrive/Documentos/GitHub/HackUPC/frontend/node_modules/react-intl/lib/src/components/message.js"],"sourcesContent":["/*\n * Copyright 2015, Yahoo Inc.\n * Copyrights licensed under the New BSD License.\n * See the accompanying LICENSE file for terms.\n */\nimport { __rest } from \"tslib\";\nimport * as React from 'react';\nimport useIntl from './useIntl';\nimport { shallowEqual } from '../utils';\nfunction areEqual(prevProps, nextProps) {\n    var values = prevProps.values, otherProps = __rest(prevProps, [\"values\"]);\n    var nextValues = nextProps.values, nextOtherProps = __rest(nextProps, [\"values\"]);\n    return (shallowEqual(nextValues, values) &&\n        shallowEqual(otherProps, nextOtherProps));\n}\nfunction FormattedMessage(props) {\n    var intl = useIntl();\n    var formatMessage = intl.formatMessage, _a = intl.textComponent, Text = _a === void 0 ? React.Fragment : _a;\n    var id = props.id, description = props.description, defaultMessage = props.defaultMessage, values = props.values, children = props.children, _b = props.tagName, Component = _b === void 0 ? Text : _b, ignoreTag = props.ignoreTag;\n    var descriptor = { id: id, description: description, defaultMessage: defaultMessage };\n    var nodes = formatMessage(descriptor, values, {\n        ignoreTag: ignoreTag,\n    });\n    if (typeof children === 'function') {\n        return children(Array.isArray(nodes) ? nodes : [nodes]);\n    }\n    if (Component) {\n        return React.createElement(Component, null, React.Children.toArray(nodes));\n    }\n    return React.createElement(React.Fragment, null, nodes);\n}\nFormattedMessage.displayName = 'FormattedMessage';\nvar MemoizedFormattedMessage = React.memo(FormattedMessage, areEqual);\nMemoizedFormattedMessage.displayName = 'MemoizedFormattedMessage';\nexport default MemoizedFormattedMessage;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA,SAASA,MAAM,QAAQ,OAAO;AAC9B,OAAO,KAAKC,KAAK,MAAM,OAAO;AAC9B,OAAOC,OAAO,MAAM,WAAW;AAC/B,SAASC,YAAY,QAAQ,UAAU;AACvC,SAASC,QAAQA,CAACC,SAAS,EAAEC,SAAS,EAAE;EACpC,IAAIC,MAAM,GAAGF,SAAS,CAACE,MAAM;IAAEC,UAAU,GAAGR,MAAM,CAACK,SAAS,EAAE,CAAC,QAAQ,CAAC,CAAC;EACzE,IAAII,UAAU,GAAGH,SAAS,CAACC,MAAM;IAAEG,cAAc,GAAGV,MAAM,CAACM,SAAS,EAAE,CAAC,QAAQ,CAAC,CAAC;EACjF,OAAQH,YAAY,CAACM,UAAU,EAAEF,MAAM,CAAC,IACpCJ,YAAY,CAACK,UAAU,EAAEE,cAAc,CAAC;AAChD;AACA,SAASC,gBAAgBA,CAACC,KAAK,EAAE;EAC7B,IAAIC,IAAI,GAAGX,OAAO,CAAC,CAAC;EACpB,IAAIY,aAAa,GAAGD,IAAI,CAACC,aAAa;IAAEC,EAAE,GAAGF,IAAI,CAACG,aAAa;IAAEC,IAAI,GAAGF,EAAE,KAAK,KAAK,CAAC,GAAGd,KAAK,CAACiB,QAAQ,GAAGH,EAAE;EAC3G,IAAII,EAAE,GAAGP,KAAK,CAACO,EAAE;IAAEC,WAAW,GAAGR,KAAK,CAACQ,WAAW;IAAEC,cAAc,GAAGT,KAAK,CAACS,cAAc;IAAEd,MAAM,GAAGK,KAAK,CAACL,MAAM;IAAEe,QAAQ,GAAGV,KAAK,CAACU,QAAQ;IAAEC,EAAE,GAAGX,KAAK,CAACY,OAAO;IAAEC,SAAS,GAAGF,EAAE,KAAK,KAAK,CAAC,GAAGN,IAAI,GAAGM,EAAE;IAAEG,SAAS,GAAGd,KAAK,CAACc,SAAS;EACnO,IAAIC,UAAU,GAAG;IAAER,EAAE,EAAEA,EAAE;IAAEC,WAAW,EAAEA,WAAW;IAAEC,cAAc,EAAEA;EAAe,CAAC;EACrF,IAAIO,KAAK,GAAGd,aAAa,CAACa,UAAU,EAAEpB,MAAM,EAAE;IAC1CmB,SAAS,EAAEA;EACf,CAAC,CAAC;EACF,IAAI,OAAOJ,QAAQ,KAAK,UAAU,EAAE;IAChC,OAAOA,QAAQ,CAACO,KAAK,CAACC,OAAO,CAACF,KAAK,CAAC,GAAGA,KAAK,GAAG,CAACA,KAAK,CAAC,CAAC;EAC3D;EACA,IAAIH,SAAS,EAAE;IACX,OAAOxB,KAAK,CAAC8B,aAAa,CAACN,SAAS,EAAE,IAAI,EAAExB,KAAK,CAAC+B,QAAQ,CAACC,OAAO,CAACL,KAAK,CAAC,CAAC;EAC9E;EACA,OAAO3B,KAAK,CAAC8B,aAAa,CAAC9B,KAAK,CAACiB,QAAQ,EAAE,IAAI,EAAEU,KAAK,CAAC;AAC3D;AACAjB,gBAAgB,CAACuB,WAAW,GAAG,kBAAkB;AACjD,IAAIC,wBAAwB,GAAGlC,KAAK,CAACmC,IAAI,CAACzB,gBAAgB,EAAEP,QAAQ,CAAC;AACrE+B,wBAAwB,CAACD,WAAW,GAAG,0BAA0B;AACjE,eAAeC,wBAAwB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}