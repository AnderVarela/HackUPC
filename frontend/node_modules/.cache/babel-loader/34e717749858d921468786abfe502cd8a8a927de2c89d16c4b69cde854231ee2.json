{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst tsutils = __importStar(require(\"tsutils\"));\nconst util = __importStar(require(\"../util\"));\nconst util_1 = require(\"../util\");\nexports.default = util.createRule({\n  name: 'no-unsafe-call',\n  meta: {\n    type: 'problem',\n    docs: {\n      description: 'Disallow calling a value with type `any`',\n      recommended: 'error',\n      requiresTypeChecking: true\n    },\n    messages: {\n      unsafeCall: 'Unsafe call of an `any` typed value.',\n      unsafeCallThis: ['Unsafe call of an `any` typed value. `this` is typed as `any`.', 'You can try to fix this by turning on the `noImplicitThis` compiler option, or adding a `this` parameter to the function.'].join('\\n'),\n      unsafeNew: 'Unsafe construction of an any type value.',\n      unsafeTemplateTag: 'Unsafe any typed template tag.'\n    },\n    schema: []\n  },\n  defaultOptions: [],\n  create(context) {\n    const {\n      program,\n      esTreeNodeToTSNodeMap\n    } = util.getParserServices(context);\n    const checker = program.getTypeChecker();\n    const compilerOptions = program.getCompilerOptions();\n    const isNoImplicitThis = tsutils.isStrictCompilerOptionEnabled(compilerOptions, 'noImplicitThis');\n    function checkCall(node, reportingNode, messageId) {\n      const tsNode = esTreeNodeToTSNodeMap.get(node);\n      const type = util.getConstrainedTypeAtLocation(checker, tsNode);\n      if (util.isTypeAnyType(type)) {\n        if (!isNoImplicitThis) {\n          // `this()` or `this.foo()` or `this.foo[bar]()`\n          const thisExpression = (0, util_1.getThisExpression)(node);\n          if (thisExpression && util.isTypeAnyType(util.getConstrainedTypeAtLocation(checker, esTreeNodeToTSNodeMap.get(thisExpression)))) {\n            messageId = 'unsafeCallThis';\n          }\n        }\n        context.report({\n          node: reportingNode,\n          messageId: messageId\n        });\n      }\n    }\n    return {\n      'CallExpression > *.callee'(node) {\n        checkCall(node, node, 'unsafeCall');\n      },\n      NewExpression(node) {\n        checkCall(node.callee, node, 'unsafeNew');\n      },\n      'TaggedTemplateExpression > *.tag'(node) {\n        checkCall(node, node, 'unsafeTemplateTag');\n      }\n    };\n  }\n});","map":{"version":3,"names":["tsutils","__importStar","require","util","util_1","exports","default","createRule","name","meta","type","docs","description","recommended","requiresTypeChecking","messages","unsafeCall","unsafeCallThis","join","unsafeNew","unsafeTemplateTag","schema","defaultOptions","create","context","program","esTreeNodeToTSNodeMap","getParserServices","checker","getTypeChecker","compilerOptions","getCompilerOptions","isNoImplicitThis","isStrictCompilerOptionEnabled","checkCall","node","reportingNode","messageId","tsNode","get","getConstrainedTypeAtLocation","isTypeAnyType","thisExpression","getThisExpression","report","CallExpression > *.callee","NewExpression","callee","TaggedTemplateExpression > *.tag"],"sources":["../../src/rules/no-unsafe-call.ts"],"sourcesContent":[null],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,MAAAA,OAAA,GAAAC,YAAA,CAAAC,OAAA;AAEA,MAAAC,IAAA,GAAAF,YAAA,CAAAC,OAAA;AACA,MAAAE,MAAA,GAAAF,OAAA;AAQAG,OAAA,CAAAC,OAAA,GAAeH,IAAI,CAACI,UAAU,CAAiB;EAC7CC,IAAI,EAAE,gBAAgB;EACtBC,IAAI,EAAE;IACJC,IAAI,EAAE,SAAS;IACfC,IAAI,EAAE;MACJC,WAAW,EAAE,0CAA0C;MACvDC,WAAW,EAAE,OAAO;MACpBC,oBAAoB,EAAE;KACvB;IACDC,QAAQ,EAAE;MACRC,UAAU,EAAE,sCAAsC;MAClDC,cAAc,EAAE,CACd,gEAAgE,EAChE,2HAA2H,CAC5H,CAACC,IAAI,CAAC,IAAI,CAAC;MACZC,SAAS,EAAE,2CAA2C;MACtDC,iBAAiB,EAAE;KACpB;IACDC,MAAM,EAAE;GACT;EACDC,cAAc,EAAE,EAAE;EAClBC,MAAMA,CAACC,OAAO;IACZ,MAAM;MAAEC,OAAO;MAAEC;IAAqB,CAAE,GAAGvB,IAAI,CAACwB,iBAAiB,CAACH,OAAO,CAAC;IAC1E,MAAMI,OAAO,GAAGH,OAAO,CAACI,cAAc,EAAE;IACxC,MAAMC,eAAe,GAAGL,OAAO,CAACM,kBAAkB,EAAE;IACpD,MAAMC,gBAAgB,GAAGhC,OAAO,CAACiC,6BAA6B,CAC5DH,eAAe,EACf,gBAAgB,CACjB;IAED,SAASI,SAASA,CAChBC,IAAmB,EACnBC,aAA4B,EAC5BC,SAAqB;MAErB,MAAMC,MAAM,GAAGZ,qBAAqB,CAACa,GAAG,CAACJ,IAAI,CAAC;MAC9C,MAAMzB,IAAI,GAAGP,IAAI,CAACqC,4BAA4B,CAACZ,OAAO,EAAEU,MAAM,CAAC;MAE/D,IAAInC,IAAI,CAACsC,aAAa,CAAC/B,IAAI,CAAC,EAAE;QAC5B,IAAI,CAACsB,gBAAgB,EAAE;UACrB;UACA,MAAMU,cAAc,GAAG,IAAAtC,MAAA,CAAAuC,iBAAiB,EAACR,IAAI,CAAC;UAC9C,IACEO,cAAc,IACdvC,IAAI,CAACsC,aAAa,CAChBtC,IAAI,CAACqC,4BAA4B,CAC/BZ,OAAO,EACPF,qBAAqB,CAACa,GAAG,CAACG,cAAc,CAAC,CAC1C,CACF,EACD;YACAL,SAAS,GAAG,gBAAgB;;;QAGhCb,OAAO,CAACoB,MAAM,CAAC;UACbT,IAAI,EAAEC,aAAa;UACnBC,SAAS,EAAEA;SACZ,CAAC;;IAEN;IAEA,OAAO;MACL,2BAA2BQ,CACzBV,IAAuC;QAEvCD,SAAS,CAACC,IAAI,EAAEA,IAAI,EAAE,YAAY,CAAC;MACrC,CAAC;MACDW,aAAaA,CAACX,IAAI;QAChBD,SAAS,CAACC,IAAI,CAACY,MAAM,EAAEZ,IAAI,EAAE,WAAW,CAAC;MAC3C,CAAC;MACD,kCAAkCa,CAACb,IAAmB;QACpDD,SAAS,CAACC,IAAI,EAAEA,IAAI,EAAE,mBAAmB,CAAC;MAC5C;KACD;EACH;CACD,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}