{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.simpleTraverse = void 0;\nconst visitor_keys_1 = require(\"@typescript-eslint/visitor-keys\");\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction isValidNode(x) {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  return x != null && typeof x === 'object' && typeof x.type === 'string';\n}\nfunction getVisitorKeysForNode(allVisitorKeys, node) {\n  const keys = allVisitorKeys[node.type];\n  return keys !== null && keys !== void 0 ? keys : [];\n}\nclass SimpleTraverser {\n  constructor(selectors, setParentPointers = false) {\n    this.allVisitorKeys = visitor_keys_1.visitorKeys;\n    this.selectors = selectors;\n    this.setParentPointers = setParentPointers;\n  }\n  traverse(node, parent) {\n    if (!isValidNode(node)) {\n      return;\n    }\n    if (this.setParentPointers) {\n      node.parent = parent;\n    }\n    if ('enter' in this.selectors) {\n      this.selectors.enter(node, parent);\n    } else if (node.type in this.selectors) {\n      this.selectors[node.type](node, parent);\n    }\n    const keys = getVisitorKeysForNode(this.allVisitorKeys, node);\n    if (keys.length < 1) {\n      return;\n    }\n    for (const key of keys) {\n      const childOrChildren = node[key];\n      if (Array.isArray(childOrChildren)) {\n        for (const child of childOrChildren) {\n          this.traverse(child, node);\n        }\n      } else {\n        this.traverse(childOrChildren, node);\n      }\n    }\n  }\n}\nfunction simpleTraverse(startingNode, options, setParentPointers = false) {\n  new SimpleTraverser(options, setParentPointers).traverse(startingNode, undefined);\n}\nexports.simpleTraverse = simpleTraverse;","map":{"version":3,"names":["visitor_keys_1","require","isValidNode","x","type","getVisitorKeysForNode","allVisitorKeys","node","keys","SimpleTraverser","constructor","selectors","setParentPointers","visitorKeys","traverse","parent","enter","length","key","childOrChildren","Array","isArray","child","simpleTraverse","startingNode","options","undefined","exports"],"sources":["../src/simple-traverse.ts"],"sourcesContent":[null],"mappings":";;;;;;AAAA,MAAAA,cAAA,GAAAC,OAAA;AAIA;AACA,SAASC,WAAWA,CAACC,CAAM;EACzB;EACA,OAAOA,CAAC,IAAI,IAAI,IAAI,OAAOA,CAAC,KAAK,QAAQ,IAAI,OAAOA,CAAC,CAACC,IAAI,KAAK,QAAQ;AACzE;AAEA,SAASC,qBAAqBA,CAC5BC,cAAkC,EAClCC,IAAmB;EAEnB,MAAMC,IAAI,GAAGF,cAAc,CAACC,IAAI,CAACH,IAAI,CAAC;EACtC,OAAQI,IAAI,aAAJA,IAAI,cAAJA,IAAI,GAAI,EAAE;AACpB;AAaA,MAAMC,eAAe;EAKnBC,YAAYC,SAAgC,EAAEC,iBAAiB,GAAG,KAAK;IAJtD,KAAAN,cAAc,GAAGN,cAAA,CAAAa,WAAW;IAK3C,IAAI,CAACF,SAAS,GAAGA,SAAS;IAC1B,IAAI,CAACC,iBAAiB,GAAGA,iBAAiB;EAC5C;EAEAE,QAAQA,CAACP,IAAa,EAAEQ,MAAiC;IACvD,IAAI,CAACb,WAAW,CAACK,IAAI,CAAC,EAAE;MACtB;;IAGF,IAAI,IAAI,CAACK,iBAAiB,EAAE;MAC1BL,IAAI,CAACQ,MAAM,GAAGA,MAAM;;IAGtB,IAAI,OAAO,IAAI,IAAI,CAACJ,SAAS,EAAE;MAC7B,IAAI,CAACA,SAAS,CAACK,KAAK,CAACT,IAAI,EAAEQ,MAAM,CAAC;KACnC,MAAM,IAAIR,IAAI,CAACH,IAAI,IAAI,IAAI,CAACO,SAAS,EAAE;MACtC,IAAI,CAACA,SAAS,CAACJ,IAAI,CAACH,IAAI,CAAC,CAACG,IAAI,EAAEQ,MAAM,CAAC;;IAGzC,MAAMP,IAAI,GAAGH,qBAAqB,CAAC,IAAI,CAACC,cAAc,EAAEC,IAAI,CAAC;IAC7D,IAAIC,IAAI,CAACS,MAAM,GAAG,CAAC,EAAE;MACnB;;IAGF,KAAK,MAAMC,GAAG,IAAIV,IAAI,EAAE;MACtB,MAAMW,eAAe,GAAGZ,IAAI,CAACW,GAAG,CAAC;MAEjC,IAAIE,KAAK,CAACC,OAAO,CAACF,eAAe,CAAC,EAAE;QAClC,KAAK,MAAMG,KAAK,IAAIH,eAAe,EAAE;UACnC,IAAI,CAACL,QAAQ,CAACQ,KAAK,EAAEf,IAAI,CAAC;;OAE7B,MAAM;QACL,IAAI,CAACO,QAAQ,CAACK,eAAe,EAAEZ,IAAI,CAAC;;;EAG1C;;AAGF,SAAgBgB,cAAcA,CAC5BC,YAA2B,EAC3BC,OAA8B,EAC9Bb,iBAAiB,GAAG,KAAK;EAEzB,IAAIH,eAAe,CAACgB,OAAO,EAAEb,iBAAiB,CAAC,CAACE,QAAQ,CACtDU,YAAY,EACZE,SAAS,CACV;AACH;AATAC,OAAA,CAAAJ,cAAA,GAAAA,cAAA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}