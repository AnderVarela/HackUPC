{"ast":null,"code":"/**\n * Copyright 2020 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *     http://www.apache.org/licenses/LICENSE-2.0\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ndescribe(\"omt: use import.meta.url in Worker constructor\", function () {\n  const runner = \"/base/tests/fixtures/import-meta-worker/build/runner.html\";\n  beforeEach(function () {\n    this.ifr = document.createElement(\"iframe\");\n    document.body.append(this.ifr);\n  });\n  afterEach(function () {\n    this.ifr.remove();\n  });\n  it(\"loads itself as a module\", function (done) {\n    window.addEventListener(\"message\", function l(ev) {\n      if (ev.data === \"a\") {\n        window.removeEventListener(\"message\", l);\n        done();\n      } else {\n        done(`Unexpected message! ${ev.data}`);\n      }\n    });\n    this.ifr.src = runner;\n  });\n});","map":{"version":3,"names":["describe","runner","beforeEach","ifr","document","createElement","body","append","afterEach","remove","it","done","window","addEventListener","l","ev","data","removeEventListener","src"],"sources":["C:/Users/chest/OneDrive/Documentos/GitHub/HackUPC/frontend/node_modules/@surma/rollup-plugin-off-main-thread/tests/import-meta-worker.test.js"],"sourcesContent":["/**\n * Copyright 2020 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *     http://www.apache.org/licenses/LICENSE-2.0\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ndescribe(\"omt: use import.meta.url in Worker constructor\", function() {\n  const runner = \"/base/tests/fixtures/import-meta-worker/build/runner.html\";\n\n  beforeEach(function() {\n    this.ifr = document.createElement(\"iframe\");\n    document.body.append(this.ifr);\n  });\n\n  afterEach(function() {\n    this.ifr.remove();\n  });\n\n  it(\"loads itself as a module\", function(done) {\n    window.addEventListener(\"message\", function l(ev) {\n      if (ev.data === \"a\") {\n        window.removeEventListener(\"message\", l);\n        done();\n      } else {\n        done(`Unexpected message! ${ev.data}`);\n      }\n    });\n    this.ifr.src = runner;\n  });\n});\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAA,QAAQ,CAAC,gDAAgD,EAAE,YAAW;EACpE,MAAMC,MAAM,GAAG,2DAA2D;EAE1EC,UAAU,CAAC,YAAW;IACpB,IAAI,CAACC,GAAG,GAAGC,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC;IAC3CD,QAAQ,CAACE,IAAI,CAACC,MAAM,CAAC,IAAI,CAACJ,GAAG,CAAC;EAChC,CAAC,CAAC;EAEFK,SAAS,CAAC,YAAW;IACnB,IAAI,CAACL,GAAG,CAACM,MAAM,CAAC,CAAC;EACnB,CAAC,CAAC;EAEFC,EAAE,CAAC,0BAA0B,EAAE,UAASC,IAAI,EAAE;IAC5CC,MAAM,CAACC,gBAAgB,CAAC,SAAS,EAAE,SAASC,CAACA,CAACC,EAAE,EAAE;MAChD,IAAIA,EAAE,CAACC,IAAI,KAAK,GAAG,EAAE;QACnBJ,MAAM,CAACK,mBAAmB,CAAC,SAAS,EAAEH,CAAC,CAAC;QACxCH,IAAI,CAAC,CAAC;MACR,CAAC,MAAM;QACLA,IAAI,CAAE,uBAAsBI,EAAE,CAACC,IAAK,EAAC,CAAC;MACxC;IACF,CAAC,CAAC;IACF,IAAI,CAACb,GAAG,CAACe,GAAG,GAAGjB,MAAM;EACvB,CAAC,CAAC;AACJ,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}