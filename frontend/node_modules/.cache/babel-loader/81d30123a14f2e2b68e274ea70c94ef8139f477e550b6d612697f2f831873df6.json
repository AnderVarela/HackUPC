{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\n/**\n * Converts destructured parameters with default values to non-shorthand syntax.\n * This fixes the only Tagged Templates-related bug in ES Modules-supporting browsers (Safari 10 & 11).\n * Use this plugin instead of `@babel/plugin-transform-template-literals` when targeting ES Modules.\n *\n * @example\n *   // Bug 1: Safari 10/11 doesn't reliably return the same Strings value.\n *   // The value changes depending on invocation and function optimization state.\n *   function f() { return Object`` }\n *   f() === new f()  // false, should be true.\n *\n * @example\n *   // Bug 2: Safari 10/11 use the same cached strings value when the string parts are the same.\n *   // This behavior comes from an earlier version of the spec, and can cause tricky bugs.\n *   Object``===Object``  // true, should be false.\n *\n * Benchmarks: https://jsperf.com/compiled-tagged-template-performance\n */\nvar _default = ({\n  types: t\n}) => ({\n  name: \"transform-tagged-template-caching\",\n  visitor: {\n    TaggedTemplateExpression(path, state) {\n      // tagged templates we've already dealt with\n      let processed = state.get(\"processed\");\n      if (!processed) {\n        processed = new WeakSet();\n        state.set(\"processed\", processed);\n      }\n      if (processed.has(path.node)) return path.skip(); // Grab the expressions from the original tag.\n      //   tag`a${'hello'}`  // ['hello']\n\n      const expressions = path.node.quasi.expressions; // Create an identity function helper:\n      //   identity = t => t\n\n      let identity = state.get(\"identity\");\n      if (!identity) {\n        identity = path.scope.getProgramParent().generateDeclaredUidIdentifier(\"_\");\n        state.set(\"identity\", identity);\n        const binding = path.scope.getBinding(identity.name);\n        binding.path.get(\"init\").replaceWith(t.arrowFunctionExpression(\n        // re-use the helper identifier for compressability\n        [t.identifier(\"t\")], t.identifier(\"t\")));\n      } // Use the identity function helper to get a reference to the template's Strings.\n      // We replace all expressions with `0` ensure Strings has the same shape.\n      //   identity`a${0}`\n\n      const template = t.taggedTemplateExpression(t.cloneNode(identity), t.templateLiteral(path.node.quasi.quasis, expressions.map(() => t.numericLiteral(0))));\n      processed.add(template); // Install an inline cache at the callsite using the global variable:\n      //   _t || (_t = identity`a${0}`)\n\n      const ident = path.scope.getProgramParent().generateDeclaredUidIdentifier(\"t\");\n      path.scope.getBinding(ident.name).path.parent.kind = \"let\";\n      const inlineCache = t.logicalExpression(\"||\", ident, t.assignmentExpression(\"=\", t.cloneNode(ident), template)); // The original tag function becomes a plain function call.\n      // The expressions omitted from the cached Strings tag are directly applied as arguments.\n      //   tag(_t || (_t = Object`a${0}`), 'hello')\n\n      const node = t.callExpression(path.node.tag, [inlineCache, ...expressions]);\n      path.replaceWith(node);\n    }\n  }\n});\nexports.default = _default;\nmodule.exports = exports.default;","map":{"version":3,"names":["exports","__esModule","default","_default","types","t","name","visitor","TaggedTemplateExpression","path","state","processed","get","WeakSet","set","has","node","skip","expressions","quasi","identity","scope","getProgramParent","generateDeclaredUidIdentifier","binding","getBinding","replaceWith","arrowFunctionExpression","identifier","template","taggedTemplateExpression","cloneNode","templateLiteral","quasis","map","numericLiteral","add","ident","parent","kind","inlineCache","logicalExpression","assignmentExpression","callExpression","tag","module"],"sources":["C:/Users/chest/OneDrive/Documentos/GitHub/HackUPC/frontend/node_modules/@babel/preset-modules/lib/plugins/transform-tagged-template-caching/index.js"],"sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\n/**\n * Converts destructured parameters with default values to non-shorthand syntax.\n * This fixes the only Tagged Templates-related bug in ES Modules-supporting browsers (Safari 10 & 11).\n * Use this plugin instead of `@babel/plugin-transform-template-literals` when targeting ES Modules.\n *\n * @example\n *   // Bug 1: Safari 10/11 doesn't reliably return the same Strings value.\n *   // The value changes depending on invocation and function optimization state.\n *   function f() { return Object`` }\n *   f() === new f()  // false, should be true.\n *\n * @example\n *   // Bug 2: Safari 10/11 use the same cached strings value when the string parts are the same.\n *   // This behavior comes from an earlier version of the spec, and can cause tricky bugs.\n *   Object``===Object``  // true, should be false.\n *\n * Benchmarks: https://jsperf.com/compiled-tagged-template-performance\n */\nvar _default = ({\n  types: t\n}) => ({\n  name: \"transform-tagged-template-caching\",\n  visitor: {\n    TaggedTemplateExpression(path, state) {\n      // tagged templates we've already dealt with\n      let processed = state.get(\"processed\");\n\n      if (!processed) {\n        processed = new WeakSet();\n        state.set(\"processed\", processed);\n      }\n\n      if (processed.has(path.node)) return path.skip(); // Grab the expressions from the original tag.\n      //   tag`a${'hello'}`  // ['hello']\n\n      const expressions = path.node.quasi.expressions; // Create an identity function helper:\n      //   identity = t => t\n\n      let identity = state.get(\"identity\");\n\n      if (!identity) {\n        identity = path.scope.getProgramParent().generateDeclaredUidIdentifier(\"_\");\n        state.set(\"identity\", identity);\n        const binding = path.scope.getBinding(identity.name);\n        binding.path.get(\"init\").replaceWith(t.arrowFunctionExpression( // re-use the helper identifier for compressability\n        [t.identifier(\"t\")], t.identifier(\"t\")));\n      } // Use the identity function helper to get a reference to the template's Strings.\n      // We replace all expressions with `0` ensure Strings has the same shape.\n      //   identity`a${0}`\n\n\n      const template = t.taggedTemplateExpression(t.cloneNode(identity), t.templateLiteral(path.node.quasi.quasis, expressions.map(() => t.numericLiteral(0))));\n      processed.add(template); // Install an inline cache at the callsite using the global variable:\n      //   _t || (_t = identity`a${0}`)\n\n      const ident = path.scope.getProgramParent().generateDeclaredUidIdentifier(\"t\");\n      path.scope.getBinding(ident.name).path.parent.kind = \"let\";\n      const inlineCache = t.logicalExpression(\"||\", ident, t.assignmentExpression(\"=\", t.cloneNode(ident), template)); // The original tag function becomes a plain function call.\n      // The expressions omitted from the cached Strings tag are directly applied as arguments.\n      //   tag(_t || (_t = Object`a${0}`), 'hello')\n\n      const node = t.callExpression(path.node.tag, [inlineCache, ...expressions]);\n      path.replaceWith(node);\n    }\n\n  }\n});\n\nexports.default = _default;\nmodule.exports = exports.default;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}