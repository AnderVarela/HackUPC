{"ast":null,"code":"'use strict';\n\nvar $ = require('../internals/export');\nvar uncurryThis = require('../internals/function-uncurry-this');\n\n// eslint-disable-next-line es/no-typed-arrays -- safe\nvar getUint8 = uncurryThis(DataView.prototype.getUint8);\n\n// `DataView.prototype.getUint8Clamped` method\n// https://github.com/tc39/proposal-dataview-get-set-uint8clamped\n$({\n  target: 'DataView',\n  proto: true,\n  forced: true\n}, {\n  getUint8Clamped: function getUint8Clamped(byteOffset) {\n    return getUint8(this, byteOffset);\n  }\n});","map":{"version":3,"names":["$","require","uncurryThis","getUint8","DataView","prototype","target","proto","forced","getUint8Clamped","byteOffset"],"sources":["C:/Users/chest/OneDrive/Documentos/GitHub/HackUPC/frontend/node_modules/core-js/modules/esnext.data-view.get-uint8-clamped.js"],"sourcesContent":["'use strict';\nvar $ = require('../internals/export');\nvar uncurryThis = require('../internals/function-uncurry-this');\n\n// eslint-disable-next-line es/no-typed-arrays -- safe\nvar getUint8 = uncurryThis(DataView.prototype.getUint8);\n\n// `DataView.prototype.getUint8Clamped` method\n// https://github.com/tc39/proposal-dataview-get-set-uint8clamped\n$({ target: 'DataView', proto: true, forced: true }, {\n  getUint8Clamped: function getUint8Clamped(byteOffset) {\n    return getUint8(this, byteOffset);\n  }\n});\n"],"mappings":"AAAA,YAAY;;AACZ,IAAIA,CAAC,GAAGC,OAAO,CAAC,qBAAqB,CAAC;AACtC,IAAIC,WAAW,GAAGD,OAAO,CAAC,oCAAoC,CAAC;;AAE/D;AACA,IAAIE,QAAQ,GAAGD,WAAW,CAACE,QAAQ,CAACC,SAAS,CAACF,QAAQ,CAAC;;AAEvD;AACA;AACAH,CAAC,CAAC;EAAEM,MAAM,EAAE,UAAU;EAAEC,KAAK,EAAE,IAAI;EAAEC,MAAM,EAAE;AAAK,CAAC,EAAE;EACnDC,eAAe,EAAE,SAASA,eAAeA,CAACC,UAAU,EAAE;IACpD,OAAOP,QAAQ,CAAC,IAAI,EAAEO,UAAU,CAAC;EACnC;AACF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}