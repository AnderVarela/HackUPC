{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst utils_1 = require(\"@typescript-eslint/utils\");\nconst semver = __importStar(require(\"semver\"));\nconst ts = __importStar(require(\"typescript\"));\nconst util = __importStar(require(\"../util\"));\nconst is3dot9 = semver.satisfies(ts.version, `>= 3.9.0 || >= 3.9.1-rc || >= 3.9.0-beta`, {\n  includePrerelease: true\n});\nexports.default = util.createRule({\n  name: 'no-non-null-asserted-optional-chain',\n  meta: {\n    type: 'problem',\n    docs: {\n      description: 'Disallow non-null assertions after an optional chain expression',\n      recommended: 'error'\n    },\n    hasSuggestions: true,\n    messages: {\n      noNonNullOptionalChain: 'Optional chain expressions can return undefined by design - using a non-null assertion is unsafe and wrong.',\n      suggestRemovingNonNull: 'You should remove the non-null assertion.'\n    },\n    schema: []\n  },\n  defaultOptions: [],\n  create(context) {\n    // TS3.9 made a breaking change to how non-null works with optional chains.\n    // Pre-3.9,  `x?.y!.z` means `(x?.y).z` - i.e. it essentially scrubbed the optionality from the chain\n    // Post-3.9, `x?.y!.z` means `x?.y!.z`  - i.e. it just asserts that the property `y` is non-null, not the result of `x?.y`.\n    // This means that for > 3.9, x?.y!.z is valid!\n    //\n    // NOTE: these cases are still invalid for 3.9:\n    // - x?.y.z!\n    // - (x?.y)!.z\n    const baseSelectors = {\n      // non-nulling a wrapped chain will scrub all nulls introduced by the chain\n      // (x?.y)!\n      // (x?.())!\n      'TSNonNullExpression > ChainExpression'(node) {\n        // selector guarantees this assertion\n        const parent = node.parent;\n        context.report({\n          node,\n          messageId: 'noNonNullOptionalChain',\n          // use a suggestion instead of a fixer, because this can obviously break type checks\n          suggest: [{\n            messageId: 'suggestRemovingNonNull',\n            fix(fixer) {\n              return fixer.removeRange([parent.range[1] - 1, parent.range[1]]);\n            }\n          }]\n        });\n      },\n      // non-nulling at the end of a chain will scrub all nulls introduced by the chain\n      // x?.y!\n      // x?.()!\n      'ChainExpression > TSNonNullExpression'(node) {\n        context.report({\n          node,\n          messageId: 'noNonNullOptionalChain',\n          // use a suggestion instead of a fixer, because this can obviously break type checks\n          suggest: [{\n            messageId: 'suggestRemovingNonNull',\n            fix(fixer) {\n              return fixer.removeRange([node.range[1] - 1, node.range[1]]);\n            }\n          }]\n        });\n      }\n    };\n    if (is3dot9) {\n      return baseSelectors;\n    }\n    return Object.assign(Object.assign({}, baseSelectors), {\n      [[\n      // > :not(ChainExpression) because that case is handled by a previous selector\n      'MemberExpression > TSNonNullExpression.object > :not(ChainExpression)', 'CallExpression > TSNonNullExpression.callee > :not(ChainExpression)'].join(', ')](child) {\n        // selector guarantees this assertion\n        const node = child.parent;\n        let current = child;\n        while (current) {\n          switch (current.type) {\n            case utils_1.AST_NODE_TYPES.MemberExpression:\n              if (current.optional) {\n                // found an optional chain! stop traversing\n                break;\n              }\n              current = current.object;\n              continue;\n            case utils_1.AST_NODE_TYPES.CallExpression:\n              if (current.optional) {\n                // found an optional chain! stop traversing\n                break;\n              }\n              current = current.callee;\n              continue;\n            default:\n              // something that's not a ChainElement, which means this is not an optional chain we want to check\n              return;\n          }\n        }\n        context.report({\n          node,\n          messageId: 'noNonNullOptionalChain',\n          // use a suggestion instead of a fixer, because this can obviously break type checks\n          suggest: [{\n            messageId: 'suggestRemovingNonNull',\n            fix(fixer) {\n              return fixer.removeRange([node.range[1] - 1, node.range[1]]);\n            }\n          }]\n        });\n      }\n    });\n  }\n});","map":{"version":3,"names":["utils_1","require","semver","__importStar","ts","util","is3dot9","satisfies","version","includePrerelease","exports","default","createRule","name","meta","type","docs","description","recommended","hasSuggestions","messages","noNonNullOptionalChain","suggestRemovingNonNull","schema","defaultOptions","create","context","baseSelectors","TSNonNullExpression > ChainExpression","node","parent","report","messageId","suggest","fix","fixer","removeRange","range","ChainExpression > TSNonNullExpression","Object","assign","join","child","current","AST_NODE_TYPES","MemberExpression","optional","object","CallExpression","callee"],"sources":["../../src/rules/no-non-null-asserted-optional-chain.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}