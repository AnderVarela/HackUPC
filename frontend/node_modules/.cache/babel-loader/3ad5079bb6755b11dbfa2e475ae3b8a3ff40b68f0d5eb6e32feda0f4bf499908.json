{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst codegen_1 = require(\"ajv/dist/compile/codegen\");\nconst _util_1 = require(\"./_util\");\nconst error = {\n  message: ({\n    params: {\n      missingPattern\n    }\n  }) => (0, codegen_1.str)`should have property matching pattern '${missingPattern}'`,\n  params: ({\n    params: {\n      missingPattern\n    }\n  }) => (0, codegen_1._)`{missingPattern: ${missingPattern}}`\n};\nfunction getDef() {\n  return {\n    keyword: \"patternRequired\",\n    type: \"object\",\n    schemaType: \"array\",\n    error,\n    code(cxt) {\n      const {\n        gen,\n        schema,\n        data\n      } = cxt;\n      if (schema.length === 0) return;\n      const valid = gen.let(\"valid\", true);\n      for (const pat of schema) validateProperties(pat);\n      function validateProperties(pattern) {\n        const matched = gen.let(\"matched\", false);\n        gen.forIn(\"key\", data, key => {\n          gen.assign(matched, (0, codegen_1._)`${(0, _util_1.usePattern)(cxt, pattern)}.test(${key})`);\n          gen.if(matched, () => gen.break());\n        });\n        cxt.setParams({\n          missingPattern: pattern\n        });\n        gen.assign(valid, (0, codegen_1.and)(valid, matched));\n        cxt.pass(valid);\n      }\n    },\n    metaSchema: {\n      type: \"array\",\n      items: {\n        type: \"string\",\n        format: \"regex\"\n      },\n      uniqueItems: true\n    }\n  };\n}\nexports.default = getDef;\nmodule.exports = getDef;","map":{"version":3,"names":["codegen_1","require","_util_1","error","message","params","missingPattern","str","_","getDef","keyword","type","schemaType","code","cxt","gen","schema","data","length","valid","let","pat","validateProperties","pattern","matched","forIn","key","assign","usePattern","if","break","setParams","and","pass","metaSchema","items","format","uniqueItems","exports","default","module"],"sources":["C:\\Users\\chest\\OneDrive\\Documentos\\GitHub\\HackUPC\\frontend\\node_modules\\css-minimizer-webpack-plugin\\node_modules\\ajv-keywords\\src\\definitions\\patternRequired.ts"],"sourcesContent":["import type {CodeKeywordDefinition, KeywordCxt, KeywordErrorDefinition, ErrorObject} from \"ajv\"\nimport {_, str, and} from \"ajv/dist/compile/codegen\"\nimport {usePattern} from \"./_util\"\n\nexport type PatternRequiredError = ErrorObject<\"patternRequired\", {missingPattern: string}>\n\nconst error: KeywordErrorDefinition = {\n  message: ({params: {missingPattern}}) =>\n    str`should have property matching pattern '${missingPattern}'`,\n  params: ({params: {missingPattern}}) => _`{missingPattern: ${missingPattern}}`,\n}\n\nexport default function getDef(): CodeKeywordDefinition {\n  return {\n    keyword: \"patternRequired\",\n    type: \"object\",\n    schemaType: \"array\",\n    error,\n    code(cxt: KeywordCxt) {\n      const {gen, schema, data} = cxt\n      if (schema.length === 0) return\n      const valid = gen.let(\"valid\", true)\n      for (const pat of schema) validateProperties(pat)\n\n      function validateProperties(pattern: string): void {\n        const matched = gen.let(\"matched\", false)\n\n        gen.forIn(\"key\", data, (key) => {\n          gen.assign(matched, _`${usePattern(cxt, pattern)}.test(${key})`)\n          gen.if(matched, () => gen.break())\n        })\n\n        cxt.setParams({missingPattern: pattern})\n        gen.assign(valid, and(valid, matched))\n        cxt.pass(valid)\n      }\n    },\n    metaSchema: {\n      type: \"array\",\n      items: {type: \"string\", format: \"regex\"},\n      uniqueItems: true,\n    },\n  }\n}\n\nmodule.exports = getDef\n"],"mappings":";;;;;AACA,MAAAA,SAAA,GAAAC,OAAA;AACA,MAAAC,OAAA,GAAAD,OAAA;AAIA,MAAME,KAAK,GAA2B;EACpCC,OAAO,EAAEA,CAAC;IAACC,MAAM,EAAE;MAACC;IAAc;EAAC,CAAC,KAClC,IAAAN,SAAA,CAAAO,GAAG,2CAA0CD,cAAc,GAAG;EAChED,MAAM,EAAEA,CAAC;IAACA,MAAM,EAAE;MAACC;IAAc;EAAC,CAAC,KAAK,IAAAN,SAAA,CAAAQ,CAAC,qBAAoBF,cAAc;CAC5E;AAED,SAAwBG,MAAMA,CAAA;EAC5B,OAAO;IACLC,OAAO,EAAE,iBAAiB;IAC1BC,IAAI,EAAE,QAAQ;IACdC,UAAU,EAAE,OAAO;IACnBT,KAAK;IACLU,IAAIA,CAACC,GAAe;MAClB,MAAM;QAACC,GAAG;QAAEC,MAAM;QAAEC;MAAI,CAAC,GAAGH,GAAG;MAC/B,IAAIE,MAAM,CAACE,MAAM,KAAK,CAAC,EAAE;MACzB,MAAMC,KAAK,GAAGJ,GAAG,CAACK,GAAG,CAAC,OAAO,EAAE,IAAI,CAAC;MACpC,KAAK,MAAMC,GAAG,IAAIL,MAAM,EAAEM,kBAAkB,CAACD,GAAG,CAAC;MAEjD,SAASC,kBAAkBA,CAACC,OAAe;QACzC,MAAMC,OAAO,GAAGT,GAAG,CAACK,GAAG,CAAC,SAAS,EAAE,KAAK,CAAC;QAEzCL,GAAG,CAACU,KAAK,CAAC,KAAK,EAAER,IAAI,EAAGS,GAAG,IAAI;UAC7BX,GAAG,CAACY,MAAM,CAACH,OAAO,EAAE,IAAAxB,SAAA,CAAAQ,CAAC,IAAG,IAAAN,OAAA,CAAA0B,UAAU,EAACd,GAAG,EAAES,OAAO,CAAC,SAASG,GAAG,GAAG,CAAC;UAChEX,GAAG,CAACc,EAAE,CAACL,OAAO,EAAE,MAAMT,GAAG,CAACe,KAAK,EAAE,CAAC;QACpC,CAAC,CAAC;QAEFhB,GAAG,CAACiB,SAAS,CAAC;UAACzB,cAAc,EAAEiB;QAAO,CAAC,CAAC;QACxCR,GAAG,CAACY,MAAM,CAACR,KAAK,EAAE,IAAAnB,SAAA,CAAAgC,GAAG,EAACb,KAAK,EAAEK,OAAO,CAAC,CAAC;QACtCV,GAAG,CAACmB,IAAI,CAACd,KAAK,CAAC;MACjB;IACF,CAAC;IACDe,UAAU,EAAE;MACVvB,IAAI,EAAE,OAAO;MACbwB,KAAK,EAAE;QAACxB,IAAI,EAAE,QAAQ;QAAEyB,MAAM,EAAE;MAAO,CAAC;MACxCC,WAAW,EAAE;;GAEhB;AACH;AA/BAC,OAAA,CAAAC,OAAA,GAAA9B,MAAA;AAiCA+B,MAAM,CAACF,OAAO,GAAG7B,MAAM","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}