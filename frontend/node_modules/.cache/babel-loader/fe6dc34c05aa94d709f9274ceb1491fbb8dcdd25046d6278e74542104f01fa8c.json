{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport useIntl from './useIntl';\nvar DisplayName;\n(function (DisplayName) {\n  DisplayName[\"formatDate\"] = \"FormattedDate\";\n  DisplayName[\"formatTime\"] = \"FormattedTime\";\n  DisplayName[\"formatNumber\"] = \"FormattedNumber\";\n  DisplayName[\"formatList\"] = \"FormattedList\";\n  // Note that this DisplayName is the locale display name, not to be confused with\n  // the name of the enum, which is for React component display name in dev tools.\n  DisplayName[\"formatDisplayName\"] = \"FormattedDisplayName\";\n})(DisplayName || (DisplayName = {}));\nvar DisplayNameParts;\n(function (DisplayNameParts) {\n  DisplayNameParts[\"formatDate\"] = \"FormattedDateParts\";\n  DisplayNameParts[\"formatTime\"] = \"FormattedTimeParts\";\n  DisplayNameParts[\"formatNumber\"] = \"FormattedNumberParts\";\n  DisplayNameParts[\"formatList\"] = \"FormattedListParts\";\n})(DisplayNameParts || (DisplayNameParts = {}));\nexport var FormattedNumberParts = function (props) {\n  var intl = useIntl();\n  var value = props.value,\n    children = props.children,\n    formatProps = __rest(props, [\"value\", \"children\"]);\n  return children(intl.formatNumberToParts(value, formatProps));\n};\nFormattedNumberParts.displayName = 'FormattedNumberParts';\nexport var FormattedListParts = function (props) {\n  var intl = useIntl();\n  var value = props.value,\n    children = props.children,\n    formatProps = __rest(props, [\"value\", \"children\"]);\n  return children(intl.formatListToParts(value, formatProps));\n};\nFormattedNumberParts.displayName = 'FormattedNumberParts';\nexport function createFormattedDateTimePartsComponent(name) {\n  var ComponentParts = function (props) {\n    var intl = useIntl();\n    var value = props.value,\n      children = props.children,\n      formatProps = __rest(props, [\"value\", \"children\"]);\n    var date = typeof value === 'string' ? new Date(value || 0) : value;\n    var formattedParts = name === 'formatDate' ? intl.formatDateToParts(date, formatProps) : intl.formatTimeToParts(date, formatProps);\n    return children(formattedParts);\n  };\n  ComponentParts.displayName = DisplayNameParts[name];\n  return ComponentParts;\n}\nexport function createFormattedComponent(name) {\n  var Component = function (props) {\n    var intl = useIntl();\n    var value = props.value,\n      children = props.children,\n      formatProps = __rest(props\n      // TODO: fix TS type definition for localeMatcher upstream\n      , [\"value\", \"children\"]);\n    // TODO: fix TS type definition for localeMatcher upstream\n    var formattedValue = intl[name](value, formatProps);\n    if (typeof children === 'function') {\n      return children(formattedValue);\n    }\n    var Text = intl.textComponent || React.Fragment;\n    return React.createElement(Text, null, formattedValue);\n  };\n  Component.displayName = DisplayName[name];\n  return Component;\n}","map":{"version":3,"names":["__rest","React","useIntl","DisplayName","DisplayNameParts","FormattedNumberParts","props","intl","value","children","formatProps","formatNumberToParts","displayName","FormattedListParts","formatListToParts","createFormattedDateTimePartsComponent","name","ComponentParts","date","Date","formattedParts","formatDateToParts","formatTimeToParts","createFormattedComponent","Component","formattedValue","Text","textComponent","Fragment","createElement"],"sources":["C:/Users/chest/OneDrive/Documentos/GitHub/HackUPC/frontend/node_modules/react-intl/lib/src/components/createFormattedComponent.js"],"sourcesContent":["import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport useIntl from './useIntl';\nvar DisplayName;\n(function (DisplayName) {\n    DisplayName[\"formatDate\"] = \"FormattedDate\";\n    DisplayName[\"formatTime\"] = \"FormattedTime\";\n    DisplayName[\"formatNumber\"] = \"FormattedNumber\";\n    DisplayName[\"formatList\"] = \"FormattedList\";\n    // Note that this DisplayName is the locale display name, not to be confused with\n    // the name of the enum, which is for React component display name in dev tools.\n    DisplayName[\"formatDisplayName\"] = \"FormattedDisplayName\";\n})(DisplayName || (DisplayName = {}));\nvar DisplayNameParts;\n(function (DisplayNameParts) {\n    DisplayNameParts[\"formatDate\"] = \"FormattedDateParts\";\n    DisplayNameParts[\"formatTime\"] = \"FormattedTimeParts\";\n    DisplayNameParts[\"formatNumber\"] = \"FormattedNumberParts\";\n    DisplayNameParts[\"formatList\"] = \"FormattedListParts\";\n})(DisplayNameParts || (DisplayNameParts = {}));\nexport var FormattedNumberParts = function (props) {\n    var intl = useIntl();\n    var value = props.value, children = props.children, formatProps = __rest(props, [\"value\", \"children\"]);\n    return children(intl.formatNumberToParts(value, formatProps));\n};\nFormattedNumberParts.displayName = 'FormattedNumberParts';\nexport var FormattedListParts = function (props) {\n    var intl = useIntl();\n    var value = props.value, children = props.children, formatProps = __rest(props, [\"value\", \"children\"]);\n    return children(intl.formatListToParts(value, formatProps));\n};\nFormattedNumberParts.displayName = 'FormattedNumberParts';\nexport function createFormattedDateTimePartsComponent(name) {\n    var ComponentParts = function (props) {\n        var intl = useIntl();\n        var value = props.value, children = props.children, formatProps = __rest(props, [\"value\", \"children\"]);\n        var date = typeof value === 'string' ? new Date(value || 0) : value;\n        var formattedParts = name === 'formatDate'\n            ? intl.formatDateToParts(date, formatProps)\n            : intl.formatTimeToParts(date, formatProps);\n        return children(formattedParts);\n    };\n    ComponentParts.displayName = DisplayNameParts[name];\n    return ComponentParts;\n}\nexport function createFormattedComponent(name) {\n    var Component = function (props) {\n        var intl = useIntl();\n        var value = props.value, children = props.children, formatProps = __rest(props\n        // TODO: fix TS type definition for localeMatcher upstream\n        , [\"value\", \"children\"]);\n        // TODO: fix TS type definition for localeMatcher upstream\n        var formattedValue = intl[name](value, formatProps);\n        if (typeof children === 'function') {\n            return children(formattedValue);\n        }\n        var Text = intl.textComponent || React.Fragment;\n        return React.createElement(Text, null, formattedValue);\n    };\n    Component.displayName = DisplayName[name];\n    return Component;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}