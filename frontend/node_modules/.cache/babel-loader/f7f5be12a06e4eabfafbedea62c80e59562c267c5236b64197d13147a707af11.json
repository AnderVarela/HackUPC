{"ast":null,"code":"import { getMagnitude } from '../utils';\nimport { ComputeExponentForMagnitude } from './ComputeExponentForMagnitude';\nimport { FormatNumericToString } from './FormatNumericToString';\n/**\n * The abstract operation ComputeExponent computes an exponent (power of ten) by which to scale x\n * according to the number formatting settings. It handles cases such as 999 rounding up to 1000,\n * requiring a different exponent.\n *\n * NOT IN SPEC: it returns [exponent, magnitude].\n */\nexport function ComputeExponent(numberFormat, x, _a) {\n  var getInternalSlots = _a.getInternalSlots;\n  if (x === 0) {\n    return [0, 0];\n  }\n  if (x < 0) {\n    x = -x;\n  }\n  var magnitude = getMagnitude(x);\n  var exponent = ComputeExponentForMagnitude(numberFormat, magnitude, {\n    getInternalSlots: getInternalSlots\n  });\n  // Preserve more precision by doing multiplication when exponent is negative.\n  x = exponent < 0 ? x * Math.pow(10, -exponent) : x / Math.pow(10, exponent);\n  var formatNumberResult = FormatNumericToString(getInternalSlots(numberFormat), x);\n  if (formatNumberResult.roundedNumber === 0) {\n    return [exponent, magnitude];\n  }\n  var newMagnitude = getMagnitude(formatNumberResult.roundedNumber);\n  if (newMagnitude === magnitude - exponent) {\n    return [exponent, magnitude];\n  }\n  return [ComputeExponentForMagnitude(numberFormat, magnitude + 1, {\n    getInternalSlots: getInternalSlots\n  }), magnitude + 1];\n}","map":{"version":3,"names":["getMagnitude","ComputeExponentForMagnitude","FormatNumericToString","ComputeExponent","numberFormat","x","_a","getInternalSlots","magnitude","exponent","Math","pow","formatNumberResult","roundedNumber","newMagnitude"],"sources":["C:/Users/chest/OneDrive/Documentos/GitHub/HackUPC/frontend/node_modules/@formatjs/ecma402-abstract/lib/NumberFormat/ComputeExponent.js"],"sourcesContent":["import { getMagnitude } from '../utils';\nimport { ComputeExponentForMagnitude } from './ComputeExponentForMagnitude';\nimport { FormatNumericToString } from './FormatNumericToString';\n/**\n * The abstract operation ComputeExponent computes an exponent (power of ten) by which to scale x\n * according to the number formatting settings. It handles cases such as 999 rounding up to 1000,\n * requiring a different exponent.\n *\n * NOT IN SPEC: it returns [exponent, magnitude].\n */\nexport function ComputeExponent(numberFormat, x, _a) {\n    var getInternalSlots = _a.getInternalSlots;\n    if (x === 0) {\n        return [0, 0];\n    }\n    if (x < 0) {\n        x = -x;\n    }\n    var magnitude = getMagnitude(x);\n    var exponent = ComputeExponentForMagnitude(numberFormat, magnitude, {\n        getInternalSlots: getInternalSlots,\n    });\n    // Preserve more precision by doing multiplication when exponent is negative.\n    x = exponent < 0 ? x * Math.pow(10, -exponent) : x / Math.pow(10, exponent);\n    var formatNumberResult = FormatNumericToString(getInternalSlots(numberFormat), x);\n    if (formatNumberResult.roundedNumber === 0) {\n        return [exponent, magnitude];\n    }\n    var newMagnitude = getMagnitude(formatNumberResult.roundedNumber);\n    if (newMagnitude === magnitude - exponent) {\n        return [exponent, magnitude];\n    }\n    return [\n        ComputeExponentForMagnitude(numberFormat, magnitude + 1, {\n            getInternalSlots: getInternalSlots,\n        }),\n        magnitude + 1,\n    ];\n}\n"],"mappings":"AAAA,SAASA,YAAY,QAAQ,UAAU;AACvC,SAASC,2BAA2B,QAAQ,+BAA+B;AAC3E,SAASC,qBAAqB,QAAQ,yBAAyB;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,eAAeA,CAACC,YAAY,EAAEC,CAAC,EAAEC,EAAE,EAAE;EACjD,IAAIC,gBAAgB,GAAGD,EAAE,CAACC,gBAAgB;EAC1C,IAAIF,CAAC,KAAK,CAAC,EAAE;IACT,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC;EACjB;EACA,IAAIA,CAAC,GAAG,CAAC,EAAE;IACPA,CAAC,GAAG,CAACA,CAAC;EACV;EACA,IAAIG,SAAS,GAAGR,YAAY,CAACK,CAAC,CAAC;EAC/B,IAAII,QAAQ,GAAGR,2BAA2B,CAACG,YAAY,EAAEI,SAAS,EAAE;IAChED,gBAAgB,EAAEA;EACtB,CAAC,CAAC;EACF;EACAF,CAAC,GAAGI,QAAQ,GAAG,CAAC,GAAGJ,CAAC,GAAGK,IAAI,CAACC,GAAG,CAAC,EAAE,EAAE,CAACF,QAAQ,CAAC,GAAGJ,CAAC,GAAGK,IAAI,CAACC,GAAG,CAAC,EAAE,EAAEF,QAAQ,CAAC;EAC3E,IAAIG,kBAAkB,GAAGV,qBAAqB,CAACK,gBAAgB,CAACH,YAAY,CAAC,EAAEC,CAAC,CAAC;EACjF,IAAIO,kBAAkB,CAACC,aAAa,KAAK,CAAC,EAAE;IACxC,OAAO,CAACJ,QAAQ,EAAED,SAAS,CAAC;EAChC;EACA,IAAIM,YAAY,GAAGd,YAAY,CAACY,kBAAkB,CAACC,aAAa,CAAC;EACjE,IAAIC,YAAY,KAAKN,SAAS,GAAGC,QAAQ,EAAE;IACvC,OAAO,CAACA,QAAQ,EAAED,SAAS,CAAC;EAChC;EACA,OAAO,CACHP,2BAA2B,CAACG,YAAY,EAAEI,SAAS,GAAG,CAAC,EAAE;IACrDD,gBAAgB,EAAEA;EACtB,CAAC,CAAC,EACFC,SAAS,GAAG,CAAC,CAChB;AACL","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}