{"ast":null,"code":"\"use strict\";\n\nvar _a;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst utils_1 = require(\"@typescript-eslint/utils\");\nconst util_1 = require(\"../util\");\nconst getESLintCoreRule_1 = require(\"../util/getESLintCoreRule\");\nconst baseRule = (0, getESLintCoreRule_1.getESLintCoreRule)('no-invalid-this');\nexports.default = (0, util_1.createRule)({\n  name: 'no-invalid-this',\n  meta: {\n    type: 'suggestion',\n    docs: {\n      description: 'Disallow `this` keywords outside of classes or class-like objects',\n      recommended: false,\n      extendsBaseRule: true\n    },\n    // TODO: this rule has only had messages since v7.0 - remove this when we remove support for v6\n    messages: (_a = baseRule.meta.messages) !== null && _a !== void 0 ? _a : {\n      unexpectedThis: \"Unexpected 'this'.\"\n    },\n    hasSuggestions: baseRule.meta.hasSuggestions,\n    schema: baseRule.meta.schema\n  },\n  defaultOptions: [{\n    capIsConstructor: true\n  }],\n  create(context) {\n    const rules = baseRule.create(context);\n    /**\n     * Since function definitions can be nested we use a stack storing if \"this\" is valid in the current context.\n     *\n     * Example:\n     *\n     * function a(this: number) { // valid \"this\"\n     *     function b() {\n     *         console.log(this); // invalid \"this\"\n     *     }\n     * }\n     *\n     * When parsing the function declaration of \"a\" the stack will be: [true]\n     * When parsing the function declaration of \"b\" the stack will be: [true, false]\n     */\n    const thisIsValidStack = [];\n    return Object.assign(Object.assign({}, rules), {\n      PropertyDefinition() {\n        thisIsValidStack.push(true);\n      },\n      'PropertyDefinition:exit'() {\n        thisIsValidStack.pop();\n      },\n      FunctionDeclaration(node) {\n        var _a;\n        thisIsValidStack.push(node.params.some(param => param.type === utils_1.AST_NODE_TYPES.Identifier && param.name === 'this'));\n        // baseRule's work\n        (_a = rules.FunctionDeclaration) === null || _a === void 0 ? void 0 : _a.call(rules, node);\n      },\n      'FunctionDeclaration:exit'(node) {\n        var _a;\n        thisIsValidStack.pop();\n        // baseRule's work\n        (_a = rules['FunctionDeclaration:exit']) === null || _a === void 0 ? void 0 : _a.call(rules, node);\n      },\n      FunctionExpression(node) {\n        var _a;\n        thisIsValidStack.push(node.params.some(param => param.type === utils_1.AST_NODE_TYPES.Identifier && param.name === 'this'));\n        // baseRule's work\n        (_a = rules.FunctionExpression) === null || _a === void 0 ? void 0 : _a.call(rules, node);\n      },\n      'FunctionExpression:exit'(node) {\n        var _a;\n        thisIsValidStack.pop();\n        // baseRule's work\n        (_a = rules['FunctionExpression:exit']) === null || _a === void 0 ? void 0 : _a.call(rules, node);\n      },\n      ThisExpression(node) {\n        const thisIsValidHere = thisIsValidStack[thisIsValidStack.length - 1];\n        if (thisIsValidHere) {\n          return;\n        }\n        // baseRule's work\n        rules.ThisExpression(node);\n      }\n    });\n  }\n});","map":{"version":3,"names":["utils_1","require","util_1","getESLintCoreRule_1","baseRule","getESLintCoreRule","exports","default","createRule","name","meta","type","docs","description","recommended","extendsBaseRule","messages","_a","unexpectedThis","hasSuggestions","schema","defaultOptions","capIsConstructor","create","context","rules","thisIsValidStack","Object","assign","PropertyDefinition","push","PropertyDefinition:exit","pop","FunctionDeclaration","node","params","some","param","AST_NODE_TYPES","Identifier","call","FunctionDeclaration:exit","FunctionExpression","FunctionExpression:exit","ThisExpression","thisIsValidHere","length"],"sources":["../../src/rules/no-invalid-this.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}