{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.default = updateGlobalConfig;\nfunction _jestRegexUtil() {\n  const data = require('jest-regex-util');\n  _jestRegexUtil = function () {\n    return data;\n  };\n  return data;\n}\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nfunction updateGlobalConfig(globalConfig, options = {}) {\n  const newConfig = {\n    ...globalConfig\n  };\n  if (options.mode === 'watch') {\n    newConfig.watch = true;\n    newConfig.watchAll = false;\n  } else if (options.mode === 'watchAll') {\n    newConfig.watch = false;\n    newConfig.watchAll = true;\n  }\n  if (options.testNamePattern !== undefined) {\n    newConfig.testNamePattern = options.testNamePattern || '';\n  }\n  if (options.testPathPattern !== undefined) {\n    newConfig.testPathPattern = (0, _jestRegexUtil().replacePathSepForRegex)(options.testPathPattern) || '';\n  }\n  newConfig.onlyChanged = !newConfig.watchAll && !newConfig.testNamePattern && !newConfig.testPathPattern;\n  if (typeof options.bail === 'boolean') {\n    newConfig.bail = options.bail ? 1 : 0;\n  } else if (options.bail !== undefined) {\n    newConfig.bail = options.bail;\n  }\n  if (options.changedSince !== undefined) {\n    newConfig.changedSince = options.changedSince;\n  }\n  if (options.collectCoverage !== undefined) {\n    newConfig.collectCoverage = options.collectCoverage || false;\n  }\n  if (options.collectCoverageFrom !== undefined) {\n    newConfig.collectCoverageFrom = options.collectCoverageFrom;\n  }\n  if (options.collectCoverageOnlyFrom !== undefined) {\n    newConfig.collectCoverageOnlyFrom = options.collectCoverageOnlyFrom;\n  }\n  if (options.coverageDirectory !== undefined) {\n    newConfig.coverageDirectory = options.coverageDirectory;\n  }\n  if (options.coverageReporters !== undefined) {\n    newConfig.coverageReporters = options.coverageReporters;\n  }\n  if (options.findRelatedTests !== undefined) {\n    newConfig.findRelatedTests = options.findRelatedTests;\n  }\n  if (options.nonFlagArgs !== undefined) {\n    newConfig.nonFlagArgs = options.nonFlagArgs;\n  }\n  if (options.noSCM) {\n    newConfig.noSCM = true;\n  }\n  if (options.notify !== undefined) {\n    newConfig.notify = options.notify || false;\n  }\n  if (options.notifyMode !== undefined) {\n    newConfig.notifyMode = options.notifyMode;\n  }\n  if (options.onlyFailures !== undefined) {\n    newConfig.onlyFailures = options.onlyFailures || false;\n  }\n  if (options.passWithNoTests !== undefined) {\n    newConfig.passWithNoTests = true;\n  }\n  if (options.reporters !== undefined) {\n    newConfig.reporters = options.reporters;\n  }\n  if (options.updateSnapshot !== undefined) {\n    newConfig.updateSnapshot = options.updateSnapshot;\n  }\n  if (options.verbose !== undefined) {\n    newConfig.verbose = options.verbose || false;\n  }\n  return Object.freeze(newConfig);\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","default","updateGlobalConfig","_jestRegexUtil","data","require","globalConfig","options","newConfig","mode","watch","watchAll","testNamePattern","undefined","testPathPattern","replacePathSepForRegex","onlyChanged","bail","changedSince","collectCoverage","collectCoverageFrom","collectCoverageOnlyFrom","coverageDirectory","coverageReporters","findRelatedTests","nonFlagArgs","noSCM","notify","notifyMode","onlyFailures","passWithNoTests","reporters","updateSnapshot","verbose","freeze"],"sources":["C:/Users/chest/OneDrive/Documentos/GitHub/HackUPC/frontend/node_modules/@jest/core/build/lib/updateGlobalConfig.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.default = updateGlobalConfig;\n\nfunction _jestRegexUtil() {\n  const data = require('jest-regex-util');\n\n  _jestRegexUtil = function () {\n    return data;\n  };\n\n  return data;\n}\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nfunction updateGlobalConfig(globalConfig, options = {}) {\n  const newConfig = {...globalConfig};\n\n  if (options.mode === 'watch') {\n    newConfig.watch = true;\n    newConfig.watchAll = false;\n  } else if (options.mode === 'watchAll') {\n    newConfig.watch = false;\n    newConfig.watchAll = true;\n  }\n\n  if (options.testNamePattern !== undefined) {\n    newConfig.testNamePattern = options.testNamePattern || '';\n  }\n\n  if (options.testPathPattern !== undefined) {\n    newConfig.testPathPattern =\n      (0, _jestRegexUtil().replacePathSepForRegex)(options.testPathPattern) ||\n      '';\n  }\n\n  newConfig.onlyChanged =\n    !newConfig.watchAll &&\n    !newConfig.testNamePattern &&\n    !newConfig.testPathPattern;\n\n  if (typeof options.bail === 'boolean') {\n    newConfig.bail = options.bail ? 1 : 0;\n  } else if (options.bail !== undefined) {\n    newConfig.bail = options.bail;\n  }\n\n  if (options.changedSince !== undefined) {\n    newConfig.changedSince = options.changedSince;\n  }\n\n  if (options.collectCoverage !== undefined) {\n    newConfig.collectCoverage = options.collectCoverage || false;\n  }\n\n  if (options.collectCoverageFrom !== undefined) {\n    newConfig.collectCoverageFrom = options.collectCoverageFrom;\n  }\n\n  if (options.collectCoverageOnlyFrom !== undefined) {\n    newConfig.collectCoverageOnlyFrom = options.collectCoverageOnlyFrom;\n  }\n\n  if (options.coverageDirectory !== undefined) {\n    newConfig.coverageDirectory = options.coverageDirectory;\n  }\n\n  if (options.coverageReporters !== undefined) {\n    newConfig.coverageReporters = options.coverageReporters;\n  }\n\n  if (options.findRelatedTests !== undefined) {\n    newConfig.findRelatedTests = options.findRelatedTests;\n  }\n\n  if (options.nonFlagArgs !== undefined) {\n    newConfig.nonFlagArgs = options.nonFlagArgs;\n  }\n\n  if (options.noSCM) {\n    newConfig.noSCM = true;\n  }\n\n  if (options.notify !== undefined) {\n    newConfig.notify = options.notify || false;\n  }\n\n  if (options.notifyMode !== undefined) {\n    newConfig.notifyMode = options.notifyMode;\n  }\n\n  if (options.onlyFailures !== undefined) {\n    newConfig.onlyFailures = options.onlyFailures || false;\n  }\n\n  if (options.passWithNoTests !== undefined) {\n    newConfig.passWithNoTests = true;\n  }\n\n  if (options.reporters !== undefined) {\n    newConfig.reporters = options.reporters;\n  }\n\n  if (options.updateSnapshot !== undefined) {\n    newConfig.updateSnapshot = options.updateSnapshot;\n  }\n\n  if (options.verbose !== undefined) {\n    newConfig.verbose = options.verbose || false;\n  }\n\n  return Object.freeze(newConfig);\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}