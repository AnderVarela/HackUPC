{"ast":null,"code":"\"use strict\";\n\n// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\n// See LICENSE in the project root for license information.\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.suppressAsync = void 0;\nconst print_help_1 = require(\"./utils/print-help\");\nconst runEslint_1 = require(\"./runEslint\");\nconst constants_1 = require(\"../constants\");\nasync function suppressAsync() {\n  const args = process.argv.slice(3);\n  if (args.includes('--help') || args.includes('-h')) {\n    (0, print_help_1.printSuppressHelp)();\n    process.exit(0);\n  }\n  // Use reduce to create an object with all the parsed arguments\n  const parsedArgs = args.reduce((acc, arg, index, arr) => {\n    if (arg === '--rule') {\n      // continue because next arg should be the rule\n    } else if (index > 0 && arr[index - 1] === '--rule' && arr[index + 1]) {\n      acc.rules.push(arg);\n    } else if (arg === '--all') {\n      acc.all = true;\n    } else if (arg.startsWith('--')) {\n      throw new Error(`@rushstack/eslint-bulk: Unknown option: ${arg}`);\n    } else {\n      acc.files.push(arg);\n    }\n    return acc;\n  }, {\n    rules: [],\n    all: false,\n    files: []\n  });\n  if (parsedArgs.files.length === 0) {\n    throw new Error('@rushstack/eslint-bulk: Files argument is required. Use glob patterns to specify files or use ' + '`.` to suppress all files for the specified rules.');\n  }\n  if (parsedArgs.rules.length === 0 && !parsedArgs.all) {\n    throw new Error('@rushstack/eslint-bulk: Please specify at least one rule to suppress. Use --all to suppress all rules.');\n  }\n  // Find the index of the last argument that starts with '--'\n  const lastOptionIndex = args.map((arg, i) => arg.startsWith('--') ? i : -1).reduce((lastIndex, currentIndex) => Math.max(lastIndex, currentIndex), -1);\n  // Check if options come before files\n  if (parsedArgs.files.some(file => args.indexOf(file) < lastOptionIndex)) {\n    throw new Error('@rushstack/eslint-bulk: Unable to parse command line arguments. All options should come before files argument.');\n  }\n  if (parsedArgs.all) {\n    process.env[constants_1.ESLINT_BULK_SUPPRESS_ENV_VAR_NAME] = '*';\n  } else if (parsedArgs.rules.length > 0) {\n    process.env[constants_1.ESLINT_BULK_SUPPRESS_ENV_VAR_NAME] = parsedArgs.rules.join(',');\n  }\n  await (0, runEslint_1.runEslintAsync)(parsedArgs.files, 'suppress');\n  if (parsedArgs.all) {\n    console.log(`@rushstack/eslint-bulk: Successfully suppressed all rules for file(s) ${parsedArgs.files}`);\n  } else if (parsedArgs.rules.length > 0) {\n    console.log(`@rushstack/eslint-bulk: Successfully suppressed rules ${parsedArgs.rules} for file(s) ${parsedArgs.files}`);\n  }\n}\nexports.suppressAsync = suppressAsync;","map":{"version":3,"names":["print_help_1","require","runEslint_1","constants_1","suppressAsync","args","process","argv","slice","includes","printSuppressHelp","exit","parsedArgs","reduce","acc","arg","index","arr","rules","push","all","startsWith","Error","files","length","lastOptionIndex","map","i","lastIndex","currentIndex","Math","max","some","file","indexOf","env","ESLINT_BULK_SUPPRESS_ENV_VAR_NAME","join","runEslintAsync","console","log","exports"],"sources":["C:\\Users\\chest\\OneDrive\\Documentos\\GitHub\\HackUPC\\frontend\\node_modules\\@rushstack\\eslint-patch\\src\\eslint-bulk-suppressions\\cli\\suppress.ts"],"sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\n// See LICENSE in the project root for license information.\n\nimport { printSuppressHelp } from './utils/print-help';\nimport { runEslintAsync } from './runEslint';\nimport { ESLINT_BULK_SUPPRESS_ENV_VAR_NAME } from '../constants';\n\ninterface IParsedArgs {\n  rules: string[];\n  all: boolean;\n  files: string[];\n}\n\nexport async function suppressAsync(): Promise<void> {\n  const args: string[] = process.argv.slice(3);\n\n  if (args.includes('--help') || args.includes('-h')) {\n    printSuppressHelp();\n    process.exit(0);\n  }\n\n  // Use reduce to create an object with all the parsed arguments\n  const parsedArgs: IParsedArgs = args.reduce<{\n    rules: string[];\n    all: boolean;\n    files: string[];\n  }>(\n    (acc, arg, index, arr) => {\n      if (arg === '--rule') {\n        // continue because next arg should be the rule\n      } else if (index > 0 && arr[index - 1] === '--rule' && arr[index + 1]) {\n        acc.rules.push(arg);\n      } else if (arg === '--all') {\n        acc.all = true;\n      } else if (arg.startsWith('--')) {\n        throw new Error(`@rushstack/eslint-bulk: Unknown option: ${arg}`);\n      } else {\n        acc.files.push(arg);\n      }\n      return acc;\n    },\n    { rules: [], all: false, files: [] }\n  );\n\n  if (parsedArgs.files.length === 0) {\n    throw new Error(\n      '@rushstack/eslint-bulk: Files argument is required. Use glob patterns to specify files or use ' +\n        '`.` to suppress all files for the specified rules.'\n    );\n  }\n\n  if (parsedArgs.rules.length === 0 && !parsedArgs.all) {\n    throw new Error(\n      '@rushstack/eslint-bulk: Please specify at least one rule to suppress. Use --all to suppress all rules.'\n    );\n  }\n\n  // Find the index of the last argument that starts with '--'\n  const lastOptionIndex: number = args\n    .map((arg, i) => (arg.startsWith('--') ? i : -1))\n    .reduce((lastIndex, currentIndex) => Math.max(lastIndex, currentIndex), -1);\n\n  // Check if options come before files\n  if (parsedArgs.files.some((file) => args.indexOf(file) < lastOptionIndex)) {\n    throw new Error(\n      '@rushstack/eslint-bulk: Unable to parse command line arguments. All options should come before files argument.'\n    );\n  }\n\n  if (parsedArgs.all) {\n    process.env[ESLINT_BULK_SUPPRESS_ENV_VAR_NAME] = '*';\n  } else if (parsedArgs.rules.length > 0) {\n    process.env[ESLINT_BULK_SUPPRESS_ENV_VAR_NAME] = parsedArgs.rules.join(',');\n  }\n\n  await runEslintAsync(parsedArgs.files, 'suppress');\n\n  if (parsedArgs.all) {\n    console.log(`@rushstack/eslint-bulk: Successfully suppressed all rules for file(s) ${parsedArgs.files}`);\n  } else if (parsedArgs.rules.length > 0) {\n    console.log(\n      `@rushstack/eslint-bulk: Successfully suppressed rules ${parsedArgs.rules} for file(s) ${parsedArgs.files}`\n    );\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}