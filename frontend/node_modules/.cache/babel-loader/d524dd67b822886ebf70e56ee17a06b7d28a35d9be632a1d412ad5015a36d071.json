{"ast":null,"code":"'use strict';\n\nconst os = require('os');\nconst hasFlag = require('has-flag');\nconst env = process.env;\nlet forceColor;\nif (hasFlag('no-color') || hasFlag('no-colors') || hasFlag('color=false')) {\n  forceColor = false;\n} else if (hasFlag('color') || hasFlag('colors') || hasFlag('color=true') || hasFlag('color=always')) {\n  forceColor = true;\n}\nif ('FORCE_COLOR' in env) {\n  forceColor = env.FORCE_COLOR.length === 0 || parseInt(env.FORCE_COLOR, 10) !== 0;\n}\nfunction translateLevel(level) {\n  if (level === 0) {\n    return false;\n  }\n  return {\n    level,\n    hasBasic: true,\n    has256: level >= 2,\n    has16m: level >= 3\n  };\n}\nfunction supportsColor(stream) {\n  if (forceColor === false) {\n    return 0;\n  }\n  if (hasFlag('color=16m') || hasFlag('color=full') || hasFlag('color=truecolor')) {\n    return 3;\n  }\n  if (hasFlag('color=256')) {\n    return 2;\n  }\n  if (stream && !stream.isTTY && forceColor !== true) {\n    return 0;\n  }\n  const min = forceColor ? 1 : 0;\n  if (process.platform === 'win32') {\n    // Node.js 7.5.0 is the first version of Node.js to include a patch to\n    // libuv that enables 256 color output on Windows. Anything earlier and it\n    // won't work. However, here we target Node.js 8 at minimum as it is an LTS\n    // release, and Node.js 7 is not. Windows 10 build 10586 is the first Windows\n    // release that supports 256 colors. Windows 10 build 14931 is the first release\n    // that supports 16m/TrueColor.\n    const osRelease = os.release().split('.');\n    if (Number(process.versions.node.split('.')[0]) >= 8 && Number(osRelease[0]) >= 10 && Number(osRelease[2]) >= 10586) {\n      return Number(osRelease[2]) >= 14931 ? 3 : 2;\n    }\n    return 1;\n  }\n  if ('CI' in env) {\n    if (['TRAVIS', 'CIRCLECI', 'APPVEYOR', 'GITLAB_CI'].some(sign => sign in env) || env.CI_NAME === 'codeship') {\n      return 1;\n    }\n    return min;\n  }\n  if ('TEAMCITY_VERSION' in env) {\n    return /^(9\\.(0*[1-9]\\d*)\\.|\\d{2,}\\.)/.test(env.TEAMCITY_VERSION) ? 1 : 0;\n  }\n  if (env.COLORTERM === 'truecolor') {\n    return 3;\n  }\n  if ('TERM_PROGRAM' in env) {\n    const version = parseInt((env.TERM_PROGRAM_VERSION || '').split('.')[0], 10);\n    switch (env.TERM_PROGRAM) {\n      case 'iTerm.app':\n        return version >= 3 ? 3 : 2;\n      case 'Apple_Terminal':\n        return 2;\n      // No default\n    }\n  }\n  if (/-256(color)?$/i.test(env.TERM)) {\n    return 2;\n  }\n  if (/^screen|^xterm|^vt100|^vt220|^rxvt|color|ansi|cygwin|linux/i.test(env.TERM)) {\n    return 1;\n  }\n  if ('COLORTERM' in env) {\n    return 1;\n  }\n  if (env.TERM === 'dumb') {\n    return min;\n  }\n  return min;\n}\nfunction getSupportLevel(stream) {\n  const level = supportsColor(stream);\n  return translateLevel(level);\n}\nmodule.exports = {\n  supportsColor: getSupportLevel,\n  stdout: getSupportLevel(process.stdout),\n  stderr: getSupportLevel(process.stderr)\n};","map":{"version":3,"names":["os","require","hasFlag","env","process","forceColor","FORCE_COLOR","length","parseInt","translateLevel","level","hasBasic","has256","has16m","supportsColor","stream","isTTY","min","platform","osRelease","release","split","Number","versions","node","some","sign","CI_NAME","test","TEAMCITY_VERSION","COLORTERM","version","TERM_PROGRAM_VERSION","TERM_PROGRAM","TERM","getSupportLevel","module","exports","stdout","stderr"],"sources":["C:/Users/chest/OneDrive/Documentos/GitHub/HackUPC/frontend/node_modules/coa/node_modules/supports-color/index.js"],"sourcesContent":["'use strict';\nconst os = require('os');\nconst hasFlag = require('has-flag');\n\nconst env = process.env;\n\nlet forceColor;\nif (hasFlag('no-color') ||\n\thasFlag('no-colors') ||\n\thasFlag('color=false')) {\n\tforceColor = false;\n} else if (hasFlag('color') ||\n\thasFlag('colors') ||\n\thasFlag('color=true') ||\n\thasFlag('color=always')) {\n\tforceColor = true;\n}\nif ('FORCE_COLOR' in env) {\n\tforceColor = env.FORCE_COLOR.length === 0 || parseInt(env.FORCE_COLOR, 10) !== 0;\n}\n\nfunction translateLevel(level) {\n\tif (level === 0) {\n\t\treturn false;\n\t}\n\n\treturn {\n\t\tlevel,\n\t\thasBasic: true,\n\t\thas256: level >= 2,\n\t\thas16m: level >= 3\n\t};\n}\n\nfunction supportsColor(stream) {\n\tif (forceColor === false) {\n\t\treturn 0;\n\t}\n\n\tif (hasFlag('color=16m') ||\n\t\thasFlag('color=full') ||\n\t\thasFlag('color=truecolor')) {\n\t\treturn 3;\n\t}\n\n\tif (hasFlag('color=256')) {\n\t\treturn 2;\n\t}\n\n\tif (stream && !stream.isTTY && forceColor !== true) {\n\t\treturn 0;\n\t}\n\n\tconst min = forceColor ? 1 : 0;\n\n\tif (process.platform === 'win32') {\n\t\t// Node.js 7.5.0 is the first version of Node.js to include a patch to\n\t\t// libuv that enables 256 color output on Windows. Anything earlier and it\n\t\t// won't work. However, here we target Node.js 8 at minimum as it is an LTS\n\t\t// release, and Node.js 7 is not. Windows 10 build 10586 is the first Windows\n\t\t// release that supports 256 colors. Windows 10 build 14931 is the first release\n\t\t// that supports 16m/TrueColor.\n\t\tconst osRelease = os.release().split('.');\n\t\tif (\n\t\t\tNumber(process.versions.node.split('.')[0]) >= 8 &&\n\t\t\tNumber(osRelease[0]) >= 10 &&\n\t\t\tNumber(osRelease[2]) >= 10586\n\t\t) {\n\t\t\treturn Number(osRelease[2]) >= 14931 ? 3 : 2;\n\t\t}\n\n\t\treturn 1;\n\t}\n\n\tif ('CI' in env) {\n\t\tif (['TRAVIS', 'CIRCLECI', 'APPVEYOR', 'GITLAB_CI'].some(sign => sign in env) || env.CI_NAME === 'codeship') {\n\t\t\treturn 1;\n\t\t}\n\n\t\treturn min;\n\t}\n\n\tif ('TEAMCITY_VERSION' in env) {\n\t\treturn /^(9\\.(0*[1-9]\\d*)\\.|\\d{2,}\\.)/.test(env.TEAMCITY_VERSION) ? 1 : 0;\n\t}\n\n\tif (env.COLORTERM === 'truecolor') {\n\t\treturn 3;\n\t}\n\n\tif ('TERM_PROGRAM' in env) {\n\t\tconst version = parseInt((env.TERM_PROGRAM_VERSION || '').split('.')[0], 10);\n\n\t\tswitch (env.TERM_PROGRAM) {\n\t\t\tcase 'iTerm.app':\n\t\t\t\treturn version >= 3 ? 3 : 2;\n\t\t\tcase 'Apple_Terminal':\n\t\t\t\treturn 2;\n\t\t\t// No default\n\t\t}\n\t}\n\n\tif (/-256(color)?$/i.test(env.TERM)) {\n\t\treturn 2;\n\t}\n\n\tif (/^screen|^xterm|^vt100|^vt220|^rxvt|color|ansi|cygwin|linux/i.test(env.TERM)) {\n\t\treturn 1;\n\t}\n\n\tif ('COLORTERM' in env) {\n\t\treturn 1;\n\t}\n\n\tif (env.TERM === 'dumb') {\n\t\treturn min;\n\t}\n\n\treturn min;\n}\n\nfunction getSupportLevel(stream) {\n\tconst level = supportsColor(stream);\n\treturn translateLevel(level);\n}\n\nmodule.exports = {\n\tsupportsColor: getSupportLevel,\n\tstdout: getSupportLevel(process.stdout),\n\tstderr: getSupportLevel(process.stderr)\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}