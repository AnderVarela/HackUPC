{"ast":null,"code":"#!/usr/bin/env node\n'use strict';\n\n/*eslint-disable no-console*/\nvar fs = require('fs');\nvar argparse = require('argparse');\nvar yaml = require('..');\n\n////////////////////////////////////////////////////////////////////////////////\n\nvar cli = new argparse.ArgumentParser({\n  prog: 'js-yaml',\n  add_help: true\n});\ncli.add_argument('-v', '--version', {\n  action: 'version',\n  version: require('../package.json').version\n});\ncli.add_argument('-c', '--compact', {\n  help: 'Display errors in compact mode',\n  action: 'store_true'\n});\n\n// deprecated (not needed after we removed output colors)\n// option suppressed, but not completely removed for compatibility\ncli.add_argument('-j', '--to-json', {\n  help: argparse.SUPPRESS,\n  dest: 'json',\n  action: 'store_true'\n});\ncli.add_argument('-t', '--trace', {\n  help: 'Show stack trace on error',\n  action: 'store_true'\n});\ncli.add_argument('file', {\n  help: 'File to read, utf-8 encoded without BOM',\n  nargs: '?',\n  default: '-'\n});\n\n////////////////////////////////////////////////////////////////////////////////\n\nvar options = cli.parse_args();\n\n////////////////////////////////////////////////////////////////////////////////\n\nfunction readFile(filename, encoding, callback) {\n  if (options.file === '-') {\n    // read from stdin\n\n    var chunks = [];\n    process.stdin.on('data', function (chunk) {\n      chunks.push(chunk);\n    });\n    process.stdin.on('end', function () {\n      return callback(null, Buffer.concat(chunks).toString(encoding));\n    });\n  } else {\n    fs.readFile(filename, encoding, callback);\n  }\n}\nreadFile(options.file, 'utf8', function (error, input) {\n  var output, isYaml;\n  if (error) {\n    if (error.code === 'ENOENT') {\n      console.error('File not found: ' + options.file);\n      process.exit(2);\n    }\n    console.error(options.trace && error.stack || error.message || String(error));\n    process.exit(1);\n  }\n  try {\n    output = JSON.parse(input);\n    isYaml = false;\n  } catch (err) {\n    if (err instanceof SyntaxError) {\n      try {\n        output = [];\n        yaml.loadAll(input, function (doc) {\n          output.push(doc);\n        }, {});\n        isYaml = true;\n        if (output.length === 0) output = null;else if (output.length === 1) output = output[0];\n      } catch (e) {\n        if (options.trace && err.stack) console.error(e.stack);else console.error(e.toString(options.compact));\n        process.exit(1);\n      }\n    } else {\n      console.error(options.trace && err.stack || err.message || String(err));\n      process.exit(1);\n    }\n  }\n  if (isYaml) console.log(JSON.stringify(output, null, '  '));else console.log(yaml.dump(output));\n});","map":{"version":3,"names":["fs","require","argparse","yaml","cli","ArgumentParser","prog","add_help","add_argument","action","version","help","SUPPRESS","dest","nargs","default","options","parse_args","readFile","filename","encoding","callback","file","chunks","process","stdin","on","chunk","push","Buffer","concat","toString","error","input","output","isYaml","code","console","exit","trace","stack","message","String","JSON","parse","err","SyntaxError","loadAll","doc","length","e","compact","log","stringify","dump"],"sources":["C:/Users/chest/OneDrive/Documentos/GitHub/HackUPC/frontend/node_modules/@eslint/eslintrc/node_modules/js-yaml/bin/js-yaml.js"],"sourcesContent":["#!/usr/bin/env node\n\n\n'use strict';\n\n/*eslint-disable no-console*/\n\n\nvar fs       = require('fs');\nvar argparse = require('argparse');\nvar yaml     = require('..');\n\n\n////////////////////////////////////////////////////////////////////////////////\n\n\nvar cli = new argparse.ArgumentParser({\n  prog:     'js-yaml',\n  add_help:  true\n});\n\ncli.add_argument('-v', '--version', {\n  action: 'version',\n  version: require('../package.json').version\n});\n\ncli.add_argument('-c', '--compact', {\n  help:   'Display errors in compact mode',\n  action: 'store_true'\n});\n\n// deprecated (not needed after we removed output colors)\n// option suppressed, but not completely removed for compatibility\ncli.add_argument('-j', '--to-json', {\n  help:   argparse.SUPPRESS,\n  dest:   'json',\n  action: 'store_true'\n});\n\ncli.add_argument('-t', '--trace', {\n  help:   'Show stack trace on error',\n  action: 'store_true'\n});\n\ncli.add_argument('file', {\n  help:   'File to read, utf-8 encoded without BOM',\n  nargs:  '?',\n  default: '-'\n});\n\n\n////////////////////////////////////////////////////////////////////////////////\n\n\nvar options = cli.parse_args();\n\n\n////////////////////////////////////////////////////////////////////////////////\n\nfunction readFile(filename, encoding, callback) {\n  if (options.file === '-') {\n    // read from stdin\n\n    var chunks = [];\n\n    process.stdin.on('data', function (chunk) {\n      chunks.push(chunk);\n    });\n\n    process.stdin.on('end', function () {\n      return callback(null, Buffer.concat(chunks).toString(encoding));\n    });\n  } else {\n    fs.readFile(filename, encoding, callback);\n  }\n}\n\nreadFile(options.file, 'utf8', function (error, input) {\n  var output, isYaml;\n\n  if (error) {\n    if (error.code === 'ENOENT') {\n      console.error('File not found: ' + options.file);\n      process.exit(2);\n    }\n\n    console.error(\n      options.trace && error.stack ||\n      error.message ||\n      String(error));\n\n    process.exit(1);\n  }\n\n  try {\n    output = JSON.parse(input);\n    isYaml = false;\n  } catch (err) {\n    if (err instanceof SyntaxError) {\n      try {\n        output = [];\n        yaml.loadAll(input, function (doc) { output.push(doc); }, {});\n        isYaml = true;\n\n        if (output.length === 0) output = null;\n        else if (output.length === 1) output = output[0];\n\n      } catch (e) {\n        if (options.trace && err.stack) console.error(e.stack);\n        else console.error(e.toString(options.compact));\n\n        process.exit(1);\n      }\n    } else {\n      console.error(\n        options.trace && err.stack ||\n        err.message ||\n        String(err));\n\n      process.exit(1);\n    }\n  }\n\n  if (isYaml) console.log(JSON.stringify(output, null, '  '));\n  else console.log(yaml.dump(output));\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}