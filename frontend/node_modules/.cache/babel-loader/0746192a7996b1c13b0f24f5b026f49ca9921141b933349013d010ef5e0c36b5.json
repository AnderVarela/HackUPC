{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst util = __importStar(require(\"../util\"));\nconst util_1 = require(\"../util\");\nconst definition = {\n  type: 'object',\n  properties: {\n    before: {\n      type: 'boolean'\n    },\n    after: {\n      type: 'boolean'\n    }\n  },\n  additionalProperties: false\n};\nfunction createRules(options) {\n  var _a;\n  const globals = Object.assign(Object.assign({}, (options === null || options === void 0 ? void 0 : options.before) !== undefined ? {\n    before: options.before\n  } : {}), (options === null || options === void 0 ? void 0 : options.after) !== undefined ? {\n    after: options.after\n  } : {});\n  const override = (_a = options === null || options === void 0 ? void 0 : options.overrides) !== null && _a !== void 0 ? _a : {};\n  const colon = Object.assign(Object.assign({\n    before: false,\n    after: true\n  }, globals), override === null || override === void 0 ? void 0 : override.colon);\n  const arrow = Object.assign(Object.assign({\n    before: true,\n    after: true\n  }, globals), override === null || override === void 0 ? void 0 : override.arrow);\n  return {\n    colon: colon,\n    arrow: arrow,\n    variable: Object.assign(Object.assign({}, colon), override === null || override === void 0 ? void 0 : override.variable),\n    property: Object.assign(Object.assign({}, colon), override === null || override === void 0 ? void 0 : override.property),\n    parameter: Object.assign(Object.assign({}, colon), override === null || override === void 0 ? void 0 : override.parameter),\n    returnType: Object.assign(Object.assign({}, colon), override === null || override === void 0 ? void 0 : override.returnType)\n  };\n}\nfunction getIdentifierRules(rules, node) {\n  const scope = node === null || node === void 0 ? void 0 : node.parent;\n  if ((0, util_1.isVariableDeclarator)(scope)) {\n    return rules.variable;\n  } else if ((0, util_1.isFunctionOrFunctionType)(scope)) {\n    return rules.parameter;\n  } else {\n    return rules.colon;\n  }\n}\nfunction getRules(rules, node) {\n  var _a;\n  const scope = (_a = node === null || node === void 0 ? void 0 : node.parent) === null || _a === void 0 ? void 0 : _a.parent;\n  if ((0, util_1.isTSFunctionType)(scope) || (0, util_1.isTSConstructorType)(scope)) {\n    return rules.arrow;\n  } else if ((0, util_1.isIdentifier)(scope)) {\n    return getIdentifierRules(rules, scope);\n  } else if ((0, util_1.isClassOrTypeElement)(scope)) {\n    return rules.property;\n  } else if ((0, util_1.isFunction)(scope)) {\n    return rules.returnType;\n  } else {\n    return rules.colon;\n  }\n}\nexports.default = util.createRule({\n  name: 'type-annotation-spacing',\n  meta: {\n    type: 'layout',\n    docs: {\n      description: 'Require consistent spacing around type annotations',\n      recommended: false\n    },\n    fixable: 'whitespace',\n    messages: {\n      expectedSpaceAfter: \"Expected a space after the '{{type}}'.\",\n      expectedSpaceBefore: \"Expected a space before the '{{type}}'.\",\n      unexpectedSpaceAfter: \"Unexpected space after the '{{type}}'.\",\n      unexpectedSpaceBefore: \"Unexpected space before the '{{type}}'.\",\n      unexpectedSpaceBetween: \"Unexpected space between the '{{previousToken}}' and the '{{type}}'.\"\n    },\n    schema: [{\n      type: 'object',\n      properties: {\n        before: {\n          type: 'boolean'\n        },\n        after: {\n          type: 'boolean'\n        },\n        overrides: {\n          type: 'object',\n          properties: {\n            colon: definition,\n            arrow: definition,\n            variable: definition,\n            parameter: definition,\n            property: definition,\n            returnType: definition\n          },\n          additionalProperties: false\n        }\n      },\n      additionalProperties: false\n    }]\n  },\n  defaultOptions: [\n  // technically there is a default, but the overrides mean\n  // that if we apply them here, it will break the no override case.\n  {}],\n  create(context, [options]) {\n    const punctuators = [':', '=>'];\n    const sourceCode = context.getSourceCode();\n    const ruleSet = createRules(options);\n    /**\n     * Checks if there's proper spacing around type annotations (no space\n     * before colon, one space after).\n     */\n    function checkTypeAnnotationSpacing(typeAnnotation) {\n      const nextToken = typeAnnotation;\n      const punctuatorTokenEnd = sourceCode.getTokenBefore(nextToken);\n      let punctuatorTokenStart = punctuatorTokenEnd;\n      let previousToken = sourceCode.getTokenBefore(punctuatorTokenEnd);\n      let type = punctuatorTokenEnd.value;\n      if (!punctuators.includes(type)) {\n        return;\n      }\n      const {\n        before,\n        after\n      } = getRules(ruleSet, typeAnnotation);\n      if (type === ':' && previousToken.value === '?') {\n        if (\n        // eslint-disable-next-line deprecation/deprecation -- TODO - switch once our min ESLint version is 6.7.0\n        sourceCode.isSpaceBetweenTokens(previousToken, punctuatorTokenStart)) {\n          context.report({\n            node: punctuatorTokenStart,\n            messageId: 'unexpectedSpaceBetween',\n            data: {\n              type,\n              previousToken: previousToken.value\n            },\n            fix(fixer) {\n              return fixer.removeRange([previousToken.range[1], punctuatorTokenStart.range[0]]);\n            }\n          });\n        }\n        // shift the start to the ?\n        type = '?:';\n        punctuatorTokenStart = previousToken;\n        previousToken = sourceCode.getTokenBefore(previousToken);\n        // handle the +/- modifiers for optional modification operators\n        if (previousToken.value === '+' || previousToken.value === '-') {\n          type = `${previousToken.value}?:`;\n          punctuatorTokenStart = previousToken;\n          previousToken = sourceCode.getTokenBefore(previousToken);\n        }\n      }\n      const previousDelta = punctuatorTokenStart.range[0] - previousToken.range[1];\n      const nextDelta = nextToken.range[0] - punctuatorTokenEnd.range[1];\n      if (after && nextDelta === 0) {\n        context.report({\n          node: punctuatorTokenEnd,\n          messageId: 'expectedSpaceAfter',\n          data: {\n            type\n          },\n          fix(fixer) {\n            return fixer.insertTextAfter(punctuatorTokenEnd, ' ');\n          }\n        });\n      } else if (!after && nextDelta > 0) {\n        context.report({\n          node: punctuatorTokenEnd,\n          messageId: 'unexpectedSpaceAfter',\n          data: {\n            type\n          },\n          fix(fixer) {\n            return fixer.removeRange([punctuatorTokenEnd.range[1], nextToken.range[0]]);\n          }\n        });\n      }\n      if (before && previousDelta === 0) {\n        context.report({\n          node: punctuatorTokenStart,\n          messageId: 'expectedSpaceBefore',\n          data: {\n            type\n          },\n          fix(fixer) {\n            return fixer.insertTextAfter(previousToken, ' ');\n          }\n        });\n      } else if (!before && previousDelta > 0) {\n        context.report({\n          node: punctuatorTokenStart,\n          messageId: 'unexpectedSpaceBefore',\n          data: {\n            type\n          },\n          fix(fixer) {\n            return fixer.removeRange([previousToken.range[1], punctuatorTokenStart.range[0]]);\n          }\n        });\n      }\n    }\n    return {\n      TSMappedType(node) {\n        if (node.typeAnnotation) {\n          checkTypeAnnotationSpacing(node.typeAnnotation);\n        }\n      },\n      TSTypeAnnotation(node) {\n        checkTypeAnnotationSpacing(node.typeAnnotation);\n      }\n    };\n  }\n});","map":{"version":3,"names":["util","__importStar","require","util_1","definition","type","properties","before","after","additionalProperties","createRules","options","globals","Object","assign","undefined","override","_a","overrides","colon","arrow","variable","property","parameter","returnType","getIdentifierRules","rules","node","scope","parent","isVariableDeclarator","isFunctionOrFunctionType","getRules","isTSFunctionType","isTSConstructorType","isIdentifier","isClassOrTypeElement","isFunction","exports","default","createRule","name","meta","docs","description","recommended","fixable","messages","expectedSpaceAfter","expectedSpaceBefore","unexpectedSpaceAfter","unexpectedSpaceBefore","unexpectedSpaceBetween","schema","defaultOptions","create","context","punctuators","sourceCode","getSourceCode","ruleSet","checkTypeAnnotationSpacing","typeAnnotation","nextToken","punctuatorTokenEnd","getTokenBefore","punctuatorTokenStart","previousToken","value","includes","isSpaceBetweenTokens","report","messageId","data","fix","fixer","removeRange","range","previousDelta","nextDelta","insertTextAfter","TSMappedType","TSTypeAnnotation"],"sources":["../../src/rules/type-annotation-spacing.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}