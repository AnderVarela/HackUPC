{"ast":null,"code":"import { GetOption } from '../GetOption';\nimport { IsWellFormedCurrencyCode } from '../IsWellFormedCurrencyCode';\nimport { IsWellFormedUnitIdentifier } from '../IsWellFormedUnitIdentifier';\n/**\n * https://tc39.es/ecma402/#sec-setnumberformatunitoptions\n */\nexport function SetNumberFormatUnitOptions(nf, options, _a) {\n  if (options === void 0) {\n    options = Object.create(null);\n  }\n  var getInternalSlots = _a.getInternalSlots;\n  var internalSlots = getInternalSlots(nf);\n  var style = GetOption(options, 'style', 'string', ['decimal', 'percent', 'currency', 'unit'], 'decimal');\n  internalSlots.style = style;\n  var currency = GetOption(options, 'currency', 'string', undefined, undefined);\n  if (currency !== undefined && !IsWellFormedCurrencyCode(currency)) {\n    throw RangeError('Malformed currency code');\n  }\n  if (style === 'currency' && currency === undefined) {\n    throw TypeError('currency cannot be undefined');\n  }\n  var currencyDisplay = GetOption(options, 'currencyDisplay', 'string', ['code', 'symbol', 'narrowSymbol', 'name'], 'symbol');\n  var currencySign = GetOption(options, 'currencySign', 'string', ['standard', 'accounting'], 'standard');\n  var unit = GetOption(options, 'unit', 'string', undefined, undefined);\n  if (unit !== undefined && !IsWellFormedUnitIdentifier(unit)) {\n    throw RangeError('Invalid unit argument for Intl.NumberFormat()');\n  }\n  if (style === 'unit' && unit === undefined) {\n    throw TypeError('unit cannot be undefined');\n  }\n  var unitDisplay = GetOption(options, 'unitDisplay', 'string', ['short', 'narrow', 'long'], 'short');\n  if (style === 'currency') {\n    internalSlots.currency = currency.toUpperCase();\n    internalSlots.currencyDisplay = currencyDisplay;\n    internalSlots.currencySign = currencySign;\n  }\n  if (style === 'unit') {\n    internalSlots.unit = unit;\n    internalSlots.unitDisplay = unitDisplay;\n  }\n}","map":{"version":3,"names":["GetOption","IsWellFormedCurrencyCode","IsWellFormedUnitIdentifier","SetNumberFormatUnitOptions","nf","options","_a","Object","create","getInternalSlots","internalSlots","style","currency","undefined","RangeError","TypeError","currencyDisplay","currencySign","unit","unitDisplay","toUpperCase"],"sources":["C:/Users/chest/OneDrive/Documentos/GitHub/HackUPC/frontend/node_modules/@formatjs/ecma402-abstract/lib/NumberFormat/SetNumberFormatUnitOptions.js"],"sourcesContent":["import { GetOption } from '../GetOption';\nimport { IsWellFormedCurrencyCode } from '../IsWellFormedCurrencyCode';\nimport { IsWellFormedUnitIdentifier } from '../IsWellFormedUnitIdentifier';\n/**\n * https://tc39.es/ecma402/#sec-setnumberformatunitoptions\n */\nexport function SetNumberFormatUnitOptions(nf, options, _a) {\n    if (options === void 0) { options = Object.create(null); }\n    var getInternalSlots = _a.getInternalSlots;\n    var internalSlots = getInternalSlots(nf);\n    var style = GetOption(options, 'style', 'string', ['decimal', 'percent', 'currency', 'unit'], 'decimal');\n    internalSlots.style = style;\n    var currency = GetOption(options, 'currency', 'string', undefined, undefined);\n    if (currency !== undefined && !IsWellFormedCurrencyCode(currency)) {\n        throw RangeError('Malformed currency code');\n    }\n    if (style === 'currency' && currency === undefined) {\n        throw TypeError('currency cannot be undefined');\n    }\n    var currencyDisplay = GetOption(options, 'currencyDisplay', 'string', ['code', 'symbol', 'narrowSymbol', 'name'], 'symbol');\n    var currencySign = GetOption(options, 'currencySign', 'string', ['standard', 'accounting'], 'standard');\n    var unit = GetOption(options, 'unit', 'string', undefined, undefined);\n    if (unit !== undefined && !IsWellFormedUnitIdentifier(unit)) {\n        throw RangeError('Invalid unit argument for Intl.NumberFormat()');\n    }\n    if (style === 'unit' && unit === undefined) {\n        throw TypeError('unit cannot be undefined');\n    }\n    var unitDisplay = GetOption(options, 'unitDisplay', 'string', ['short', 'narrow', 'long'], 'short');\n    if (style === 'currency') {\n        internalSlots.currency = currency.toUpperCase();\n        internalSlots.currencyDisplay = currencyDisplay;\n        internalSlots.currencySign = currencySign;\n    }\n    if (style === 'unit') {\n        internalSlots.unit = unit;\n        internalSlots.unitDisplay = unitDisplay;\n    }\n}\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,cAAc;AACxC,SAASC,wBAAwB,QAAQ,6BAA6B;AACtE,SAASC,0BAA0B,QAAQ,+BAA+B;AAC1E;AACA;AACA;AACA,OAAO,SAASC,0BAA0BA,CAACC,EAAE,EAAEC,OAAO,EAAEC,EAAE,EAAE;EACxD,IAAID,OAAO,KAAK,KAAK,CAAC,EAAE;IAAEA,OAAO,GAAGE,MAAM,CAACC,MAAM,CAAC,IAAI,CAAC;EAAE;EACzD,IAAIC,gBAAgB,GAAGH,EAAE,CAACG,gBAAgB;EAC1C,IAAIC,aAAa,GAAGD,gBAAgB,CAACL,EAAE,CAAC;EACxC,IAAIO,KAAK,GAAGX,SAAS,CAACK,OAAO,EAAE,OAAO,EAAE,QAAQ,EAAE,CAAC,SAAS,EAAE,SAAS,EAAE,UAAU,EAAE,MAAM,CAAC,EAAE,SAAS,CAAC;EACxGK,aAAa,CAACC,KAAK,GAAGA,KAAK;EAC3B,IAAIC,QAAQ,GAAGZ,SAAS,CAACK,OAAO,EAAE,UAAU,EAAE,QAAQ,EAAEQ,SAAS,EAAEA,SAAS,CAAC;EAC7E,IAAID,QAAQ,KAAKC,SAAS,IAAI,CAACZ,wBAAwB,CAACW,QAAQ,CAAC,EAAE;IAC/D,MAAME,UAAU,CAAC,yBAAyB,CAAC;EAC/C;EACA,IAAIH,KAAK,KAAK,UAAU,IAAIC,QAAQ,KAAKC,SAAS,EAAE;IAChD,MAAME,SAAS,CAAC,8BAA8B,CAAC;EACnD;EACA,IAAIC,eAAe,GAAGhB,SAAS,CAACK,OAAO,EAAE,iBAAiB,EAAE,QAAQ,EAAE,CAAC,MAAM,EAAE,QAAQ,EAAE,cAAc,EAAE,MAAM,CAAC,EAAE,QAAQ,CAAC;EAC3H,IAAIY,YAAY,GAAGjB,SAAS,CAACK,OAAO,EAAE,cAAc,EAAE,QAAQ,EAAE,CAAC,UAAU,EAAE,YAAY,CAAC,EAAE,UAAU,CAAC;EACvG,IAAIa,IAAI,GAAGlB,SAAS,CAACK,OAAO,EAAE,MAAM,EAAE,QAAQ,EAAEQ,SAAS,EAAEA,SAAS,CAAC;EACrE,IAAIK,IAAI,KAAKL,SAAS,IAAI,CAACX,0BAA0B,CAACgB,IAAI,CAAC,EAAE;IACzD,MAAMJ,UAAU,CAAC,+CAA+C,CAAC;EACrE;EACA,IAAIH,KAAK,KAAK,MAAM,IAAIO,IAAI,KAAKL,SAAS,EAAE;IACxC,MAAME,SAAS,CAAC,0BAA0B,CAAC;EAC/C;EACA,IAAII,WAAW,GAAGnB,SAAS,CAACK,OAAO,EAAE,aAAa,EAAE,QAAQ,EAAE,CAAC,OAAO,EAAE,QAAQ,EAAE,MAAM,CAAC,EAAE,OAAO,CAAC;EACnG,IAAIM,KAAK,KAAK,UAAU,EAAE;IACtBD,aAAa,CAACE,QAAQ,GAAGA,QAAQ,CAACQ,WAAW,CAAC,CAAC;IAC/CV,aAAa,CAACM,eAAe,GAAGA,eAAe;IAC/CN,aAAa,CAACO,YAAY,GAAGA,YAAY;EAC7C;EACA,IAAIN,KAAK,KAAK,MAAM,EAAE;IAClBD,aAAa,CAACQ,IAAI,GAAGA,IAAI;IACzBR,aAAa,CAACS,WAAW,GAAGA,WAAW;EAC3C;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}