{"ast":null,"code":"var OptimizationLevel = require('../../../options/optimization-level').OptimizationLevel;\nvar LOCAL_PREFIX_PATTERN = /^local\\(/i;\nvar QUOTED_PATTERN = /^('.*'|\".*\")$/;\nvar QUOTED_BUT_SAFE_PATTERN = /^['\"][a-zA-Z][a-zA-Z\\d\\-_]+['\"]$/;\n// eslint-disable-next-line max-len\nvar GENERIC_FONT_FAMILY_PATTERN = /^['\"](?:cursive|default|emoji|fangsong|fantasy|inherit|initial|math|monospace|revert|revert-layer|sans-serif|serif|system-ui|ui-monospace|ui-rounded|ui-sans-serif|ui-serif|unset)['\"]$/;\nvar plugin = {\n  level1: {\n    value: function textQuotes(name, value, options) {\n      if ((name == 'font-family' || name == 'font') && GENERIC_FONT_FAMILY_PATTERN.test(value)) {\n        return value;\n      }\n      if (!options.level[OptimizationLevel.One].removeQuotes) {\n        return value;\n      }\n      if (!QUOTED_PATTERN.test(value) && !LOCAL_PREFIX_PATTERN.test(value)) {\n        return value;\n      }\n      return QUOTED_BUT_SAFE_PATTERN.test(value) ? value.substring(1, value.length - 1) : value;\n    }\n  }\n};\nmodule.exports = plugin;","map":{"version":3,"names":["OptimizationLevel","require","LOCAL_PREFIX_PATTERN","QUOTED_PATTERN","QUOTED_BUT_SAFE_PATTERN","GENERIC_FONT_FAMILY_PATTERN","plugin","level1","value","textQuotes","name","options","test","level","One","removeQuotes","substring","length","module","exports"],"sources":["C:/Users/chest/OneDrive/Documentos/GitHub/HackUPC/frontend/node_modules/clean-css/lib/optimizer/level-1/value-optimizers/text-quotes.js"],"sourcesContent":["var OptimizationLevel = require('../../../options/optimization-level').OptimizationLevel;\n\nvar LOCAL_PREFIX_PATTERN = /^local\\(/i;\nvar QUOTED_PATTERN = /^('.*'|\".*\")$/;\nvar QUOTED_BUT_SAFE_PATTERN = /^['\"][a-zA-Z][a-zA-Z\\d\\-_]+['\"]$/;\n// eslint-disable-next-line max-len\nvar GENERIC_FONT_FAMILY_PATTERN = /^['\"](?:cursive|default|emoji|fangsong|fantasy|inherit|initial|math|monospace|revert|revert-layer|sans-serif|serif|system-ui|ui-monospace|ui-rounded|ui-sans-serif|ui-serif|unset)['\"]$/;\n\nvar plugin = {\n  level1: {\n    value: function textQuotes(name, value, options) {\n      if ((name == 'font-family' || name == 'font') && GENERIC_FONT_FAMILY_PATTERN.test(value)) {\n        return value;\n      }\n\n      if (!options.level[OptimizationLevel.One].removeQuotes) {\n        return value;\n      }\n\n      if (!QUOTED_PATTERN.test(value) && !LOCAL_PREFIX_PATTERN.test(value)) {\n        return value;\n      }\n\n      return QUOTED_BUT_SAFE_PATTERN.test(value)\n        ? value.substring(1, value.length - 1)\n        : value;\n    }\n  }\n};\n\nmodule.exports = plugin;\n"],"mappings":"AAAA,IAAIA,iBAAiB,GAAGC,OAAO,CAAC,qCAAqC,CAAC,CAACD,iBAAiB;AAExF,IAAIE,oBAAoB,GAAG,WAAW;AACtC,IAAIC,cAAc,GAAG,eAAe;AACpC,IAAIC,uBAAuB,GAAG,kCAAkC;AAChE;AACA,IAAIC,2BAA2B,GAAG,yLAAyL;AAE3N,IAAIC,MAAM,GAAG;EACXC,MAAM,EAAE;IACNC,KAAK,EAAE,SAASC,UAAUA,CAACC,IAAI,EAAEF,KAAK,EAAEG,OAAO,EAAE;MAC/C,IAAI,CAACD,IAAI,IAAI,aAAa,IAAIA,IAAI,IAAI,MAAM,KAAKL,2BAA2B,CAACO,IAAI,CAACJ,KAAK,CAAC,EAAE;QACxF,OAAOA,KAAK;MACd;MAEA,IAAI,CAACG,OAAO,CAACE,KAAK,CAACb,iBAAiB,CAACc,GAAG,CAAC,CAACC,YAAY,EAAE;QACtD,OAAOP,KAAK;MACd;MAEA,IAAI,CAACL,cAAc,CAACS,IAAI,CAACJ,KAAK,CAAC,IAAI,CAACN,oBAAoB,CAACU,IAAI,CAACJ,KAAK,CAAC,EAAE;QACpE,OAAOA,KAAK;MACd;MAEA,OAAOJ,uBAAuB,CAACQ,IAAI,CAACJ,KAAK,CAAC,GACtCA,KAAK,CAACQ,SAAS,CAAC,CAAC,EAAER,KAAK,CAACS,MAAM,GAAG,CAAC,CAAC,GACpCT,KAAK;IACX;EACF;AACF,CAAC;AAEDU,MAAM,CAACC,OAAO,GAAGb,MAAM","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}