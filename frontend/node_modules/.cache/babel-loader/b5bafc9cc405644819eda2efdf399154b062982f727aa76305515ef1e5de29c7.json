{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createConfigItem = createConfigItem;\nexports.createConfigItemAsync = createConfigItemAsync;\nexports.createConfigItemSync = createConfigItemSync;\nObject.defineProperty(exports, \"default\", {\n  enumerable: true,\n  get: function () {\n    return _full.default;\n  }\n});\nexports.loadOptions = loadOptions;\nexports.loadOptionsAsync = loadOptionsAsync;\nexports.loadOptionsSync = loadOptionsSync;\nexports.loadPartialConfig = loadPartialConfig;\nexports.loadPartialConfigAsync = loadPartialConfigAsync;\nexports.loadPartialConfigSync = loadPartialConfigSync;\nfunction _gensync() {\n  const data = require(\"gensync\");\n  _gensync = function () {\n    return data;\n  };\n  return data;\n}\nvar _full = require(\"./full.js\");\nvar _partial = require(\"./partial.js\");\nvar _item = require(\"./item.js\");\nvar _rewriteStackTrace = require(\"../errors/rewrite-stack-trace.js\");\nconst loadPartialConfigRunner = _gensync()(_partial.loadPartialConfig);\nfunction loadPartialConfigAsync(...args) {\n  return (0, _rewriteStackTrace.beginHiddenCallStack)(loadPartialConfigRunner.async)(...args);\n}\nfunction loadPartialConfigSync(...args) {\n  return (0, _rewriteStackTrace.beginHiddenCallStack)(loadPartialConfigRunner.sync)(...args);\n}\nfunction loadPartialConfig(opts, callback) {\n  if (callback !== undefined) {\n    (0, _rewriteStackTrace.beginHiddenCallStack)(loadPartialConfigRunner.errback)(opts, callback);\n  } else if (typeof opts === \"function\") {\n    (0, _rewriteStackTrace.beginHiddenCallStack)(loadPartialConfigRunner.errback)(undefined, opts);\n  } else {\n    {\n      return loadPartialConfigSync(opts);\n    }\n  }\n}\nfunction* loadOptionsImpl(opts) {\n  var _config$options;\n  const config = yield* (0, _full.default)(opts);\n  return (_config$options = config == null ? void 0 : config.options) != null ? _config$options : null;\n}\nconst loadOptionsRunner = _gensync()(loadOptionsImpl);\nfunction loadOptionsAsync(...args) {\n  return (0, _rewriteStackTrace.beginHiddenCallStack)(loadOptionsRunner.async)(...args);\n}\nfunction loadOptionsSync(...args) {\n  return (0, _rewriteStackTrace.beginHiddenCallStack)(loadOptionsRunner.sync)(...args);\n}\nfunction loadOptions(opts, callback) {\n  if (callback !== undefined) {\n    (0, _rewriteStackTrace.beginHiddenCallStack)(loadOptionsRunner.errback)(opts, callback);\n  } else if (typeof opts === \"function\") {\n    (0, _rewriteStackTrace.beginHiddenCallStack)(loadOptionsRunner.errback)(undefined, opts);\n  } else {\n    {\n      return loadOptionsSync(opts);\n    }\n  }\n}\nconst createConfigItemRunner = _gensync()(_item.createConfigItem);\nfunction createConfigItemAsync(...args) {\n  return (0, _rewriteStackTrace.beginHiddenCallStack)(createConfigItemRunner.async)(...args);\n}\nfunction createConfigItemSync(...args) {\n  return (0, _rewriteStackTrace.beginHiddenCallStack)(createConfigItemRunner.sync)(...args);\n}\nfunction createConfigItem(target, options, callback) {\n  if (callback !== undefined) {\n    (0, _rewriteStackTrace.beginHiddenCallStack)(createConfigItemRunner.errback)(target, options, callback);\n  } else if (typeof options === \"function\") {\n    (0, _rewriteStackTrace.beginHiddenCallStack)(createConfigItemRunner.errback)(target, undefined, callback);\n  } else {\n    {\n      return createConfigItemSync(target, options);\n    }\n  }\n}\n0 && 0;","map":{"version":3,"names":["_gensync","data","require","_full","_partial","_item","_rewriteStackTrace","loadPartialConfigRunner","loadPartialConfig","loadPartialConfigAsync","args","beginHiddenCallStack","async","loadPartialConfigSync","sync","opts","callback","undefined","errback","loadOptionsImpl","_config$options","config","default","options","loadOptionsRunner","loadOptionsAsync","loadOptionsSync","loadOptions","createConfigItemRunner","createConfigItem","createConfigItemAsync","createConfigItemSync","target"],"sources":["C:\\Users\\chest\\OneDrive\\Documentos\\GitHub\\HackUPC\\frontend\\node_modules\\@babel\\core\\src\\config\\index.ts"],"sourcesContent":["import gensync, { type Handler } from \"gensync\";\n\nexport type {\n  ResolvedConfig,\n  InputOptions,\n  PluginPasses,\n  Plugin,\n} from \"./full.ts\";\n\nimport type { PluginTarget } from \"./validation/options.ts\";\n\nimport type {\n  PluginAPI as basePluginAPI,\n  PresetAPI as basePresetAPI,\n} from \"./helpers/config-api.ts\";\nexport type { PluginObject } from \"./validation/plugins.ts\";\ntype PluginAPI = basePluginAPI & typeof import(\"..\");\ntype PresetAPI = basePresetAPI & typeof import(\"..\");\nexport type { PluginAPI, PresetAPI };\n// todo: may need to refine PresetObject to be a subset of ValidatedOptions\nexport type {\n  CallerMetadata,\n  ValidatedOptions as PresetObject,\n} from \"./validation/options.ts\";\n\nimport loadFullConfig, { type ResolvedConfig } from \"./full.ts\";\nimport {\n  type PartialConfig,\n  loadPartialConfig as loadPartialConfigImpl,\n} from \"./partial.ts\";\n\nexport { loadFullConfig as default };\nexport type { PartialConfig } from \"./partial.ts\";\n\nimport { createConfigItem as createConfigItemImpl } from \"./item.ts\";\nimport type { ConfigItem } from \"./item.ts\";\nexport type { ConfigItem };\n\nimport { beginHiddenCallStack } from \"../errors/rewrite-stack-trace.ts\";\n\nconst loadPartialConfigRunner = gensync(loadPartialConfigImpl);\nexport function loadPartialConfigAsync(\n  ...args: Parameters<typeof loadPartialConfigRunner.async>\n) {\n  return beginHiddenCallStack(loadPartialConfigRunner.async)(...args);\n}\nexport function loadPartialConfigSync(\n  ...args: Parameters<typeof loadPartialConfigRunner.sync>\n) {\n  return beginHiddenCallStack(loadPartialConfigRunner.sync)(...args);\n}\nexport function loadPartialConfig(\n  opts: Parameters<typeof loadPartialConfigImpl>[0],\n  callback?: (err: Error, val: PartialConfig | null) => void,\n) {\n  if (callback !== undefined) {\n    beginHiddenCallStack(loadPartialConfigRunner.errback)(opts, callback);\n  } else if (typeof opts === \"function\") {\n    beginHiddenCallStack(loadPartialConfigRunner.errback)(\n      undefined,\n      opts as (err: Error, val: PartialConfig | null) => void,\n    );\n  } else {\n    if (process.env.BABEL_8_BREAKING) {\n      throw new Error(\n        \"Starting from Babel 8.0.0, the 'loadPartialConfig' function expects a callback. If you need to call it synchronously, please use 'loadPartialConfigSync'.\",\n      );\n    } else {\n      return loadPartialConfigSync(opts);\n    }\n  }\n}\n\nfunction* loadOptionsImpl(opts: unknown): Handler<ResolvedConfig | null> {\n  const config = yield* loadFullConfig(opts);\n  // NOTE: We want to return \"null\" explicitly, while ?. alone returns undefined\n  return config?.options ?? null;\n}\nconst loadOptionsRunner = gensync(loadOptionsImpl);\nexport function loadOptionsAsync(\n  ...args: Parameters<typeof loadOptionsRunner.async>\n) {\n  return beginHiddenCallStack(loadOptionsRunner.async)(...args);\n}\nexport function loadOptionsSync(\n  ...args: Parameters<typeof loadOptionsRunner.sync>\n) {\n  return beginHiddenCallStack(loadOptionsRunner.sync)(...args);\n}\nexport function loadOptions(\n  opts: Parameters<typeof loadOptionsImpl>[0],\n  callback?: (err: Error, val: ResolvedConfig | null) => void,\n) {\n  if (callback !== undefined) {\n    beginHiddenCallStack(loadOptionsRunner.errback)(opts, callback);\n  } else if (typeof opts === \"function\") {\n    beginHiddenCallStack(loadOptionsRunner.errback)(\n      undefined,\n      opts as (err: Error, val: ResolvedConfig | null) => void,\n    );\n  } else {\n    if (process.env.BABEL_8_BREAKING) {\n      throw new Error(\n        \"Starting from Babel 8.0.0, the 'loadOptions' function expects a callback. If you need to call it synchronously, please use 'loadOptionsSync'.\",\n      );\n    } else {\n      return loadOptionsSync(opts);\n    }\n  }\n}\n\nconst createConfigItemRunner = gensync(createConfigItemImpl);\nexport function createConfigItemAsync(\n  ...args: Parameters<typeof createConfigItemRunner.async>\n) {\n  return beginHiddenCallStack(createConfigItemRunner.async)(...args);\n}\nexport function createConfigItemSync(\n  ...args: Parameters<typeof createConfigItemRunner.sync>\n) {\n  return beginHiddenCallStack(createConfigItemRunner.sync)(...args);\n}\nexport function createConfigItem(\n  target: PluginTarget,\n  options: Parameters<typeof createConfigItemImpl>[1],\n  callback?: (err: Error, val: ConfigItem<PluginAPI> | null) => void,\n) {\n  if (callback !== undefined) {\n    beginHiddenCallStack(createConfigItemRunner.errback)(\n      target,\n      options,\n      callback,\n    );\n  } else if (typeof options === \"function\") {\n    beginHiddenCallStack(createConfigItemRunner.errback)(\n      target,\n      undefined,\n      callback,\n    );\n  } else {\n    if (process.env.BABEL_8_BREAKING) {\n      throw new Error(\n        \"Starting from Babel 8.0.0, the 'createConfigItem' function expects a callback. If you need to call it synchronously, please use 'createConfigItemSync'.\",\n      );\n    } else {\n      return createConfigItemSync(target, options);\n    }\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}