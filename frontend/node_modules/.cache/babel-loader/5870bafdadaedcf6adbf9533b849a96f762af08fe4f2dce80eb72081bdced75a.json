{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst utils_1 = require(\"@typescript-eslint/utils\");\nconst util = __importStar(require(\"../util\"));\nexports.default = util.createRule({\n  name: 'no-implicit-any-catch',\n  meta: {\n    deprecated: true,\n    type: 'suggestion',\n    docs: {\n      description: 'Disallow usage of the implicit `any` type in catch clauses',\n      recommended: false\n    },\n    fixable: 'code',\n    hasSuggestions: true,\n    messages: {\n      implicitAnyInCatch: 'Implicit any in catch clause.',\n      explicitAnyInCatch: 'Explicit any in catch clause.',\n      suggestExplicitUnknown: 'Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.'\n    },\n    schema: [{\n      type: 'object',\n      additionalProperties: false,\n      properties: {\n        allowExplicitAny: {\n          description: 'Whether to disallow specifying `: any` as the error type as well. See also `no-explicit-any`.',\n          type: 'boolean'\n        }\n      }\n    }]\n  },\n  defaultOptions: [{\n    allowExplicitAny: false\n  }],\n  create(context, [{\n    allowExplicitAny\n  }]) {\n    return {\n      CatchClause(node) {\n        if (!node.param) {\n          return; // ignore catch without variable\n        }\n        if (!node.param.typeAnnotation) {\n          context.report({\n            node,\n            messageId: 'implicitAnyInCatch',\n            suggest: [{\n              messageId: 'suggestExplicitUnknown',\n              fix(fixer) {\n                return fixer.insertTextAfter(node.param, ': unknown');\n              }\n            }]\n          });\n        } else if (!allowExplicitAny && node.param.typeAnnotation.typeAnnotation.type === utils_1.AST_NODE_TYPES.TSAnyKeyword) {\n          context.report({\n            node,\n            messageId: 'explicitAnyInCatch',\n            suggest: [{\n              messageId: 'suggestExplicitUnknown',\n              fix(fixer) {\n                return fixer.replaceText(node.param.typeAnnotation, ': unknown');\n              }\n            }]\n          });\n        }\n      }\n    };\n  }\n});","map":{"version":3,"names":["utils_1","require","util","__importStar","exports","default","createRule","name","meta","deprecated","type","docs","description","recommended","fixable","hasSuggestions","messages","implicitAnyInCatch","explicitAnyInCatch","suggestExplicitUnknown","schema","additionalProperties","properties","allowExplicitAny","defaultOptions","create","context","CatchClause","node","param","typeAnnotation","report","messageId","suggest","fix","fixer","insertTextAfter","AST_NODE_TYPES","TSAnyKeyword","replaceText"],"sources":["../../src/rules/no-implicit-any-catch.ts"],"sourcesContent":[null],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,MAAAA,OAAA,GAAAC,OAAA;AAEA,MAAAC,IAAA,GAAAC,YAAA,CAAAF,OAAA;AAYAG,OAAA,CAAAC,OAAA,GAAeH,IAAI,CAACI,UAAU,CAAsB;EAClDC,IAAI,EAAE,uBAAuB;EAC7BC,IAAI,EAAE;IACJC,UAAU,EAAE,IAAI;IAChBC,IAAI,EAAE,YAAY;IAClBC,IAAI,EAAE;MACJC,WAAW,EAAE,4DAA4D;MACzEC,WAAW,EAAE;KACd;IACDC,OAAO,EAAE,MAAM;IACfC,cAAc,EAAE,IAAI;IACpBC,QAAQ,EAAE;MACRC,kBAAkB,EAAE,+BAA+B;MACnDC,kBAAkB,EAAE,+BAA+B;MACnDC,sBAAsB,EACpB;KACH;IACDC,MAAM,EAAE,CACN;MACEV,IAAI,EAAE,QAAQ;MACdW,oBAAoB,EAAE,KAAK;MAC3BC,UAAU,EAAE;QACVC,gBAAgB,EAAE;UAChBX,WAAW,EACT,+FAA+F;UACjGF,IAAI,EAAE;;;KAGX;GAEJ;EACDc,cAAc,EAAE,CACd;IACED,gBAAgB,EAAE;GACnB,CACF;EACDE,MAAMA,CAACC,OAAO,EAAE,CAAC;IAAEH;EAAgB,CAAE,CAAC;IACpC,OAAO;MACLI,WAAWA,CAACC,IAAI;QACd,IAAI,CAACA,IAAI,CAACC,KAAK,EAAE;UACf,OAAO,CAAC;;QAGV,IAAI,CAACD,IAAI,CAACC,KAAK,CAACC,cAAc,EAAE;UAC9BJ,OAAO,CAACK,MAAM,CAAC;YACbH,IAAI;YACJI,SAAS,EAAE,oBAAoB;YAC/BC,OAAO,EAAE,CACP;cACED,SAAS,EAAE,wBAAwB;cACnCE,GAAGA,CAACC,KAAK;gBACP,OAAOA,KAAK,CAACC,eAAe,CAACR,IAAI,CAACC,KAAM,EAAE,WAAW,CAAC;cACxD;aACD;WAEJ,CAAC;SACH,MAAM,IACL,CAACN,gBAAgB,IACjBK,IAAI,CAACC,KAAK,CAACC,cAAc,CAACA,cAAc,CAACpB,IAAI,KAC3CV,OAAA,CAAAqC,cAAc,CAACC,YAAY,EAC7B;UACAZ,OAAO,CAACK,MAAM,CAAC;YACbH,IAAI;YACJI,SAAS,EAAE,oBAAoB;YAC/BC,OAAO,EAAE,CACP;cACED,SAAS,EAAE,wBAAwB;cACnCE,GAAGA,CAACC,KAAK;gBACP,OAAOA,KAAK,CAACI,WAAW,CACtBX,IAAI,CAACC,KAAM,CAACC,cAAe,EAC3B,WAAW,CACZ;cACH;aACD;WAEJ,CAAC;;MAEN;KACD;EACH;CACD,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}