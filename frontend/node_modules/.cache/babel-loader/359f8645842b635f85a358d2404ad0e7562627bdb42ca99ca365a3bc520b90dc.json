{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst utils_1 = require(\"@typescript-eslint/utils\");\nconst util = __importStar(require(\"../util\"));\nconst astIgnoreKeys = new Set(['range', 'loc', 'parent']);\nconst isSameAstNode = (actualNode, expectedNode) => {\n  if (actualNode === expectedNode) {\n    return true;\n  }\n  if (actualNode && expectedNode && typeof actualNode === 'object' && typeof expectedNode === 'object') {\n    if (Array.isArray(actualNode) && Array.isArray(expectedNode)) {\n      if (actualNode.length !== expectedNode.length) {\n        return false;\n      }\n      return !actualNode.some((nodeEle, index) => !isSameAstNode(nodeEle, expectedNode[index]));\n    }\n    const actualNodeKeys = Object.keys(actualNode).filter(key => !astIgnoreKeys.has(key));\n    const expectedNodeKeys = Object.keys(expectedNode).filter(key => !astIgnoreKeys.has(key));\n    if (actualNodeKeys.length !== expectedNodeKeys.length) {\n      return false;\n    }\n    if (actualNodeKeys.some(actualNodeKey => !Object.prototype.hasOwnProperty.call(expectedNode, actualNodeKey))) {\n      return false;\n    }\n    if (actualNodeKeys.some(actualNodeKey => !isSameAstNode(actualNode[actualNodeKey], expectedNode[actualNodeKey]))) {\n      return false;\n    }\n    return true;\n  }\n  return false;\n};\nexports.default = util.createRule({\n  name: 'no-duplicate-type-constituents',\n  meta: {\n    type: 'suggestion',\n    docs: {\n      description: 'Disallow duplicate constituents of union or intersection types',\n      recommended: false,\n      requiresTypeChecking: true\n    },\n    fixable: 'code',\n    messages: {\n      duplicate: '{{type}} type constituent is duplicated with {{previous}}.'\n    },\n    schema: [{\n      additionalProperties: false,\n      type: 'object',\n      properties: {\n        ignoreIntersections: {\n          type: 'boolean'\n        },\n        ignoreUnions: {\n          type: 'boolean'\n        }\n      }\n    }]\n  },\n  defaultOptions: [{\n    ignoreIntersections: false,\n    ignoreUnions: false\n  }],\n  create(context, [{\n    ignoreIntersections,\n    ignoreUnions\n  }]) {\n    const parserServices = util.getParserServices(context);\n    const checker = parserServices.program.getTypeChecker();\n    function checkDuplicate(node) {\n      const cachedTypeMap = new Map();\n      node.types.reduce((uniqueConstituents, constituentNode) => {\n        const duplicatedPreviousConstituentInAst = uniqueConstituents.find(ele => isSameAstNode(ele, constituentNode));\n        if (duplicatedPreviousConstituentInAst) {\n          reportDuplicate({\n            duplicated: constituentNode,\n            duplicatePrevious: duplicatedPreviousConstituentInAst\n          }, node);\n          return uniqueConstituents;\n        }\n        const constituentNodeType = checker.getTypeAtLocation(parserServices.esTreeNodeToTSNodeMap.get(constituentNode));\n        const duplicatedPreviousConstituentInType = cachedTypeMap.get(constituentNodeType);\n        if (duplicatedPreviousConstituentInType) {\n          reportDuplicate({\n            duplicated: constituentNode,\n            duplicatePrevious: duplicatedPreviousConstituentInType\n          }, node);\n          return uniqueConstituents;\n        }\n        cachedTypeMap.set(constituentNodeType, constituentNode);\n        return [...uniqueConstituents, constituentNode];\n      }, []);\n    }\n    function reportDuplicate(duplicateConstituent, parentNode) {\n      const sourceCode = context.getSourceCode();\n      const beforeTokens = sourceCode.getTokensBefore(duplicateConstituent.duplicated, {\n        filter: token => token.value === '|' || token.value === '&'\n      });\n      const beforeUnionOrIntersectionToken = beforeTokens[beforeTokens.length - 1];\n      const bracketBeforeTokens = sourceCode.getTokensBetween(beforeUnionOrIntersectionToken, duplicateConstituent.duplicated);\n      const bracketAfterTokens = sourceCode.getTokensAfter(duplicateConstituent.duplicated, {\n        count: bracketBeforeTokens.length\n      });\n      const reportLocation = {\n        start: duplicateConstituent.duplicated.loc.start,\n        end: bracketAfterTokens.length > 0 ? bracketAfterTokens[bracketAfterTokens.length - 1].loc.end : duplicateConstituent.duplicated.loc.end\n      };\n      context.report({\n        data: {\n          type: parentNode.type === utils_1.AST_NODE_TYPES.TSIntersectionType ? 'Intersection' : 'Union',\n          previous: sourceCode.getText(duplicateConstituent.duplicatePrevious)\n        },\n        messageId: 'duplicate',\n        node: duplicateConstituent.duplicated,\n        loc: reportLocation,\n        fix: fixer => {\n          return [beforeUnionOrIntersectionToken, ...bracketBeforeTokens, duplicateConstituent.duplicated, ...bracketAfterTokens].map(token => fixer.remove(token));\n        }\n      });\n    }\n    return Object.assign(Object.assign({}, !ignoreIntersections && {\n      TSIntersectionType: checkDuplicate\n    }), !ignoreUnions && {\n      TSUnionType: checkDuplicate\n    });\n  }\n});","map":{"version":3,"names":["utils_1","require","util","__importStar","astIgnoreKeys","Set","isSameAstNode","actualNode","expectedNode","Array","isArray","length","some","nodeEle","index","actualNodeKeys","Object","keys","filter","key","has","expectedNodeKeys","actualNodeKey","prototype","hasOwnProperty","call","exports","default","createRule","name","meta","type","docs","description","recommended","requiresTypeChecking","fixable","messages","duplicate","schema","additionalProperties","properties","ignoreIntersections","ignoreUnions","defaultOptions","create","context","parserServices","getParserServices","checker","program","getTypeChecker","checkDuplicate","node","cachedTypeMap","Map","types","reduce","uniqueConstituents","constituentNode","duplicatedPreviousConstituentInAst","find","ele","reportDuplicate","duplicated","duplicatePrevious","constituentNodeType","getTypeAtLocation","esTreeNodeToTSNodeMap","get","duplicatedPreviousConstituentInType","set","duplicateConstituent","parentNode","sourceCode","getSourceCode","beforeTokens","getTokensBefore","token","value","beforeUnionOrIntersectionToken","bracketBeforeTokens","getTokensBetween","bracketAfterTokens","getTokensAfter","count","reportLocation","start","loc","end","report","data","AST_NODE_TYPES","TSIntersectionType","previous","getText","messageId","fix","fixer","map","remove","assign","TSUnionType"],"sources":["../../src/rules/no-duplicate-type-constituents.ts"],"sourcesContent":[null],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,MAAAA,OAAA,GAAAC,OAAA;AAGA,MAAAC,IAAA,GAAAC,YAAA,CAAAF,OAAA;AAWA,MAAMG,aAAa,GAAG,IAAIC,GAAG,CAAC,CAAC,OAAO,EAAE,KAAK,EAAE,QAAQ,CAAC,CAAC;AAEzD,MAAMC,aAAa,GAAGA,CAACC,UAAmB,EAAEC,YAAqB,KAAa;EAC5E,IAAID,UAAU,KAAKC,YAAY,EAAE;IAC/B,OAAO,IAAI;;EAEb,IACED,UAAU,IACVC,YAAY,IACZ,OAAOD,UAAU,KAAK,QAAQ,IAC9B,OAAOC,YAAY,KAAK,QAAQ,EAChC;IACA,IAAIC,KAAK,CAACC,OAAO,CAACH,UAAU,CAAC,IAAIE,KAAK,CAACC,OAAO,CAACF,YAAY,CAAC,EAAE;MAC5D,IAAID,UAAU,CAACI,MAAM,KAAKH,YAAY,CAACG,MAAM,EAAE;QAC7C,OAAO,KAAK;;MAEd,OAAO,CAACJ,UAAU,CAACK,IAAI,CACrB,CAACC,OAAO,EAAEC,KAAK,KAAK,CAACR,aAAa,CAACO,OAAO,EAAEL,YAAY,CAACM,KAAK,CAAC,CAAC,CACjE;;IAEH,MAAMC,cAAc,GAAGC,MAAM,CAACC,IAAI,CAACV,UAAU,CAAC,CAACW,MAAM,CACnDC,GAAG,IAAI,CAACf,aAAa,CAACgB,GAAG,CAACD,GAAG,CAAC,CAC/B;IACD,MAAME,gBAAgB,GAAGL,MAAM,CAACC,IAAI,CAACT,YAAY,CAAC,CAACU,MAAM,CACvDC,GAAG,IAAI,CAACf,aAAa,CAACgB,GAAG,CAACD,GAAG,CAAC,CAC/B;IACD,IAAIJ,cAAc,CAACJ,MAAM,KAAKU,gBAAgB,CAACV,MAAM,EAAE;MACrD,OAAO,KAAK;;IAEd,IACEI,cAAc,CAACH,IAAI,CACjBU,aAAa,IACX,CAACN,MAAM,CAACO,SAAS,CAACC,cAAc,CAACC,IAAI,CAACjB,YAAY,EAAEc,aAAa,CAAC,CACrE,EACD;MACA,OAAO,KAAK;;IAEd,IACEP,cAAc,CAACH,IAAI,CACjBU,aAAa,IACX,CAAChB,aAAa,CACZC,UAAU,CAACe,aAAwC,CAAC,EACpDd,YAAY,CAACc,aAA0C,CAAC,CACzD,CACJ,EACD;MACA,OAAO,KAAK;;IAEd,OAAO,IAAI;;EAEb,OAAO,KAAK;AACd,CAAC;AAEDI,OAAA,CAAAC,OAAA,GAAezB,IAAI,CAAC0B,UAAU,CAAsB;EAClDC,IAAI,EAAE,gCAAgC;EACtCC,IAAI,EAAE;IACJC,IAAI,EAAE,YAAY;IAClBC,IAAI,EAAE;MACJC,WAAW,EACT,gEAAgE;MAClEC,WAAW,EAAE,KAAK;MAClBC,oBAAoB,EAAE;KACvB;IACDC,OAAO,EAAE,MAAM;IACfC,QAAQ,EAAE;MACRC,SAAS,EAAE;KACZ;IACDC,MAAM,EAAE,CACN;MACEC,oBAAoB,EAAE,KAAK;MAC3BT,IAAI,EAAE,QAAQ;MACdU,UAAU,EAAE;QACVC,mBAAmB,EAAE;UACnBX,IAAI,EAAE;SACP;QACDY,YAAY,EAAE;UACZZ,IAAI,EAAE;;;KAGX;GAEJ;EACDa,cAAc,EAAE,CACd;IACEF,mBAAmB,EAAE,KAAK;IAC1BC,YAAY,EAAE;GACf,CACF;EACDE,MAAMA,CAACC,OAAO,EAAE,CAAC;IAAEJ,mBAAmB;IAAEC;EAAY,CAAE,CAAC;IACrD,MAAMI,cAAc,GAAG7C,IAAI,CAAC8C,iBAAiB,CAACF,OAAO,CAAC;IACtD,MAAMG,OAAO,GAAGF,cAAc,CAACG,OAAO,CAACC,cAAc,EAAE;IAEvD,SAASC,cAAcA,CACrBC,IAAwD;MAExD,MAAMC,aAAa,GAAiC,IAAIC,GAAG,EAAE;MAC7DF,IAAI,CAACG,KAAK,CAACC,MAAM,CACf,CAACC,kBAAkB,EAAEC,eAAe,KAAI;QACtC,MAAMC,kCAAkC,GAAGF,kBAAkB,CAACG,IAAI,CAChEC,GAAG,IAAIxD,aAAa,CAACwD,GAAG,EAAEH,eAAe,CAAC,CAC3C;QACD,IAAIC,kCAAkC,EAAE;UACtCG,eAAe,CACb;YACEC,UAAU,EAAEL,eAAe;YAC3BM,iBAAiB,EAAEL;WACpB,EACDP,IAAI,CACL;UACD,OAAOK,kBAAkB;;QAE3B,MAAMQ,mBAAmB,GAAGjB,OAAO,CAACkB,iBAAiB,CACnDpB,cAAc,CAACqB,qBAAqB,CAACC,GAAG,CAACV,eAAe,CAAC,CAC1D;QACD,MAAMW,mCAAmC,GACvChB,aAAa,CAACe,GAAG,CAACH,mBAAmB,CAAC;QACxC,IAAII,mCAAmC,EAAE;UACvCP,eAAe,CACb;YACEC,UAAU,EAAEL,eAAe;YAC3BM,iBAAiB,EAAEK;WACpB,EACDjB,IAAI,CACL;UACD,OAAOK,kBAAkB;;QAE3BJ,aAAa,CAACiB,GAAG,CAACL,mBAAmB,EAAEP,eAAe,CAAC;QACvD,OAAO,CAAC,GAAGD,kBAAkB,EAAEC,eAAe,CAAC;MACjD,CAAC,EACD,EAAE,CACH;IACH;IACA,SAASI,eAAeA,CACtBS,oBAGC,EACDC,UAA8D;MAE9D,MAAMC,UAAU,GAAG5B,OAAO,CAAC6B,aAAa,EAAE;MAC1C,MAAMC,YAAY,GAAGF,UAAU,CAACG,eAAe,CAC7CL,oBAAoB,CAACR,UAAU,EAC/B;QAAE9C,MAAM,EAAE4D,KAAK,IAAIA,KAAK,CAACC,KAAK,KAAK,GAAG,IAAID,KAAK,CAACC,KAAK,KAAK;MAAG,CAAE,CAChE;MACD,MAAMC,8BAA8B,GAClCJ,YAAY,CAACA,YAAY,CAACjE,MAAM,GAAG,CAAC,CAAC;MACvC,MAAMsE,mBAAmB,GAAGP,UAAU,CAACQ,gBAAgB,CACrDF,8BAA8B,EAC9BR,oBAAoB,CAACR,UAAU,CAChC;MACD,MAAMmB,kBAAkB,GAAGT,UAAU,CAACU,cAAc,CAClDZ,oBAAoB,CAACR,UAAU,EAC/B;QAAEqB,KAAK,EAAEJ,mBAAmB,CAACtE;MAAM,CAAE,CACtC;MACD,MAAM2E,cAAc,GAA4B;QAC9CC,KAAK,EAAEf,oBAAoB,CAACR,UAAU,CAACwB,GAAG,CAACD,KAAK;QAChDE,GAAG,EACDN,kBAAkB,CAACxE,MAAM,GAAG,CAAC,GACzBwE,kBAAkB,CAACA,kBAAkB,CAACxE,MAAM,GAAG,CAAC,CAAC,CAAC6E,GAAG,CAACC,GAAG,GACzDjB,oBAAoB,CAACR,UAAU,CAACwB,GAAG,CAACC;OAC3C;MACD3C,OAAO,CAAC4C,MAAM,CAAC;QACbC,IAAI,EAAE;UACJ5D,IAAI,EACF0C,UAAU,CAAC1C,IAAI,KAAK/B,OAAA,CAAA4F,cAAc,CAACC,kBAAkB,GACjD,cAAc,GACd,OAAO;UACbC,QAAQ,EAAEpB,UAAU,CAACqB,OAAO,CAACvB,oBAAoB,CAACP,iBAAiB;SACpE;QACD+B,SAAS,EAAE,WAAW;QACtB3C,IAAI,EAAEmB,oBAAoB,CAACR,UAAU;QACrCwB,GAAG,EAAEF,cAAc;QACnBW,GAAG,EAAEC,KAAK,IAAG;UACX,OAAO,CACLlB,8BAA8B,EAC9B,GAAGC,mBAAmB,EACtBT,oBAAoB,CAACR,UAAU,EAC/B,GAAGmB,kBAAkB,CACtB,CAACgB,GAAG,CAACrB,KAAK,IAAIoB,KAAK,CAACE,MAAM,CAACtB,KAAK,CAAC,CAAC;QACrC;OACD,CAAC;IACJ;IACA,OAAA9D,MAAA,CAAAqF,MAAA,CAAArF,MAAA,CAAAqF,MAAA,KACM,CAAC3D,mBAAmB,IAAI;MAC1BmD,kBAAkB,EAAEzC;KACpB,GACE,CAACT,YAAY,IAAI;MACnB2D,WAAW,EAAElD;KACb;EAEN;CACD,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}