{"ast":null,"code":"'use strict';\n\nvar path = require('path');\nvar loaderUtils = require('loader-utils');\nvar process = require('./process');\n\n/**\n * Webpack loader that manipulates the source-map of a preceding loader.\n * @this {object} The loader context\n * @param {string} content The content\n * @param {object} sourceMap The source-map\n * @returns {string|String}\n */\nfunction loader(content, sourceMap) {\n  /* jshint validthis:true */\n\n  // loader result is cacheable\n  this.cacheable();\n\n  // webpack 1: prefer loader query, else options object\n  // webpack 2: prefer loader options\n  // webpack 3: deprecate loader.options object\n  // webpack 4: loader.options no longer defined\n  var options = Object.assign({}, this.options && this.options.adjustSourcemapLoader, loaderUtils.getOptions(this), {\n    sep: path.sep\n  });\n\n  // process the source-map\n  var outputMap = process(this, options, sourceMap);\n\n  // need to use callback when there are multiple arguments\n  this.callback(null, content, outputMap);\n}\nmodule.exports = loader;","map":{"version":3,"names":["path","require","loaderUtils","process","loader","content","sourceMap","cacheable","options","Object","assign","adjustSourcemapLoader","getOptions","sep","outputMap","callback","module","exports"],"sources":["C:/Users/chest/OneDrive/Documentos/GitHub/HackUPC/frontend/node_modules/adjust-sourcemap-loader/lib/loader.js"],"sourcesContent":["'use strict';\n\nvar path = require('path');\n\nvar loaderUtils = require('loader-utils');\n\nvar process = require('./process');\n\n/**\n * Webpack loader that manipulates the source-map of a preceding loader.\n * @this {object} The loader context\n * @param {string} content The content\n * @param {object} sourceMap The source-map\n * @returns {string|String}\n */\nfunction loader(content, sourceMap) {\n  /* jshint validthis:true */\n\n  // loader result is cacheable\n  this.cacheable();\n\n  // webpack 1: prefer loader query, else options object\n  // webpack 2: prefer loader options\n  // webpack 3: deprecate loader.options object\n  // webpack 4: loader.options no longer defined\n  var options = Object.assign(\n    {},\n    this.options && this.options.adjustSourcemapLoader,\n    loaderUtils.getOptions(this),\n    {sep: path.sep}\n  );\n\n  // process the source-map\n  var outputMap = process(this, options, sourceMap);\n\n  // need to use callback when there are multiple arguments\n  this.callback(null, content, outputMap);\n}\n\nmodule.exports = loader;\n"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,IAAI,GAAGC,OAAO,CAAC,MAAM,CAAC;AAE1B,IAAIC,WAAW,GAAGD,OAAO,CAAC,cAAc,CAAC;AAEzC,IAAIE,OAAO,GAAGF,OAAO,CAAC,WAAW,CAAC;;AAElC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASG,MAAMA,CAACC,OAAO,EAAEC,SAAS,EAAE;EAClC;;EAEA;EACA,IAAI,CAACC,SAAS,CAAC,CAAC;;EAEhB;EACA;EACA;EACA;EACA,IAAIC,OAAO,GAAGC,MAAM,CAACC,MAAM,CACzB,CAAC,CAAC,EACF,IAAI,CAACF,OAAO,IAAI,IAAI,CAACA,OAAO,CAACG,qBAAqB,EAClDT,WAAW,CAACU,UAAU,CAAC,IAAI,CAAC,EAC5B;IAACC,GAAG,EAAEb,IAAI,CAACa;EAAG,CAChB,CAAC;;EAED;EACA,IAAIC,SAAS,GAAGX,OAAO,CAAC,IAAI,EAAEK,OAAO,EAAEF,SAAS,CAAC;;EAEjD;EACA,IAAI,CAACS,QAAQ,CAAC,IAAI,EAAEV,OAAO,EAAES,SAAS,CAAC;AACzC;AAEAE,MAAM,CAACC,OAAO,GAAGb,MAAM","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}