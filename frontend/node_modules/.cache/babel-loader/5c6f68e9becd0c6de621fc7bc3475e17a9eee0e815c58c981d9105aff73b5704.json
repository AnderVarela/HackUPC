{"ast":null,"code":"/**\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *     http://www.apache.org/licenses/LICENSE-2.0\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst rollup = require(\"rollup\");\nconst path = require(\"path\");\nconst omt = require(\".\");\nconst fs = require(\"fs\");\nconst chalk = require(\"chalk\");\nconst karma = require(\"karma\");\nconst myKarmaConfig = require(\"./karma.conf.js\");\nasync function fileExists(file) {\n  try {\n    const stat = await fs.promises.stat(file);\n    return stat.isFile();\n  } catch (e) {\n    return false;\n  }\n}\nasync function init() {\n  await Promise.all([\"./tests/fixtures/simple-bundle/entry.js\", \"./tests/fixtures/import-meta/entry.js\", \"./tests/fixtures/dynamic-import/entry.js\", \"./tests/fixtures/public-path/entry.js\", \"./tests/fixtures/worker/entry.js\", \"./tests/fixtures/module-worker/entry.js\", \"./tests/fixtures/more-workers/entry.js\", \"./tests/fixtures/amd-function-name/entry.js\", \"./tests/fixtures/single-default/entry.js\", \"./tests/fixtures/import-worker-url/entry.js\", \"./tests/fixtures/import-meta-worker/entry.js\", \"./tests/fixtures/import-worker-url-custom-scheme/entry.js\", \"./tests/fixtures/assets-in-worker/entry.js\", \"./tests/fixtures/url-import-meta-worker/entry.js\"].map(async input => {\n    const pathName = path.dirname(input);\n    const outputOptions = {\n      dir: path.join(pathName, \"build\"),\n      format: \"amd\"\n    };\n    let rollupConfig = {\n      input,\n      strictDeprecations: true,\n      // Copied / adapted from default `onwarn` in Rollup CLI.\n      onwarn: warning => {\n        console.warn(`⚠️   ${chalk.bold(warning.message)}`);\n        if (warning.url) {\n          console.warn(chalk.cyan(warning.url));\n        }\n        if (warning.loc) {\n          console.warn(`${warning.loc.file} (${warning.loc.line}:${warning.loc.column})`);\n        }\n        if (warning.frame) {\n          console.warn(chalk.dim(warning.frame));\n        }\n        console.warn(\"\");\n      }\n    };\n    const rollupConfigPath = \"./\" + path.join(pathName, \"rollup.config.js\");\n    const configPath = \"./\" + path.join(pathName, \"config.json\");\n    if (await fileExists(rollupConfigPath)) {\n      require(rollupConfigPath)(rollupConfig, outputOptions, omt);\n    } else if (await fileExists(configPath)) {\n      rollupConfig.plugins = [omt(require(configPath))];\n    } else {\n      rollupConfig.plugins = [omt()];\n    }\n    const bundle = await rollup.rollup(rollupConfig);\n    await bundle.write(outputOptions);\n  }));\n  const karmaConfig = {\n    port: 9876\n  };\n  myKarmaConfig({\n    set(config) {\n      Object.assign(karmaConfig, config);\n    }\n  });\n  const server = new karma.Server(karmaConfig, code => {\n    console.log(`Karma exited with code ${code}`);\n    process.exit(code);\n  });\n  server.start();\n}\ninit();","map":{"version":3,"names":["rollup","require","path","omt","fs","chalk","karma","myKarmaConfig","fileExists","file","stat","promises","isFile","e","init","Promise","all","map","input","pathName","dirname","outputOptions","dir","join","format","rollupConfig","strictDeprecations","onwarn","warning","console","warn","bold","message","url","cyan","loc","line","column","frame","dim","rollupConfigPath","configPath","plugins","bundle","write","karmaConfig","port","set","config","Object","assign","server","Server","code","log","process","exit","start"],"sources":["C:/Users/chest/OneDrive/Documentos/GitHub/HackUPC/frontend/node_modules/@surma/rollup-plugin-off-main-thread/run_tests.js"],"sourcesContent":["/**\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *     http://www.apache.org/licenses/LICENSE-2.0\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst rollup = require(\"rollup\");\nconst path = require(\"path\");\nconst omt = require(\".\");\nconst fs = require(\"fs\");\nconst chalk = require(\"chalk\");\n\nconst karma = require(\"karma\");\nconst myKarmaConfig = require(\"./karma.conf.js\");\n\nasync function fileExists(file) {\n  try {\n    const stat = await fs.promises.stat(file);\n    return stat.isFile();\n  } catch (e) {\n    return false;\n  }\n}\n\nasync function init() {\n  await Promise.all(\n    [\n      \"./tests/fixtures/simple-bundle/entry.js\",\n      \"./tests/fixtures/import-meta/entry.js\",\n      \"./tests/fixtures/dynamic-import/entry.js\",\n      \"./tests/fixtures/public-path/entry.js\",\n      \"./tests/fixtures/worker/entry.js\",\n      \"./tests/fixtures/module-worker/entry.js\",\n      \"./tests/fixtures/more-workers/entry.js\",\n      \"./tests/fixtures/amd-function-name/entry.js\",\n      \"./tests/fixtures/single-default/entry.js\",\n      \"./tests/fixtures/import-worker-url/entry.js\",\n      \"./tests/fixtures/import-meta-worker/entry.js\",\n      \"./tests/fixtures/import-worker-url-custom-scheme/entry.js\",\n      \"./tests/fixtures/assets-in-worker/entry.js\",\n      \"./tests/fixtures/url-import-meta-worker/entry.js\"\n    ].map(async input => {\n      const pathName = path.dirname(input);\n      const outputOptions = {\n        dir: path.join(pathName, \"build\"),\n        format: \"amd\"\n      };\n      let rollupConfig = {\n        input,\n        strictDeprecations: true,\n        // Copied / adapted from default `onwarn` in Rollup CLI.\n        onwarn: warning => {\n          console.warn(`⚠️   ${chalk.bold(warning.message)}`);\n\n          if (warning.url) {\n            console.warn(chalk.cyan(warning.url));\n          }\n\n          if (warning.loc) {\n            console.warn(\n              `${warning.loc.file} (${warning.loc.line}:${warning.loc.column})`\n            );\n          }\n\n          if (warning.frame) {\n            console.warn(chalk.dim(warning.frame));\n          }\n\n          console.warn(\"\");\n        }\n      };\n      const rollupConfigPath = \"./\" + path.join(pathName, \"rollup.config.js\");\n      const configPath = \"./\" + path.join(pathName, \"config.json\");\n      if (await fileExists(rollupConfigPath)) {\n        require(rollupConfigPath)(rollupConfig, outputOptions, omt);\n      } else if (await fileExists(configPath)) {\n        rollupConfig.plugins = [omt(require(configPath))];\n      } else {\n        rollupConfig.plugins = [omt()];\n      }\n      const bundle = await rollup.rollup(rollupConfig);\n      await bundle.write(outputOptions);\n    })\n  );\n\n  const karmaConfig = { port: 9876 };\n  myKarmaConfig({\n    set(config) {\n      Object.assign(karmaConfig, config);\n    }\n  });\n  const server = new karma.Server(karmaConfig, code => {\n    console.log(`Karma exited with code ${code}`);\n    process.exit(code);\n  });\n  server.start();\n}\ninit();\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}