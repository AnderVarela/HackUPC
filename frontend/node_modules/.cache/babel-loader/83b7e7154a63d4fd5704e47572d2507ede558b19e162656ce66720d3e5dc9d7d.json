{"ast":null,"code":"'use strict';\n\nconst fs = require('fs');\nconst path = require('path');\nconst {\n  promisify\n} = require('util');\nconst camelcase = require('camelcase');\nconst findUp = require('find-up');\nconst resolveFrom = require('resolve-from');\nconst getPackageType = require('get-package-type');\nconst readFile = promisify(fs.readFile);\nlet loadActive = false;\nfunction isLoading() {\n  return loadActive;\n}\nconst standardConfigFiles = ['.nycrc', '.nycrc.json', '.nycrc.yml', '.nycrc.yaml', 'nyc.config.js', 'nyc.config.cjs', 'nyc.config.mjs'];\nfunction camelcasedConfig(config) {\n  const results = {};\n  for (const [field, value] of Object.entries(config)) {\n    results[camelcase(field)] = value;\n  }\n  return results;\n}\nasync function findPackage(options) {\n  const cwd = options.cwd || process.env.NYC_CWD || process.cwd();\n  const pkgPath = await findUp('package.json', {\n    cwd\n  });\n  if (pkgPath) {\n    const pkgConfig = JSON.parse(await readFile(pkgPath, 'utf8')).nyc || {};\n    if ('cwd' in pkgConfig) {\n      pkgConfig.cwd = path.resolve(path.dirname(pkgPath), pkgConfig.cwd);\n    }\n    return {\n      cwd: path.dirname(pkgPath),\n      pkgConfig\n    };\n  }\n  return {\n    cwd,\n    pkgConfig: {}\n  };\n}\nasync function actualLoad(configFile) {\n  if (!configFile) {\n    return {};\n  }\n  const configExt = path.extname(configFile).toLowerCase();\n  switch (configExt) {\n    case '.js':\n      /* istanbul ignore next: coverage for 13.2.0+ is shown in load-esm.js */\n      if ((await getPackageType(configFile)) === 'module') {\n        return require('./load-esm')(configFile);\n      }\n\n    /* fallthrough */\n    case '.cjs':\n      return require(configFile);\n    /* istanbul ignore next: coverage for 13.2.0+ is shown in load-esm.js */\n    case '.mjs':\n      return require('./load-esm')(configFile);\n    case '.yml':\n    case '.yaml':\n      return require('js-yaml').load(await readFile(configFile, 'utf8'));\n    default:\n      return JSON.parse(await readFile(configFile, 'utf8'));\n  }\n}\nasync function loadFile(configFile) {\n  /* This lets @istanbuljs/esm-loader-hook avoid circular initialization when loading\n   * configuration.  This should generally only happen when the loader hook is active\n   * on the main nyc process. */\n  loadActive = true;\n  try {\n    return await actualLoad(configFile);\n  } finally {\n    loadActive = false;\n  }\n}\nasync function applyExtends(config, filename, loopCheck = new Set()) {\n  config = camelcasedConfig(config);\n  if ('extends' in config) {\n    const extConfigs = [].concat(config.extends);\n    if (extConfigs.some(e => typeof e !== 'string')) {\n      throw new TypeError(`${filename} contains an invalid 'extends' option`);\n    }\n    delete config.extends;\n    const filePath = path.dirname(filename);\n    for (const extConfig of extConfigs) {\n      const configFile = resolveFrom.silent(filePath, extConfig) || resolveFrom.silent(filePath, './' + extConfig);\n      if (!configFile) {\n        throw new Error(`Could not resolve configuration file ${extConfig} from ${path.dirname(filename)}.`);\n      }\n      if (loopCheck.has(configFile)) {\n        throw new Error(`Circular extended configurations: '${configFile}'.`);\n      }\n      loopCheck.add(configFile);\n\n      // eslint-disable-next-line no-await-in-loop\n      const configLoaded = await loadFile(configFile);\n      if ('cwd' in configLoaded) {\n        configLoaded.cwd = path.resolve(path.dirname(configFile), configLoaded.cwd);\n      }\n      Object.assign(config,\n      // eslint-disable-next-line no-await-in-loop\n      await applyExtends(configLoaded, configFile, loopCheck));\n    }\n  }\n  return config;\n}\nasync function loadNycConfig(options = {}) {\n  const {\n    cwd,\n    pkgConfig\n  } = await findPackage(options);\n  const configFiles = [].concat(options.nycrcPath || standardConfigFiles);\n  const configFile = await findUp(configFiles, {\n    cwd\n  });\n  if (options.nycrcPath && !configFile) {\n    throw new Error(`Requested configuration file ${options.nycrcPath} not found`);\n  }\n  const config = {\n    cwd,\n    ...(await applyExtends(pkgConfig, path.join(cwd, 'package.json'))),\n    ...(await applyExtends(await loadFile(configFile), configFile))\n  };\n  const arrayFields = ['require', 'extension', 'exclude', 'include'];\n  for (const arrayField of arrayFields) {\n    if (config[arrayField]) {\n      config[arrayField] = [].concat(config[arrayField]);\n    }\n  }\n  return config;\n}\nmodule.exports = {\n  loadNycConfig,\n  isLoading\n};","map":{"version":3,"names":["fs","require","path","promisify","camelcase","findUp","resolveFrom","getPackageType","readFile","loadActive","isLoading","standardConfigFiles","camelcasedConfig","config","results","field","value","Object","entries","findPackage","options","cwd","process","env","NYC_CWD","pkgPath","pkgConfig","JSON","parse","nyc","resolve","dirname","actualLoad","configFile","configExt","extname","toLowerCase","load","loadFile","applyExtends","filename","loopCheck","Set","extConfigs","concat","extends","some","e","TypeError","filePath","extConfig","silent","Error","has","add","configLoaded","assign","loadNycConfig","configFiles","nycrcPath","join","arrayFields","arrayField","module","exports"],"sources":["C:/Users/chest/OneDrive/Documentos/GitHub/HackUPC/frontend/node_modules/@istanbuljs/load-nyc-config/index.js"],"sourcesContent":["'use strict';\n\nconst fs = require('fs');\nconst path = require('path');\nconst {promisify} = require('util');\nconst camelcase = require('camelcase');\nconst findUp = require('find-up');\nconst resolveFrom = require('resolve-from');\nconst getPackageType = require('get-package-type');\n\nconst readFile = promisify(fs.readFile);\n\nlet loadActive = false;\n\nfunction isLoading() {\n\treturn loadActive;\n}\n\nconst standardConfigFiles = [\n\t'.nycrc',\n\t'.nycrc.json',\n\t'.nycrc.yml',\n\t'.nycrc.yaml',\n\t'nyc.config.js',\n\t'nyc.config.cjs',\n\t'nyc.config.mjs'\n];\n\nfunction camelcasedConfig(config) {\n\tconst results = {};\n\tfor (const [field, value] of Object.entries(config)) {\n\t\tresults[camelcase(field)] = value;\n\t}\n\n\treturn results;\n}\n\nasync function findPackage(options) {\n\tconst cwd = options.cwd || process.env.NYC_CWD || process.cwd();\n\tconst pkgPath = await findUp('package.json', {cwd});\n\tif (pkgPath) {\n\t\tconst pkgConfig = JSON.parse(await readFile(pkgPath, 'utf8')).nyc || {};\n\t\tif ('cwd' in pkgConfig) {\n\t\t\tpkgConfig.cwd = path.resolve(path.dirname(pkgPath), pkgConfig.cwd);\n\t\t}\n\n\t\treturn {\n\t\t\tcwd: path.dirname(pkgPath),\n\t\t\tpkgConfig\n\t\t};\n\t}\n\n\treturn {\n\t\tcwd,\n\t\tpkgConfig: {}\n\t};\n}\n\nasync function actualLoad(configFile) {\n\tif (!configFile) {\n\t\treturn {};\n\t}\n\n\tconst configExt = path.extname(configFile).toLowerCase();\n\tswitch (configExt) {\n\t\tcase '.js':\n\t\t\t/* istanbul ignore next: coverage for 13.2.0+ is shown in load-esm.js */\n\t\t\tif (await getPackageType(configFile) === 'module') {\n\t\t\t\treturn require('./load-esm')(configFile);\n\t\t\t}\n\n\t\t\t/* fallthrough */\n\t\tcase '.cjs':\n\t\t\treturn require(configFile);\n\t\t/* istanbul ignore next: coverage for 13.2.0+ is shown in load-esm.js */\n\t\tcase '.mjs':\n\t\t\treturn require('./load-esm')(configFile);\n\t\tcase '.yml':\n\t\tcase '.yaml':\n\t\t\treturn require('js-yaml').load(await readFile(configFile, 'utf8'));\n\t\tdefault:\n\t\t\treturn JSON.parse(await readFile(configFile, 'utf8'));\n\t}\n}\n\nasync function loadFile(configFile) {\n\t/* This lets @istanbuljs/esm-loader-hook avoid circular initialization when loading\n\t * configuration.  This should generally only happen when the loader hook is active\n\t * on the main nyc process. */\n\tloadActive = true;\n\n\ttry {\n\t\treturn await actualLoad(configFile);\n\t} finally {\n\t\tloadActive = false;\n\t}\n}\n\nasync function applyExtends(config, filename, loopCheck = new Set()) {\n\tconfig = camelcasedConfig(config);\n\tif ('extends' in config) {\n\t\tconst extConfigs = [].concat(config.extends);\n\t\tif (extConfigs.some(e => typeof e !== 'string')) {\n\t\t\tthrow new TypeError(`${filename} contains an invalid 'extends' option`);\n\t\t}\n\n\t\tdelete config.extends;\n\t\tconst filePath = path.dirname(filename);\n\t\tfor (const extConfig of extConfigs) {\n\t\t\tconst configFile = resolveFrom.silent(filePath, extConfig) ||\n\t\t\t\tresolveFrom.silent(filePath, './' + extConfig);\n\t\t\tif (!configFile) {\n\t\t\t\tthrow new Error(`Could not resolve configuration file ${extConfig} from ${path.dirname(filename)}.`);\n\t\t\t}\n\n\t\t\tif (loopCheck.has(configFile)) {\n\t\t\t\tthrow new Error(`Circular extended configurations: '${configFile}'.`);\n\t\t\t}\n\n\t\t\tloopCheck.add(configFile);\n\n\t\t\t// eslint-disable-next-line no-await-in-loop\n\t\t\tconst configLoaded = await loadFile(configFile);\n\t\t\tif ('cwd' in configLoaded) {\n\t\t\t\tconfigLoaded.cwd = path.resolve(path.dirname(configFile), configLoaded.cwd);\n\t\t\t}\n\n\t\t\tObject.assign(\n\t\t\t\tconfig,\n\t\t\t\t// eslint-disable-next-line no-await-in-loop\n\t\t\t\tawait applyExtends(configLoaded, configFile, loopCheck)\n\t\t\t);\n\t\t}\n\t}\n\n\treturn config;\n}\n\nasync function loadNycConfig(options = {}) {\n\tconst {cwd, pkgConfig} = await findPackage(options);\n\tconst configFiles = [].concat(options.nycrcPath || standardConfigFiles);\n\tconst configFile = await findUp(configFiles, {cwd});\n\tif (options.nycrcPath && !configFile) {\n\t\tthrow new Error(`Requested configuration file ${options.nycrcPath} not found`);\n\t}\n\n\tconst config = {\n\t\tcwd,\n\t\t...(await applyExtends(pkgConfig, path.join(cwd, 'package.json'))),\n\t\t...(await applyExtends(await loadFile(configFile), configFile))\n\t};\n\n\tconst arrayFields = ['require', 'extension', 'exclude', 'include'];\n\tfor (const arrayField of arrayFields) {\n\t\tif (config[arrayField]) {\n\t\t\tconfig[arrayField] = [].concat(config[arrayField]);\n\t\t}\n\t}\n\n\treturn config;\n}\n\nmodule.exports = {\n\tloadNycConfig,\n\tisLoading\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}