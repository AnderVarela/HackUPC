{"ast":null,"code":"'use strict';\n\n/*eslint-disable max-len,no-use-before-define*/\nvar common = require('./common');\nvar YAMLException = require('./exception');\nvar makeSnippet = require('./snippet');\nvar DEFAULT_SCHEMA = require('./schema/default');\nvar _hasOwnProperty = Object.prototype.hasOwnProperty;\nvar CONTEXT_FLOW_IN = 1;\nvar CONTEXT_FLOW_OUT = 2;\nvar CONTEXT_BLOCK_IN = 3;\nvar CONTEXT_BLOCK_OUT = 4;\nvar CHOMPING_CLIP = 1;\nvar CHOMPING_STRIP = 2;\nvar CHOMPING_KEEP = 3;\nvar PATTERN_NON_PRINTABLE = /[\\x00-\\x08\\x0B\\x0C\\x0E-\\x1F\\x7F-\\x84\\x86-\\x9F\\uFFFE\\uFFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]/;\nvar PATTERN_NON_ASCII_LINE_BREAKS = /[\\x85\\u2028\\u2029]/;\nvar PATTERN_FLOW_INDICATORS = /[,\\[\\]\\{\\}]/;\nvar PATTERN_TAG_HANDLE = /^(?:!|!!|![a-z\\-]+!)$/i;\nvar PATTERN_TAG_URI = /^(?:!|[^,\\[\\]\\{\\}])(?:%[0-9a-f]{2}|[0-9a-z\\-#;\\/\\?:@&=\\+\\$,_\\.!~\\*'\\(\\)\\[\\]])*$/i;\nfunction _class(obj) {\n  return Object.prototype.toString.call(obj);\n}\nfunction is_EOL(c) {\n  return c === 0x0A /* LF */ || c === 0x0D /* CR */;\n}\nfunction is_WHITE_SPACE(c) {\n  return c === 0x09 /* Tab */ || c === 0x20 /* Space */;\n}\nfunction is_WS_OR_EOL(c) {\n  return c === 0x09 /* Tab */ || c === 0x20 /* Space */ || c === 0x0A /* LF */ || c === 0x0D /* CR */;\n}\nfunction is_FLOW_INDICATOR(c) {\n  return c === 0x2C /* , */ || c === 0x5B /* [ */ || c === 0x5D /* ] */ || c === 0x7B /* { */ || c === 0x7D /* } */;\n}\nfunction fromHexCode(c) {\n  var lc;\n  if (0x30 /* 0 */ <= c && c <= 0x39 /* 9 */) {\n    return c - 0x30;\n  }\n\n  /*eslint-disable no-bitwise*/\n  lc = c | 0x20;\n  if (0x61 /* a */ <= lc && lc <= 0x66 /* f */) {\n    return lc - 0x61 + 10;\n  }\n  return -1;\n}\nfunction escapedHexLen(c) {\n  if (c === 0x78 /* x */) {\n    return 2;\n  }\n  if (c === 0x75 /* u */) {\n    return 4;\n  }\n  if (c === 0x55 /* U */) {\n    return 8;\n  }\n  return 0;\n}\nfunction fromDecimalCode(c) {\n  if (0x30 /* 0 */ <= c && c <= 0x39 /* 9 */) {\n    return c - 0x30;\n  }\n  return -1;\n}\nfunction simpleEscapeSequence(c) {\n  /* eslint-disable indent */\n  return c === 0x30 /* 0 */ ? '\\x00' : c === 0x61 /* a */ ? '\\x07' : c === 0x62 /* b */ ? '\\x08' : c === 0x74 /* t */ ? '\\x09' : c === 0x09 /* Tab */ ? '\\x09' : c === 0x6E /* n */ ? '\\x0A' : c === 0x76 /* v */ ? '\\x0B' : c === 0x66 /* f */ ? '\\x0C' : c === 0x72 /* r */ ? '\\x0D' : c === 0x65 /* e */ ? '\\x1B' : c === 0x20 /* Space */ ? ' ' : c === 0x22 /* \" */ ? '\\x22' : c === 0x2F /* / */ ? '/' : c === 0x5C /* \\ */ ? '\\x5C' : c === 0x4E /* N */ ? '\\x85' : c === 0x5F /* _ */ ? '\\xA0' : c === 0x4C /* L */ ? '\\u2028' : c === 0x50 /* P */ ? '\\u2029' : '';\n}\nfunction charFromCodepoint(c) {\n  if (c <= 0xFFFF) {\n    return String.fromCharCode(c);\n  }\n  // Encode UTF-16 surrogate pair\n  // https://en.wikipedia.org/wiki/UTF-16#Code_points_U.2B010000_to_U.2B10FFFF\n  return String.fromCharCode((c - 0x010000 >> 10) + 0xD800, (c - 0x010000 & 0x03FF) + 0xDC00);\n}\nvar simpleEscapeCheck = new Array(256); // integer, for fast access\nvar simpleEscapeMap = new Array(256);\nfor (var i = 0; i < 256; i++) {\n  simpleEscapeCheck[i] = simpleEscapeSequence(i) ? 1 : 0;\n  simpleEscapeMap[i] = simpleEscapeSequence(i);\n}\nfunction State(input, options) {\n  this.input = input;\n  this.filename = options['filename'] || null;\n  this.schema = options['schema'] || DEFAULT_SCHEMA;\n  this.onWarning = options['onWarning'] || null;\n  // (Hidden) Remove? makes the loader to expect YAML 1.1 documents\n  // if such documents have no explicit %YAML directive\n  this.legacy = options['legacy'] || false;\n  this.json = options['json'] || false;\n  this.listener = options['listener'] || null;\n  this.implicitTypes = this.schema.compiledImplicit;\n  this.typeMap = this.schema.compiledTypeMap;\n  this.length = input.length;\n  this.position = 0;\n  this.line = 0;\n  this.lineStart = 0;\n  this.lineIndent = 0;\n\n  // position of first leading tab in the current line,\n  // used to make sure there are no tabs in the indentation\n  this.firstTabInLine = -1;\n  this.documents = [];\n\n  /*\n  this.version;\n  this.checkLineBreaks;\n  this.tagMap;\n  this.anchorMap;\n  this.tag;\n  this.anchor;\n  this.kind;\n  this.result;*/\n}\nfunction generateError(state, message) {\n  var mark = {\n    name: state.filename,\n    buffer: state.input.slice(0, -1),\n    // omit trailing \\0\n    position: state.position,\n    line: state.line,\n    column: state.position - state.lineStart\n  };\n  mark.snippet = makeSnippet(mark);\n  return new YAMLException(message, mark);\n}\nfunction throwError(state, message) {\n  throw generateError(state, message);\n}\nfunction throwWarning(state, message) {\n  if (state.onWarning) {\n    state.onWarning.call(null, generateError(state, message));\n  }\n}\nvar directiveHandlers = {\n  YAML: function handleYamlDirective(state, name, args) {\n    var match, major, minor;\n    if (state.version !== null) {\n      throwError(state, 'duplication of %YAML directive');\n    }\n    if (args.length !== 1) {\n      throwError(state, 'YAML directive accepts exactly one argument');\n    }\n    match = /^([0-9]+)\\.([0-9]+)$/.exec(args[0]);\n    if (match === null) {\n      throwError(state, 'ill-formed argument of the YAML directive');\n    }\n    major = parseInt(match[1], 10);\n    minor = parseInt(match[2], 10);\n    if (major !== 1) {\n      throwError(state, 'unacceptable YAML version of the document');\n    }\n    state.version = args[0];\n    state.checkLineBreaks = minor < 2;\n    if (minor !== 1 && minor !== 2) {\n      throwWarning(state, 'unsupported YAML version of the document');\n    }\n  },\n  TAG: function handleTagDirective(state, name, args) {\n    var handle, prefix;\n    if (args.length !== 2) {\n      throwError(state, 'TAG directive accepts exactly two arguments');\n    }\n    handle = args[0];\n    prefix = args[1];\n    if (!PATTERN_TAG_HANDLE.test(handle)) {\n      throwError(state, 'ill-formed tag handle (first argument) of the TAG directive');\n    }\n    if (_hasOwnProperty.call(state.tagMap, handle)) {\n      throwError(state, 'there is a previously declared suffix for \"' + handle + '\" tag handle');\n    }\n    if (!PATTERN_TAG_URI.test(prefix)) {\n      throwError(state, 'ill-formed tag prefix (second argument) of the TAG directive');\n    }\n    try {\n      prefix = decodeURIComponent(prefix);\n    } catch (err) {\n      throwError(state, 'tag prefix is malformed: ' + prefix);\n    }\n    state.tagMap[handle] = prefix;\n  }\n};\nfunction captureSegment(state, start, end, checkJson) {\n  var _position, _length, _character, _result;\n  if (start < end) {\n    _result = state.input.slice(start, end);\n    if (checkJson) {\n      for (_position = 0, _length = _result.length; _position < _length; _position += 1) {\n        _character = _result.charCodeAt(_position);\n        if (!(_character === 0x09 || 0x20 <= _character && _character <= 0x10FFFF)) {\n          throwError(state, 'expected valid JSON character');\n        }\n      }\n    } else if (PATTERN_NON_PRINTABLE.test(_result)) {\n      throwError(state, 'the stream contains non-printable characters');\n    }\n    state.result += _result;\n  }\n}\nfunction mergeMappings(state, destination, source, overridableKeys) {\n  var sourceKeys, key, index, quantity;\n  if (!common.isObject(source)) {\n    throwError(state, 'cannot merge mappings; the provided source object is unacceptable');\n  }\n  sourceKeys = Object.keys(source);\n  for (index = 0, quantity = sourceKeys.length; index < quantity; index += 1) {\n    key = sourceKeys[index];\n    if (!_hasOwnProperty.call(destination, key)) {\n      destination[key] = source[key];\n      overridableKeys[key] = true;\n    }\n  }\n}\nfunction storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, valueNode, startLine, startLineStart, startPos) {\n  var index, quantity;\n\n  // The output is a plain object here, so keys can only be strings.\n  // We need to convert keyNode to a string, but doing so can hang the process\n  // (deeply nested arrays that explode exponentially using aliases).\n  if (Array.isArray(keyNode)) {\n    keyNode = Array.prototype.slice.call(keyNode);\n    for (index = 0, quantity = keyNode.length; index < quantity; index += 1) {\n      if (Array.isArray(keyNode[index])) {\n        throwError(state, 'nested arrays are not supported inside keys');\n      }\n      if (typeof keyNode === 'object' && _class(keyNode[index]) === '[object Object]') {\n        keyNode[index] = '[object Object]';\n      }\n    }\n  }\n\n  // Avoid code execution in load() via toString property\n  // (still use its own toString for arrays, timestamps,\n  // and whatever user schema extensions happen to have @@toStringTag)\n  if (typeof keyNode === 'object' && _class(keyNode) === '[object Object]') {\n    keyNode = '[object Object]';\n  }\n  keyNode = String(keyNode);\n  if (_result === null) {\n    _result = {};\n  }\n  if (keyTag === 'tag:yaml.org,2002:merge') {\n    if (Array.isArray(valueNode)) {\n      for (index = 0, quantity = valueNode.length; index < quantity; index += 1) {\n        mergeMappings(state, _result, valueNode[index], overridableKeys);\n      }\n    } else {\n      mergeMappings(state, _result, valueNode, overridableKeys);\n    }\n  } else {\n    if (!state.json && !_hasOwnProperty.call(overridableKeys, keyNode) && _hasOwnProperty.call(_result, keyNode)) {\n      state.line = startLine || state.line;\n      state.lineStart = startLineStart || state.lineStart;\n      state.position = startPos || state.position;\n      throwError(state, 'duplicated mapping key');\n    }\n\n    // used for this specific key only because Object.defineProperty is slow\n    if (keyNode === '__proto__') {\n      Object.defineProperty(_result, keyNode, {\n        configurable: true,\n        enumerable: true,\n        writable: true,\n        value: valueNode\n      });\n    } else {\n      _result[keyNode] = valueNode;\n    }\n    delete overridableKeys[keyNode];\n  }\n  return _result;\n}\nfunction readLineBreak(state) {\n  var ch;\n  ch = state.input.charCodeAt(state.position);\n  if (ch === 0x0A /* LF */) {\n    state.position++;\n  } else if (ch === 0x0D /* CR */) {\n    state.position++;\n    if (state.input.charCodeAt(state.position) === 0x0A /* LF */) {\n      state.position++;\n    }\n  } else {\n    throwError(state, 'a line break is expected');\n  }\n  state.line += 1;\n  state.lineStart = state.position;\n  state.firstTabInLine = -1;\n}\nfunction skipSeparationSpace(state, allowComments, checkIndent) {\n  var lineBreaks = 0,\n    ch = state.input.charCodeAt(state.position);\n  while (ch !== 0) {\n    while (is_WHITE_SPACE(ch)) {\n      if (ch === 0x09 /* Tab */ && state.firstTabInLine === -1) {\n        state.firstTabInLine = state.position;\n      }\n      ch = state.input.charCodeAt(++state.position);\n    }\n    if (allowComments && ch === 0x23 /* # */) {\n      do {\n        ch = state.input.charCodeAt(++state.position);\n      } while (ch !== 0x0A /* LF */ && ch !== 0x0D /* CR */ && ch !== 0);\n    }\n    if (is_EOL(ch)) {\n      readLineBreak(state);\n      ch = state.input.charCodeAt(state.position);\n      lineBreaks++;\n      state.lineIndent = 0;\n      while (ch === 0x20 /* Space */) {\n        state.lineIndent++;\n        ch = state.input.charCodeAt(++state.position);\n      }\n    } else {\n      break;\n    }\n  }\n  if (checkIndent !== -1 && lineBreaks !== 0 && state.lineIndent < checkIndent) {\n    throwWarning(state, 'deficient indentation');\n  }\n  return lineBreaks;\n}\nfunction testDocumentSeparator(state) {\n  var _position = state.position,\n    ch;\n  ch = state.input.charCodeAt(_position);\n\n  // Condition state.position === state.lineStart is tested\n  // in parent on each call, for efficiency. No needs to test here again.\n  if ((ch === 0x2D /* - */ || ch === 0x2E /* . */) && ch === state.input.charCodeAt(_position + 1) && ch === state.input.charCodeAt(_position + 2)) {\n    _position += 3;\n    ch = state.input.charCodeAt(_position);\n    if (ch === 0 || is_WS_OR_EOL(ch)) {\n      return true;\n    }\n  }\n  return false;\n}\nfunction writeFoldedLines(state, count) {\n  if (count === 1) {\n    state.result += ' ';\n  } else if (count > 1) {\n    state.result += common.repeat('\\n', count - 1);\n  }\n}\nfunction readPlainScalar(state, nodeIndent, withinFlowCollection) {\n  var preceding,\n    following,\n    captureStart,\n    captureEnd,\n    hasPendingContent,\n    _line,\n    _lineStart,\n    _lineIndent,\n    _kind = state.kind,\n    _result = state.result,\n    ch;\n  ch = state.input.charCodeAt(state.position);\n  if (is_WS_OR_EOL(ch) || is_FLOW_INDICATOR(ch) || ch === 0x23 /* # */ || ch === 0x26 /* & */ || ch === 0x2A /* * */ || ch === 0x21 /* ! */ || ch === 0x7C /* | */ || ch === 0x3E /* > */ || ch === 0x27 /* ' */ || ch === 0x22 /* \" */ || ch === 0x25 /* % */ || ch === 0x40 /* @ */ || ch === 0x60 /* ` */) {\n    return false;\n  }\n  if (ch === 0x3F /* ? */ || ch === 0x2D /* - */) {\n    following = state.input.charCodeAt(state.position + 1);\n    if (is_WS_OR_EOL(following) || withinFlowCollection && is_FLOW_INDICATOR(following)) {\n      return false;\n    }\n  }\n  state.kind = 'scalar';\n  state.result = '';\n  captureStart = captureEnd = state.position;\n  hasPendingContent = false;\n  while (ch !== 0) {\n    if (ch === 0x3A /* : */) {\n      following = state.input.charCodeAt(state.position + 1);\n      if (is_WS_OR_EOL(following) || withinFlowCollection && is_FLOW_INDICATOR(following)) {\n        break;\n      }\n    } else if (ch === 0x23 /* # */) {\n      preceding = state.input.charCodeAt(state.position - 1);\n      if (is_WS_OR_EOL(preceding)) {\n        break;\n      }\n    } else if (state.position === state.lineStart && testDocumentSeparator(state) || withinFlowCollection && is_FLOW_INDICATOR(ch)) {\n      break;\n    } else if (is_EOL(ch)) {\n      _line = state.line;\n      _lineStart = state.lineStart;\n      _lineIndent = state.lineIndent;\n      skipSeparationSpace(state, false, -1);\n      if (state.lineIndent >= nodeIndent) {\n        hasPendingContent = true;\n        ch = state.input.charCodeAt(state.position);\n        continue;\n      } else {\n        state.position = captureEnd;\n        state.line = _line;\n        state.lineStart = _lineStart;\n        state.lineIndent = _lineIndent;\n        break;\n      }\n    }\n    if (hasPendingContent) {\n      captureSegment(state, captureStart, captureEnd, false);\n      writeFoldedLines(state, state.line - _line);\n      captureStart = captureEnd = state.position;\n      hasPendingContent = false;\n    }\n    if (!is_WHITE_SPACE(ch)) {\n      captureEnd = state.position + 1;\n    }\n    ch = state.input.charCodeAt(++state.position);\n  }\n  captureSegment(state, captureStart, captureEnd, false);\n  if (state.result) {\n    return true;\n  }\n  state.kind = _kind;\n  state.result = _result;\n  return false;\n}\nfunction readSingleQuotedScalar(state, nodeIndent) {\n  var ch, captureStart, captureEnd;\n  ch = state.input.charCodeAt(state.position);\n  if (ch !== 0x27 /* ' */) {\n    return false;\n  }\n  state.kind = 'scalar';\n  state.result = '';\n  state.position++;\n  captureStart = captureEnd = state.position;\n  while ((ch = state.input.charCodeAt(state.position)) !== 0) {\n    if (ch === 0x27 /* ' */) {\n      captureSegment(state, captureStart, state.position, true);\n      ch = state.input.charCodeAt(++state.position);\n      if (ch === 0x27 /* ' */) {\n        captureStart = state.position;\n        state.position++;\n        captureEnd = state.position;\n      } else {\n        return true;\n      }\n    } else if (is_EOL(ch)) {\n      captureSegment(state, captureStart, captureEnd, true);\n      writeFoldedLines(state, skipSeparationSpace(state, false, nodeIndent));\n      captureStart = captureEnd = state.position;\n    } else if (state.position === state.lineStart && testDocumentSeparator(state)) {\n      throwError(state, 'unexpected end of the document within a single quoted scalar');\n    } else {\n      state.position++;\n      captureEnd = state.position;\n    }\n  }\n  throwError(state, 'unexpected end of the stream within a single quoted scalar');\n}\nfunction readDoubleQuotedScalar(state, nodeIndent) {\n  var captureStart, captureEnd, hexLength, hexResult, tmp, ch;\n  ch = state.input.charCodeAt(state.position);\n  if (ch !== 0x22 /* \" */) {\n    return false;\n  }\n  state.kind = 'scalar';\n  state.result = '';\n  state.position++;\n  captureStart = captureEnd = state.position;\n  while ((ch = state.input.charCodeAt(state.position)) !== 0) {\n    if (ch === 0x22 /* \" */) {\n      captureSegment(state, captureStart, state.position, true);\n      state.position++;\n      return true;\n    } else if (ch === 0x5C /* \\ */) {\n      captureSegment(state, captureStart, state.position, true);\n      ch = state.input.charCodeAt(++state.position);\n      if (is_EOL(ch)) {\n        skipSeparationSpace(state, false, nodeIndent);\n\n        // TODO: rework to inline fn with no type cast?\n      } else if (ch < 256 && simpleEscapeCheck[ch]) {\n        state.result += simpleEscapeMap[ch];\n        state.position++;\n      } else if ((tmp = escapedHexLen(ch)) > 0) {\n        hexLength = tmp;\n        hexResult = 0;\n        for (; hexLength > 0; hexLength--) {\n          ch = state.input.charCodeAt(++state.position);\n          if ((tmp = fromHexCode(ch)) >= 0) {\n            hexResult = (hexResult << 4) + tmp;\n          } else {\n            throwError(state, 'expected hexadecimal character');\n          }\n        }\n        state.result += charFromCodepoint(hexResult);\n        state.position++;\n      } else {\n        throwError(state, 'unknown escape sequence');\n      }\n      captureStart = captureEnd = state.position;\n    } else if (is_EOL(ch)) {\n      captureSegment(state, captureStart, captureEnd, true);\n      writeFoldedLines(state, skipSeparationSpace(state, false, nodeIndent));\n      captureStart = captureEnd = state.position;\n    } else if (state.position === state.lineStart && testDocumentSeparator(state)) {\n      throwError(state, 'unexpected end of the document within a double quoted scalar');\n    } else {\n      state.position++;\n      captureEnd = state.position;\n    }\n  }\n  throwError(state, 'unexpected end of the stream within a double quoted scalar');\n}\nfunction readFlowCollection(state, nodeIndent) {\n  var readNext = true,\n    _line,\n    _lineStart,\n    _pos,\n    _tag = state.tag,\n    _result,\n    _anchor = state.anchor,\n    following,\n    terminator,\n    isPair,\n    isExplicitPair,\n    isMapping,\n    overridableKeys = Object.create(null),\n    keyNode,\n    keyTag,\n    valueNode,\n    ch;\n  ch = state.input.charCodeAt(state.position);\n  if (ch === 0x5B /* [ */) {\n    terminator = 0x5D; /* ] */\n    isMapping = false;\n    _result = [];\n  } else if (ch === 0x7B /* { */) {\n    terminator = 0x7D; /* } */\n    isMapping = true;\n    _result = {};\n  } else {\n    return false;\n  }\n  if (state.anchor !== null) {\n    state.anchorMap[state.anchor] = _result;\n  }\n  ch = state.input.charCodeAt(++state.position);\n  while (ch !== 0) {\n    skipSeparationSpace(state, true, nodeIndent);\n    ch = state.input.charCodeAt(state.position);\n    if (ch === terminator) {\n      state.position++;\n      state.tag = _tag;\n      state.anchor = _anchor;\n      state.kind = isMapping ? 'mapping' : 'sequence';\n      state.result = _result;\n      return true;\n    } else if (!readNext) {\n      throwError(state, 'missed comma between flow collection entries');\n    } else if (ch === 0x2C /* , */) {\n      // \"flow collection entries can never be completely empty\", as per YAML 1.2, section 7.4\n      throwError(state, \"expected the node content, but found ','\");\n    }\n    keyTag = keyNode = valueNode = null;\n    isPair = isExplicitPair = false;\n    if (ch === 0x3F /* ? */) {\n      following = state.input.charCodeAt(state.position + 1);\n      if (is_WS_OR_EOL(following)) {\n        isPair = isExplicitPair = true;\n        state.position++;\n        skipSeparationSpace(state, true, nodeIndent);\n      }\n    }\n    _line = state.line; // Save the current line.\n    _lineStart = state.lineStart;\n    _pos = state.position;\n    composeNode(state, nodeIndent, CONTEXT_FLOW_IN, false, true);\n    keyTag = state.tag;\n    keyNode = state.result;\n    skipSeparationSpace(state, true, nodeIndent);\n    ch = state.input.charCodeAt(state.position);\n    if ((isExplicitPair || state.line === _line) && ch === 0x3A /* : */) {\n      isPair = true;\n      ch = state.input.charCodeAt(++state.position);\n      skipSeparationSpace(state, true, nodeIndent);\n      composeNode(state, nodeIndent, CONTEXT_FLOW_IN, false, true);\n      valueNode = state.result;\n    }\n    if (isMapping) {\n      storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, valueNode, _line, _lineStart, _pos);\n    } else if (isPair) {\n      _result.push(storeMappingPair(state, null, overridableKeys, keyTag, keyNode, valueNode, _line, _lineStart, _pos));\n    } else {\n      _result.push(keyNode);\n    }\n    skipSeparationSpace(state, true, nodeIndent);\n    ch = state.input.charCodeAt(state.position);\n    if (ch === 0x2C /* , */) {\n      readNext = true;\n      ch = state.input.charCodeAt(++state.position);\n    } else {\n      readNext = false;\n    }\n  }\n  throwError(state, 'unexpected end of the stream within a flow collection');\n}\nfunction readBlockScalar(state, nodeIndent) {\n  var captureStart,\n    folding,\n    chomping = CHOMPING_CLIP,\n    didReadContent = false,\n    detectedIndent = false,\n    textIndent = nodeIndent,\n    emptyLines = 0,\n    atMoreIndented = false,\n    tmp,\n    ch;\n  ch = state.input.charCodeAt(state.position);\n  if (ch === 0x7C /* | */) {\n    folding = false;\n  } else if (ch === 0x3E /* > */) {\n    folding = true;\n  } else {\n    return false;\n  }\n  state.kind = 'scalar';\n  state.result = '';\n  while (ch !== 0) {\n    ch = state.input.charCodeAt(++state.position);\n    if (ch === 0x2B /* + */ || ch === 0x2D /* - */) {\n      if (CHOMPING_CLIP === chomping) {\n        chomping = ch === 0x2B /* + */ ? CHOMPING_KEEP : CHOMPING_STRIP;\n      } else {\n        throwError(state, 'repeat of a chomping mode identifier');\n      }\n    } else if ((tmp = fromDecimalCode(ch)) >= 0) {\n      if (tmp === 0) {\n        throwError(state, 'bad explicit indentation width of a block scalar; it cannot be less than one');\n      } else if (!detectedIndent) {\n        textIndent = nodeIndent + tmp - 1;\n        detectedIndent = true;\n      } else {\n        throwError(state, 'repeat of an indentation width identifier');\n      }\n    } else {\n      break;\n    }\n  }\n  if (is_WHITE_SPACE(ch)) {\n    do {\n      ch = state.input.charCodeAt(++state.position);\n    } while (is_WHITE_SPACE(ch));\n    if (ch === 0x23 /* # */) {\n      do {\n        ch = state.input.charCodeAt(++state.position);\n      } while (!is_EOL(ch) && ch !== 0);\n    }\n  }\n  while (ch !== 0) {\n    readLineBreak(state);\n    state.lineIndent = 0;\n    ch = state.input.charCodeAt(state.position);\n    while ((!detectedIndent || state.lineIndent < textIndent) && ch === 0x20 /* Space */) {\n      state.lineIndent++;\n      ch = state.input.charCodeAt(++state.position);\n    }\n    if (!detectedIndent && state.lineIndent > textIndent) {\n      textIndent = state.lineIndent;\n    }\n    if (is_EOL(ch)) {\n      emptyLines++;\n      continue;\n    }\n\n    // End of the scalar.\n    if (state.lineIndent < textIndent) {\n      // Perform the chomping.\n      if (chomping === CHOMPING_KEEP) {\n        state.result += common.repeat('\\n', didReadContent ? 1 + emptyLines : emptyLines);\n      } else if (chomping === CHOMPING_CLIP) {\n        if (didReadContent) {\n          // i.e. only if the scalar is not empty.\n          state.result += '\\n';\n        }\n      }\n\n      // Break this `while` cycle and go to the funciton's epilogue.\n      break;\n    }\n\n    // Folded style: use fancy rules to handle line breaks.\n    if (folding) {\n      // Lines starting with white space characters (more-indented lines) are not folded.\n      if (is_WHITE_SPACE(ch)) {\n        atMoreIndented = true;\n        // except for the first content line (cf. Example 8.1)\n        state.result += common.repeat('\\n', didReadContent ? 1 + emptyLines : emptyLines);\n\n        // End of more-indented block.\n      } else if (atMoreIndented) {\n        atMoreIndented = false;\n        state.result += common.repeat('\\n', emptyLines + 1);\n\n        // Just one line break - perceive as the same line.\n      } else if (emptyLines === 0) {\n        if (didReadContent) {\n          // i.e. only if we have already read some scalar content.\n          state.result += ' ';\n        }\n\n        // Several line breaks - perceive as different lines.\n      } else {\n        state.result += common.repeat('\\n', emptyLines);\n      }\n\n      // Literal style: just add exact number of line breaks between content lines.\n    } else {\n      // Keep all line breaks except the header line break.\n      state.result += common.repeat('\\n', didReadContent ? 1 + emptyLines : emptyLines);\n    }\n    didReadContent = true;\n    detectedIndent = true;\n    emptyLines = 0;\n    captureStart = state.position;\n    while (!is_EOL(ch) && ch !== 0) {\n      ch = state.input.charCodeAt(++state.position);\n    }\n    captureSegment(state, captureStart, state.position, false);\n  }\n  return true;\n}\nfunction readBlockSequence(state, nodeIndent) {\n  var _line,\n    _tag = state.tag,\n    _anchor = state.anchor,\n    _result = [],\n    following,\n    detected = false,\n    ch;\n\n  // there is a leading tab before this token, so it can't be a block sequence/mapping;\n  // it can still be flow sequence/mapping or a scalar\n  if (state.firstTabInLine !== -1) return false;\n  if (state.anchor !== null) {\n    state.anchorMap[state.anchor] = _result;\n  }\n  ch = state.input.charCodeAt(state.position);\n  while (ch !== 0) {\n    if (state.firstTabInLine !== -1) {\n      state.position = state.firstTabInLine;\n      throwError(state, 'tab characters must not be used in indentation');\n    }\n    if (ch !== 0x2D /* - */) {\n      break;\n    }\n    following = state.input.charCodeAt(state.position + 1);\n    if (!is_WS_OR_EOL(following)) {\n      break;\n    }\n    detected = true;\n    state.position++;\n    if (skipSeparationSpace(state, true, -1)) {\n      if (state.lineIndent <= nodeIndent) {\n        _result.push(null);\n        ch = state.input.charCodeAt(state.position);\n        continue;\n      }\n    }\n    _line = state.line;\n    composeNode(state, nodeIndent, CONTEXT_BLOCK_IN, false, true);\n    _result.push(state.result);\n    skipSeparationSpace(state, true, -1);\n    ch = state.input.charCodeAt(state.position);\n    if ((state.line === _line || state.lineIndent > nodeIndent) && ch !== 0) {\n      throwError(state, 'bad indentation of a sequence entry');\n    } else if (state.lineIndent < nodeIndent) {\n      break;\n    }\n  }\n  if (detected) {\n    state.tag = _tag;\n    state.anchor = _anchor;\n    state.kind = 'sequence';\n    state.result = _result;\n    return true;\n  }\n  return false;\n}\nfunction readBlockMapping(state, nodeIndent, flowIndent) {\n  var following,\n    allowCompact,\n    _line,\n    _keyLine,\n    _keyLineStart,\n    _keyPos,\n    _tag = state.tag,\n    _anchor = state.anchor,\n    _result = {},\n    overridableKeys = Object.create(null),\n    keyTag = null,\n    keyNode = null,\n    valueNode = null,\n    atExplicitKey = false,\n    detected = false,\n    ch;\n\n  // there is a leading tab before this token, so it can't be a block sequence/mapping;\n  // it can still be flow sequence/mapping or a scalar\n  if (state.firstTabInLine !== -1) return false;\n  if (state.anchor !== null) {\n    state.anchorMap[state.anchor] = _result;\n  }\n  ch = state.input.charCodeAt(state.position);\n  while (ch !== 0) {\n    if (!atExplicitKey && state.firstTabInLine !== -1) {\n      state.position = state.firstTabInLine;\n      throwError(state, 'tab characters must not be used in indentation');\n    }\n    following = state.input.charCodeAt(state.position + 1);\n    _line = state.line; // Save the current line.\n\n    //\n    // Explicit notation case. There are two separate blocks:\n    // first for the key (denoted by \"?\") and second for the value (denoted by \":\")\n    //\n    if ((ch === 0x3F /* ? */ || ch === 0x3A /* : */) && is_WS_OR_EOL(following)) {\n      if (ch === 0x3F /* ? */) {\n        if (atExplicitKey) {\n          storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, null, _keyLine, _keyLineStart, _keyPos);\n          keyTag = keyNode = valueNode = null;\n        }\n        detected = true;\n        atExplicitKey = true;\n        allowCompact = true;\n      } else if (atExplicitKey) {\n        // i.e. 0x3A/* : */ === character after the explicit key.\n        atExplicitKey = false;\n        allowCompact = true;\n      } else {\n        throwError(state, 'incomplete explicit mapping pair; a key node is missed; or followed by a non-tabulated empty line');\n      }\n      state.position += 1;\n      ch = following;\n\n      //\n      // Implicit notation case. Flow-style node as the key first, then \":\", and the value.\n      //\n    } else {\n      _keyLine = state.line;\n      _keyLineStart = state.lineStart;\n      _keyPos = state.position;\n      if (!composeNode(state, flowIndent, CONTEXT_FLOW_OUT, false, true)) {\n        // Neither implicit nor explicit notation.\n        // Reading is done. Go to the epilogue.\n        break;\n      }\n      if (state.line === _line) {\n        ch = state.input.charCodeAt(state.position);\n        while (is_WHITE_SPACE(ch)) {\n          ch = state.input.charCodeAt(++state.position);\n        }\n        if (ch === 0x3A /* : */) {\n          ch = state.input.charCodeAt(++state.position);\n          if (!is_WS_OR_EOL(ch)) {\n            throwError(state, 'a whitespace character is expected after the key-value separator within a block mapping');\n          }\n          if (atExplicitKey) {\n            storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, null, _keyLine, _keyLineStart, _keyPos);\n            keyTag = keyNode = valueNode = null;\n          }\n          detected = true;\n          atExplicitKey = false;\n          allowCompact = false;\n          keyTag = state.tag;\n          keyNode = state.result;\n        } else if (detected) {\n          throwError(state, 'can not read an implicit mapping pair; a colon is missed');\n        } else {\n          state.tag = _tag;\n          state.anchor = _anchor;\n          return true; // Keep the result of `composeNode`.\n        }\n      } else if (detected) {\n        throwError(state, 'can not read a block mapping entry; a multiline key may not be an implicit key');\n      } else {\n        state.tag = _tag;\n        state.anchor = _anchor;\n        return true; // Keep the result of `composeNode`.\n      }\n    }\n\n    //\n    // Common reading code for both explicit and implicit notations.\n    //\n    if (state.line === _line || state.lineIndent > nodeIndent) {\n      if (atExplicitKey) {\n        _keyLine = state.line;\n        _keyLineStart = state.lineStart;\n        _keyPos = state.position;\n      }\n      if (composeNode(state, nodeIndent, CONTEXT_BLOCK_OUT, true, allowCompact)) {\n        if (atExplicitKey) {\n          keyNode = state.result;\n        } else {\n          valueNode = state.result;\n        }\n      }\n      if (!atExplicitKey) {\n        storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, valueNode, _keyLine, _keyLineStart, _keyPos);\n        keyTag = keyNode = valueNode = null;\n      }\n      skipSeparationSpace(state, true, -1);\n      ch = state.input.charCodeAt(state.position);\n    }\n    if ((state.line === _line || state.lineIndent > nodeIndent) && ch !== 0) {\n      throwError(state, 'bad indentation of a mapping entry');\n    } else if (state.lineIndent < nodeIndent) {\n      break;\n    }\n  }\n\n  //\n  // Epilogue.\n  //\n\n  // Special case: last mapping's node contains only the key in explicit notation.\n  if (atExplicitKey) {\n    storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, null, _keyLine, _keyLineStart, _keyPos);\n  }\n\n  // Expose the resulting mapping.\n  if (detected) {\n    state.tag = _tag;\n    state.anchor = _anchor;\n    state.kind = 'mapping';\n    state.result = _result;\n  }\n  return detected;\n}\nfunction readTagProperty(state) {\n  var _position,\n    isVerbatim = false,\n    isNamed = false,\n    tagHandle,\n    tagName,\n    ch;\n  ch = state.input.charCodeAt(state.position);\n  if (ch !== 0x21 /* ! */) return false;\n  if (state.tag !== null) {\n    throwError(state, 'duplication of a tag property');\n  }\n  ch = state.input.charCodeAt(++state.position);\n  if (ch === 0x3C /* < */) {\n    isVerbatim = true;\n    ch = state.input.charCodeAt(++state.position);\n  } else if (ch === 0x21 /* ! */) {\n    isNamed = true;\n    tagHandle = '!!';\n    ch = state.input.charCodeAt(++state.position);\n  } else {\n    tagHandle = '!';\n  }\n  _position = state.position;\n  if (isVerbatim) {\n    do {\n      ch = state.input.charCodeAt(++state.position);\n    } while (ch !== 0 && ch !== 0x3E /* > */);\n    if (state.position < state.length) {\n      tagName = state.input.slice(_position, state.position);\n      ch = state.input.charCodeAt(++state.position);\n    } else {\n      throwError(state, 'unexpected end of the stream within a verbatim tag');\n    }\n  } else {\n    while (ch !== 0 && !is_WS_OR_EOL(ch)) {\n      if (ch === 0x21 /* ! */) {\n        if (!isNamed) {\n          tagHandle = state.input.slice(_position - 1, state.position + 1);\n          if (!PATTERN_TAG_HANDLE.test(tagHandle)) {\n            throwError(state, 'named tag handle cannot contain such characters');\n          }\n          isNamed = true;\n          _position = state.position + 1;\n        } else {\n          throwError(state, 'tag suffix cannot contain exclamation marks');\n        }\n      }\n      ch = state.input.charCodeAt(++state.position);\n    }\n    tagName = state.input.slice(_position, state.position);\n    if (PATTERN_FLOW_INDICATORS.test(tagName)) {\n      throwError(state, 'tag suffix cannot contain flow indicator characters');\n    }\n  }\n  if (tagName && !PATTERN_TAG_URI.test(tagName)) {\n    throwError(state, 'tag name cannot contain such characters: ' + tagName);\n  }\n  try {\n    tagName = decodeURIComponent(tagName);\n  } catch (err) {\n    throwError(state, 'tag name is malformed: ' + tagName);\n  }\n  if (isVerbatim) {\n    state.tag = tagName;\n  } else if (_hasOwnProperty.call(state.tagMap, tagHandle)) {\n    state.tag = state.tagMap[tagHandle] + tagName;\n  } else if (tagHandle === '!') {\n    state.tag = '!' + tagName;\n  } else if (tagHandle === '!!') {\n    state.tag = 'tag:yaml.org,2002:' + tagName;\n  } else {\n    throwError(state, 'undeclared tag handle \"' + tagHandle + '\"');\n  }\n  return true;\n}\nfunction readAnchorProperty(state) {\n  var _position, ch;\n  ch = state.input.charCodeAt(state.position);\n  if (ch !== 0x26 /* & */) return false;\n  if (state.anchor !== null) {\n    throwError(state, 'duplication of an anchor property');\n  }\n  ch = state.input.charCodeAt(++state.position);\n  _position = state.position;\n  while (ch !== 0 && !is_WS_OR_EOL(ch) && !is_FLOW_INDICATOR(ch)) {\n    ch = state.input.charCodeAt(++state.position);\n  }\n  if (state.position === _position) {\n    throwError(state, 'name of an anchor node must contain at least one character');\n  }\n  state.anchor = state.input.slice(_position, state.position);\n  return true;\n}\nfunction readAlias(state) {\n  var _position, alias, ch;\n  ch = state.input.charCodeAt(state.position);\n  if (ch !== 0x2A /* * */) return false;\n  ch = state.input.charCodeAt(++state.position);\n  _position = state.position;\n  while (ch !== 0 && !is_WS_OR_EOL(ch) && !is_FLOW_INDICATOR(ch)) {\n    ch = state.input.charCodeAt(++state.position);\n  }\n  if (state.position === _position) {\n    throwError(state, 'name of an alias node must contain at least one character');\n  }\n  alias = state.input.slice(_position, state.position);\n  if (!_hasOwnProperty.call(state.anchorMap, alias)) {\n    throwError(state, 'unidentified alias \"' + alias + '\"');\n  }\n  state.result = state.anchorMap[alias];\n  skipSeparationSpace(state, true, -1);\n  return true;\n}\nfunction composeNode(state, parentIndent, nodeContext, allowToSeek, allowCompact) {\n  var allowBlockStyles,\n    allowBlockScalars,\n    allowBlockCollections,\n    indentStatus = 1,\n    // 1: this>parent, 0: this=parent, -1: this<parent\n    atNewLine = false,\n    hasContent = false,\n    typeIndex,\n    typeQuantity,\n    typeList,\n    type,\n    flowIndent,\n    blockIndent;\n  if (state.listener !== null) {\n    state.listener('open', state);\n  }\n  state.tag = null;\n  state.anchor = null;\n  state.kind = null;\n  state.result = null;\n  allowBlockStyles = allowBlockScalars = allowBlockCollections = CONTEXT_BLOCK_OUT === nodeContext || CONTEXT_BLOCK_IN === nodeContext;\n  if (allowToSeek) {\n    if (skipSeparationSpace(state, true, -1)) {\n      atNewLine = true;\n      if (state.lineIndent > parentIndent) {\n        indentStatus = 1;\n      } else if (state.lineIndent === parentIndent) {\n        indentStatus = 0;\n      } else if (state.lineIndent < parentIndent) {\n        indentStatus = -1;\n      }\n    }\n  }\n  if (indentStatus === 1) {\n    while (readTagProperty(state) || readAnchorProperty(state)) {\n      if (skipSeparationSpace(state, true, -1)) {\n        atNewLine = true;\n        allowBlockCollections = allowBlockStyles;\n        if (state.lineIndent > parentIndent) {\n          indentStatus = 1;\n        } else if (state.lineIndent === parentIndent) {\n          indentStatus = 0;\n        } else if (state.lineIndent < parentIndent) {\n          indentStatus = -1;\n        }\n      } else {\n        allowBlockCollections = false;\n      }\n    }\n  }\n  if (allowBlockCollections) {\n    allowBlockCollections = atNewLine || allowCompact;\n  }\n  if (indentStatus === 1 || CONTEXT_BLOCK_OUT === nodeContext) {\n    if (CONTEXT_FLOW_IN === nodeContext || CONTEXT_FLOW_OUT === nodeContext) {\n      flowIndent = parentIndent;\n    } else {\n      flowIndent = parentIndent + 1;\n    }\n    blockIndent = state.position - state.lineStart;\n    if (indentStatus === 1) {\n      if (allowBlockCollections && (readBlockSequence(state, blockIndent) || readBlockMapping(state, blockIndent, flowIndent)) || readFlowCollection(state, flowIndent)) {\n        hasContent = true;\n      } else {\n        if (allowBlockScalars && readBlockScalar(state, flowIndent) || readSingleQuotedScalar(state, flowIndent) || readDoubleQuotedScalar(state, flowIndent)) {\n          hasContent = true;\n        } else if (readAlias(state)) {\n          hasContent = true;\n          if (state.tag !== null || state.anchor !== null) {\n            throwError(state, 'alias node should not have any properties');\n          }\n        } else if (readPlainScalar(state, flowIndent, CONTEXT_FLOW_IN === nodeContext)) {\n          hasContent = true;\n          if (state.tag === null) {\n            state.tag = '?';\n          }\n        }\n        if (state.anchor !== null) {\n          state.anchorMap[state.anchor] = state.result;\n        }\n      }\n    } else if (indentStatus === 0) {\n      // Special case: block sequences are allowed to have same indentation level as the parent.\n      // http://www.yaml.org/spec/1.2/spec.html#id2799784\n      hasContent = allowBlockCollections && readBlockSequence(state, blockIndent);\n    }\n  }\n  if (state.tag === null) {\n    if (state.anchor !== null) {\n      state.anchorMap[state.anchor] = state.result;\n    }\n  } else if (state.tag === '?') {\n    // Implicit resolving is not allowed for non-scalar types, and '?'\n    // non-specific tag is only automatically assigned to plain scalars.\n    //\n    // We only need to check kind conformity in case user explicitly assigns '?'\n    // tag, for example like this: \"!<?> [0]\"\n    //\n    if (state.result !== null && state.kind !== 'scalar') {\n      throwError(state, 'unacceptable node kind for !<?> tag; it should be \"scalar\", not \"' + state.kind + '\"');\n    }\n    for (typeIndex = 0, typeQuantity = state.implicitTypes.length; typeIndex < typeQuantity; typeIndex += 1) {\n      type = state.implicitTypes[typeIndex];\n      if (type.resolve(state.result)) {\n        // `state.result` updated in resolver if matched\n        state.result = type.construct(state.result);\n        state.tag = type.tag;\n        if (state.anchor !== null) {\n          state.anchorMap[state.anchor] = state.result;\n        }\n        break;\n      }\n    }\n  } else if (state.tag !== '!') {\n    if (_hasOwnProperty.call(state.typeMap[state.kind || 'fallback'], state.tag)) {\n      type = state.typeMap[state.kind || 'fallback'][state.tag];\n    } else {\n      // looking for multi type\n      type = null;\n      typeList = state.typeMap.multi[state.kind || 'fallback'];\n      for (typeIndex = 0, typeQuantity = typeList.length; typeIndex < typeQuantity; typeIndex += 1) {\n        if (state.tag.slice(0, typeList[typeIndex].tag.length) === typeList[typeIndex].tag) {\n          type = typeList[typeIndex];\n          break;\n        }\n      }\n    }\n    if (!type) {\n      throwError(state, 'unknown tag !<' + state.tag + '>');\n    }\n    if (state.result !== null && type.kind !== state.kind) {\n      throwError(state, 'unacceptable node kind for !<' + state.tag + '> tag; it should be \"' + type.kind + '\", not \"' + state.kind + '\"');\n    }\n    if (!type.resolve(state.result, state.tag)) {\n      // `state.result` updated in resolver if matched\n      throwError(state, 'cannot resolve a node with !<' + state.tag + '> explicit tag');\n    } else {\n      state.result = type.construct(state.result, state.tag);\n      if (state.anchor !== null) {\n        state.anchorMap[state.anchor] = state.result;\n      }\n    }\n  }\n  if (state.listener !== null) {\n    state.listener('close', state);\n  }\n  return state.tag !== null || state.anchor !== null || hasContent;\n}\nfunction readDocument(state) {\n  var documentStart = state.position,\n    _position,\n    directiveName,\n    directiveArgs,\n    hasDirectives = false,\n    ch;\n  state.version = null;\n  state.checkLineBreaks = state.legacy;\n  state.tagMap = Object.create(null);\n  state.anchorMap = Object.create(null);\n  while ((ch = state.input.charCodeAt(state.position)) !== 0) {\n    skipSeparationSpace(state, true, -1);\n    ch = state.input.charCodeAt(state.position);\n    if (state.lineIndent > 0 || ch !== 0x25 /* % */) {\n      break;\n    }\n    hasDirectives = true;\n    ch = state.input.charCodeAt(++state.position);\n    _position = state.position;\n    while (ch !== 0 && !is_WS_OR_EOL(ch)) {\n      ch = state.input.charCodeAt(++state.position);\n    }\n    directiveName = state.input.slice(_position, state.position);\n    directiveArgs = [];\n    if (directiveName.length < 1) {\n      throwError(state, 'directive name must not be less than one character in length');\n    }\n    while (ch !== 0) {\n      while (is_WHITE_SPACE(ch)) {\n        ch = state.input.charCodeAt(++state.position);\n      }\n      if (ch === 0x23 /* # */) {\n        do {\n          ch = state.input.charCodeAt(++state.position);\n        } while (ch !== 0 && !is_EOL(ch));\n        break;\n      }\n      if (is_EOL(ch)) break;\n      _position = state.position;\n      while (ch !== 0 && !is_WS_OR_EOL(ch)) {\n        ch = state.input.charCodeAt(++state.position);\n      }\n      directiveArgs.push(state.input.slice(_position, state.position));\n    }\n    if (ch !== 0) readLineBreak(state);\n    if (_hasOwnProperty.call(directiveHandlers, directiveName)) {\n      directiveHandlers[directiveName](state, directiveName, directiveArgs);\n    } else {\n      throwWarning(state, 'unknown document directive \"' + directiveName + '\"');\n    }\n  }\n  skipSeparationSpace(state, true, -1);\n  if (state.lineIndent === 0 && state.input.charCodeAt(state.position) === 0x2D /* - */ && state.input.charCodeAt(state.position + 1) === 0x2D /* - */ && state.input.charCodeAt(state.position + 2) === 0x2D /* - */) {\n    state.position += 3;\n    skipSeparationSpace(state, true, -1);\n  } else if (hasDirectives) {\n    throwError(state, 'directives end mark is expected');\n  }\n  composeNode(state, state.lineIndent - 1, CONTEXT_BLOCK_OUT, false, true);\n  skipSeparationSpace(state, true, -1);\n  if (state.checkLineBreaks && PATTERN_NON_ASCII_LINE_BREAKS.test(state.input.slice(documentStart, state.position))) {\n    throwWarning(state, 'non-ASCII line breaks are interpreted as content');\n  }\n  state.documents.push(state.result);\n  if (state.position === state.lineStart && testDocumentSeparator(state)) {\n    if (state.input.charCodeAt(state.position) === 0x2E /* . */) {\n      state.position += 3;\n      skipSeparationSpace(state, true, -1);\n    }\n    return;\n  }\n  if (state.position < state.length - 1) {\n    throwError(state, 'end of the stream or a document separator is expected');\n  } else {\n    return;\n  }\n}\nfunction loadDocuments(input, options) {\n  input = String(input);\n  options = options || {};\n  if (input.length !== 0) {\n    // Add tailing `\\n` if not exists\n    if (input.charCodeAt(input.length - 1) !== 0x0A /* LF */ && input.charCodeAt(input.length - 1) !== 0x0D /* CR */) {\n      input += '\\n';\n    }\n\n    // Strip BOM\n    if (input.charCodeAt(0) === 0xFEFF) {\n      input = input.slice(1);\n    }\n  }\n  var state = new State(input, options);\n  var nullpos = input.indexOf('\\0');\n  if (nullpos !== -1) {\n    state.position = nullpos;\n    throwError(state, 'null byte is not allowed in input');\n  }\n\n  // Use 0 as string terminator. That significantly simplifies bounds check.\n  state.input += '\\0';\n  while (state.input.charCodeAt(state.position) === 0x20 /* Space */) {\n    state.lineIndent += 1;\n    state.position += 1;\n  }\n  while (state.position < state.length - 1) {\n    readDocument(state);\n  }\n  return state.documents;\n}\nfunction loadAll(input, iterator, options) {\n  if (iterator !== null && typeof iterator === 'object' && typeof options === 'undefined') {\n    options = iterator;\n    iterator = null;\n  }\n  var documents = loadDocuments(input, options);\n  if (typeof iterator !== 'function') {\n    return documents;\n  }\n  for (var index = 0, length = documents.length; index < length; index += 1) {\n    iterator(documents[index]);\n  }\n}\nfunction load(input, options) {\n  var documents = loadDocuments(input, options);\n  if (documents.length === 0) {\n    /*eslint-disable no-undefined*/\n    return undefined;\n  } else if (documents.length === 1) {\n    return documents[0];\n  }\n  throw new YAMLException('expected a single document in the stream, but found more');\n}\nmodule.exports.loadAll = loadAll;\nmodule.exports.load = load;","map":{"version":3,"names":["common","require","YAMLException","makeSnippet","DEFAULT_SCHEMA","_hasOwnProperty","Object","prototype","hasOwnProperty","CONTEXT_FLOW_IN","CONTEXT_FLOW_OUT","CONTEXT_BLOCK_IN","CONTEXT_BLOCK_OUT","CHOMPING_CLIP","CHOMPING_STRIP","CHOMPING_KEEP","PATTERN_NON_PRINTABLE","PATTERN_NON_ASCII_LINE_BREAKS","PATTERN_FLOW_INDICATORS","PATTERN_TAG_HANDLE","PATTERN_TAG_URI","_class","obj","toString","call","is_EOL","c","is_WHITE_SPACE","is_WS_OR_EOL","is_FLOW_INDICATOR","fromHexCode","lc","escapedHexLen","fromDecimalCode","simpleEscapeSequence","charFromCodepoint","String","fromCharCode","simpleEscapeCheck","Array","simpleEscapeMap","i","State","input","options","filename","schema","onWarning","legacy","json","listener","implicitTypes","compiledImplicit","typeMap","compiledTypeMap","length","position","line","lineStart","lineIndent","firstTabInLine","documents","generateError","state","message","mark","name","buffer","slice","column","snippet","throwError","throwWarning","directiveHandlers","YAML","handleYamlDirective","args","match","major","minor","version","exec","parseInt","checkLineBreaks","TAG","handleTagDirective","handle","prefix","test","tagMap","decodeURIComponent","err","captureSegment","start","end","checkJson","_position","_length","_character","_result","charCodeAt","result","mergeMappings","destination","source","overridableKeys","sourceKeys","key","index","quantity","isObject","keys","storeMappingPair","keyTag","keyNode","valueNode","startLine","startLineStart","startPos","isArray","defineProperty","configurable","enumerable","writable","value","readLineBreak","ch","skipSeparationSpace","allowComments","checkIndent","lineBreaks","testDocumentSeparator","writeFoldedLines","count","repeat","readPlainScalar","nodeIndent","withinFlowCollection","preceding","following","captureStart","captureEnd","hasPendingContent","_line","_lineStart","_lineIndent","_kind","kind","readSingleQuotedScalar","readDoubleQuotedScalar","hexLength","hexResult","tmp","readFlowCollection","readNext","_pos","_tag","tag","_anchor","anchor","terminator","isPair","isExplicitPair","isMapping","create","anchorMap","composeNode","push","readBlockScalar","folding","chomping","didReadContent","detectedIndent","textIndent","emptyLines","atMoreIndented","readBlockSequence","detected","readBlockMapping","flowIndent","allowCompact","_keyLine","_keyLineStart","_keyPos","atExplicitKey","readTagProperty","isVerbatim","isNamed","tagHandle","tagName","readAnchorProperty","readAlias","alias","parentIndent","nodeContext","allowToSeek","allowBlockStyles","allowBlockScalars","allowBlockCollections","indentStatus","atNewLine","hasContent","typeIndex","typeQuantity","typeList","type","blockIndent","resolve","construct","multi","readDocument","documentStart","directiveName","directiveArgs","hasDirectives","loadDocuments","nullpos","indexOf","loadAll","iterator","load","undefined","module","exports"],"sources":["C:/Users/chest/OneDrive/Documentos/GitHub/HackUPC/frontend/node_modules/@eslint/eslintrc/node_modules/js-yaml/lib/loader.js"],"sourcesContent":["'use strict';\n\n/*eslint-disable max-len,no-use-before-define*/\n\nvar common              = require('./common');\nvar YAMLException       = require('./exception');\nvar makeSnippet         = require('./snippet');\nvar DEFAULT_SCHEMA      = require('./schema/default');\n\n\nvar _hasOwnProperty = Object.prototype.hasOwnProperty;\n\n\nvar CONTEXT_FLOW_IN   = 1;\nvar CONTEXT_FLOW_OUT  = 2;\nvar CONTEXT_BLOCK_IN  = 3;\nvar CONTEXT_BLOCK_OUT = 4;\n\n\nvar CHOMPING_CLIP  = 1;\nvar CHOMPING_STRIP = 2;\nvar CHOMPING_KEEP  = 3;\n\n\nvar PATTERN_NON_PRINTABLE         = /[\\x00-\\x08\\x0B\\x0C\\x0E-\\x1F\\x7F-\\x84\\x86-\\x9F\\uFFFE\\uFFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]/;\nvar PATTERN_NON_ASCII_LINE_BREAKS = /[\\x85\\u2028\\u2029]/;\nvar PATTERN_FLOW_INDICATORS       = /[,\\[\\]\\{\\}]/;\nvar PATTERN_TAG_HANDLE            = /^(?:!|!!|![a-z\\-]+!)$/i;\nvar PATTERN_TAG_URI               = /^(?:!|[^,\\[\\]\\{\\}])(?:%[0-9a-f]{2}|[0-9a-z\\-#;\\/\\?:@&=\\+\\$,_\\.!~\\*'\\(\\)\\[\\]])*$/i;\n\n\nfunction _class(obj) { return Object.prototype.toString.call(obj); }\n\nfunction is_EOL(c) {\n  return (c === 0x0A/* LF */) || (c === 0x0D/* CR */);\n}\n\nfunction is_WHITE_SPACE(c) {\n  return (c === 0x09/* Tab */) || (c === 0x20/* Space */);\n}\n\nfunction is_WS_OR_EOL(c) {\n  return (c === 0x09/* Tab */) ||\n         (c === 0x20/* Space */) ||\n         (c === 0x0A/* LF */) ||\n         (c === 0x0D/* CR */);\n}\n\nfunction is_FLOW_INDICATOR(c) {\n  return c === 0x2C/* , */ ||\n         c === 0x5B/* [ */ ||\n         c === 0x5D/* ] */ ||\n         c === 0x7B/* { */ ||\n         c === 0x7D/* } */;\n}\n\nfunction fromHexCode(c) {\n  var lc;\n\n  if ((0x30/* 0 */ <= c) && (c <= 0x39/* 9 */)) {\n    return c - 0x30;\n  }\n\n  /*eslint-disable no-bitwise*/\n  lc = c | 0x20;\n\n  if ((0x61/* a */ <= lc) && (lc <= 0x66/* f */)) {\n    return lc - 0x61 + 10;\n  }\n\n  return -1;\n}\n\nfunction escapedHexLen(c) {\n  if (c === 0x78/* x */) { return 2; }\n  if (c === 0x75/* u */) { return 4; }\n  if (c === 0x55/* U */) { return 8; }\n  return 0;\n}\n\nfunction fromDecimalCode(c) {\n  if ((0x30/* 0 */ <= c) && (c <= 0x39/* 9 */)) {\n    return c - 0x30;\n  }\n\n  return -1;\n}\n\nfunction simpleEscapeSequence(c) {\n  /* eslint-disable indent */\n  return (c === 0x30/* 0 */) ? '\\x00' :\n        (c === 0x61/* a */) ? '\\x07' :\n        (c === 0x62/* b */) ? '\\x08' :\n        (c === 0x74/* t */) ? '\\x09' :\n        (c === 0x09/* Tab */) ? '\\x09' :\n        (c === 0x6E/* n */) ? '\\x0A' :\n        (c === 0x76/* v */) ? '\\x0B' :\n        (c === 0x66/* f */) ? '\\x0C' :\n        (c === 0x72/* r */) ? '\\x0D' :\n        (c === 0x65/* e */) ? '\\x1B' :\n        (c === 0x20/* Space */) ? ' ' :\n        (c === 0x22/* \" */) ? '\\x22' :\n        (c === 0x2F/* / */) ? '/' :\n        (c === 0x5C/* \\ */) ? '\\x5C' :\n        (c === 0x4E/* N */) ? '\\x85' :\n        (c === 0x5F/* _ */) ? '\\xA0' :\n        (c === 0x4C/* L */) ? '\\u2028' :\n        (c === 0x50/* P */) ? '\\u2029' : '';\n}\n\nfunction charFromCodepoint(c) {\n  if (c <= 0xFFFF) {\n    return String.fromCharCode(c);\n  }\n  // Encode UTF-16 surrogate pair\n  // https://en.wikipedia.org/wiki/UTF-16#Code_points_U.2B010000_to_U.2B10FFFF\n  return String.fromCharCode(\n    ((c - 0x010000) >> 10) + 0xD800,\n    ((c - 0x010000) & 0x03FF) + 0xDC00\n  );\n}\n\nvar simpleEscapeCheck = new Array(256); // integer, for fast access\nvar simpleEscapeMap = new Array(256);\nfor (var i = 0; i < 256; i++) {\n  simpleEscapeCheck[i] = simpleEscapeSequence(i) ? 1 : 0;\n  simpleEscapeMap[i] = simpleEscapeSequence(i);\n}\n\n\nfunction State(input, options) {\n  this.input = input;\n\n  this.filename  = options['filename']  || null;\n  this.schema    = options['schema']    || DEFAULT_SCHEMA;\n  this.onWarning = options['onWarning'] || null;\n  // (Hidden) Remove? makes the loader to expect YAML 1.1 documents\n  // if such documents have no explicit %YAML directive\n  this.legacy    = options['legacy']    || false;\n\n  this.json      = options['json']      || false;\n  this.listener  = options['listener']  || null;\n\n  this.implicitTypes = this.schema.compiledImplicit;\n  this.typeMap       = this.schema.compiledTypeMap;\n\n  this.length     = input.length;\n  this.position   = 0;\n  this.line       = 0;\n  this.lineStart  = 0;\n  this.lineIndent = 0;\n\n  // position of first leading tab in the current line,\n  // used to make sure there are no tabs in the indentation\n  this.firstTabInLine = -1;\n\n  this.documents = [];\n\n  /*\n  this.version;\n  this.checkLineBreaks;\n  this.tagMap;\n  this.anchorMap;\n  this.tag;\n  this.anchor;\n  this.kind;\n  this.result;*/\n\n}\n\n\nfunction generateError(state, message) {\n  var mark = {\n    name:     state.filename,\n    buffer:   state.input.slice(0, -1), // omit trailing \\0\n    position: state.position,\n    line:     state.line,\n    column:   state.position - state.lineStart\n  };\n\n  mark.snippet = makeSnippet(mark);\n\n  return new YAMLException(message, mark);\n}\n\nfunction throwError(state, message) {\n  throw generateError(state, message);\n}\n\nfunction throwWarning(state, message) {\n  if (state.onWarning) {\n    state.onWarning.call(null, generateError(state, message));\n  }\n}\n\n\nvar directiveHandlers = {\n\n  YAML: function handleYamlDirective(state, name, args) {\n\n    var match, major, minor;\n\n    if (state.version !== null) {\n      throwError(state, 'duplication of %YAML directive');\n    }\n\n    if (args.length !== 1) {\n      throwError(state, 'YAML directive accepts exactly one argument');\n    }\n\n    match = /^([0-9]+)\\.([0-9]+)$/.exec(args[0]);\n\n    if (match === null) {\n      throwError(state, 'ill-formed argument of the YAML directive');\n    }\n\n    major = parseInt(match[1], 10);\n    minor = parseInt(match[2], 10);\n\n    if (major !== 1) {\n      throwError(state, 'unacceptable YAML version of the document');\n    }\n\n    state.version = args[0];\n    state.checkLineBreaks = (minor < 2);\n\n    if (minor !== 1 && minor !== 2) {\n      throwWarning(state, 'unsupported YAML version of the document');\n    }\n  },\n\n  TAG: function handleTagDirective(state, name, args) {\n\n    var handle, prefix;\n\n    if (args.length !== 2) {\n      throwError(state, 'TAG directive accepts exactly two arguments');\n    }\n\n    handle = args[0];\n    prefix = args[1];\n\n    if (!PATTERN_TAG_HANDLE.test(handle)) {\n      throwError(state, 'ill-formed tag handle (first argument) of the TAG directive');\n    }\n\n    if (_hasOwnProperty.call(state.tagMap, handle)) {\n      throwError(state, 'there is a previously declared suffix for \"' + handle + '\" tag handle');\n    }\n\n    if (!PATTERN_TAG_URI.test(prefix)) {\n      throwError(state, 'ill-formed tag prefix (second argument) of the TAG directive');\n    }\n\n    try {\n      prefix = decodeURIComponent(prefix);\n    } catch (err) {\n      throwError(state, 'tag prefix is malformed: ' + prefix);\n    }\n\n    state.tagMap[handle] = prefix;\n  }\n};\n\n\nfunction captureSegment(state, start, end, checkJson) {\n  var _position, _length, _character, _result;\n\n  if (start < end) {\n    _result = state.input.slice(start, end);\n\n    if (checkJson) {\n      for (_position = 0, _length = _result.length; _position < _length; _position += 1) {\n        _character = _result.charCodeAt(_position);\n        if (!(_character === 0x09 ||\n              (0x20 <= _character && _character <= 0x10FFFF))) {\n          throwError(state, 'expected valid JSON character');\n        }\n      }\n    } else if (PATTERN_NON_PRINTABLE.test(_result)) {\n      throwError(state, 'the stream contains non-printable characters');\n    }\n\n    state.result += _result;\n  }\n}\n\nfunction mergeMappings(state, destination, source, overridableKeys) {\n  var sourceKeys, key, index, quantity;\n\n  if (!common.isObject(source)) {\n    throwError(state, 'cannot merge mappings; the provided source object is unacceptable');\n  }\n\n  sourceKeys = Object.keys(source);\n\n  for (index = 0, quantity = sourceKeys.length; index < quantity; index += 1) {\n    key = sourceKeys[index];\n\n    if (!_hasOwnProperty.call(destination, key)) {\n      destination[key] = source[key];\n      overridableKeys[key] = true;\n    }\n  }\n}\n\nfunction storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, valueNode,\n  startLine, startLineStart, startPos) {\n\n  var index, quantity;\n\n  // The output is a plain object here, so keys can only be strings.\n  // We need to convert keyNode to a string, but doing so can hang the process\n  // (deeply nested arrays that explode exponentially using aliases).\n  if (Array.isArray(keyNode)) {\n    keyNode = Array.prototype.slice.call(keyNode);\n\n    for (index = 0, quantity = keyNode.length; index < quantity; index += 1) {\n      if (Array.isArray(keyNode[index])) {\n        throwError(state, 'nested arrays are not supported inside keys');\n      }\n\n      if (typeof keyNode === 'object' && _class(keyNode[index]) === '[object Object]') {\n        keyNode[index] = '[object Object]';\n      }\n    }\n  }\n\n  // Avoid code execution in load() via toString property\n  // (still use its own toString for arrays, timestamps,\n  // and whatever user schema extensions happen to have @@toStringTag)\n  if (typeof keyNode === 'object' && _class(keyNode) === '[object Object]') {\n    keyNode = '[object Object]';\n  }\n\n\n  keyNode = String(keyNode);\n\n  if (_result === null) {\n    _result = {};\n  }\n\n  if (keyTag === 'tag:yaml.org,2002:merge') {\n    if (Array.isArray(valueNode)) {\n      for (index = 0, quantity = valueNode.length; index < quantity; index += 1) {\n        mergeMappings(state, _result, valueNode[index], overridableKeys);\n      }\n    } else {\n      mergeMappings(state, _result, valueNode, overridableKeys);\n    }\n  } else {\n    if (!state.json &&\n        !_hasOwnProperty.call(overridableKeys, keyNode) &&\n        _hasOwnProperty.call(_result, keyNode)) {\n      state.line = startLine || state.line;\n      state.lineStart = startLineStart || state.lineStart;\n      state.position = startPos || state.position;\n      throwError(state, 'duplicated mapping key');\n    }\n\n    // used for this specific key only because Object.defineProperty is slow\n    if (keyNode === '__proto__') {\n      Object.defineProperty(_result, keyNode, {\n        configurable: true,\n        enumerable: true,\n        writable: true,\n        value: valueNode\n      });\n    } else {\n      _result[keyNode] = valueNode;\n    }\n    delete overridableKeys[keyNode];\n  }\n\n  return _result;\n}\n\nfunction readLineBreak(state) {\n  var ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch === 0x0A/* LF */) {\n    state.position++;\n  } else if (ch === 0x0D/* CR */) {\n    state.position++;\n    if (state.input.charCodeAt(state.position) === 0x0A/* LF */) {\n      state.position++;\n    }\n  } else {\n    throwError(state, 'a line break is expected');\n  }\n\n  state.line += 1;\n  state.lineStart = state.position;\n  state.firstTabInLine = -1;\n}\n\nfunction skipSeparationSpace(state, allowComments, checkIndent) {\n  var lineBreaks = 0,\n      ch = state.input.charCodeAt(state.position);\n\n  while (ch !== 0) {\n    while (is_WHITE_SPACE(ch)) {\n      if (ch === 0x09/* Tab */ && state.firstTabInLine === -1) {\n        state.firstTabInLine = state.position;\n      }\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    if (allowComments && ch === 0x23/* # */) {\n      do {\n        ch = state.input.charCodeAt(++state.position);\n      } while (ch !== 0x0A/* LF */ && ch !== 0x0D/* CR */ && ch !== 0);\n    }\n\n    if (is_EOL(ch)) {\n      readLineBreak(state);\n\n      ch = state.input.charCodeAt(state.position);\n      lineBreaks++;\n      state.lineIndent = 0;\n\n      while (ch === 0x20/* Space */) {\n        state.lineIndent++;\n        ch = state.input.charCodeAt(++state.position);\n      }\n    } else {\n      break;\n    }\n  }\n\n  if (checkIndent !== -1 && lineBreaks !== 0 && state.lineIndent < checkIndent) {\n    throwWarning(state, 'deficient indentation');\n  }\n\n  return lineBreaks;\n}\n\nfunction testDocumentSeparator(state) {\n  var _position = state.position,\n      ch;\n\n  ch = state.input.charCodeAt(_position);\n\n  // Condition state.position === state.lineStart is tested\n  // in parent on each call, for efficiency. No needs to test here again.\n  if ((ch === 0x2D/* - */ || ch === 0x2E/* . */) &&\n      ch === state.input.charCodeAt(_position + 1) &&\n      ch === state.input.charCodeAt(_position + 2)) {\n\n    _position += 3;\n\n    ch = state.input.charCodeAt(_position);\n\n    if (ch === 0 || is_WS_OR_EOL(ch)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction writeFoldedLines(state, count) {\n  if (count === 1) {\n    state.result += ' ';\n  } else if (count > 1) {\n    state.result += common.repeat('\\n', count - 1);\n  }\n}\n\n\nfunction readPlainScalar(state, nodeIndent, withinFlowCollection) {\n  var preceding,\n      following,\n      captureStart,\n      captureEnd,\n      hasPendingContent,\n      _line,\n      _lineStart,\n      _lineIndent,\n      _kind = state.kind,\n      _result = state.result,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (is_WS_OR_EOL(ch)      ||\n      is_FLOW_INDICATOR(ch) ||\n      ch === 0x23/* # */    ||\n      ch === 0x26/* & */    ||\n      ch === 0x2A/* * */    ||\n      ch === 0x21/* ! */    ||\n      ch === 0x7C/* | */    ||\n      ch === 0x3E/* > */    ||\n      ch === 0x27/* ' */    ||\n      ch === 0x22/* \" */    ||\n      ch === 0x25/* % */    ||\n      ch === 0x40/* @ */    ||\n      ch === 0x60/* ` */) {\n    return false;\n  }\n\n  if (ch === 0x3F/* ? */ || ch === 0x2D/* - */) {\n    following = state.input.charCodeAt(state.position + 1);\n\n    if (is_WS_OR_EOL(following) ||\n        withinFlowCollection && is_FLOW_INDICATOR(following)) {\n      return false;\n    }\n  }\n\n  state.kind = 'scalar';\n  state.result = '';\n  captureStart = captureEnd = state.position;\n  hasPendingContent = false;\n\n  while (ch !== 0) {\n    if (ch === 0x3A/* : */) {\n      following = state.input.charCodeAt(state.position + 1);\n\n      if (is_WS_OR_EOL(following) ||\n          withinFlowCollection && is_FLOW_INDICATOR(following)) {\n        break;\n      }\n\n    } else if (ch === 0x23/* # */) {\n      preceding = state.input.charCodeAt(state.position - 1);\n\n      if (is_WS_OR_EOL(preceding)) {\n        break;\n      }\n\n    } else if ((state.position === state.lineStart && testDocumentSeparator(state)) ||\n               withinFlowCollection && is_FLOW_INDICATOR(ch)) {\n      break;\n\n    } else if (is_EOL(ch)) {\n      _line = state.line;\n      _lineStart = state.lineStart;\n      _lineIndent = state.lineIndent;\n      skipSeparationSpace(state, false, -1);\n\n      if (state.lineIndent >= nodeIndent) {\n        hasPendingContent = true;\n        ch = state.input.charCodeAt(state.position);\n        continue;\n      } else {\n        state.position = captureEnd;\n        state.line = _line;\n        state.lineStart = _lineStart;\n        state.lineIndent = _lineIndent;\n        break;\n      }\n    }\n\n    if (hasPendingContent) {\n      captureSegment(state, captureStart, captureEnd, false);\n      writeFoldedLines(state, state.line - _line);\n      captureStart = captureEnd = state.position;\n      hasPendingContent = false;\n    }\n\n    if (!is_WHITE_SPACE(ch)) {\n      captureEnd = state.position + 1;\n    }\n\n    ch = state.input.charCodeAt(++state.position);\n  }\n\n  captureSegment(state, captureStart, captureEnd, false);\n\n  if (state.result) {\n    return true;\n  }\n\n  state.kind = _kind;\n  state.result = _result;\n  return false;\n}\n\nfunction readSingleQuotedScalar(state, nodeIndent) {\n  var ch,\n      captureStart, captureEnd;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x27/* ' */) {\n    return false;\n  }\n\n  state.kind = 'scalar';\n  state.result = '';\n  state.position++;\n  captureStart = captureEnd = state.position;\n\n  while ((ch = state.input.charCodeAt(state.position)) !== 0) {\n    if (ch === 0x27/* ' */) {\n      captureSegment(state, captureStart, state.position, true);\n      ch = state.input.charCodeAt(++state.position);\n\n      if (ch === 0x27/* ' */) {\n        captureStart = state.position;\n        state.position++;\n        captureEnd = state.position;\n      } else {\n        return true;\n      }\n\n    } else if (is_EOL(ch)) {\n      captureSegment(state, captureStart, captureEnd, true);\n      writeFoldedLines(state, skipSeparationSpace(state, false, nodeIndent));\n      captureStart = captureEnd = state.position;\n\n    } else if (state.position === state.lineStart && testDocumentSeparator(state)) {\n      throwError(state, 'unexpected end of the document within a single quoted scalar');\n\n    } else {\n      state.position++;\n      captureEnd = state.position;\n    }\n  }\n\n  throwError(state, 'unexpected end of the stream within a single quoted scalar');\n}\n\nfunction readDoubleQuotedScalar(state, nodeIndent) {\n  var captureStart,\n      captureEnd,\n      hexLength,\n      hexResult,\n      tmp,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x22/* \" */) {\n    return false;\n  }\n\n  state.kind = 'scalar';\n  state.result = '';\n  state.position++;\n  captureStart = captureEnd = state.position;\n\n  while ((ch = state.input.charCodeAt(state.position)) !== 0) {\n    if (ch === 0x22/* \" */) {\n      captureSegment(state, captureStart, state.position, true);\n      state.position++;\n      return true;\n\n    } else if (ch === 0x5C/* \\ */) {\n      captureSegment(state, captureStart, state.position, true);\n      ch = state.input.charCodeAt(++state.position);\n\n      if (is_EOL(ch)) {\n        skipSeparationSpace(state, false, nodeIndent);\n\n        // TODO: rework to inline fn with no type cast?\n      } else if (ch < 256 && simpleEscapeCheck[ch]) {\n        state.result += simpleEscapeMap[ch];\n        state.position++;\n\n      } else if ((tmp = escapedHexLen(ch)) > 0) {\n        hexLength = tmp;\n        hexResult = 0;\n\n        for (; hexLength > 0; hexLength--) {\n          ch = state.input.charCodeAt(++state.position);\n\n          if ((tmp = fromHexCode(ch)) >= 0) {\n            hexResult = (hexResult << 4) + tmp;\n\n          } else {\n            throwError(state, 'expected hexadecimal character');\n          }\n        }\n\n        state.result += charFromCodepoint(hexResult);\n\n        state.position++;\n\n      } else {\n        throwError(state, 'unknown escape sequence');\n      }\n\n      captureStart = captureEnd = state.position;\n\n    } else if (is_EOL(ch)) {\n      captureSegment(state, captureStart, captureEnd, true);\n      writeFoldedLines(state, skipSeparationSpace(state, false, nodeIndent));\n      captureStart = captureEnd = state.position;\n\n    } else if (state.position === state.lineStart && testDocumentSeparator(state)) {\n      throwError(state, 'unexpected end of the document within a double quoted scalar');\n\n    } else {\n      state.position++;\n      captureEnd = state.position;\n    }\n  }\n\n  throwError(state, 'unexpected end of the stream within a double quoted scalar');\n}\n\nfunction readFlowCollection(state, nodeIndent) {\n  var readNext = true,\n      _line,\n      _lineStart,\n      _pos,\n      _tag     = state.tag,\n      _result,\n      _anchor  = state.anchor,\n      following,\n      terminator,\n      isPair,\n      isExplicitPair,\n      isMapping,\n      overridableKeys = Object.create(null),\n      keyNode,\n      keyTag,\n      valueNode,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch === 0x5B/* [ */) {\n    terminator = 0x5D;/* ] */\n    isMapping = false;\n    _result = [];\n  } else if (ch === 0x7B/* { */) {\n    terminator = 0x7D;/* } */\n    isMapping = true;\n    _result = {};\n  } else {\n    return false;\n  }\n\n  if (state.anchor !== null) {\n    state.anchorMap[state.anchor] = _result;\n  }\n\n  ch = state.input.charCodeAt(++state.position);\n\n  while (ch !== 0) {\n    skipSeparationSpace(state, true, nodeIndent);\n\n    ch = state.input.charCodeAt(state.position);\n\n    if (ch === terminator) {\n      state.position++;\n      state.tag = _tag;\n      state.anchor = _anchor;\n      state.kind = isMapping ? 'mapping' : 'sequence';\n      state.result = _result;\n      return true;\n    } else if (!readNext) {\n      throwError(state, 'missed comma between flow collection entries');\n    } else if (ch === 0x2C/* , */) {\n      // \"flow collection entries can never be completely empty\", as per YAML 1.2, section 7.4\n      throwError(state, \"expected the node content, but found ','\");\n    }\n\n    keyTag = keyNode = valueNode = null;\n    isPair = isExplicitPair = false;\n\n    if (ch === 0x3F/* ? */) {\n      following = state.input.charCodeAt(state.position + 1);\n\n      if (is_WS_OR_EOL(following)) {\n        isPair = isExplicitPair = true;\n        state.position++;\n        skipSeparationSpace(state, true, nodeIndent);\n      }\n    }\n\n    _line = state.line; // Save the current line.\n    _lineStart = state.lineStart;\n    _pos = state.position;\n    composeNode(state, nodeIndent, CONTEXT_FLOW_IN, false, true);\n    keyTag = state.tag;\n    keyNode = state.result;\n    skipSeparationSpace(state, true, nodeIndent);\n\n    ch = state.input.charCodeAt(state.position);\n\n    if ((isExplicitPair || state.line === _line) && ch === 0x3A/* : */) {\n      isPair = true;\n      ch = state.input.charCodeAt(++state.position);\n      skipSeparationSpace(state, true, nodeIndent);\n      composeNode(state, nodeIndent, CONTEXT_FLOW_IN, false, true);\n      valueNode = state.result;\n    }\n\n    if (isMapping) {\n      storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, valueNode, _line, _lineStart, _pos);\n    } else if (isPair) {\n      _result.push(storeMappingPair(state, null, overridableKeys, keyTag, keyNode, valueNode, _line, _lineStart, _pos));\n    } else {\n      _result.push(keyNode);\n    }\n\n    skipSeparationSpace(state, true, nodeIndent);\n\n    ch = state.input.charCodeAt(state.position);\n\n    if (ch === 0x2C/* , */) {\n      readNext = true;\n      ch = state.input.charCodeAt(++state.position);\n    } else {\n      readNext = false;\n    }\n  }\n\n  throwError(state, 'unexpected end of the stream within a flow collection');\n}\n\nfunction readBlockScalar(state, nodeIndent) {\n  var captureStart,\n      folding,\n      chomping       = CHOMPING_CLIP,\n      didReadContent = false,\n      detectedIndent = false,\n      textIndent     = nodeIndent,\n      emptyLines     = 0,\n      atMoreIndented = false,\n      tmp,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch === 0x7C/* | */) {\n    folding = false;\n  } else if (ch === 0x3E/* > */) {\n    folding = true;\n  } else {\n    return false;\n  }\n\n  state.kind = 'scalar';\n  state.result = '';\n\n  while (ch !== 0) {\n    ch = state.input.charCodeAt(++state.position);\n\n    if (ch === 0x2B/* + */ || ch === 0x2D/* - */) {\n      if (CHOMPING_CLIP === chomping) {\n        chomping = (ch === 0x2B/* + */) ? CHOMPING_KEEP : CHOMPING_STRIP;\n      } else {\n        throwError(state, 'repeat of a chomping mode identifier');\n      }\n\n    } else if ((tmp = fromDecimalCode(ch)) >= 0) {\n      if (tmp === 0) {\n        throwError(state, 'bad explicit indentation width of a block scalar; it cannot be less than one');\n      } else if (!detectedIndent) {\n        textIndent = nodeIndent + tmp - 1;\n        detectedIndent = true;\n      } else {\n        throwError(state, 'repeat of an indentation width identifier');\n      }\n\n    } else {\n      break;\n    }\n  }\n\n  if (is_WHITE_SPACE(ch)) {\n    do { ch = state.input.charCodeAt(++state.position); }\n    while (is_WHITE_SPACE(ch));\n\n    if (ch === 0x23/* # */) {\n      do { ch = state.input.charCodeAt(++state.position); }\n      while (!is_EOL(ch) && (ch !== 0));\n    }\n  }\n\n  while (ch !== 0) {\n    readLineBreak(state);\n    state.lineIndent = 0;\n\n    ch = state.input.charCodeAt(state.position);\n\n    while ((!detectedIndent || state.lineIndent < textIndent) &&\n           (ch === 0x20/* Space */)) {\n      state.lineIndent++;\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    if (!detectedIndent && state.lineIndent > textIndent) {\n      textIndent = state.lineIndent;\n    }\n\n    if (is_EOL(ch)) {\n      emptyLines++;\n      continue;\n    }\n\n    // End of the scalar.\n    if (state.lineIndent < textIndent) {\n\n      // Perform the chomping.\n      if (chomping === CHOMPING_KEEP) {\n        state.result += common.repeat('\\n', didReadContent ? 1 + emptyLines : emptyLines);\n      } else if (chomping === CHOMPING_CLIP) {\n        if (didReadContent) { // i.e. only if the scalar is not empty.\n          state.result += '\\n';\n        }\n      }\n\n      // Break this `while` cycle and go to the funciton's epilogue.\n      break;\n    }\n\n    // Folded style: use fancy rules to handle line breaks.\n    if (folding) {\n\n      // Lines starting with white space characters (more-indented lines) are not folded.\n      if (is_WHITE_SPACE(ch)) {\n        atMoreIndented = true;\n        // except for the first content line (cf. Example 8.1)\n        state.result += common.repeat('\\n', didReadContent ? 1 + emptyLines : emptyLines);\n\n      // End of more-indented block.\n      } else if (atMoreIndented) {\n        atMoreIndented = false;\n        state.result += common.repeat('\\n', emptyLines + 1);\n\n      // Just one line break - perceive as the same line.\n      } else if (emptyLines === 0) {\n        if (didReadContent) { // i.e. only if we have already read some scalar content.\n          state.result += ' ';\n        }\n\n      // Several line breaks - perceive as different lines.\n      } else {\n        state.result += common.repeat('\\n', emptyLines);\n      }\n\n    // Literal style: just add exact number of line breaks between content lines.\n    } else {\n      // Keep all line breaks except the header line break.\n      state.result += common.repeat('\\n', didReadContent ? 1 + emptyLines : emptyLines);\n    }\n\n    didReadContent = true;\n    detectedIndent = true;\n    emptyLines = 0;\n    captureStart = state.position;\n\n    while (!is_EOL(ch) && (ch !== 0)) {\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    captureSegment(state, captureStart, state.position, false);\n  }\n\n  return true;\n}\n\nfunction readBlockSequence(state, nodeIndent) {\n  var _line,\n      _tag      = state.tag,\n      _anchor   = state.anchor,\n      _result   = [],\n      following,\n      detected  = false,\n      ch;\n\n  // there is a leading tab before this token, so it can't be a block sequence/mapping;\n  // it can still be flow sequence/mapping or a scalar\n  if (state.firstTabInLine !== -1) return false;\n\n  if (state.anchor !== null) {\n    state.anchorMap[state.anchor] = _result;\n  }\n\n  ch = state.input.charCodeAt(state.position);\n\n  while (ch !== 0) {\n    if (state.firstTabInLine !== -1) {\n      state.position = state.firstTabInLine;\n      throwError(state, 'tab characters must not be used in indentation');\n    }\n\n    if (ch !== 0x2D/* - */) {\n      break;\n    }\n\n    following = state.input.charCodeAt(state.position + 1);\n\n    if (!is_WS_OR_EOL(following)) {\n      break;\n    }\n\n    detected = true;\n    state.position++;\n\n    if (skipSeparationSpace(state, true, -1)) {\n      if (state.lineIndent <= nodeIndent) {\n        _result.push(null);\n        ch = state.input.charCodeAt(state.position);\n        continue;\n      }\n    }\n\n    _line = state.line;\n    composeNode(state, nodeIndent, CONTEXT_BLOCK_IN, false, true);\n    _result.push(state.result);\n    skipSeparationSpace(state, true, -1);\n\n    ch = state.input.charCodeAt(state.position);\n\n    if ((state.line === _line || state.lineIndent > nodeIndent) && (ch !== 0)) {\n      throwError(state, 'bad indentation of a sequence entry');\n    } else if (state.lineIndent < nodeIndent) {\n      break;\n    }\n  }\n\n  if (detected) {\n    state.tag = _tag;\n    state.anchor = _anchor;\n    state.kind = 'sequence';\n    state.result = _result;\n    return true;\n  }\n  return false;\n}\n\nfunction readBlockMapping(state, nodeIndent, flowIndent) {\n  var following,\n      allowCompact,\n      _line,\n      _keyLine,\n      _keyLineStart,\n      _keyPos,\n      _tag          = state.tag,\n      _anchor       = state.anchor,\n      _result       = {},\n      overridableKeys = Object.create(null),\n      keyTag        = null,\n      keyNode       = null,\n      valueNode     = null,\n      atExplicitKey = false,\n      detected      = false,\n      ch;\n\n  // there is a leading tab before this token, so it can't be a block sequence/mapping;\n  // it can still be flow sequence/mapping or a scalar\n  if (state.firstTabInLine !== -1) return false;\n\n  if (state.anchor !== null) {\n    state.anchorMap[state.anchor] = _result;\n  }\n\n  ch = state.input.charCodeAt(state.position);\n\n  while (ch !== 0) {\n    if (!atExplicitKey && state.firstTabInLine !== -1) {\n      state.position = state.firstTabInLine;\n      throwError(state, 'tab characters must not be used in indentation');\n    }\n\n    following = state.input.charCodeAt(state.position + 1);\n    _line = state.line; // Save the current line.\n\n    //\n    // Explicit notation case. There are two separate blocks:\n    // first for the key (denoted by \"?\") and second for the value (denoted by \":\")\n    //\n    if ((ch === 0x3F/* ? */ || ch === 0x3A/* : */) && is_WS_OR_EOL(following)) {\n\n      if (ch === 0x3F/* ? */) {\n        if (atExplicitKey) {\n          storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, null, _keyLine, _keyLineStart, _keyPos);\n          keyTag = keyNode = valueNode = null;\n        }\n\n        detected = true;\n        atExplicitKey = true;\n        allowCompact = true;\n\n      } else if (atExplicitKey) {\n        // i.e. 0x3A/* : */ === character after the explicit key.\n        atExplicitKey = false;\n        allowCompact = true;\n\n      } else {\n        throwError(state, 'incomplete explicit mapping pair; a key node is missed; or followed by a non-tabulated empty line');\n      }\n\n      state.position += 1;\n      ch = following;\n\n    //\n    // Implicit notation case. Flow-style node as the key first, then \":\", and the value.\n    //\n    } else {\n      _keyLine = state.line;\n      _keyLineStart = state.lineStart;\n      _keyPos = state.position;\n\n      if (!composeNode(state, flowIndent, CONTEXT_FLOW_OUT, false, true)) {\n        // Neither implicit nor explicit notation.\n        // Reading is done. Go to the epilogue.\n        break;\n      }\n\n      if (state.line === _line) {\n        ch = state.input.charCodeAt(state.position);\n\n        while (is_WHITE_SPACE(ch)) {\n          ch = state.input.charCodeAt(++state.position);\n        }\n\n        if (ch === 0x3A/* : */) {\n          ch = state.input.charCodeAt(++state.position);\n\n          if (!is_WS_OR_EOL(ch)) {\n            throwError(state, 'a whitespace character is expected after the key-value separator within a block mapping');\n          }\n\n          if (atExplicitKey) {\n            storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, null, _keyLine, _keyLineStart, _keyPos);\n            keyTag = keyNode = valueNode = null;\n          }\n\n          detected = true;\n          atExplicitKey = false;\n          allowCompact = false;\n          keyTag = state.tag;\n          keyNode = state.result;\n\n        } else if (detected) {\n          throwError(state, 'can not read an implicit mapping pair; a colon is missed');\n\n        } else {\n          state.tag = _tag;\n          state.anchor = _anchor;\n          return true; // Keep the result of `composeNode`.\n        }\n\n      } else if (detected) {\n        throwError(state, 'can not read a block mapping entry; a multiline key may not be an implicit key');\n\n      } else {\n        state.tag = _tag;\n        state.anchor = _anchor;\n        return true; // Keep the result of `composeNode`.\n      }\n    }\n\n    //\n    // Common reading code for both explicit and implicit notations.\n    //\n    if (state.line === _line || state.lineIndent > nodeIndent) {\n      if (atExplicitKey) {\n        _keyLine = state.line;\n        _keyLineStart = state.lineStart;\n        _keyPos = state.position;\n      }\n\n      if (composeNode(state, nodeIndent, CONTEXT_BLOCK_OUT, true, allowCompact)) {\n        if (atExplicitKey) {\n          keyNode = state.result;\n        } else {\n          valueNode = state.result;\n        }\n      }\n\n      if (!atExplicitKey) {\n        storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, valueNode, _keyLine, _keyLineStart, _keyPos);\n        keyTag = keyNode = valueNode = null;\n      }\n\n      skipSeparationSpace(state, true, -1);\n      ch = state.input.charCodeAt(state.position);\n    }\n\n    if ((state.line === _line || state.lineIndent > nodeIndent) && (ch !== 0)) {\n      throwError(state, 'bad indentation of a mapping entry');\n    } else if (state.lineIndent < nodeIndent) {\n      break;\n    }\n  }\n\n  //\n  // Epilogue.\n  //\n\n  // Special case: last mapping's node contains only the key in explicit notation.\n  if (atExplicitKey) {\n    storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, null, _keyLine, _keyLineStart, _keyPos);\n  }\n\n  // Expose the resulting mapping.\n  if (detected) {\n    state.tag = _tag;\n    state.anchor = _anchor;\n    state.kind = 'mapping';\n    state.result = _result;\n  }\n\n  return detected;\n}\n\nfunction readTagProperty(state) {\n  var _position,\n      isVerbatim = false,\n      isNamed    = false,\n      tagHandle,\n      tagName,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x21/* ! */) return false;\n\n  if (state.tag !== null) {\n    throwError(state, 'duplication of a tag property');\n  }\n\n  ch = state.input.charCodeAt(++state.position);\n\n  if (ch === 0x3C/* < */) {\n    isVerbatim = true;\n    ch = state.input.charCodeAt(++state.position);\n\n  } else if (ch === 0x21/* ! */) {\n    isNamed = true;\n    tagHandle = '!!';\n    ch = state.input.charCodeAt(++state.position);\n\n  } else {\n    tagHandle = '!';\n  }\n\n  _position = state.position;\n\n  if (isVerbatim) {\n    do { ch = state.input.charCodeAt(++state.position); }\n    while (ch !== 0 && ch !== 0x3E/* > */);\n\n    if (state.position < state.length) {\n      tagName = state.input.slice(_position, state.position);\n      ch = state.input.charCodeAt(++state.position);\n    } else {\n      throwError(state, 'unexpected end of the stream within a verbatim tag');\n    }\n  } else {\n    while (ch !== 0 && !is_WS_OR_EOL(ch)) {\n\n      if (ch === 0x21/* ! */) {\n        if (!isNamed) {\n          tagHandle = state.input.slice(_position - 1, state.position + 1);\n\n          if (!PATTERN_TAG_HANDLE.test(tagHandle)) {\n            throwError(state, 'named tag handle cannot contain such characters');\n          }\n\n          isNamed = true;\n          _position = state.position + 1;\n        } else {\n          throwError(state, 'tag suffix cannot contain exclamation marks');\n        }\n      }\n\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    tagName = state.input.slice(_position, state.position);\n\n    if (PATTERN_FLOW_INDICATORS.test(tagName)) {\n      throwError(state, 'tag suffix cannot contain flow indicator characters');\n    }\n  }\n\n  if (tagName && !PATTERN_TAG_URI.test(tagName)) {\n    throwError(state, 'tag name cannot contain such characters: ' + tagName);\n  }\n\n  try {\n    tagName = decodeURIComponent(tagName);\n  } catch (err) {\n    throwError(state, 'tag name is malformed: ' + tagName);\n  }\n\n  if (isVerbatim) {\n    state.tag = tagName;\n\n  } else if (_hasOwnProperty.call(state.tagMap, tagHandle)) {\n    state.tag = state.tagMap[tagHandle] + tagName;\n\n  } else if (tagHandle === '!') {\n    state.tag = '!' + tagName;\n\n  } else if (tagHandle === '!!') {\n    state.tag = 'tag:yaml.org,2002:' + tagName;\n\n  } else {\n    throwError(state, 'undeclared tag handle \"' + tagHandle + '\"');\n  }\n\n  return true;\n}\n\nfunction readAnchorProperty(state) {\n  var _position,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x26/* & */) return false;\n\n  if (state.anchor !== null) {\n    throwError(state, 'duplication of an anchor property');\n  }\n\n  ch = state.input.charCodeAt(++state.position);\n  _position = state.position;\n\n  while (ch !== 0 && !is_WS_OR_EOL(ch) && !is_FLOW_INDICATOR(ch)) {\n    ch = state.input.charCodeAt(++state.position);\n  }\n\n  if (state.position === _position) {\n    throwError(state, 'name of an anchor node must contain at least one character');\n  }\n\n  state.anchor = state.input.slice(_position, state.position);\n  return true;\n}\n\nfunction readAlias(state) {\n  var _position, alias,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x2A/* * */) return false;\n\n  ch = state.input.charCodeAt(++state.position);\n  _position = state.position;\n\n  while (ch !== 0 && !is_WS_OR_EOL(ch) && !is_FLOW_INDICATOR(ch)) {\n    ch = state.input.charCodeAt(++state.position);\n  }\n\n  if (state.position === _position) {\n    throwError(state, 'name of an alias node must contain at least one character');\n  }\n\n  alias = state.input.slice(_position, state.position);\n\n  if (!_hasOwnProperty.call(state.anchorMap, alias)) {\n    throwError(state, 'unidentified alias \"' + alias + '\"');\n  }\n\n  state.result = state.anchorMap[alias];\n  skipSeparationSpace(state, true, -1);\n  return true;\n}\n\nfunction composeNode(state, parentIndent, nodeContext, allowToSeek, allowCompact) {\n  var allowBlockStyles,\n      allowBlockScalars,\n      allowBlockCollections,\n      indentStatus = 1, // 1: this>parent, 0: this=parent, -1: this<parent\n      atNewLine  = false,\n      hasContent = false,\n      typeIndex,\n      typeQuantity,\n      typeList,\n      type,\n      flowIndent,\n      blockIndent;\n\n  if (state.listener !== null) {\n    state.listener('open', state);\n  }\n\n  state.tag    = null;\n  state.anchor = null;\n  state.kind   = null;\n  state.result = null;\n\n  allowBlockStyles = allowBlockScalars = allowBlockCollections =\n    CONTEXT_BLOCK_OUT === nodeContext ||\n    CONTEXT_BLOCK_IN  === nodeContext;\n\n  if (allowToSeek) {\n    if (skipSeparationSpace(state, true, -1)) {\n      atNewLine = true;\n\n      if (state.lineIndent > parentIndent) {\n        indentStatus = 1;\n      } else if (state.lineIndent === parentIndent) {\n        indentStatus = 0;\n      } else if (state.lineIndent < parentIndent) {\n        indentStatus = -1;\n      }\n    }\n  }\n\n  if (indentStatus === 1) {\n    while (readTagProperty(state) || readAnchorProperty(state)) {\n      if (skipSeparationSpace(state, true, -1)) {\n        atNewLine = true;\n        allowBlockCollections = allowBlockStyles;\n\n        if (state.lineIndent > parentIndent) {\n          indentStatus = 1;\n        } else if (state.lineIndent === parentIndent) {\n          indentStatus = 0;\n        } else if (state.lineIndent < parentIndent) {\n          indentStatus = -1;\n        }\n      } else {\n        allowBlockCollections = false;\n      }\n    }\n  }\n\n  if (allowBlockCollections) {\n    allowBlockCollections = atNewLine || allowCompact;\n  }\n\n  if (indentStatus === 1 || CONTEXT_BLOCK_OUT === nodeContext) {\n    if (CONTEXT_FLOW_IN === nodeContext || CONTEXT_FLOW_OUT === nodeContext) {\n      flowIndent = parentIndent;\n    } else {\n      flowIndent = parentIndent + 1;\n    }\n\n    blockIndent = state.position - state.lineStart;\n\n    if (indentStatus === 1) {\n      if (allowBlockCollections &&\n          (readBlockSequence(state, blockIndent) ||\n           readBlockMapping(state, blockIndent, flowIndent)) ||\n          readFlowCollection(state, flowIndent)) {\n        hasContent = true;\n      } else {\n        if ((allowBlockScalars && readBlockScalar(state, flowIndent)) ||\n            readSingleQuotedScalar(state, flowIndent) ||\n            readDoubleQuotedScalar(state, flowIndent)) {\n          hasContent = true;\n\n        } else if (readAlias(state)) {\n          hasContent = true;\n\n          if (state.tag !== null || state.anchor !== null) {\n            throwError(state, 'alias node should not have any properties');\n          }\n\n        } else if (readPlainScalar(state, flowIndent, CONTEXT_FLOW_IN === nodeContext)) {\n          hasContent = true;\n\n          if (state.tag === null) {\n            state.tag = '?';\n          }\n        }\n\n        if (state.anchor !== null) {\n          state.anchorMap[state.anchor] = state.result;\n        }\n      }\n    } else if (indentStatus === 0) {\n      // Special case: block sequences are allowed to have same indentation level as the parent.\n      // http://www.yaml.org/spec/1.2/spec.html#id2799784\n      hasContent = allowBlockCollections && readBlockSequence(state, blockIndent);\n    }\n  }\n\n  if (state.tag === null) {\n    if (state.anchor !== null) {\n      state.anchorMap[state.anchor] = state.result;\n    }\n\n  } else if (state.tag === '?') {\n    // Implicit resolving is not allowed for non-scalar types, and '?'\n    // non-specific tag is only automatically assigned to plain scalars.\n    //\n    // We only need to check kind conformity in case user explicitly assigns '?'\n    // tag, for example like this: \"!<?> [0]\"\n    //\n    if (state.result !== null && state.kind !== 'scalar') {\n      throwError(state, 'unacceptable node kind for !<?> tag; it should be \"scalar\", not \"' + state.kind + '\"');\n    }\n\n    for (typeIndex = 0, typeQuantity = state.implicitTypes.length; typeIndex < typeQuantity; typeIndex += 1) {\n      type = state.implicitTypes[typeIndex];\n\n      if (type.resolve(state.result)) { // `state.result` updated in resolver if matched\n        state.result = type.construct(state.result);\n        state.tag = type.tag;\n        if (state.anchor !== null) {\n          state.anchorMap[state.anchor] = state.result;\n        }\n        break;\n      }\n    }\n  } else if (state.tag !== '!') {\n    if (_hasOwnProperty.call(state.typeMap[state.kind || 'fallback'], state.tag)) {\n      type = state.typeMap[state.kind || 'fallback'][state.tag];\n    } else {\n      // looking for multi type\n      type = null;\n      typeList = state.typeMap.multi[state.kind || 'fallback'];\n\n      for (typeIndex = 0, typeQuantity = typeList.length; typeIndex < typeQuantity; typeIndex += 1) {\n        if (state.tag.slice(0, typeList[typeIndex].tag.length) === typeList[typeIndex].tag) {\n          type = typeList[typeIndex];\n          break;\n        }\n      }\n    }\n\n    if (!type) {\n      throwError(state, 'unknown tag !<' + state.tag + '>');\n    }\n\n    if (state.result !== null && type.kind !== state.kind) {\n      throwError(state, 'unacceptable node kind for !<' + state.tag + '> tag; it should be \"' + type.kind + '\", not \"' + state.kind + '\"');\n    }\n\n    if (!type.resolve(state.result, state.tag)) { // `state.result` updated in resolver if matched\n      throwError(state, 'cannot resolve a node with !<' + state.tag + '> explicit tag');\n    } else {\n      state.result = type.construct(state.result, state.tag);\n      if (state.anchor !== null) {\n        state.anchorMap[state.anchor] = state.result;\n      }\n    }\n  }\n\n  if (state.listener !== null) {\n    state.listener('close', state);\n  }\n  return state.tag !== null ||  state.anchor !== null || hasContent;\n}\n\nfunction readDocument(state) {\n  var documentStart = state.position,\n      _position,\n      directiveName,\n      directiveArgs,\n      hasDirectives = false,\n      ch;\n\n  state.version = null;\n  state.checkLineBreaks = state.legacy;\n  state.tagMap = Object.create(null);\n  state.anchorMap = Object.create(null);\n\n  while ((ch = state.input.charCodeAt(state.position)) !== 0) {\n    skipSeparationSpace(state, true, -1);\n\n    ch = state.input.charCodeAt(state.position);\n\n    if (state.lineIndent > 0 || ch !== 0x25/* % */) {\n      break;\n    }\n\n    hasDirectives = true;\n    ch = state.input.charCodeAt(++state.position);\n    _position = state.position;\n\n    while (ch !== 0 && !is_WS_OR_EOL(ch)) {\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    directiveName = state.input.slice(_position, state.position);\n    directiveArgs = [];\n\n    if (directiveName.length < 1) {\n      throwError(state, 'directive name must not be less than one character in length');\n    }\n\n    while (ch !== 0) {\n      while (is_WHITE_SPACE(ch)) {\n        ch = state.input.charCodeAt(++state.position);\n      }\n\n      if (ch === 0x23/* # */) {\n        do { ch = state.input.charCodeAt(++state.position); }\n        while (ch !== 0 && !is_EOL(ch));\n        break;\n      }\n\n      if (is_EOL(ch)) break;\n\n      _position = state.position;\n\n      while (ch !== 0 && !is_WS_OR_EOL(ch)) {\n        ch = state.input.charCodeAt(++state.position);\n      }\n\n      directiveArgs.push(state.input.slice(_position, state.position));\n    }\n\n    if (ch !== 0) readLineBreak(state);\n\n    if (_hasOwnProperty.call(directiveHandlers, directiveName)) {\n      directiveHandlers[directiveName](state, directiveName, directiveArgs);\n    } else {\n      throwWarning(state, 'unknown document directive \"' + directiveName + '\"');\n    }\n  }\n\n  skipSeparationSpace(state, true, -1);\n\n  if (state.lineIndent === 0 &&\n      state.input.charCodeAt(state.position)     === 0x2D/* - */ &&\n      state.input.charCodeAt(state.position + 1) === 0x2D/* - */ &&\n      state.input.charCodeAt(state.position + 2) === 0x2D/* - */) {\n    state.position += 3;\n    skipSeparationSpace(state, true, -1);\n\n  } else if (hasDirectives) {\n    throwError(state, 'directives end mark is expected');\n  }\n\n  composeNode(state, state.lineIndent - 1, CONTEXT_BLOCK_OUT, false, true);\n  skipSeparationSpace(state, true, -1);\n\n  if (state.checkLineBreaks &&\n      PATTERN_NON_ASCII_LINE_BREAKS.test(state.input.slice(documentStart, state.position))) {\n    throwWarning(state, 'non-ASCII line breaks are interpreted as content');\n  }\n\n  state.documents.push(state.result);\n\n  if (state.position === state.lineStart && testDocumentSeparator(state)) {\n\n    if (state.input.charCodeAt(state.position) === 0x2E/* . */) {\n      state.position += 3;\n      skipSeparationSpace(state, true, -1);\n    }\n    return;\n  }\n\n  if (state.position < (state.length - 1)) {\n    throwError(state, 'end of the stream or a document separator is expected');\n  } else {\n    return;\n  }\n}\n\n\nfunction loadDocuments(input, options) {\n  input = String(input);\n  options = options || {};\n\n  if (input.length !== 0) {\n\n    // Add tailing `\\n` if not exists\n    if (input.charCodeAt(input.length - 1) !== 0x0A/* LF */ &&\n        input.charCodeAt(input.length - 1) !== 0x0D/* CR */) {\n      input += '\\n';\n    }\n\n    // Strip BOM\n    if (input.charCodeAt(0) === 0xFEFF) {\n      input = input.slice(1);\n    }\n  }\n\n  var state = new State(input, options);\n\n  var nullpos = input.indexOf('\\0');\n\n  if (nullpos !== -1) {\n    state.position = nullpos;\n    throwError(state, 'null byte is not allowed in input');\n  }\n\n  // Use 0 as string terminator. That significantly simplifies bounds check.\n  state.input += '\\0';\n\n  while (state.input.charCodeAt(state.position) === 0x20/* Space */) {\n    state.lineIndent += 1;\n    state.position += 1;\n  }\n\n  while (state.position < (state.length - 1)) {\n    readDocument(state);\n  }\n\n  return state.documents;\n}\n\n\nfunction loadAll(input, iterator, options) {\n  if (iterator !== null && typeof iterator === 'object' && typeof options === 'undefined') {\n    options = iterator;\n    iterator = null;\n  }\n\n  var documents = loadDocuments(input, options);\n\n  if (typeof iterator !== 'function') {\n    return documents;\n  }\n\n  for (var index = 0, length = documents.length; index < length; index += 1) {\n    iterator(documents[index]);\n  }\n}\n\n\nfunction load(input, options) {\n  var documents = loadDocuments(input, options);\n\n  if (documents.length === 0) {\n    /*eslint-disable no-undefined*/\n    return undefined;\n  } else if (documents.length === 1) {\n    return documents[0];\n  }\n  throw new YAMLException('expected a single document in the stream, but found more');\n}\n\n\nmodule.exports.loadAll = loadAll;\nmodule.exports.load    = load;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}