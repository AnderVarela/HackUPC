{"ast":null,"code":"'use strict';\n\nconst defaultExclude = require('./default-exclude.js');\nconst defaultExtension = require('./default-extension.js');\nconst nycCommands = {\n  all: [null, 'check-coverage', 'instrument', 'merge', 'report'],\n  testExclude: [null, 'instrument', 'report', 'check-coverage'],\n  instrument: [null, 'instrument'],\n  checkCoverage: [null, 'report', 'check-coverage'],\n  report: [null, 'report'],\n  main: [null],\n  instrumentOnly: ['instrument']\n};\nconst cwd = {\n  description: 'working directory used when resolving paths',\n  type: 'string',\n  get default() {\n    return process.cwd();\n  },\n  nycCommands: nycCommands.all\n};\nconst nycrcPath = {\n  description: 'specify an explicit path to find nyc configuration',\n  nycCommands: nycCommands.all\n};\nconst tempDir = {\n  description: 'directory to output raw coverage information to',\n  type: 'string',\n  default: './.nyc_output',\n  nycAlias: 't',\n  nycHiddenAlias: 'temp-directory',\n  nycCommands: [null, 'check-coverage', 'merge', 'report']\n};\nconst testExclude = {\n  exclude: {\n    description: 'a list of specific files and directories that should be excluded from coverage, glob patterns are supported',\n    type: 'array',\n    items: {\n      type: 'string'\n    },\n    default: defaultExclude,\n    nycCommands: nycCommands.testExclude,\n    nycAlias: 'x'\n  },\n  excludeNodeModules: {\n    description: 'whether or not to exclude all node_module folders (i.e. **/node_modules/**) by default',\n    type: 'boolean',\n    default: true,\n    nycCommands: nycCommands.testExclude\n  },\n  include: {\n    description: 'a list of specific files that should be covered, glob patterns are supported',\n    type: 'array',\n    items: {\n      type: 'string'\n    },\n    default: [],\n    nycCommands: nycCommands.testExclude,\n    nycAlias: 'n'\n  },\n  extension: {\n    description: 'a list of extensions that nyc should handle in addition to .js',\n    type: 'array',\n    items: {\n      type: 'string'\n    },\n    default: defaultExtension,\n    nycCommands: nycCommands.testExclude,\n    nycAlias: 'e'\n  }\n};\nconst instrumentVisitor = {\n  coverageVariable: {\n    description: 'variable to store coverage',\n    type: 'string',\n    default: '__coverage__',\n    nycCommands: nycCommands.instrument\n  },\n  coverageGlobalScope: {\n    description: 'scope to store the coverage variable',\n    type: 'string',\n    default: 'this',\n    nycCommands: nycCommands.instrument\n  },\n  coverageGlobalScopeFunc: {\n    description: 'avoid potentially replaced `Function` when finding global scope',\n    type: 'boolean',\n    default: true,\n    nycCommands: nycCommands.instrument\n  },\n  ignoreClassMethods: {\n    description: 'class method names to ignore for coverage',\n    type: 'array',\n    items: {\n      type: 'string'\n    },\n    default: [],\n    nycCommands: nycCommands.instrument\n  }\n};\nconst instrumentParseGen = {\n  autoWrap: {\n    description: 'allow `return` statements outside of functions',\n    type: 'boolean',\n    default: true,\n    nycCommands: nycCommands.instrument\n  },\n  esModules: {\n    description: 'should files be treated as ES Modules',\n    type: 'boolean',\n    default: true,\n    nycCommands: nycCommands.instrument\n  },\n  parserPlugins: {\n    description: 'babel parser plugins to use when parsing the source',\n    type: 'array',\n    items: {\n      type: 'string'\n    },\n    /* Babel parser plugins are to be enabled when the feature is stage 3 and\n     * implemented in a released version of node.js. */\n    default: ['asyncGenerators', 'bigInt', 'classProperties', 'classPrivateProperties', 'classPrivateMethods', 'dynamicImport', 'importMeta', 'numericSeparator', 'objectRestSpread', 'optionalCatchBinding', 'topLevelAwait'],\n    nycCommands: nycCommands.instrument\n  },\n  compact: {\n    description: 'should the output be compacted?',\n    type: 'boolean',\n    default: true,\n    nycCommands: nycCommands.instrument\n  },\n  preserveComments: {\n    description: 'should comments be preserved in the output?',\n    type: 'boolean',\n    default: true,\n    nycCommands: nycCommands.instrument\n  },\n  produceSourceMap: {\n    description: 'should source maps be produced?',\n    type: 'boolean',\n    default: true,\n    nycCommands: nycCommands.instrument\n  }\n};\nconst checkCoverage = {\n  excludeAfterRemap: {\n    description: 'should exclude logic be performed after the source-map remaps filenames?',\n    type: 'boolean',\n    default: true,\n    nycCommands: nycCommands.checkCoverage\n  },\n  branches: {\n    description: 'what % of branches must be covered?',\n    type: 'number',\n    default: 0,\n    minimum: 0,\n    maximum: 100,\n    nycCommands: nycCommands.checkCoverage\n  },\n  functions: {\n    description: 'what % of functions must be covered?',\n    type: 'number',\n    default: 0,\n    minimum: 0,\n    maximum: 100,\n    nycCommands: nycCommands.checkCoverage\n  },\n  lines: {\n    description: 'what % of lines must be covered?',\n    type: 'number',\n    default: 90,\n    minimum: 0,\n    maximum: 100,\n    nycCommands: nycCommands.checkCoverage\n  },\n  statements: {\n    description: 'what % of statements must be covered?',\n    type: 'number',\n    default: 0,\n    minimum: 0,\n    maximum: 100,\n    nycCommands: nycCommands.checkCoverage\n  },\n  perFile: {\n    description: 'check thresholds per file',\n    type: 'boolean',\n    default: false,\n    nycCommands: nycCommands.checkCoverage\n  }\n};\nconst report = {\n  checkCoverage: {\n    description: 'check whether coverage is within thresholds provided',\n    type: 'boolean',\n    default: false,\n    nycCommands: nycCommands.report\n  },\n  reporter: {\n    description: 'coverage reporter(s) to use',\n    type: 'array',\n    items: {\n      type: 'string'\n    },\n    default: ['text'],\n    nycCommands: nycCommands.report,\n    nycAlias: 'r'\n  },\n  reportDir: {\n    description: 'directory to output coverage reports in',\n    type: 'string',\n    default: 'coverage',\n    nycCommands: nycCommands.report\n  },\n  showProcessTree: {\n    description: 'display the tree of spawned processes',\n    type: 'boolean',\n    default: false,\n    nycCommands: nycCommands.report\n  },\n  skipEmpty: {\n    description: 'don\\'t show empty files (no lines of code) in report',\n    type: 'boolean',\n    default: false,\n    nycCommands: nycCommands.report\n  },\n  skipFull: {\n    description: 'don\\'t show files with 100% statement, branch, and function coverage',\n    type: 'boolean',\n    default: false,\n    nycCommands: nycCommands.report\n  }\n};\nconst nycMain = {\n  silent: {\n    description: 'don\\'t output a report after tests finish running',\n    type: 'boolean',\n    default: false,\n    nycCommands: nycCommands.main,\n    nycAlias: 's'\n  },\n  all: {\n    description: 'whether or not to instrument all files of the project (not just the ones touched by your test suite)',\n    type: 'boolean',\n    default: false,\n    nycCommands: nycCommands.main,\n    nycAlias: 'a'\n  },\n  eager: {\n    description: 'instantiate the instrumenter at startup (see https://git.io/vMKZ9)',\n    type: 'boolean',\n    default: false,\n    nycCommands: nycCommands.main\n  },\n  cache: {\n    description: 'cache instrumentation results for improved performance',\n    type: 'boolean',\n    default: true,\n    nycCommands: nycCommands.main,\n    nycAlias: 'c'\n  },\n  cacheDir: {\n    description: 'explicitly set location for instrumentation cache',\n    type: 'string',\n    nycCommands: nycCommands.main\n  },\n  babelCache: {\n    description: 'cache babel transpilation results for improved performance',\n    type: 'boolean',\n    default: false,\n    nycCommands: nycCommands.main\n  },\n  useSpawnWrap: {\n    description: 'use spawn-wrap instead of setting process.env.NODE_OPTIONS',\n    type: 'boolean',\n    default: false,\n    nycCommands: nycCommands.main\n  },\n  hookRequire: {\n    description: 'should nyc wrap require?',\n    type: 'boolean',\n    default: true,\n    nycCommands: nycCommands.main\n  },\n  hookRunInContext: {\n    description: 'should nyc wrap vm.runInContext?',\n    type: 'boolean',\n    default: false,\n    nycCommands: nycCommands.main\n  },\n  hookRunInThisContext: {\n    description: 'should nyc wrap vm.runInThisContext?',\n    type: 'boolean',\n    default: false,\n    nycCommands: nycCommands.main\n  },\n  clean: {\n    description: 'should the .nyc_output folder be cleaned before executing tests',\n    type: 'boolean',\n    default: true,\n    nycCommands: nycCommands.main\n  }\n};\nconst instrumentOnly = {\n  inPlace: {\n    description: 'should nyc run the instrumentation in place?',\n    type: 'boolean',\n    default: false,\n    nycCommands: nycCommands.instrumentOnly\n  },\n  exitOnError: {\n    description: 'should nyc exit when an instrumentation failure occurs?',\n    type: 'boolean',\n    default: false,\n    nycCommands: nycCommands.instrumentOnly\n  },\n  delete: {\n    description: 'should the output folder be deleted before instrumenting files?',\n    type: 'boolean',\n    default: false,\n    nycCommands: nycCommands.instrumentOnly\n  },\n  completeCopy: {\n    description: 'should nyc copy all files from input to output as well as instrumented files?',\n    type: 'boolean',\n    default: false,\n    nycCommands: nycCommands.instrumentOnly\n  }\n};\nconst nyc = {\n  description: 'nyc configuration options',\n  type: 'object',\n  properties: {\n    cwd,\n    nycrcPath,\n    tempDir,\n    /* Test Exclude */\n    ...testExclude,\n    /* Instrumentation settings */\n    ...instrumentVisitor,\n    /* Instrumentation parser/generator settings */\n    ...instrumentParseGen,\n    sourceMap: {\n      description: 'should nyc detect and handle source maps?',\n      type: 'boolean',\n      default: true,\n      nycCommands: nycCommands.instrument\n    },\n    require: {\n      description: 'a list of additional modules that nyc should attempt to require in its subprocess, e.g., @babel/register, @babel/polyfill',\n      type: 'array',\n      items: {\n        type: 'string'\n      },\n      default: [],\n      nycCommands: nycCommands.instrument,\n      nycAlias: 'i'\n    },\n    instrument: {\n      description: 'should nyc handle instrumentation?',\n      type: 'boolean',\n      default: true,\n      nycCommands: nycCommands.instrument\n    },\n    /* Check coverage */\n    ...checkCoverage,\n    /* Report options */\n    ...report,\n    /* Main command options */\n    ...nycMain,\n    /* Instrument command options */\n    ...instrumentOnly\n  }\n};\nconst configs = {\n  nyc,\n  testExclude: {\n    description: 'test-exclude options',\n    type: 'object',\n    properties: {\n      cwd,\n      ...testExclude\n    }\n  },\n  babelPluginIstanbul: {\n    description: 'babel-plugin-istanbul options',\n    type: 'object',\n    properties: {\n      cwd,\n      ...testExclude,\n      ...instrumentVisitor\n    }\n  },\n  instrumentVisitor: {\n    description: 'instrument visitor options',\n    type: 'object',\n    properties: instrumentVisitor\n  },\n  instrumenter: {\n    description: 'stand-alone instrumenter options',\n    type: 'object',\n    properties: {\n      ...instrumentVisitor,\n      ...instrumentParseGen\n    }\n  }\n};\nfunction defaultsReducer(defaults, [name, {\n  default: value\n}]) {\n  /* Modifying arrays in defaults is safe, does not change schema. */\n  if (Array.isArray(value)) {\n    value = [...value];\n  }\n  return Object.assign(defaults, {\n    [name]: value\n  });\n}\nmodule.exports = {\n  ...configs,\n  defaults: Object.keys(configs).reduce((defaults, id) => {\n    Object.defineProperty(defaults, id, {\n      enumerable: true,\n      get() {\n        /* This defers `process.cwd()` until defaults are requested. */\n        return Object.entries(configs[id].properties).filter(([, info]) => 'default' in info).reduce(defaultsReducer, {});\n      }\n    });\n    return defaults;\n  }, {})\n};","map":{"version":3,"names":["defaultExclude","require","defaultExtension","nycCommands","all","testExclude","instrument","checkCoverage","report","main","instrumentOnly","cwd","description","type","default","process","nycrcPath","tempDir","nycAlias","nycHiddenAlias","exclude","items","excludeNodeModules","include","extension","instrumentVisitor","coverageVariable","coverageGlobalScope","coverageGlobalScopeFunc","ignoreClassMethods","instrumentParseGen","autoWrap","esModules","parserPlugins","compact","preserveComments","produceSourceMap","excludeAfterRemap","branches","minimum","maximum","functions","lines","statements","perFile","reporter","reportDir","showProcessTree","skipEmpty","skipFull","nycMain","silent","eager","cache","cacheDir","babelCache","useSpawnWrap","hookRequire","hookRunInContext","hookRunInThisContext","clean","inPlace","exitOnError","delete","completeCopy","nyc","properties","sourceMap","configs","babelPluginIstanbul","instrumenter","defaultsReducer","defaults","name","value","Array","isArray","Object","assign","module","exports","keys","reduce","id","defineProperty","enumerable","get","entries","filter","info"],"sources":["C:/Users/chest/OneDrive/Documentos/GitHub/HackUPC/frontend/node_modules/@istanbuljs/schema/index.js"],"sourcesContent":["'use strict';\n\nconst defaultExclude = require('./default-exclude.js');\nconst defaultExtension = require('./default-extension.js');\n\nconst nycCommands = {\n\tall: [null, 'check-coverage', 'instrument', 'merge', 'report'],\n\ttestExclude: [null, 'instrument', 'report', 'check-coverage'],\n\tinstrument: [null, 'instrument'],\n\tcheckCoverage: [null, 'report', 'check-coverage'],\n\treport: [null, 'report'],\n\tmain: [null],\n\tinstrumentOnly: ['instrument']\n};\n\nconst cwd = {\n\tdescription: 'working directory used when resolving paths',\n\ttype: 'string',\n\tget default() {\n\t\treturn process.cwd();\n\t},\n\tnycCommands: nycCommands.all\n};\n\nconst nycrcPath = {\n\tdescription: 'specify an explicit path to find nyc configuration',\n\tnycCommands: nycCommands.all\n};\n\nconst tempDir = {\n\tdescription: 'directory to output raw coverage information to',\n\ttype: 'string',\n\tdefault: './.nyc_output',\n\tnycAlias: 't',\n\tnycHiddenAlias: 'temp-directory',\n\tnycCommands: [null, 'check-coverage', 'merge', 'report']\n};\n\nconst testExclude = {\n\texclude: {\n\t\tdescription: 'a list of specific files and directories that should be excluded from coverage, glob patterns are supported',\n\t\ttype: 'array',\n\t\titems: {\n\t\t\ttype: 'string'\n\t\t},\n\t\tdefault: defaultExclude,\n\t\tnycCommands: nycCommands.testExclude,\n\t\tnycAlias: 'x'\n\t},\n\texcludeNodeModules: {\n\t\tdescription: 'whether or not to exclude all node_module folders (i.e. **/node_modules/**) by default',\n\t\ttype: 'boolean',\n\t\tdefault: true,\n\t\tnycCommands: nycCommands.testExclude\n\t},\n\tinclude: {\n\t\tdescription: 'a list of specific files that should be covered, glob patterns are supported',\n\t\ttype: 'array',\n\t\titems: {\n\t\t\ttype: 'string'\n\t\t},\n\t\tdefault: [],\n\t\tnycCommands: nycCommands.testExclude,\n\t\tnycAlias: 'n'\n\t},\n\textension: {\n\t\tdescription: 'a list of extensions that nyc should handle in addition to .js',\n\t\ttype: 'array',\n\t\titems: {\n\t\t\ttype: 'string'\n\t\t},\n\t\tdefault: defaultExtension,\n\t\tnycCommands: nycCommands.testExclude,\n\t\tnycAlias: 'e'\n\t}\n};\n\nconst instrumentVisitor = {\n\tcoverageVariable: {\n\t\tdescription: 'variable to store coverage',\n\t\ttype: 'string',\n\t\tdefault: '__coverage__',\n\t\tnycCommands: nycCommands.instrument\n\t},\n\tcoverageGlobalScope: {\n\t\tdescription: 'scope to store the coverage variable',\n\t\ttype: 'string',\n\t\tdefault: 'this',\n\t\tnycCommands: nycCommands.instrument\n\t},\n\tcoverageGlobalScopeFunc: {\n\t\tdescription: 'avoid potentially replaced `Function` when finding global scope',\n\t\ttype: 'boolean',\n\t\tdefault: true,\n\t\tnycCommands: nycCommands.instrument\n\t},\n\tignoreClassMethods: {\n\t\tdescription: 'class method names to ignore for coverage',\n\t\ttype: 'array',\n\t\titems: {\n\t\t\ttype: 'string'\n\t\t},\n\t\tdefault: [],\n\t\tnycCommands: nycCommands.instrument\n\t}\n};\n\nconst instrumentParseGen = {\n\tautoWrap: {\n\t\tdescription: 'allow `return` statements outside of functions',\n\t\ttype: 'boolean',\n\t\tdefault: true,\n\t\tnycCommands: nycCommands.instrument\n\t},\n\tesModules: {\n\t\tdescription: 'should files be treated as ES Modules',\n\t\ttype: 'boolean',\n\t\tdefault: true,\n\t\tnycCommands: nycCommands.instrument\n\t},\n\tparserPlugins: {\n\t\tdescription: 'babel parser plugins to use when parsing the source',\n\t\ttype: 'array',\n\t\titems: {\n\t\t\ttype: 'string'\n\t\t},\n\t\t/* Babel parser plugins are to be enabled when the feature is stage 3 and\n\t\t * implemented in a released version of node.js. */\n\t\tdefault: [\n\t\t\t'asyncGenerators',\n\t\t\t'bigInt',\n\t\t\t'classProperties',\n\t\t\t'classPrivateProperties',\n\t\t\t'classPrivateMethods',\n\t\t\t'dynamicImport',\n\t\t\t'importMeta',\n\t\t\t'numericSeparator',\n\t\t\t'objectRestSpread',\n\t\t\t'optionalCatchBinding',\n\t\t\t'topLevelAwait'\n\t\t],\n\t\tnycCommands: nycCommands.instrument\n\t},\n\tcompact: {\n\t\tdescription: 'should the output be compacted?',\n\t\ttype: 'boolean',\n\t\tdefault: true,\n\t\tnycCommands: nycCommands.instrument\n\t},\n\tpreserveComments: {\n\t\tdescription: 'should comments be preserved in the output?',\n\t\ttype: 'boolean',\n\t\tdefault: true,\n\t\tnycCommands: nycCommands.instrument\n\t},\n\tproduceSourceMap: {\n\t\tdescription: 'should source maps be produced?',\n\t\ttype: 'boolean',\n\t\tdefault: true,\n\t\tnycCommands: nycCommands.instrument\n\t}\n};\n\nconst checkCoverage = {\n\texcludeAfterRemap: {\n\t\tdescription: 'should exclude logic be performed after the source-map remaps filenames?',\n\t\ttype: 'boolean',\n\t\tdefault: true,\n\t\tnycCommands: nycCommands.checkCoverage\n\t},\n\tbranches: {\n\t\tdescription: 'what % of branches must be covered?',\n\t\ttype: 'number',\n\t\tdefault: 0,\n\t\tminimum: 0,\n\t\tmaximum: 100,\n\t\tnycCommands: nycCommands.checkCoverage\n\t},\n\tfunctions: {\n\t\tdescription: 'what % of functions must be covered?',\n\t\ttype: 'number',\n\t\tdefault: 0,\n\t\tminimum: 0,\n\t\tmaximum: 100,\n\t\tnycCommands: nycCommands.checkCoverage\n\t},\n\tlines: {\n\t\tdescription: 'what % of lines must be covered?',\n\t\ttype: 'number',\n\t\tdefault: 90,\n\t\tminimum: 0,\n\t\tmaximum: 100,\n\t\tnycCommands: nycCommands.checkCoverage\n\t},\n\tstatements: {\n\t\tdescription: 'what % of statements must be covered?',\n\t\ttype: 'number',\n\t\tdefault: 0,\n\t\tminimum: 0,\n\t\tmaximum: 100,\n\t\tnycCommands: nycCommands.checkCoverage\n\t},\n\tperFile: {\n\t\tdescription: 'check thresholds per file',\n\t\ttype: 'boolean',\n\t\tdefault: false,\n\t\tnycCommands: nycCommands.checkCoverage\n\t}\n};\n\nconst report = {\n\tcheckCoverage: {\n\t\tdescription: 'check whether coverage is within thresholds provided',\n\t\ttype: 'boolean',\n\t\tdefault: false,\n\t\tnycCommands: nycCommands.report\n\t},\n\treporter: {\n\t\tdescription: 'coverage reporter(s) to use',\n\t\ttype: 'array',\n\t\titems: {\n\t\t\ttype: 'string'\n\t\t},\n\t\tdefault: ['text'],\n\t\tnycCommands: nycCommands.report,\n\t\tnycAlias: 'r'\n\t},\n\treportDir: {\n\t\tdescription: 'directory to output coverage reports in',\n\t\ttype: 'string',\n\t\tdefault: 'coverage',\n\t\tnycCommands: nycCommands.report\n\t},\n\tshowProcessTree: {\n\t\tdescription: 'display the tree of spawned processes',\n\t\ttype: 'boolean',\n\t\tdefault: false,\n\t\tnycCommands: nycCommands.report\n\t},\n\tskipEmpty: {\n\t\tdescription: 'don\\'t show empty files (no lines of code) in report',\n\t\ttype: 'boolean',\n\t\tdefault: false,\n\t\tnycCommands: nycCommands.report\n\t},\n\tskipFull: {\n\t\tdescription: 'don\\'t show files with 100% statement, branch, and function coverage',\n\t\ttype: 'boolean',\n\t\tdefault: false,\n\t\tnycCommands: nycCommands.report\n\t}\n};\n\nconst nycMain = {\n\tsilent: {\n\t\tdescription: 'don\\'t output a report after tests finish running',\n\t\ttype: 'boolean',\n\t\tdefault: false,\n\t\tnycCommands: nycCommands.main,\n\t\tnycAlias: 's'\n\t},\n\tall: {\n\t\tdescription: 'whether or not to instrument all files of the project (not just the ones touched by your test suite)',\n\t\ttype: 'boolean',\n\t\tdefault: false,\n\t\tnycCommands: nycCommands.main,\n\t\tnycAlias: 'a'\n\t},\n\teager: {\n\t\tdescription: 'instantiate the instrumenter at startup (see https://git.io/vMKZ9)',\n\t\ttype: 'boolean',\n\t\tdefault: false,\n\t\tnycCommands: nycCommands.main\n\t},\n\tcache: {\n\t\tdescription: 'cache instrumentation results for improved performance',\n\t\ttype: 'boolean',\n\t\tdefault: true,\n\t\tnycCommands: nycCommands.main,\n\t\tnycAlias: 'c'\n\t},\n\tcacheDir: {\n\t\tdescription: 'explicitly set location for instrumentation cache',\n\t\ttype: 'string',\n\t\tnycCommands: nycCommands.main\n\t},\n\tbabelCache: {\n\t\tdescription: 'cache babel transpilation results for improved performance',\n\t\ttype: 'boolean',\n\t\tdefault: false,\n\t\tnycCommands: nycCommands.main\n\t},\n\tuseSpawnWrap: {\n\t\tdescription: 'use spawn-wrap instead of setting process.env.NODE_OPTIONS',\n\t\ttype: 'boolean',\n\t\tdefault: false,\n\t\tnycCommands: nycCommands.main\n\t},\n\thookRequire: {\n\t\tdescription: 'should nyc wrap require?',\n\t\ttype: 'boolean',\n\t\tdefault: true,\n\t\tnycCommands: nycCommands.main\n\t},\n\thookRunInContext: {\n\t\tdescription: 'should nyc wrap vm.runInContext?',\n\t\ttype: 'boolean',\n\t\tdefault: false,\n\t\tnycCommands: nycCommands.main\n\t},\n\thookRunInThisContext: {\n\t\tdescription: 'should nyc wrap vm.runInThisContext?',\n\t\ttype: 'boolean',\n\t\tdefault: false,\n\t\tnycCommands: nycCommands.main\n\t},\n\tclean: {\n\t\tdescription: 'should the .nyc_output folder be cleaned before executing tests',\n\t\ttype: 'boolean',\n\t\tdefault: true,\n\t\tnycCommands: nycCommands.main\n\t}\n};\n\nconst instrumentOnly = {\n\tinPlace: {\n\t\tdescription: 'should nyc run the instrumentation in place?',\n\t\ttype: 'boolean',\n\t\tdefault: false,\n\t\tnycCommands: nycCommands.instrumentOnly\n\t},\n\texitOnError: {\n\t\tdescription: 'should nyc exit when an instrumentation failure occurs?',\n\t\ttype: 'boolean',\n\t\tdefault: false,\n\t\tnycCommands: nycCommands.instrumentOnly\n\t},\n\tdelete: {\n\t\tdescription: 'should the output folder be deleted before instrumenting files?',\n\t\ttype: 'boolean',\n\t\tdefault: false,\n\t\tnycCommands: nycCommands.instrumentOnly\n\t},\n\tcompleteCopy: {\n\t\tdescription: 'should nyc copy all files from input to output as well as instrumented files?',\n\t\ttype: 'boolean',\n\t\tdefault: false,\n\t\tnycCommands: nycCommands.instrumentOnly\n\t}\n};\n\nconst nyc = {\n\tdescription: 'nyc configuration options',\n\ttype: 'object',\n\tproperties: {\n\t\tcwd,\n\t\tnycrcPath,\n\t\ttempDir,\n\n\t\t/* Test Exclude */\n\t\t...testExclude,\n\n\t\t/* Instrumentation settings */\n\t\t...instrumentVisitor,\n\n\t\t/* Instrumentation parser/generator settings */\n\t\t...instrumentParseGen,\n\t\tsourceMap: {\n\t\t\tdescription: 'should nyc detect and handle source maps?',\n\t\t\ttype: 'boolean',\n\t\t\tdefault: true,\n\t\t\tnycCommands: nycCommands.instrument\n\t\t},\n\t\trequire: {\n\t\t\tdescription: 'a list of additional modules that nyc should attempt to require in its subprocess, e.g., @babel/register, @babel/polyfill',\n\t\t\ttype: 'array',\n\t\t\titems: {\n\t\t\t\ttype: 'string'\n\t\t\t},\n\t\t\tdefault: [],\n\t\t\tnycCommands: nycCommands.instrument,\n\t\t\tnycAlias: 'i'\n\t\t},\n\t\tinstrument: {\n\t\t\tdescription: 'should nyc handle instrumentation?',\n\t\t\ttype: 'boolean',\n\t\t\tdefault: true,\n\t\t\tnycCommands: nycCommands.instrument\n\t\t},\n\n\t\t/* Check coverage */\n\t\t...checkCoverage,\n\n\t\t/* Report options */\n\t\t...report,\n\n\t\t/* Main command options */\n\t\t...nycMain,\n\n\t\t/* Instrument command options */\n\t\t...instrumentOnly\n\t}\n};\n\nconst configs = {\n\tnyc,\n\ttestExclude: {\n\t\tdescription: 'test-exclude options',\n\t\ttype: 'object',\n\t\tproperties: {\n\t\t\tcwd,\n\t\t\t...testExclude\n\t\t}\n\t},\n\tbabelPluginIstanbul: {\n\t\tdescription: 'babel-plugin-istanbul options',\n\t\ttype: 'object',\n\t\tproperties: {\n\t\t\tcwd,\n\t\t\t...testExclude,\n\t\t\t...instrumentVisitor\n\t\t}\n\t},\n\tinstrumentVisitor: {\n\t\tdescription: 'instrument visitor options',\n\t\ttype: 'object',\n\t\tproperties: instrumentVisitor\n\t},\n\tinstrumenter: {\n\t\tdescription: 'stand-alone instrumenter options',\n\t\ttype: 'object',\n\t\tproperties: {\n\t\t\t...instrumentVisitor,\n\t\t\t...instrumentParseGen\n\t\t}\n\t}\n};\n\nfunction defaultsReducer(defaults, [name, {default: value}]) {\n\t/* Modifying arrays in defaults is safe, does not change schema. */\n\tif (Array.isArray(value)) {\n\t\tvalue = [...value];\n\t}\n\n\treturn Object.assign(defaults, {[name]: value});\n}\n\nmodule.exports = {\n\t...configs,\n\tdefaults: Object.keys(configs).reduce(\n\t\t(defaults, id) => {\n\t\t\tObject.defineProperty(defaults, id, {\n\t\t\t\tenumerable: true,\n\t\t\t\tget() {\n\t\t\t\t\t/* This defers `process.cwd()` until defaults are requested. */\n\t\t\t\t\treturn Object.entries(configs[id].properties)\n\t\t\t\t\t\t.filter(([, info]) => 'default' in info)\n\t\t\t\t\t\t.reduce(defaultsReducer, {});\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn defaults;\n\t\t},\n\t\t{}\n\t)\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}