{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst utils_1 = require(\"@typescript-eslint/utils\");\nconst util_1 = require(\"../util\");\nexports.default = (0, util_1.createRule)({\n  name: 'consistent-indexed-object-style',\n  meta: {\n    type: 'suggestion',\n    docs: {\n      description: 'Require or disallow the `Record` type',\n      recommended: 'strict'\n    },\n    messages: {\n      preferRecord: 'A record is preferred over an index signature.',\n      preferIndexSignature: 'An index signature is preferred over a record.'\n    },\n    fixable: 'code',\n    schema: [{\n      enum: ['record', 'index-signature']\n    }]\n  },\n  defaultOptions: ['record'],\n  create(context, [mode]) {\n    const sourceCode = context.getSourceCode();\n    function checkMembers(members, node, parentId, prefix, postfix, safeFix = true) {\n      if (members.length !== 1) {\n        return;\n      }\n      const [member] = members;\n      if (member.type !== utils_1.AST_NODE_TYPES.TSIndexSignature) {\n        return;\n      }\n      const [parameter] = member.parameters;\n      if (!parameter) {\n        return;\n      }\n      if (parameter.type !== utils_1.AST_NODE_TYPES.Identifier) {\n        return;\n      }\n      const keyType = parameter.typeAnnotation;\n      if (!keyType) {\n        return;\n      }\n      const valueType = member.typeAnnotation;\n      if (!valueType) {\n        return;\n      }\n      if (parentId) {\n        const scope = context.getScope();\n        const superVar = utils_1.ASTUtils.findVariable(scope, parentId.name);\n        if (superVar) {\n          const isCircular = superVar.references.some(item => item.isTypeReference && node.range[0] <= item.identifier.range[0] && node.range[1] >= item.identifier.range[1]);\n          if (isCircular) {\n            return;\n          }\n        }\n      }\n      context.report({\n        node,\n        messageId: 'preferRecord',\n        fix: safeFix ? fixer => {\n          const key = sourceCode.getText(keyType.typeAnnotation);\n          const value = sourceCode.getText(valueType.typeAnnotation);\n          const record = member.readonly ? `Readonly<Record<${key}, ${value}>>` : `Record<${key}, ${value}>`;\n          return fixer.replaceText(node, `${prefix}${record}${postfix}`);\n        } : null\n      });\n    }\n    return Object.assign(Object.assign({}, mode === 'index-signature' && {\n      TSTypeReference(node) {\n        var _a;\n        const typeName = node.typeName;\n        if (typeName.type !== utils_1.AST_NODE_TYPES.Identifier) {\n          return;\n        }\n        if (typeName.name !== 'Record') {\n          return;\n        }\n        const params = (_a = node.typeParameters) === null || _a === void 0 ? void 0 : _a.params;\n        if ((params === null || params === void 0 ? void 0 : params.length) !== 2) {\n          return;\n        }\n        context.report({\n          node,\n          messageId: 'preferIndexSignature',\n          fix(fixer) {\n            const key = sourceCode.getText(params[0]);\n            const type = sourceCode.getText(params[1]);\n            return fixer.replaceText(node, `{ [key: ${key}]: ${type} }`);\n          }\n        });\n      }\n    }), mode === 'record' && {\n      TSTypeLiteral(node) {\n        const parent = findParentDeclaration(node);\n        checkMembers(node.members, node, parent === null || parent === void 0 ? void 0 : parent.id, '', '');\n      },\n      TSInterfaceDeclaration(node) {\n        var _a, _b, _c, _d;\n        let genericTypes = '';\n        if (((_b = (_a = node.typeParameters) === null || _a === void 0 ? void 0 : _a.params) !== null && _b !== void 0 ? _b : []).length > 0) {\n          genericTypes = `<${(_c = node.typeParameters) === null || _c === void 0 ? void 0 : _c.params.map(p => sourceCode.getText(p)).join(', ')}>`;\n        }\n        checkMembers(node.body.body, node, node.id, `type ${node.id.name}${genericTypes} = `, ';', !((_d = node.extends) === null || _d === void 0 ? void 0 : _d.length));\n      }\n    });\n  }\n});\nfunction findParentDeclaration(node) {\n  if (node.parent && node.parent.type !== utils_1.AST_NODE_TYPES.TSTypeAnnotation) {\n    if (node.parent.type === utils_1.AST_NODE_TYPES.TSTypeAliasDeclaration) {\n      return node.parent;\n    }\n    return findParentDeclaration(node.parent);\n  }\n  return undefined;\n}","map":{"version":3,"names":["utils_1","require","util_1","exports","default","createRule","name","meta","type","docs","description","recommended","messages","preferRecord","preferIndexSignature","fixable","schema","enum","defaultOptions","create","context","mode","sourceCode","getSourceCode","checkMembers","members","node","parentId","prefix","postfix","safeFix","length","member","AST_NODE_TYPES","TSIndexSignature","parameter","parameters","Identifier","keyType","typeAnnotation","valueType","scope","getScope","superVar","ASTUtils","findVariable","isCircular","references","some","item","isTypeReference","range","identifier","report","messageId","fix","fixer","key","getText","value","record","readonly","replaceText","Object","assign","TSTypeReference","typeName","params","_a","typeParameters","TSTypeLiteral","parent","findParentDeclaration","id","TSInterfaceDeclaration","genericTypes","_b","_c","map","p","join","body","_d","extends","TSTypeAnnotation","TSTypeAliasDeclaration","undefined"],"sources":["../../src/rules/consistent-indexed-object-style.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}