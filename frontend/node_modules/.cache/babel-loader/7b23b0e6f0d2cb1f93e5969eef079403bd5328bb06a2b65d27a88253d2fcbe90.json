{"ast":null,"code":"\"use strict\";\n\n// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\n// See LICENSE in the project root for license information.\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.printSuppressHelp = exports.printHelp = exports.printPruneHelp = void 0;\nconst wrap_words_to_lines_1 = require(\"./wrap-words-to-lines\");\nfunction printPruneHelp() {\n  const help = `eslint-bulk prune\n\nUsage:\n\neslint-bulk prune\n\nThis command is a thin wrapper around ESLint that communicates with @rushstack/eslint-patch to delete all unused suppression entries in all .eslint-bulk-suppressions.json files under the current working directory.`;\n  const wrapped = (0, wrap_words_to_lines_1.wrapWordsToLines)(help);\n  for (const line of wrapped) {\n    console.log(line);\n  }\n}\nexports.printPruneHelp = printPruneHelp;\nfunction printHelp() {\n  const help = `eslint-bulk <command>\n\nUsage:\n\neslint-bulk suppress --rule RULENAME1 [--rule RULENAME2...] PATH1 [PATH2...]\neslint-bulk suppress --all PATH1 [PATH2...]\neslint-bulk suppress --help\n\neslint-bulk prune\neslint-bulk prune --help\n\neslint-bulk --help\n\nThis command line tool is a thin wrapper around ESLint that communicates with @rushstack/eslint-patch to suppress or prune unused suppressions in the local .eslint-bulk-suppressions.json file.\n\nCommands:\n  eslint-bulk suppress [options] <path...>\n    Use this command to generate a new .eslint-bulk-suppressions.json file or add suppression entries to the existing file. Specify the files and rules you want to suppress.\n    Please run \"eslint-bulk suppress --help\" to learn more.\n\n  eslint-bulk prune\n    Use this command to delete all unused suppression entries in all .eslint-bulk-suppressions.json files under the current working directory.\n    Please run \"eslint-bulk prune --help\" to learn more.\n`;\n  const wrapped = (0, wrap_words_to_lines_1.wrapWordsToLines)(help);\n  for (const line of wrapped) {\n    console.log(line);\n  }\n}\nexports.printHelp = printHelp;\nfunction printSuppressHelp() {\n  const help = `eslint-bulk suppress [options] <path...>\n\nUsage:\n\neslint-bulk suppress --rule RULENAME1 [--rule RULENAME2...] PATH1 [PATH2...]\neslint-bulk suppress --all PATH1 [PATH2...]\neslint-bulk suppress --help\n\nThis command is a thin wrapper around ESLint that communicates with @rushstack/eslint-patch to either generate a new .eslint-bulk-suppressions.json file or add suppression entries to the existing file. Specify the files and rules you want to suppress.\n\nArgument:\n  <path...>\n    Glob patterns for paths to suppress, same as eslint files argument. Should be relative to the project root.\n\nOptions:\n  -h, -H, --help\n    Display this help message.\n\n  -R, --rule\n    The full name of the ESLint rule you want to bulk-suppress. Specify multiple rules with --rule NAME1 --rule RULENAME2.\n\n  -A, --all\n    Bulk-suppress all rules in the specified file patterns.`;\n  const wrapped = (0, wrap_words_to_lines_1.wrapWordsToLines)(help);\n  for (const line of wrapped) {\n    console.log(line);\n  }\n}\nexports.printSuppressHelp = printSuppressHelp;","map":{"version":3,"names":["wrap_words_to_lines_1","require","printPruneHelp","help","wrapped","wrapWordsToLines","line","console","log","exports","printHelp","printSuppressHelp"],"sources":["C:\\Users\\chest\\OneDrive\\Documentos\\GitHub\\HackUPC\\frontend\\node_modules\\@rushstack\\eslint-patch\\src\\eslint-bulk-suppressions\\cli\\utils\\print-help.ts"],"sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\n// See LICENSE in the project root for license information.\n\nimport { wrapWordsToLines } from './wrap-words-to-lines';\n\nexport function printPruneHelp(): void {\n  const help: string = `eslint-bulk prune\n\nUsage:\n\neslint-bulk prune\n\nThis command is a thin wrapper around ESLint that communicates with @rushstack/eslint-patch to delete all unused suppression entries in all .eslint-bulk-suppressions.json files under the current working directory.`;\n\n  const wrapped: string[] = wrapWordsToLines(help);\n  for (const line of wrapped) {\n    console.log(line);\n  }\n}\n\nexport function printHelp(): void {\n  const help: string = `eslint-bulk <command>\n\nUsage:\n\neslint-bulk suppress --rule RULENAME1 [--rule RULENAME2...] PATH1 [PATH2...]\neslint-bulk suppress --all PATH1 [PATH2...]\neslint-bulk suppress --help\n\neslint-bulk prune\neslint-bulk prune --help\n\neslint-bulk --help\n\nThis command line tool is a thin wrapper around ESLint that communicates with @rushstack/eslint-patch to suppress or prune unused suppressions in the local .eslint-bulk-suppressions.json file.\n\nCommands:\n  eslint-bulk suppress [options] <path...>\n    Use this command to generate a new .eslint-bulk-suppressions.json file or add suppression entries to the existing file. Specify the files and rules you want to suppress.\n    Please run \"eslint-bulk suppress --help\" to learn more.\n\n  eslint-bulk prune\n    Use this command to delete all unused suppression entries in all .eslint-bulk-suppressions.json files under the current working directory.\n    Please run \"eslint-bulk prune --help\" to learn more.\n`;\n\n  const wrapped: string[] = wrapWordsToLines(help);\n  for (const line of wrapped) {\n    console.log(line);\n  }\n}\n\nexport function printSuppressHelp(): void {\n  const help: string = `eslint-bulk suppress [options] <path...>\n\nUsage:\n\neslint-bulk suppress --rule RULENAME1 [--rule RULENAME2...] PATH1 [PATH2...]\neslint-bulk suppress --all PATH1 [PATH2...]\neslint-bulk suppress --help\n\nThis command is a thin wrapper around ESLint that communicates with @rushstack/eslint-patch to either generate a new .eslint-bulk-suppressions.json file or add suppression entries to the existing file. Specify the files and rules you want to suppress.\n\nArgument:\n  <path...>\n    Glob patterns for paths to suppress, same as eslint files argument. Should be relative to the project root.\n\nOptions:\n  -h, -H, --help\n    Display this help message.\n\n  -R, --rule\n    The full name of the ESLint rule you want to bulk-suppress. Specify multiple rules with --rule NAME1 --rule RULENAME2.\n\n  -A, --all\n    Bulk-suppress all rules in the specified file patterns.`;\n\n  const wrapped: string[] = wrapWordsToLines(help);\n  for (const line of wrapped) {\n    console.log(line);\n  }\n}\n"],"mappings":";;AAAA;AACA;;;;;AAEA,MAAAA,qBAAA,GAAAC,OAAA;AAEA,SAAgBC,cAAcA,CAAA;EAC5B,MAAMC,IAAI,GAAW;;;;;;sNAM+L;EAEpN,MAAMC,OAAO,GAAa,IAAAJ,qBAAA,CAAAK,gBAAgB,EAACF,IAAI,CAAC;EAChD,KAAK,MAAMG,IAAI,IAAIF,OAAO,EAAE;IAC1BG,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;EACnB;AACF;AAbAG,OAAA,CAAAP,cAAA,GAAAA,cAAA;AAeA,SAAgBQ,SAASA,CAAA;EACvB,MAAMP,IAAI,GAAW;;;;;;;;;;;;;;;;;;;;;;;CAuBtB;EAEC,MAAMC,OAAO,GAAa,IAAAJ,qBAAA,CAAAK,gBAAgB,EAACF,IAAI,CAAC;EAChD,KAAK,MAAMG,IAAI,IAAIF,OAAO,EAAE;IAC1BG,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;EACnB;AACF;AA9BAG,OAAA,CAAAC,SAAA,GAAAA,SAAA;AAgCA,SAAgBC,iBAAiBA,CAAA;EAC/B,MAAMR,IAAI,GAAW;;;;;;;;;;;;;;;;;;;;;;4DAsBqC;EAE1D,MAAMC,OAAO,GAAa,IAAAJ,qBAAA,CAAAK,gBAAgB,EAACF,IAAI,CAAC;EAChD,KAAK,MAAMG,IAAI,IAAIF,OAAO,EAAE;IAC1BG,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;EACnB;AACF;AA7BAG,OAAA,CAAAE,iBAAA,GAAAA,iBAAA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}