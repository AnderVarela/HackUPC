{"ast":null,"code":"\"use strict\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.RuleCreator = void 0;\nconst applyDefault_1 = require(\"./applyDefault\");\n/**\n * Creates reusable function to create rules with default options and docs URLs.\n *\n * @param urlCreator Creates a documentation URL for a given rule name.\n * @returns Function to create a rule with the docs URL format.\n */\nfunction RuleCreator(urlCreator) {\n  // This function will get much easier to call when this is merged https://github.com/Microsoft/TypeScript/pull/26349\n  // TODO - when the above PR lands; add type checking for the context.report `data` property\n  return function createNamedRule(_a) {\n    var {\n        name,\n        meta\n      } = _a,\n      rule = __rest(_a, [\"name\", \"meta\"]);\n    return createRule(Object.assign({\n      meta: Object.assign(Object.assign({}, meta), {\n        docs: Object.assign(Object.assign({}, meta.docs), {\n          url: urlCreator(name)\n        })\n      })\n    }, rule));\n  };\n}\nexports.RuleCreator = RuleCreator;\n/**\n * Creates a well-typed TSESLint custom ESLint rule without a docs URL.\n *\n * @returns Well-typed TSESLint custom ESLint rule.\n * @remarks It is generally better to provide a docs URL function to RuleCreator.\n */\nfunction createRule({\n  create,\n  defaultOptions,\n  meta\n}) {\n  return {\n    create(context) {\n      const optionsWithDefault = (0, applyDefault_1.applyDefault)(defaultOptions, context.options);\n      return create(context, optionsWithDefault);\n    },\n    defaultOptions,\n    meta\n  };\n}\nRuleCreator.withoutDocs = createRule;","map":{"version":3,"names":["applyDefault_1","require","RuleCreator","urlCreator","createNamedRule","_a","name","meta","rule","__rest","createRule","Object","assign","docs","url","exports","create","defaultOptions","context","optionsWithDefault","applyDefault","options","withoutDocs"],"sources":["../../src/eslint-utils/RuleCreator.ts"],"sourcesContent":[null],"mappings":";;;;;;;;;;;;;;AAOA,MAAAA,cAAA,GAAAC,OAAA;AAqCA;;;;;;AAMA,SAAgBC,WAAWA,CAACC,UAAwC;EAClE;EACA;EACA,OAAO,SAASC,eAAeA,CAI7BC,EAMD;QANC;QACAC,IAAI;QACJC;MAAI,IAAAF,EAIL;MAHIG,IAAI,GAAAC,MAAA,CAAAJ,EAAA,EAHP,gBAID,CADQ;IAIP,OAAOK,UAAU,CAAAC,MAAA,CAAAC,MAAA;MACfL,IAAI,EAAAI,MAAA,CAAAC,MAAA,CAAAD,MAAA,CAAAC,MAAA,KACCL,IAAI;QACPM,IAAI,EAAAF,MAAA,CAAAC,MAAA,CAAAD,MAAA,CAAAC,MAAA,KACCL,IAAI,CAACM,IAAI;UACZC,GAAG,EAAEX,UAAU,CAACG,IAAI;QAAC;MAAA;IAAA,GAGtBE,IAAI,EACP;EACJ,CAAC;AACH;AAzBAO,OAAA,CAAAb,WAAA,GAAAA,WAAA;AA2BA;;;;;;AAMA,SAASQ,UAAUA,CAIjB;EACAM,MAAM;EACNC,cAAc;EACdV;AAAI,CACyD;EAK7D,OAAO;IACLS,MAAMA,CACJE,OAAqD;MAErD,MAAMC,kBAAkB,GAAG,IAAAnB,cAAA,CAAAoB,YAAY,EAACH,cAAc,EAAEC,OAAO,CAACG,OAAO,CAAC;MACxE,OAAOL,MAAM,CAACE,OAAO,EAAEC,kBAAkB,CAAC;IAC5C,CAAC;IACDF,cAAc;IACdV;GACD;AACH;AAEAL,WAAW,CAACoB,WAAW,GAAGZ,UAAU","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}