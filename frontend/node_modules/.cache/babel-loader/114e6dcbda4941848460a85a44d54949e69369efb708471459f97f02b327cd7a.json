{"ast":null,"code":"/** @typedef {string | string[] | import('webpack').Entry} StaticEntry */\n/** @typedef {StaticEntry | import('webpack').EntryFunc} WebpackEntry */\n\nconst EntryParseError = new Error(['[ReactRefreshPlugin]', 'Failed to parse the Webpack `entry` object!', 'Please ensure the `entry` option in your Webpack config is specified.'].join(' '));\n\n/**\n * Webpack entries related to socket integrations.\n * They have to run before any code that sets up the error overlay.\n * @type {string[]}\n */\nconst socketEntries = ['webpack-dev-server/client', 'webpack-hot-middleware/client', 'webpack-plugin-serve/client', 'react-dev-utils/webpackHotDevClient'];\n\n/**\n * Checks if a Webpack entry string is related to socket integrations.\n * @param {string} entry A Webpack entry string.\n * @returns {boolean} Whether the entry is related to socket integrations.\n */\nfunction isSocketEntry(entry) {\n  return socketEntries.some(socketEntry => entry.includes(socketEntry));\n}\n\n/**\n * Injects an entry to the bundle for react-refresh.\n * @param {WebpackEntry} [originalEntry] A Webpack entry object.\n * @param {import('./getAdditionalEntries').AdditionalEntries} additionalEntries An object that contains the Webpack entries for prepending and the overlay feature\n * @returns {WebpackEntry} An injected entry object.\n */\nfunction injectRefreshEntry(originalEntry, additionalEntries) {\n  const {\n    prependEntries,\n    overlayEntries\n  } = additionalEntries;\n\n  // Single string entry point\n  if (typeof originalEntry === 'string') {\n    if (isSocketEntry(originalEntry)) {\n      return [...prependEntries, originalEntry, ...overlayEntries];\n    }\n    return [...prependEntries, ...overlayEntries, originalEntry];\n  }\n  // Single array entry point\n  if (Array.isArray(originalEntry)) {\n    if (originalEntry.length === 0) {\n      throw EntryParseError;\n    }\n    const socketEntryIndex = originalEntry.findIndex(isSocketEntry);\n    let socketAndPrecedingEntries = [];\n    if (socketEntryIndex !== -1) {\n      socketAndPrecedingEntries = originalEntry.splice(0, socketEntryIndex + 1);\n    }\n    return [...prependEntries, ...socketAndPrecedingEntries, ...overlayEntries, ...originalEntry];\n  }\n  // Multiple entry points\n  if (typeof originalEntry === 'object') {\n    const entries = Object.entries(originalEntry);\n    if (entries.length === 0) {\n      throw EntryParseError;\n    }\n    return entries.reduce((acc, [curKey, curEntry]) => ({\n      ...acc,\n      [curKey]: typeof curEntry === 'object' && curEntry.import ? {\n        ...curEntry,\n        import: injectRefreshEntry(curEntry.import, additionalEntries)\n      } : injectRefreshEntry(curEntry, additionalEntries)\n    }), {});\n  }\n  // Dynamic entry points\n  if (typeof originalEntry === 'function') {\n    return (...args) => Promise.resolve(originalEntry(...args)).then(resolvedEntry => injectRefreshEntry(resolvedEntry, additionalEntries));\n  }\n  throw EntryParseError;\n}\nmodule.exports = injectRefreshEntry;\nmodule.exports.socketEntries = socketEntries;","map":{"version":3,"names":["EntryParseError","Error","join","socketEntries","isSocketEntry","entry","some","socketEntry","includes","injectRefreshEntry","originalEntry","additionalEntries","prependEntries","overlayEntries","Array","isArray","length","socketEntryIndex","findIndex","socketAndPrecedingEntries","splice","entries","Object","reduce","acc","curKey","curEntry","import","args","Promise","resolve","then","resolvedEntry","module","exports"],"sources":["C:/Users/chest/OneDrive/Documentos/GitHub/HackUPC/frontend/node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/utils/injectRefreshEntry.js"],"sourcesContent":["/** @typedef {string | string[] | import('webpack').Entry} StaticEntry */\n/** @typedef {StaticEntry | import('webpack').EntryFunc} WebpackEntry */\n\nconst EntryParseError = new Error(\n  [\n    '[ReactRefreshPlugin]',\n    'Failed to parse the Webpack `entry` object!',\n    'Please ensure the `entry` option in your Webpack config is specified.',\n  ].join(' ')\n);\n\n/**\n * Webpack entries related to socket integrations.\n * They have to run before any code that sets up the error overlay.\n * @type {string[]}\n */\nconst socketEntries = [\n  'webpack-dev-server/client',\n  'webpack-hot-middleware/client',\n  'webpack-plugin-serve/client',\n  'react-dev-utils/webpackHotDevClient',\n];\n\n/**\n * Checks if a Webpack entry string is related to socket integrations.\n * @param {string} entry A Webpack entry string.\n * @returns {boolean} Whether the entry is related to socket integrations.\n */\nfunction isSocketEntry(entry) {\n  return socketEntries.some((socketEntry) => entry.includes(socketEntry));\n}\n\n/**\n * Injects an entry to the bundle for react-refresh.\n * @param {WebpackEntry} [originalEntry] A Webpack entry object.\n * @param {import('./getAdditionalEntries').AdditionalEntries} additionalEntries An object that contains the Webpack entries for prepending and the overlay feature\n * @returns {WebpackEntry} An injected entry object.\n */\nfunction injectRefreshEntry(originalEntry, additionalEntries) {\n  const { prependEntries, overlayEntries } = additionalEntries;\n\n  // Single string entry point\n  if (typeof originalEntry === 'string') {\n    if (isSocketEntry(originalEntry)) {\n      return [...prependEntries, originalEntry, ...overlayEntries];\n    }\n\n    return [...prependEntries, ...overlayEntries, originalEntry];\n  }\n  // Single array entry point\n  if (Array.isArray(originalEntry)) {\n    if (originalEntry.length === 0) {\n      throw EntryParseError;\n    }\n\n    const socketEntryIndex = originalEntry.findIndex(isSocketEntry);\n\n    let socketAndPrecedingEntries = [];\n    if (socketEntryIndex !== -1) {\n      socketAndPrecedingEntries = originalEntry.splice(0, socketEntryIndex + 1);\n    }\n\n    return [...prependEntries, ...socketAndPrecedingEntries, ...overlayEntries, ...originalEntry];\n  }\n  // Multiple entry points\n  if (typeof originalEntry === 'object') {\n    const entries = Object.entries(originalEntry);\n    if (entries.length === 0) {\n      throw EntryParseError;\n    }\n\n    return entries.reduce(\n      (acc, [curKey, curEntry]) => ({\n        ...acc,\n        [curKey]:\n          typeof curEntry === 'object' && curEntry.import\n            ? {\n                ...curEntry,\n                import: injectRefreshEntry(curEntry.import, additionalEntries),\n              }\n            : injectRefreshEntry(curEntry, additionalEntries),\n      }),\n      {}\n    );\n  }\n  // Dynamic entry points\n  if (typeof originalEntry === 'function') {\n    return (...args) =>\n      Promise.resolve(originalEntry(...args)).then((resolvedEntry) =>\n        injectRefreshEntry(resolvedEntry, additionalEntries)\n      );\n  }\n\n  throw EntryParseError;\n}\n\nmodule.exports = injectRefreshEntry;\nmodule.exports.socketEntries = socketEntries;\n"],"mappings":"AAAA;AACA;;AAEA,MAAMA,eAAe,GAAG,IAAIC,KAAK,CAC/B,CACE,sBAAsB,EACtB,6CAA6C,EAC7C,uEAAuE,CACxE,CAACC,IAAI,CAAC,GAAG,CACZ,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,MAAMC,aAAa,GAAG,CACpB,2BAA2B,EAC3B,+BAA+B,EAC/B,6BAA6B,EAC7B,qCAAqC,CACtC;;AAED;AACA;AACA;AACA;AACA;AACA,SAASC,aAAaA,CAACC,KAAK,EAAE;EAC5B,OAAOF,aAAa,CAACG,IAAI,CAAEC,WAAW,IAAKF,KAAK,CAACG,QAAQ,CAACD,WAAW,CAAC,CAAC;AACzE;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAASE,kBAAkBA,CAACC,aAAa,EAAEC,iBAAiB,EAAE;EAC5D,MAAM;IAAEC,cAAc;IAAEC;EAAe,CAAC,GAAGF,iBAAiB;;EAE5D;EACA,IAAI,OAAOD,aAAa,KAAK,QAAQ,EAAE;IACrC,IAAIN,aAAa,CAACM,aAAa,CAAC,EAAE;MAChC,OAAO,CAAC,GAAGE,cAAc,EAAEF,aAAa,EAAE,GAAGG,cAAc,CAAC;IAC9D;IAEA,OAAO,CAAC,GAAGD,cAAc,EAAE,GAAGC,cAAc,EAAEH,aAAa,CAAC;EAC9D;EACA;EACA,IAAII,KAAK,CAACC,OAAO,CAACL,aAAa,CAAC,EAAE;IAChC,IAAIA,aAAa,CAACM,MAAM,KAAK,CAAC,EAAE;MAC9B,MAAMhB,eAAe;IACvB;IAEA,MAAMiB,gBAAgB,GAAGP,aAAa,CAACQ,SAAS,CAACd,aAAa,CAAC;IAE/D,IAAIe,yBAAyB,GAAG,EAAE;IAClC,IAAIF,gBAAgB,KAAK,CAAC,CAAC,EAAE;MAC3BE,yBAAyB,GAAGT,aAAa,CAACU,MAAM,CAAC,CAAC,EAAEH,gBAAgB,GAAG,CAAC,CAAC;IAC3E;IAEA,OAAO,CAAC,GAAGL,cAAc,EAAE,GAAGO,yBAAyB,EAAE,GAAGN,cAAc,EAAE,GAAGH,aAAa,CAAC;EAC/F;EACA;EACA,IAAI,OAAOA,aAAa,KAAK,QAAQ,EAAE;IACrC,MAAMW,OAAO,GAAGC,MAAM,CAACD,OAAO,CAACX,aAAa,CAAC;IAC7C,IAAIW,OAAO,CAACL,MAAM,KAAK,CAAC,EAAE;MACxB,MAAMhB,eAAe;IACvB;IAEA,OAAOqB,OAAO,CAACE,MAAM,CACnB,CAACC,GAAG,EAAE,CAACC,MAAM,EAAEC,QAAQ,CAAC,MAAM;MAC5B,GAAGF,GAAG;MACN,CAACC,MAAM,GACL,OAAOC,QAAQ,KAAK,QAAQ,IAAIA,QAAQ,CAACC,MAAM,GAC3C;QACE,GAAGD,QAAQ;QACXC,MAAM,EAAElB,kBAAkB,CAACiB,QAAQ,CAACC,MAAM,EAAEhB,iBAAiB;MAC/D,CAAC,GACDF,kBAAkB,CAACiB,QAAQ,EAAEf,iBAAiB;IACtD,CAAC,CAAC,EACF,CAAC,CACH,CAAC;EACH;EACA;EACA,IAAI,OAAOD,aAAa,KAAK,UAAU,EAAE;IACvC,OAAO,CAAC,GAAGkB,IAAI,KACbC,OAAO,CAACC,OAAO,CAACpB,aAAa,CAAC,GAAGkB,IAAI,CAAC,CAAC,CAACG,IAAI,CAAEC,aAAa,IACzDvB,kBAAkB,CAACuB,aAAa,EAAErB,iBAAiB,CACrD,CAAC;EACL;EAEA,MAAMX,eAAe;AACvB;AAEAiC,MAAM,CAACC,OAAO,GAAGzB,kBAAkB;AACnCwB,MAAM,CAACC,OAAO,CAAC/B,aAAa,GAAGA,aAAa","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}