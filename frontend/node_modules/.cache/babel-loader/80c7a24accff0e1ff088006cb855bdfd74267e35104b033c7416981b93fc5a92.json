{"ast":null,"code":"var override = require('../utils/override');\nvar INTEGER_PATTERN = /^\\d+$/;\nvar ALL_UNITS = ['*', 'all'];\nvar DEFAULT_PRECISION = 'off'; // all precision changes are disabled\nvar DIRECTIVES_SEPARATOR = ','; // e.g. *=5,px=3\nvar DIRECTIVE_VALUE_SEPARATOR = '='; // e.g. *=5\n\nfunction roundingPrecisionFrom(source) {\n  return override(defaults(DEFAULT_PRECISION), buildPrecisionFrom(source));\n}\nfunction defaults(value) {\n  return {\n    ch: value,\n    cm: value,\n    em: value,\n    ex: value,\n    in: value,\n    mm: value,\n    pc: value,\n    pt: value,\n    px: value,\n    q: value,\n    rem: value,\n    vh: value,\n    vmax: value,\n    vmin: value,\n    vw: value,\n    '%': value\n  };\n}\nfunction buildPrecisionFrom(source) {\n  if (source === null || source === undefined) {\n    return {};\n  }\n  if (typeof source == 'boolean') {\n    return {};\n  }\n  if (typeof source == 'number' && source == -1) {\n    return defaults(DEFAULT_PRECISION);\n  }\n  if (typeof source == 'number') {\n    return defaults(source);\n  }\n  if (typeof source == 'string' && INTEGER_PATTERN.test(source)) {\n    return defaults(parseInt(source));\n  }\n  if (typeof source == 'string' && source == DEFAULT_PRECISION) {\n    return defaults(DEFAULT_PRECISION);\n  }\n  if (typeof source == 'object') {\n    return source;\n  }\n  return source.split(DIRECTIVES_SEPARATOR).reduce(function (accumulator, directive) {\n    var directiveParts = directive.split(DIRECTIVE_VALUE_SEPARATOR);\n    var name = directiveParts[0];\n    var value = parseInt(directiveParts[1]);\n    if (Number.isNaN(value) || value == -1) {\n      value = DEFAULT_PRECISION;\n    }\n    if (ALL_UNITS.indexOf(name) > -1) {\n      accumulator = override(accumulator, defaults(value));\n    } else {\n      accumulator[name] = value;\n    }\n    return accumulator;\n  }, {});\n}\nmodule.exports = {\n  DEFAULT: DEFAULT_PRECISION,\n  roundingPrecisionFrom: roundingPrecisionFrom\n};","map":{"version":3,"names":["override","require","INTEGER_PATTERN","ALL_UNITS","DEFAULT_PRECISION","DIRECTIVES_SEPARATOR","DIRECTIVE_VALUE_SEPARATOR","roundingPrecisionFrom","source","defaults","buildPrecisionFrom","value","ch","cm","em","ex","in","mm","pc","pt","px","q","rem","vh","vmax","vmin","vw","undefined","test","parseInt","split","reduce","accumulator","directive","directiveParts","name","Number","isNaN","indexOf","module","exports","DEFAULT"],"sources":["C:/Users/chest/OneDrive/Documentos/GitHub/HackUPC/frontend/node_modules/clean-css/lib/options/rounding-precision.js"],"sourcesContent":["var override = require('../utils/override');\n\nvar INTEGER_PATTERN = /^\\d+$/;\n\nvar ALL_UNITS = ['*', 'all'];\nvar DEFAULT_PRECISION = 'off'; // all precision changes are disabled\nvar DIRECTIVES_SEPARATOR = ','; // e.g. *=5,px=3\nvar DIRECTIVE_VALUE_SEPARATOR = '='; // e.g. *=5\n\nfunction roundingPrecisionFrom(source) {\n  return override(defaults(DEFAULT_PRECISION), buildPrecisionFrom(source));\n}\n\nfunction defaults(value) {\n  return {\n    ch: value,\n    cm: value,\n    em: value,\n    ex: value,\n    in: value,\n    mm: value,\n    pc: value,\n    pt: value,\n    px: value,\n    q: value,\n    rem: value,\n    vh: value,\n    vmax: value,\n    vmin: value,\n    vw: value,\n    '%': value\n  };\n}\n\nfunction buildPrecisionFrom(source) {\n  if (source === null || source === undefined) {\n    return {};\n  }\n\n  if (typeof source == 'boolean') {\n    return {};\n  }\n\n  if (typeof source == 'number' && source == -1) {\n    return defaults(DEFAULT_PRECISION);\n  }\n\n  if (typeof source == 'number') {\n    return defaults(source);\n  }\n\n  if (typeof source == 'string' && INTEGER_PATTERN.test(source)) {\n    return defaults(parseInt(source));\n  }\n\n  if (typeof source == 'string' && source == DEFAULT_PRECISION) {\n    return defaults(DEFAULT_PRECISION);\n  }\n\n  if (typeof source == 'object') {\n    return source;\n  }\n\n  return source\n    .split(DIRECTIVES_SEPARATOR)\n    .reduce(function(accumulator, directive) {\n      var directiveParts = directive.split(DIRECTIVE_VALUE_SEPARATOR);\n      var name = directiveParts[0];\n      var value = parseInt(directiveParts[1]);\n\n      if (Number.isNaN(value) || value == -1) {\n        value = DEFAULT_PRECISION;\n      }\n\n      if (ALL_UNITS.indexOf(name) > -1) {\n        accumulator = override(accumulator, defaults(value));\n      } else {\n        accumulator[name] = value;\n      }\n\n      return accumulator;\n    }, {});\n}\n\nmodule.exports = {\n  DEFAULT: DEFAULT_PRECISION,\n  roundingPrecisionFrom: roundingPrecisionFrom\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}