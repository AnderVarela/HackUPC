{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Browser = void 0;\nconst dns_txt_1 = __importDefault(require(\"./dns-txt\"));\nconst dns_equal_1 = __importDefault(require(\"./utils/dns-equal\"));\nconst events_1 = require(\"events\");\nconst service_types_1 = require(\"./service-types\");\nconst filter_service_1 = __importDefault(require(\"./utils/filter-service\"));\nconst filter_txt_1 = __importDefault(require(\"./utils/filter-txt\"));\nconst equal_txt_1 = __importDefault(require(\"./utils/equal-txt\"));\nconst TLD = '.local';\nconst WILDCARD = '_services._dns-sd._udp' + TLD;\nclass Browser extends events_1.EventEmitter {\n  constructor(mdns, opts, onup) {\n    super();\n    this.onresponse = undefined;\n    this.serviceMap = {};\n    this.wildcard = false;\n    this._services = [];\n    if (typeof opts === 'function') return new Browser(mdns, null, opts);\n    this.mdns = mdns;\n    this.txt = new dns_txt_1.default(opts !== null && opts.txt != null ? opts.txt : undefined);\n    if (opts === null || opts.type === undefined) {\n      this.name = WILDCARD;\n      this.wildcard = true;\n    } else {\n      this.name = (0, service_types_1.toString)({\n        name: opts.type,\n        protocol: opts.protocol || 'tcp'\n      }) + TLD;\n      if (opts.name) this.name = opts.name + '.' + this.name;\n      this.wildcard = false;\n    }\n    if (opts != null && opts.txt !== undefined) this.txtQuery = (0, filter_txt_1.default)(opts.txt);\n    if (onup) this.on('up', onup);\n    this.start();\n  }\n  start() {\n    if (this.onresponse || this.name === undefined) return;\n    var self = this;\n    var nameMap = {};\n    if (!this.wildcard) nameMap[this.name] = true;\n    this.onresponse = (packet, rinfo) => {\n      if (self.wildcard) {\n        packet.answers.forEach(answer => {\n          if (answer.type !== 'PTR' || answer.name !== self.name || answer.name in nameMap) return;\n          nameMap[answer.data] = true;\n          self.mdns.query(answer.data, 'PTR');\n        });\n      }\n      Object.keys(nameMap).forEach(function (name) {\n        self.goodbyes(name, packet).forEach(self.removeService.bind(self));\n        var matches = self.buildServicesFor(name, packet, self.txt, rinfo);\n        if (matches.length === 0) return;\n        matches.forEach(service => {\n          if (self.serviceMap[service.fqdn]) {\n            self.updateService(service);\n            return;\n          }\n          self.addService(service);\n        });\n      });\n    };\n    this.mdns.on('response', this.onresponse);\n    this.update();\n  }\n  stop() {\n    if (!this.onresponse) return;\n    this.mdns.removeListener('response', this.onresponse);\n    this.onresponse = undefined;\n  }\n  update() {\n    this.mdns.query(this.name, 'PTR');\n  }\n  get services() {\n    return this._services;\n  }\n  addService(service) {\n    if ((0, filter_service_1.default)(service, this.txtQuery) === false) return;\n    this._services.push(service);\n    this.serviceMap[service.fqdn] = true;\n    this.emit('up', service);\n  }\n  updateService(service) {\n    var _a;\n    if ((0, equal_txt_1.default)(service.txt, ((_a = this._services.find(s => (0, dns_equal_1.default)(s.fqdn, service.fqdn))) === null || _a === void 0 ? void 0 : _a.txt) || {})) return;\n    if (!(0, filter_service_1.default)(service, this.txtQuery)) {\n      this.removeService(service.fqdn);\n      return;\n    }\n    this._services = this._services.map(function (s) {\n      if (!(0, dns_equal_1.default)(s.fqdn, service.fqdn)) return s;\n      return service;\n    });\n    this.emit('txt-update', service);\n  }\n  removeService(fqdn) {\n    var service, index;\n    this._services.some(function (s, i) {\n      if ((0, dns_equal_1.default)(s.fqdn, fqdn)) {\n        service = s;\n        index = i;\n        return true;\n      }\n    });\n    if (!service || index === undefined) return;\n    this._services.splice(index, 1);\n    delete this.serviceMap[fqdn];\n    this.emit('down', service);\n  }\n  goodbyes(name, packet) {\n    return packet.answers.concat(packet.additionals).filter(rr => rr.type === 'PTR' && rr.ttl === 0 && (0, dns_equal_1.default)(rr.name, name)).map(rr => rr.data);\n  }\n  buildServicesFor(name, packet, txt, referer) {\n    var records = packet.answers.concat(packet.additionals).filter(rr => rr.ttl > 0);\n    return records.filter(rr => rr.type === 'PTR' && (0, dns_equal_1.default)(rr.name, name)).map(ptr => {\n      const service = {\n        addresses: [],\n        subtypes: []\n      };\n      records.filter(rr => {\n        return rr.type === 'PTR' && (0, dns_equal_1.default)(rr.data, ptr.data) && rr.name.includes('._sub');\n      }).forEach(rr => {\n        const types = (0, service_types_1.toType)(rr.name);\n        service.subtypes.push(types.subtype);\n      });\n      records.filter(rr => {\n        return (rr.type === 'SRV' || rr.type === 'TXT') && (0, dns_equal_1.default)(rr.name, ptr.data);\n      }).forEach(rr => {\n        if (rr.type === 'SRV') {\n          var parts = rr.name.split('.');\n          var name = parts[0];\n          var types = (0, service_types_1.toType)(parts.slice(1, -1).join('.'));\n          service.name = name;\n          service.fqdn = rr.name;\n          service.host = rr.data.target;\n          service.referer = referer;\n          service.port = rr.data.port;\n          service.type = types.name;\n          service.protocol = types.protocol;\n        } else if (rr.type === 'TXT') {\n          service.rawTxt = rr.data;\n          service.txt = this.txt.decodeAll(rr.data);\n        }\n      });\n      if (!service.name) return;\n      records.filter(rr => (rr.type === 'A' || rr.type === 'AAAA') && (0, dns_equal_1.default)(rr.name, service.host)).forEach(rr => service.addresses.push(rr.data));\n      return service;\n    }).filter(rr => !!rr);\n  }\n}\nexports.Browser = Browser;\nexports.default = Browser;","map":{"version":3,"names":["dns_txt_1","__importDefault","require","dns_equal_1","events_1","service_types_1","filter_service_1","filter_txt_1","equal_txt_1","TLD","WILDCARD","Browser","EventEmitter","constructor","mdns","opts","onup","onresponse","undefined","serviceMap","wildcard","_services","txt","default","type","name","toString","protocol","txtQuery","on","start","self","nameMap","packet","rinfo","answers","forEach","answer","data","query","Object","keys","goodbyes","removeService","bind","matches","buildServicesFor","length","service","fqdn","updateService","addService","update","stop","removeListener","services","push","emit","_a","find","s","map","index","some","i","splice","concat","additionals","filter","rr","ttl","referer","records","ptr","addresses","subtypes","includes","types","toType","subtype","parts","split","slice","join","host","target","port","rawTxt","decodeAll","exports"],"sources":["../../src/lib/browser.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}