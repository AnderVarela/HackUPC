{"ast":null,"code":"'use strict';\n\nvar regexParser = require('regex-parser');\nvar REGEXP = /(\\/?)(.+)\\1([a-z]*)/i;\n\n/**\n * Parse the give value as a regular expression or give a pass-none expression where it is invalid\n * @param {RegExp|string|*} value An existing expression, or its string representation, or degenerate value\n * @returns {RegExp} The given expression or one matching the RegExp string else a pass-none expression\n */\nfunction toRegExp(value) {\n  return typeof value === 'object' && typeof value.test === 'function' && value || typeof value === 'string' && REGEXP.test(value) && regexParser(value) || /^true$|^$/.test(value) && /.*/ || /matchnone^/;\n}\nmodule.exports = toRegExp;","map":{"version":3,"names":["regexParser","require","REGEXP","toRegExp","value","test","module","exports"],"sources":["C:/Users/chest/OneDrive/Documentos/GitHub/HackUPC/frontend/node_modules/adjust-sourcemap-loader/lib/process/to-reg-exp.js"],"sourcesContent":["'use strict';\n\nvar regexParser = require('regex-parser');\n\nvar REGEXP = /(\\/?)(.+)\\1([a-z]*)/i;\n\n/**\n * Parse the give value as a regular expression or give a pass-none expression where it is invalid\n * @param {RegExp|string|*} value An existing expression, or its string representation, or degenerate value\n * @returns {RegExp} The given expression or one matching the RegExp string else a pass-none expression\n */\nfunction toRegExp(value) {\n  return ((typeof value === 'object') && (typeof value.test === 'function') && value) ||\n    ((typeof value === 'string') && REGEXP.test(value) && regexParser(value)) ||\n    (/^true$|^$/.test(value) && /.*/) ||\n    /matchnone^/;\n}\n\nmodule.exports = toRegExp;"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,WAAW,GAAGC,OAAO,CAAC,cAAc,CAAC;AAEzC,IAAIC,MAAM,GAAG,sBAAsB;;AAEnC;AACA;AACA;AACA;AACA;AACA,SAASC,QAAQA,CAACC,KAAK,EAAE;EACvB,OAAS,OAAOA,KAAK,KAAK,QAAQ,IAAM,OAAOA,KAAK,CAACC,IAAI,KAAK,UAAW,IAAID,KAAK,IAC9E,OAAOA,KAAK,KAAK,QAAQ,IAAKF,MAAM,CAACG,IAAI,CAACD,KAAK,CAAC,IAAIJ,WAAW,CAACI,KAAK,CAAE,IACxE,WAAW,CAACC,IAAI,CAACD,KAAK,CAAC,IAAI,IAAK,IACjC,YAAY;AAChB;AAEAE,MAAM,CAACC,OAAO,GAAGJ,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}